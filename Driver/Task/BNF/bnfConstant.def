COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1991 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		
FILE:		bnfConstant.def

AUTHOR:		Adam de Boor, Oct  4, 1991

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	Adam	10/4/91		Initial revision


DESCRIPTION:
	Constants for the Back & Forth task-driver hack
		
	$Id: bnfConstant.def,v 1.1 97/04/18 11:58:11 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

BNF_TASK_NAME_LENGTH	equ	21

BNF_MAX_TASKS		equ	20

BNF_MAGIC		equ	-2	; magic number loaded into AX & CX for
					;  all calls.
;
; Record of modifiers needed for hot-key to activate.
; 
BNFHotKeyMods	record
    BNFHKM_ALT:1
    BNFHKM_CTRL:1
    BNFHKM_LEFT_SHIFT:1
    BNFHKM_RIGHT_SHIFT:1
BNFHotKeyMods	end

;
; Descriptor passed to BNFAPI_SPAWN
; 
BNFSpawnStruct	struct
    BNFSS_description	char	BNF_TASK_NAME_LENGTH dup(?)
    BNFSS_disableHotKeys byte			; non-zero to not allow
						;  hot-keys within task
    BNFSS_environSize	word			; number of bytes for task
						;  environment. (0 => same
						;  as our own???)
    BNFSS_hotKeyMods	BNFHotKeyMods
    BNFSS_hotKey	word
    BNFSS_maxEMSPages	word			; max pages of EMS (not avail
						;  in OEM versions)
    BNFSS_memoryNeeded	word			; Kb required (0 => same
						;  as our own)
    BNFSS_id		char	3 dup(?)	; DV-style ID (2-char, null-t)
    BNFSS_progName	char	13 dup(?)	; Name of program w/o path but
						;  with extension
    BNFSS_progDir	char	66 dup(?)	; Path to program
    BNFSS_workDir	char	66 dup(?)	; working directory for the
						;  new task
    BNFSS_args		char	128 dup(?)	; args to pass to program
BNFSpawnStruct	ends

;
; Descriptor of a running task.
; 
BNFTask	struct
    BNFT_startTime	dword			; seconds since 1/1/70
    BNFT_description	char	BNF_TASK_NAME_LENGTH dup(?)
    BNFT_elapsedTime	dword			; seconds spent running task
    BNFT_id		word			; two-char ID
    BNFT_hotKeyMods	BNFHotKeyMods
    BNFT_hotKey		word
    BNFT_stopTime	dword			; time at which task was last
						;  suspended
    BNFT_taskHandleNum	word			; unique handle for task, used
						;  when switching via #18
BNFTask	ends

;
; Functions supported by B&F on int 12h.
; FOR ALL FUNCTIONS:
; 	ax	= BNF_MAGIC
; 	cx	= BNF_MAGIC
; 	bx	= function number
; 
BackAndForthAPI	etype	word, 0
    BNFAPI_CHECK_INSTALL	enum	BackAndForthAPI, 0
    ;	Pass:	nothing
    ;	Return:	ax	= 1 if B&F loaded
    ;
    BNF_IS_LOADED	equ	1

    BNFAPI_GET_MEMORY_STATS	enum	BackAndForthAPI, 2
    ;	Pass:	nothing
    ;	Return:	ax	= amount of available swap memory (Kb)
    ;		bx	= maximum task size (Kb)
    ;		dx	= fixed overhead per task (Kb?)
    ;
    
    BNFAPI_SWITCH_BY_ID		enum	BackAndForthAPI, 3
    ;	Pass:	dx	= two-character ID
    ;	Return:	nothing
    ;
    
    BNFAPI_GET_VERSION		enum	BackAndForthAPI, 6
    ;	Pass:	nothing
    ;	Return:	ax	= version number. Major = ax/100, minor = ax % 100
    ;
    
    BNFAPI_SPAWN		enum	BackAndForthAPI, 7
    ;	Pass:	es:di	= BNFSpawnStruct
    ;	Return:	ax	= 0 to indicate success, <0 to indicate failure:
    ;		   		-1 = Invalid task # specified.
    ;		   		-2 = Requested to switch to the active task.
    ;		   		-3 = Requested to switch out of Windows 3.x
    ;				     running in enhanced mode
    ;		   		-4 = Requested to switch out of Microsoft DOS
    ;				     eXtender
    ;		   		-5 = A DOS client program has denied the task
    ;				     switch request (this will only happen if
    ;				     DOS 5 task switcher API is ON).
    ;		  		-10 = DOS or an interrupt handler is BUSY.. B&F
    ;				      Pro will wait 3 seconds before returning
    ;				      this. If this happens, a task switch can
    ;				      be retried if desired.
    ;		  		-20 = Maximum # of tasks already opened.
    ;				
    ;
    
    BNFAPI_FIND_TASKS		enum	BackAndForthAPI, 8
    ;	Pass:	es:di	= buffer in which to place task descriptors
    ;			  (BNF_MAX_TASKS entries long)
    ;	Return:	ax	= number of tasks running
    ;	Destroy:bx, cx, dx, di
    ;
    
    BNFAPI_GET_CLIPBOARD_NAME	enum	BackAndForthAPI, 10
    ;	Pass:	es:di	= buffer in which to place the name
    ;	Return:	dx:ax	= pointer to absolute null-terminated name of current
    ;			  clipboard file (file is all ASCII chars)
    ;    

    BNFAPI_GET_ACTIVE_TASK_NUM	enum	BackAndForthAPI, 11
    ;	Pass:	nothing
    ;	Return:	ax	= number of task making the request
    ;		bx	= # of tasks currently active
    ;		dx	= max # of tasks
    ;
    
    BNFAPI_INSERT_KEYS		enum	BackAndForthAPI, 15
    ;	Pass:	es:di	= null-terminated string of chars to provide as
    ;			  keyboard input.
    ;	Return:	nothing
    ;
    
    BNFAPI_CHECK_TEXT_MODE	enum	BackAndForthAPI, 16
    ;	Pass:	nothing
    ;	Return:	ax	= -1 if video mode is graphical
    ;			= 0 if video mode is color text
    ;			= 4 if video mode is monochrome text
    ;
    
    BNFAPI_GET_USER_NUMBER	enum	BackAndForthAPI, 17
    ;	Pass:	nothing
    ;	Return:	ax	= user number, as passed to B&F pro (0-255; doesn't
    ;			  apply to OEM version)
    ;
    
    BNFAPI_SWITCH		enum	BackAndForthAPI, 18
    ;	Pass:	dx	= task number
    ;	Return:	ax	= 0 if task-switch occurred
    ;			= <0 if task switch failed:
    ;		  		-1 = Invalid task # specified.
    ;		  		-2 = Requested to switch to the active task.
    ;		  		-3 = Requested to switch out of Windows 3.x
    ;				     running in enhanced mode
    ;		  		-4 = Requested to switch out of Microsoft DOS
    ;				     eXtender
    ;		  		-5 = A DOS client program has denied the task
    ;				     switch request (this will only happen if
    ;				     DOS 5 task switcher API is ON).
    ;		 		-10 = DOS or an interrupt handler is BUSY.. B&F
    ;				      Pro will wait 3 seconds before returning
    ;				      this. If this happens, a task switch can
    ;				      be retried if desired.
    ;
    
    BNFAPI_DELETE_TASK		enum	BackAndForthAPI, 19
    ;	Pass:	dx	= task number
    ;	Return:	ax	= 1 if task deleted
    ;			= 0 if dx is the current task number
    ;			= -1 if the task number was invalid
    ;
    ;	Note:	this adjusts the number of all following tasks in the table.
    ;
    
    BNFAPI_GET_FREE_TASK_INDEX	enum	BackAndForthAPI, 20
    ;	Pass:	nothing
    ;	Return:	ax	= 1 to max_tasks if there's room for another task
    ;			= -1 if task table is full.
    ;
    ;	Note:	this can be used to generate a hotkey unique to the task
    ;		in question. Of course, since the indices change when tasks
    ;		go away...
    ;
    
    BNFAPI_SET_CLIPBOARD_NAME	enum	BackAndForthAPI, 21
    ;	Pass:	es:di	= full path of file to use as clipboard
    ;	Return:	nothing
    ;
    

;==============================================================================
;			Additional Object Classes
;==============================================================================
BNFClass	class	TaskDriverClass
    MSG_BNF_SET_CB_SUPPORT		message
    ;	Turn clipboard support on/off.
    ;
    ;	Pass:	cx	= TRUE to turn it on, FALSE to turn it off.
    ;	Return:	nothing.
    ;
BNFClass	endc

BNFSummonsClass class GenInteractionClass 
    MSG_BNFS_TASK_SELECT		message
    ;	Take note that a task has been selected (or deselected) from the list
    ;
    ;	Pass:	cx	= task index selected
    ;		bp	= number of selected entries (0 or 1)
    ;	Return:	nothing
    ;
    
    MSG_BNFS_RUN_SELECTED_TASK	message
    ;	Switch to the selected task.
    ;
    ;	Pass:	nothing
    ;	Return:	nothing
    ;
    
    MSG_BNFS_DELETE_SELECTED_TASK	message
    ;	Delete the selected task.
    ;
    ;	Pass:	nothing
    ;	Return:	nothing
    ;

    MSG_BNFS_ADD_NEW_SHELL		message
    ;	Start another task with command.com running in it.
    ;
    ;	Pass:	nothing
    ;	Return:	nothing
    ;

    BNFSI_curTask	word	-1	; Currently-selected task index

BNFSummonsClass endc
