COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1992 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		
FILE:		nwMacros.def

AUTHOR:		Chris Boyke

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
       chrisb	10/ 1/92   	Initial version.

DESCRIPTION:
	

	$Id: nwMacros.def,v 1.1 97/04/18 11:48:44 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@


COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

MACRO:		movhldw

DESCRIPTION:	Move a HiLoDWord
		The only difference between this and movdw is that the
		order of the registers is reversed when moving
		(mem, regs) or (regs, mem)


ARGUMENTS:
	dest - memory or register pair for destination -- high word first
	source - memory or register pair for source -- high word first
	[trashreg] - re'qd if moving memory to memory

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@
movhldw	macro	dest, source, trashreg
	local	drl, drh, srl, srh, regargs

regargs = 0
_CheckDWordTwoArg	<dest>, <source>, <movhldw>
_ParseHiLoDWordArg	<dest>, drh, drl, regargs, <movhldw>
_ParseHiLoDWordArg	<source>, srh, srl, regargs, <movhldw>

if (regargs gt 0)
	mov	drh, srh
	mov	drl, srl
elseifnb <trashreg>
	mov	trashreg, srh
	mov	drh, trashreg
	mov	trashreg, srl
	mov	drl, trashreg
else
	ErrMessage <movhldw : need trash register to move mem, mem>
endif

endm
