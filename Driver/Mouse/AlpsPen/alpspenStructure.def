COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) Geoworks 1995 -- All Rights Reserved

PROJECT:	
MODULE:		
FILE:		alpspenStructure.def

AUTHOR:		Jim Guggemos, May 18, 1995

MACROS:
	Name			Description
	----			-----------

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	JimG	5/18/95   	Initial revision


DESCRIPTION:
	This contains structures and enumerations for the AlpsPen mouse
	driver.
	
	This unorthodox file exists because of the include hierarchy of
	mouse drivers.  Since some structures here depend upon structures
	included in mouseCommon.asm, we have to include mouseCommon.asm
	first.  But, if these were in the alpspenConstant.def file, they
	would be included BEFORE mouseCommon.asm because certain constants
	must be defined BEFORE loading mouseCommon.asm... sigh..
		
	$Id: alpspenStructure.def,v 1.1 97/04/18 11:48:10 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

;------------------------------------------------------------------------------
;			Data Structures and Enumerations
;------------------------------------------------------------------------------

; Part of AlpsPenStatus
AlpsPenReadRate	etype	byte
    APRR_200_CPPS	enum	AlpsPenReadRate, 0	;200 Cursor pos/sec
    APRR_100_CPPS	enum	AlpsPenReadRate, 1	;100 Cursor pos/sec
    APRR_67_CPPS	enum	AlpsPenReadRate, 2	;67 Cursor pos/sec
    APRR_50_CPPS	enum	AlpsPenReadRate, 3	;50 Cursor pos/sec
    
; Read only status that can be read from DIGITIZER_STATUS.
AlpsPenStatus	record
    :1				; Unused
    
    APS_STOP:1			; Set if the digitizer is not sending data.
    
    APS_NOISE_CANCELLATION:2	; Indicates the noise cancellation mode
    				; This is the number of "dots" that the
				; digitizer will NOT recognize as data.
				
    APS_READ_RATE AlpsPenReadRate:2
    				; Indicates the current read rate
    				; AlpsPenReadRate
    
    APS_CALIBRATE_MODE:1	; Set if currently calibrating
    
    APS_RESET:1			; Set while the ALPS is initializing.
AlpsPenStatus	end

; Returned from DIGITIZER_SWITCH_INFO.
AlpsSwitchInfo	record
    :5				; Unused
    ASI_SW2:1			; Switch 2 depressed
    ASI_SW1:1			; Switch 1 depressed
    ASI_PEN_DOWN:1		; Pen down
AlpsSwitchInfo	end

; Byte(s) to write to DIGITIZER_COMMAND.
AlpsPenCommands	etype	byte
    	; Initialize the control circuit.
    APC_INITIALIZE			enum	AlpsPenCommands, 0c0h
    
    	; Set the read rate 
    APC_READ_RATE_200_CPPS		enum	AlpsPenCommands, 0c2h
    APC_READ_RATE_100_CPPS		enum	AlpsPenCommands, 0c3h
    APC_READ_RATE_67_CPPS		enum	AlpsPenCommands, 0c4h
    APC_READ_RATE_50_CPPS		enum	AlpsPenCommands, 0c5h
    
    	; Set the noise cancellation mode
    APC_NOISE_CANCELLATION_0_DOTS	enum	AlpsPenCommands, 0c6h
    APC_NOISE_CANCELLATION_1_DOTS	enum	AlpsPenCommands, 0c7h
    APC_NOISE_CANCELLATION_2_DOTS	enum	AlpsPenCommands, 0c8h
    APC_NOISE_CANCELLATION_3_DOTS	enum	AlpsPenCommands, 0c9h
    
    	; For those who like proper English.
    APC_NOISE_CANCELLATION_1_DOT	equ	APC_NOISE_CANCELLATION_1_DOTS
    
    	; Start/Stop data flow from the digitizer
    APC_STOP_DATA			enum	AlpsPenCommands, 0cah
    APC_START_DATA			enum	AlpsPenCommands, 0cbh
    
    	; Stores the latest conditions for read rate and noise cancellation
	; to non-volatile memory.
    APC_WRITE_TO_NON_VOLATILE_MEMORY	enum	AlpsPenCommands, 0cch


SystemButtons       record	;button bits for MouseSendEvents routine.
    SB_LEFT_DOWN:1,
    SB_MIDDLE_DOWN:1,
    SB_RIGHT_DOWN:1
SystemButtons       end

AlpsHardIcon	    struct
    AHI_dataCX		word		; data to pass back in CX
    AHI_dataDX		word		; data to pass back in DX
    AHI_dataBP		word		; data to pass back in BP
AlpsHardIcon	    ends

AlpsCalibrationInfo	struct
    ACI_scale			Point	; X, Y scale
    					; ==> ((dpy units)/(dig units))*2048
    ACI_offset			Point	; X, Y offset
AlpsCalibrationInfo	ends

AlpsFlags	    record
    :4
    
    AF_REGISTERED_WITH_POWER_DRIVER:1
    	; Set if we successfully registered with a power driver.  If this is
	; set, then we know we need to unregister when we exit.
    
    AF_CALIBRATION_CHANGED:1
    	; Set if we are calibrating and the calibration information has
	; changed and we need to write the information out to the ini file
	; upon DR_MOUSE_STOP_CALIBRATION.
    
    AF_START_IN_HARD_ICON_BAR:1
    	; Set if the press started in the hard icon bar, that is, the
	; first pen down occured in the hard icon area.
	
    AF_CALIBRATING:1
    	; We are currently calibrating.  This is set and cleared by
	; DR_MOUSE_START_CALIBRATION and DR_MOUSE_STOP_CALIBRATION.
	; When set, hard icon presses are sent like normal button presses
	; and the last raw and scaled X & Y are stored in dgroup variables
	; for DR_MOUSE_GET_RAW_COORDINATE
AlpsFlags	    end

; This is an internal condition state that is kept so that we can track the
; first pen down event for hard icons since the hardware doesn't actually
; inform us when it is the "first" pen down event.
;
; This order is important as we "inc" and "clr" this value in code.
;
AlpsCurrentPenCondition		etype	byte
    ACPC_PEN_UP			enum	AlpsCurrentPenCondition, 0
    ACPC_FIRST_PEN_DOWN		enum	AlpsCurrentPenCondition, 1
    ACPC_PEN_STILL_DOWN		enum	AlpsCurrentPenCondition, 2

;
; Point calibration structure (just an array of points, really, but we give
; them names here so we can refer to them with some sanity).
;
AlpsCalibrationPointList	struct
    ACPL_UL		Point
    ACPL_LL		Point
    ACPL_UR		Point
    ACPL_LR		Point
AlpsCalibrationPointList	ends

;------------------------------------------------------------------------------
;				  Warnings
;------------------------------------------------------------------------------


ALPS_PEN_READ_GARBAGE_CALIBRATION_INFO_FROM_INI_FILE	enum	Warnings
; MouseReadCalibrationFromIniFile read invalid data (probably the wrong
; number of bytes) from the ini file.

ALPS_PEN_CALIBRATION_POINTS_WAY_OUT_OF_RANGE		enum	Warnings
; Points passed to MouseSetCalibrationPoints are way out of range, or so
; it thinks.

;------------------------------------------------------------------------------
;				Fatal Errors
;------------------------------------------------------------------------------

ALPS_PEN_EXPECTED_SEGMENT_REGISTER_TO_BE_DGROUP		enum	FatalErrors

ALPS_PEN_EXPECTED_IRQ_TO_BE_MARKED_IN_SERVICE		enum	FatalErrors

ALPS_PEN_RECEIVED_INT_WHILE_PROCESSING_CURRENT_INT	enum	FatalErrors

ALPS_PEN_INITIALIZATION_FAILURE				enum	FatalErrors

ALPS_PEN_INCORRECT_NUMBER_OF_POINTS_IN_CALIBRATION	enum	FatalErrors

ALPS_PEN_POWER_DRIVER_FAILED_TO_UNREGISTER_US		enum	FatalErrors
