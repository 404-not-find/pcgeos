COMMENT }%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1988 -- All Rights Reserved


PROJECT:	PC GEOS
MODULE:		Video drivers
FILE:		simp4bitConstant.def

AUTHOR:		Tony Requist

REVISION HISTORY:
	Name	Date	Description
	----	----	-----------
	Jim	7/90	initial version, mostly copied from HGC driver


DESCRIPTION:
	This file contains constants for the Simp4Bit 640x400 driver.

	$Id: simp4bitConstant.def,v 1.1 97/04/18 11:43:45 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%}

;----------------------------------------------------------------------------
;	Driver type constants
;----------------------------------------------------------------------------

IS_SIMPLE_4_BIT		=	TRUE	;Indicate that we are indeed a 4-bit
					;driver.



IS_16			=	TRUE	;16 bit driver
SAVE_UNDER_COUNT	=	0	;Number of save under areas
;
;	Changed, because we've coded up all our Responder SPUI stuff to
;	assume DS_STANDARD, and Chris is too lazy to go back and change
;	it.
;DISPLAY_TYPE		equ (DisplayType<DS_TINY,DAR_NORMAL,DC_GRAY_4>)
DISPLAY_TYPE		equ (DisplayType<DS_STANDARD,DAR_NORMAL,DC_GRAY_4>)

INVERSE_DRIVER		=	FALSE	; this driver can show inverse video

;----------------------------------------------------------------------------
;	Screen size constants
;----------------------------------------------------------------------------

PHYSICAL_SCREEN_WIDTH	=	64	; width in inches of typical display
PHYSICAL_SCREEN_HEIGHT	=	20	; width in inches of typical display

ifidn	HARDWARE_TYPE, <BOR1>
SCREEN_PIXEL_WIDTH	=	320	; width of screen, pixels
SCREEN_BYTE_WIDTH	=	160	; width of screen, bytes
SCREEN_HEIGHT		=	240	; height of screen, scan lines

else	; RESPONDER, other..
SCREEN_PIXEL_WIDTH	=	640	; width of screen, pixels
SCREEN_BYTE_WIDTH	=	320	; width of screen, bytes
SCREEN_HEIGHT		=	200	; height of screen, scan lines

endif

;----------------------------------------------------------------------------
;	Video buffer constants
;----------------------------------------------------------------------------

ifidn	HARDWARE_TYPE, <BOR1>
_BOR1			=	TRUE
SCREEN_BUFFER		=	0xa6a0	; Simp4Bit video buffer segment addr

else
SCREEN_BUFFER		=	0xa000	; Simp4Bit video buffer segment addr

endif

; Make sure these constants are always defined..

    _PENELOPE=FALSE

ifndef	_BOR1
    _BOR1=FALSE
endif

    _RESPONDER=FALSE


NUM_SCREEN_BANKS	=	1

BANK_SIZE		=	SCREEN_HEIGHT * SCREEN_BYTE_WIDTH


if	_BOR1

DisplayControlRegisterType	record
    :5
    DCRT_WORD:1			; Set if a word flag
    DCRT_INDIRECT:1		; Set if indirect reg (through E3G_DCADDR)
    DCRT_END_OF_TABLE:1		; Set to end table
DisplayControlRegisterType	end

DisplayControlRegister		struct
    DCR_type		DisplayControlRegisterType
    DCR_register	word
    DCR_value		word
DisplayControlRegister		ends


SIMP4BIT_EXPECTED_E3G_TO_BE_IN_CORRECT_MODE	enum	FatalErrors
; This error occurs if the video hardware in the E3G is not in the correct
; mode as the driver expects.  This usually occurs if running with the wrong
; version of BIOS as BIOS is ultimately responsible for setting the video
; mode correctly.
;

endif	; _PENELOPE or _BOR1
