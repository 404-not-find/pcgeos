COMMENT }%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GlobalPC 1998 -- All Rights Reserved


PROJECT:	PC GEOS
MODULE:		Cyber16 Video Driver
FILE:		cyber16Constant.def

AUTHOR:		Jim DeFrisco

REVISION HISTORY:
	Name	Date	Description
	----	----	-----------
	Jim	10/92	initial version


DESCRIPTION:
		
	$Id: cyber16Constant.def,v 1.3$

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%}

;----------------------------------------------------------------------------
;	Driver type constants
;----------------------------------------------------------------------------

IS_16			=	foo	; 16 bit driver (write words whenever
					;  possible)
IS_CLR24		=	TRUE	; RGB color, doesn't mean 24-bit color.
IS_VGA24		=	TRUE	; RGB VGA, doesn't mean 24-bit VGA.
IS_BITMAP		=	TRUE	; well, it is, sort of.
BIT_CLR16		=	foo	; 16 bits per pixel
LARGE_VIDEO_RAM		=	foo	; video RAM (on-screen or save-under)
					;  more than 64K
ALT_VIDEO_RAM		=	foo	; Uses spare VRAM for save-under
SAVE_UNDER_COUNT	=	6	; Number of save under areas
SCREEN_BUFFER		=	0A000h	; video buffer segment

MULT_RESOLUTIONS	=	TRUE	; driver supports multiple res
MAX_MASK_BUFFER		=	(1024/8); max size of mask buffer (max screen
					;  pixel width / # bits per byte) 
MAX_POLYGON_EDGE_TABLE	=	768	; max size of edge table buffer (max
					;  screen height)

ALLOW_BIG_MOUSE_POINTER	=	TRUE	; allow big (double size) mouse pointer
ALLOW_1Kx768_16		=	FALSE	; true if can support 1024x768x16bpp
					;  mode (ie. has 2meg or more VRAM)

;****************************************************************************
;	ADDITIONAL BIOS CALLS (VGA ONLY)
;****************************************************************************

ALT_SELECT		=	12h		; major bios function number
VIDEO_SCREEN_ON_OFF	=	36h		; subfunction number
VGA_ENABLE_VIDEO 	=	0h		;  bios arg, video enabled
VGA_DISABLE_VIDEO 	=	1h		;  bios arg, video disabled

;****************************************************************************
;	IGS CyberPro 2010 Constants
;****************************************************************************

PORT46E8	=	0x46E8
PORT102		=	0x102
MISCREAD	=	0x3CC
MISCWRITE	=	0x3C2
SEQINDEX	=	0x3C4
SEQDATA		=	0x3C5
CRTINDEX	=	0x3D4
CRTDATA		=	0x3D5
ATTRRESET	=	0x3DA
ATTRINDEX	=	0x3C0
ATTRDATAW	=	0x3C0	; write data port
ATTRDATAR	=	0x3C1	; read data port
GRAINDEX	=	0x3CE
GRADATA		=	0x3CF
EXTINDEX	=	0x3CE
EXTDATA		=	0x3CF
RAMDACMASK	=	0x3C6	; Mask register
RAMDACINDEXR	=	0x3C7	; read  index port
RAMDACINDEXW	=	0x3C8	; write index port
RAMDACDATA	=	0x3C9
GAIN		=	0xE450	; Gain control for U/V of chroma.
BURSTAMP	=	0xE458	; Amplitude of burst in the U/V domain.
YINTWST		=	0xE468	; VGA Active Data Start - Luminance Channel
UVINTWST	=	0xE46C	; VGA Active Data Delayed Start - Chrominance
				;  Channel
EVENVSST	=	0xE490	; Start Position of Vertical Sync, Even Field
EVENVSSP	=	0xE494	; Stop Position of Vertical Sync, Even Field
ODDVSST		=	0xE498	; Start Position of Vertical Sync, Odd Field
ODDVSSP		=	0xE49C	; Stop Position of Vertical Sync, Odd Field
FSCLOW		=	0xE4A0	; Subcarrier frequency low word
FSCHIGH		=	0xE4A4	; Subcarrier frequency high word

SEQCOUNT	=	0x04
MISCCOUNT	=	0x01
CRTCOUNT	=	0x19
ATTRCOUNT	=	0x14
GRACOUNT	=	0x9
SREGCOUNT	=	SEQCOUNT+MISCCOUNT+CRTCOUNT+ATTRCOUNT+GRACOUNT
EXTPARTIALCOUNT	=	8	; 8 extended regs for color depth change

CYBER_WRITE_BANK	=	0x31
CYBER_READ_BANK		=	0x32

VESAModeInfo	struct
    VMI_scanSize	word		; #bytes per scanline
VESAModeInfo	ends



; for GAIN
GainFlags	record
	GF_U:8
	GF_V:8
GainFlags	end

; for BURSTAMP
BurstAmpFlags	record
	BAF_U:8
	BAF_V:8
BurstAmpFlags	end

; for YINTWST
YIntWStFlags	record
	:7
	YIWSF_VALUE:9
YIntWStFlags	end

; for UVINTWST
UvIntWStFlags	record
	:7
	UIWSF_VALUE:9
UvIntWStFlags	end

; for EVENVSST and ODDVSST
VsStFlags	record
	:6
	VSTF_VALUE:10
VsStFlags	end

; for EVENVSSP and ODDVSSP
VsSpFlags	record
	:6
	VSPF_VALUE:10
VsSpStFlags	end



; Values for setting horizontal and vertical image positions.
; Default values much match those in Prefvid.  See prefvid.ui.
YINTWST_640x480_INIT_VALUE	equ	0x0019
UVINTWST_640x480_INIT_VALUE	equ	0x0027
YINTWST_640x440_INIT_VALUE	equ	YINTWST_640x480_INIT_VALUE
UVINTWST_640x440_INIT_VALUE	equ	UVINTWST_640x480_INIT_VALUE
VSST_INIT_VALUE			equ	0x0005
VSSP_INIT_VALUE			equ	0x000B

HORIZ_POS_INCREMENT	equ	2	; legal increment (hardware limitation)
VERT_POS_INCREMENT	equ	1	; legal increment (hardware limitation)

YINTWST_640x440_MIN_VALUE	equ	(YINTWST_640x440_INIT_VALUE \
						mod HORIZ_POS_INCREMENT)
YINTWST_640x440_MAX_VALUE	equ	49
.assert	YINTWST_640x440_MAX_VALUE le (mask YIWSF_VALUE \
					- YINTWST_640x440_MIN_VALUE) \
					/ HORIZ_POS_INCREMENT \
					* HORIZ_POS_INCREMENT \
					+ YINTWST_640x440_MIN_VALUE

VSST_MIN_VALUE			equ	(VSST_INIT_VALUE \
						mod VERT_POS_INCREMENT)
VSST_MAX_VALUE			equ	50
.assert	VSST_MAX_VALUE le (mask VSTF_VALUE - VSST_MIN_VALUE) \
				/ VERT_POS_INCREMENT * VERT_POS_INCREMENT \
				+ VSST_MIN_VALUE



ifidn	PRODUCT, <>			; default version is NTSC
;
; Values used for subcarrier frequency.
;
FSC_NTSC_SPEC_VALUE		equ	0x4367B7EC
	; For NTSC, this gives the correct line to line phase (180 deg) to
	; comply with NTSC spec.

FSC_NTSC_FREEZE_CRAWLING_DOTS	equ	0x4367A57E
	; For NTSC, this gives the line to line phase of 0 deg to stop
	; crawling dots.  This can cause rainbow color on black text on
	; white background.  It may also cause problems on TVs with a comb
	; filter.
endif	; PRODUCT, <>

;
; Values used to switch between color and B/W mode.
;
ifdef	PRODUCT_PAL_M
GAIN_U_COLOR			equ	0x78
GAIN_U_BW			equ	0x00
GAIN_V_COLOR			equ	0x78
GAIN_V_BW			equ	0x00
BURST_AMP_U_COLOR		equ	0xE8
BURST_AMP_U_BW			equ	0xFF
BURST_AMP_V_COLOR		equ	0x17
BURST_AMP_V_BW			equ	0x00
else
GAIN_U_COLOR			equ	0x78
GAIN_U_BW			equ	0x00
GAIN_V_COLOR			equ	0x78
GAIN_V_BW			equ	0x00
BURST_AMP_U_COLOR		equ	0xDE
BURST_AMP_U_BW			equ	0xFF
BURST_AMP_V_COLOR		equ	0x00
BURST_AMP_V_BW			equ	0x00
endif



;****************************************************************************
;	VESA BIOS EXTENSIONS
;****************************************************************************

VESA_BIOS_EXT		=	0x4f		; VESA defined BIOS extensions

			; VESA extended BIOS functions
VESA_GET_SVGA_INFO	=	0		; VESA fn 0, get SVGA info
VESA_GET_MODE_INFO	=	1		; VESA fn 1, get mode info
VESA_SET_MODE		=	2		; VESA fn 2, set video mode
VESA_GET_MODE		=	3		; VESA fn 3, get current mode
VESA_SAVE_STATE		=	4		; VESA fn 4, save/restore state
VESA_WINDOW_CONTROL	=	5		; VESA fn 5, mem window cntrl

			; IGST defined mode numbers (OEM mode numbers, 0x0014
			; - 0x007f)
CyberMode		etype	word, 0x0014, 1
CM_640x440_8_TV		enum	CyberMode, 0x0039	; 640x440 256-color TV
CM_640x440_16_TV	enum	CyberMode, 0x003a	; 640x440 64K-color TV

			; VESA defined mode numbers
VESAMode		etype	word, 0x100, 1
VM_640x400_8		enum	VESAMode	; 640x400 256-color
VM_640x480_8		enum	VESAMode	; 640x480 256-color
VM_800x600_4 		enum	VESAMode	; 800x600 16-color
VM_800x600_8		enum	VESAMode	; 800x600 256-color 
VM_1Kx768_4		enum	VESAMode	; 1024x768 16-color 
VM_1Kx768_8		enum	VESAMode	; 1024x768 256-color 
VM_1280x1K_4		enum	VESAMode	; 1280x1024 16-color 
VM_1280x1K_8		enum	VESAMode	; 1280x1024 256-color 
VM_80x60_T		enum	VESAMode	; 80x60 text mode
VM_132x25_T		enum	VESAMode	; 132x25 text mode
VM_132x43_T		enum	VESAMode	; 132x43 text mode
VM_132x50_T		enum	VESAMode	; 132x50 text mode
VM_132x60_T		enum	VESAMode	; 132x60 text mode
VM_320x200_15		enum	VESAMode	; 320x200 32K-color (1:5:5:5)
VM_320x200_16		enum	VESAMode	; 320x200 64K-color (5:6:5)
VM_320x200_24		enum	VESAMode	; 320x200 TrueColor (8:8:8)
VM_640x480_15		enum	VESAMode	; 640x480 32K-color (1:5:5:5)
VM_640x480_16		enum	VESAMode	; 640x480 64K-color (5:6:5)
VM_640x480_24		enum	VESAMode	; 640x480 TrueColor (8:8:8)
VM_800x600_15		enum	VESAMode	; 800x600 32K-color (1:5:5:5)
VM_800x600_16		enum	VESAMode	; 800x600 64K-color (5:6:5)
VM_800x600_24		enum	VESAMode	; 800x600 TrueColor (8:8:8)
VM_1Kx768_15		enum	VESAMode	; 1024x768 32K-color (1:5:5:5)
VM_1Kx768_16		enum	VESAMode	; 1024x768 64K-color (5:6:5)
VM_1Kx768_24		enum	VESAMode	; 1024x768 TrueColor (8:8:8)
VM_1280x1K_15		enum	VESAMode	; 1280x1024 32K-color (1:5:5:5)
VM_1280x1K_16		enum	VESAMode	; 1280x1024 64K-color (5:6:5)
VM_1280x1K_24		enum	VESAMode	; 1280x1024 TrueColor (8:8:8)



;----------------------------------------------------------------------------
;	FatalErrors and Warnings
;----------------------------------------------------------------------------
CANNOT_SET_HORIZ_VERT_POS_IN_NON_TV_MODE	enum	Warnings
