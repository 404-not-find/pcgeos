COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	(c) Copyright Geoworks 1996 -- All Rights Reserved
	GEOWORKS CONFIDENTIAL

PROJECT:	
MODULE:		
FILE:		gdiKeyboardConstant.def

AUTHOR:		Kenneth Liu, Apr 24, 1996

MACROS:
	Name			Description
 	----			-----------

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	kliu	4/24/96   	Initial revision


DESCRIPTION:
	Contains GDI-specific constants
		
	$Id: gdiKeyboardConstant.def,v 1.1 97/04/18 11:47:50 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@
ScanCodes		etype 	byte

;-----------------------------------------------------------------
;	Keyboard Driver Errors
;--------------------------------------------------------------------------


KBD_BAD_ROUTINE					enum FatalErrors
; bad drier routine caught in strategy

KBD_GET_KEY_ERROR				enum FatalErrors
; error when getting scan code from keyboard interrupt

KBD_NO_RECIPIENT_SPECIFIED			enum FatalErrors
; Nowhere to send the MSG_IM_KBD_SCAN

KBD_INPUT_MON_MESSAGE_FAILS			enum FatalErrors
; MSG_IM_KBD_SCAN sending fails

KBD_REGISTER_CALLBACK_ERROR			enum FatalErrors
; Error in registering the callback

KBD_UNREGISTER_CALLBACK_ERROR			enum FatalErrors
; Error in unregistering the callback

KBD_GET_INFO_ERROR				enum FatalErrors
; Error in getting keyboard info from Lib

KBD_SHUTDOWN_ERROR				enum FatalErrors
; Error in shutting down the keyboard

KBD_CHECK_HOTKEY_ERROR				enum FatalErrors
; Error found in checking hotkey

KBD_BAD_ACCENT_TABLE				enum FatalErrors
;  Bad table definition
;

if DBCS_PCGEOS
KBD_BAD_SHORTCUT                                enum FatalErrors
endif

if DBCS_PCGEOS

KeyDownElement	struct
    KDE_charValue	Chars
    KDE_charFlags	CharFlags
    KDE_shiftState	ShiftState
    KDE_toggleState	ToggleState
    KDE_scanCode	ScanCodes
    KDE_xState1		byte	(?)
    KDE_xState2		byte	(?)
KeyDownElement	ends

else

KeyDownElement	struct	
    KDE_charValue	word	(?)
    KDE_charFlags	CharFlags	(?)
    KDE_shiftState	byte	(?)
    KDE_toggleState	byte	(?)
    KDE_scanCode	ScanCodes
    KDE_xState1		byte	(?)
    KDE_xState2		byte	(?)
KeyDownElement	ends

endif

MAX_KEYS_DOWN		equ	12	; Max # of keys that we can
					; keep track of as being down

TOGGLE_CAPSLOCK         equ     mask TS_CAPSLOCK
TOGGLE_NUMLOCK          equ     mask TS_NUMLOCK
TOGGLE_SCROLLLOCK       equ     mask TS_SCROLLLOCK
TOGGLE_SHIFTSTICK       equ     mask TS_SHIFTSTICK
TOGGLE_CTRLSTICK        equ     mask TS_CTRLSTICK
TOGGLE_ALTSTICK         equ     mask TS_ALTSTICK
TOGGLE_FNCTSTICK        equ     mask TS_FNCTSTICK

LALT                    equ     mask SS_LALT
RALT                    equ     mask SS_RALT
LCTRL                   equ     mask SS_LCTRL
RCTRL                   equ     mask SS_RCTRL
LSHIFT                  equ     mask SS_LSHIFT
RSHIFT                  equ     mask SS_RSHIFT
FIREBUTTON1             equ     mask SS_FIRE_BUTTON_1
FIREBUTTON2             equ     mask SS_FIRE_BUTTON_2

LFUNCT                  equ     mask SS_FIRE_BUTTON_1
RFUNCT                  equ     mask SS_FIRE_BUTTON_2

ALT_KEYS                equ     LALT or RALT
CTRL_KEYS               equ     LCTRL or RCTRL
SHIFT_KEYS              equ     LSHIFT or RSHIFT

KSS_PHYSICAL    = mask KS_PHYSICAL
KSS_ALT         = mask KS_ALT
KSS_CTRL        = mask KS_CTRL
KSS_SHIFT       = mask KS_SHIFT
KSS_CHAR_SET    = mask KS_CHAR_SET
KSS_CHAR        = mask KS_CHAR

KSS_BSW         = ((CS_BSW shl 8) and KSS_CHAR_SET)
KSS_CONTROL     = ((CS_CONTROL shl 8) and KSS_CHAR_SET)
KSS_UI_FUNCS    = ((CS_UI_FUNCS shl 8) and KSS_CHAR_SET)
                
;
;	GDI Keyboard .ini settings
;

GDIKbdOptions	record
	:7
	GKO_EXTENDED_CHAR_SET:1			; TRUE to use.  See
						; Jedi or Responder for
						; more info on this
	GKO_SHIFT_STICK_IMPLIES_SHIFT:1		; as named
	GKO_ALT_STICK_IMPLIES_ALT:1		; as named
	GKO_IGNORE_SHIFT_STATE_FOR_PGUP_PGDN:1	; as named
	GKO_SHIFTED_EXTENSION:1			; TRUE: shifted
						; version of extended
						; key exists
						; (this is used
						; by Jedi, see
						; kmapJedi.def for
						; more info on how
						; this scheme works)
	GKO_SHIFT_RELEASE:1			; TRUE: shift releases caplock
	GKO_SWAP_CTRL:1				; TRUE: swap the
						; meaning of left ctrl
						; and caplock
	GKO_ALT_GR:1
	GKO_KBD_HANDLE_TOGGLES:1
GDIKbdOptions	end








