/*
 * Project:	PC/GEOS
 * Module:	FSelSamp (File Selector Sample PC/GEOS application)
 * File:	fselsamp.ui
 *
 * Author:	brianc
 *
 *	This file contains the user Interface description for this
 * application. This file is written in a language called ESPIRE, which is
 * compiled by the UIC compiler. See Spec/User/uic.doc for info.
 *
 *RCS STAMP:
 *	$Id: fselsamp.ui,v 1.1 97/04/04 16:32:40 newdeal Exp $
 *
 */

/* ----------------------------------------------------------------------------
	Include files
-----------------------------------------------------------------------------*/

/* first, read pre-defined class definitions. See the file
 * /staff/pcgeos/Include/generic.uih. */

#include "generic.uih"

/* ----------------------------------------------------------------------------
	Application Object
-----------------------------------------------------------------------------*/
/* The very top-level generic object of an application MUST be a GenApplication
 * object. The clipsamp.gp file contains "appobj" statement which indicates
 * that this "FSelSampApp" object is in fact the top-level UI object.
 * This object should be in its own resource so that GeoManager can load it
 * quickly to grab the icon for this application. GeoManager will store this
 * icon in its "Token Database", so that the icon image can be reused quickly.*/

start	AppResource;

FSelSampApp = GenApplication {
	/* The geoManager uses this token information to store this
	 * application's icon in a database. */

	moniker = list {
		TextMoniker
	}

	children = FSelSampPrimary;	/* The GenApplication object only
					 * has one child: the main application
					 * window. */

	gcnList(MANUFACTURER_ID_GEOWORKS,GAGCNLT_WINDOWS) = FSelSampPrimary;
					/* The main window should appear
					 * on-screen when the application
					 * is launched. */
}

					/* this title will appear at the top
					 * of the window. */
visMoniker TextMoniker = "File Selector Sample Application";

end	AppResource;


/* ----------------------------------------------------------------------------
	 Primary window.
-----------------------------------------------------------------------------*/
/* Every application has at least one GenPrimary object. This object serves
 * as the main window of the application. Inside this window, various UI
 * components, such as menus or lists, can be placed. */

start	Interface;		/* this resource is for misc UI objects */

FSelSampPrimary = GenPrimary {
	children = OptionsMenu, FSelSampFileSelectorGroup, OptionsBox;
	hints = { HINT_SIZE_WINDOW_AS_DESIRED }
}

FSelSampFileSelectorGroup = GenInteraction {
	children = FSelSampFileSelector, FSelSampFileName, FSelSampReplyBar;
}

FSelSampFileSelector = GenFileSelector {
	action = MSG_FILEBROW_SELECTOR_ACTION, process;
	hints = {
		HINT_FILE_SELECTOR_NUMBER_OF_FILES_TO_SHOW {
			word	8
		}
	}
}

FSelSampFileName = GenText {
	moniker = "Selection:";
	textDisplayAttributes = singleLineText, useTabForNavigation;
	applyMsg = MSG_FILEBROW_FILENAME_ACTION;
	destination = process;
	hints = {
		HINT_FIXED_SIZE {
			SpecWidth <SST_AVG_CHAR_WIDTHS, 35>
			SpecHeight <0, 0>
		}
	}
}

FSelSampReplyBar = GenInteraction {
	children = FSelSampOpenTrigger, FSelSampCloseTrigger;
	hints = { HINT_MAKE_REPLY_BAR }
}

FSelSampOpenTrigger = GenTrigger {
	moniker = "Open Folder";
	action = MSG_FILEBROW_OPEN, process;
}

FSelSampCloseTrigger = GenTrigger {
	moniker = "Close Folder";
	action = MSG_GEN_FILE_SELECTOR_UP_DIRECTORY, FSelSampFileSelector;
}

end Interface;


/*-----------------------------------------------------------------------------
	Menus
-----------------------------------------------------------------------------*/

start MenuResource;		/* not necessary to place menus in a separate
				 * resource, but is recommended, as this
				 * keeps the resource blocks small and easily
				 * movable within the Global Heap. */

/* An object which is an instance of the GenInteraction class can be
 * implemented by the specific UI as one of the following types of objects:
 *
 *		- a horizontal or vertical group which contains several
 *		gadgets, allowing a border to be drawn around the gadgets.
 *
 *		- a menu containing generic objects such as GenTriggers
 *		and other menus (i.e. submenus)
 *
 *		- a modal or non-modal dialog box, which can be used for
 *		UI gadgets which are less frequently used (like "Custom Size"
 *		in GeoWrite)
 *
 * In this case, we want this GenInteraction object to be implemented
 * as a top-level menu, so we make it a generic child of the GenPrimary,
 * and give it the HINT_MENUABLE hint. If the specific UI supports menus,
 * then it will create a menu button to open this menu, and will place
 * that button in a menu bar in the GenPrimary window. */

OptionsMenu = GenInteraction {
	children = OptionsView;
	visibility = popup;
	hints = { ATTR_GEN_INTERACTION_GROUP_TYPE { GenInteractionGroupType GIGT_OPTIONS_MENU } }
}

OptionsView = GenTrigger {
	moniker = 'V', "View";
	action = MSG_FILEBROW_VIEW, process;
	hints = {
		HINT_TRIGGER_BRINGS_UP_WINDOW
	}
}

OptionsBox = GenInteraction {
	moniker = "View";
	children = TypeList, MaskEntry, DosAttrSetList, DosAttrUnsetList,
		ReplyApply;
	/* this is a command and not a properties because of the way we deal
	   with the gadgets */
	type = command;
	visibility = dialog;
	attributes = default +notUserInitiatable;
}

TypeList = GenBooleanGroup {
	moniker = "File Types";
	children = TypeDir, TypeDOS, TypeGeosExec, TypeGeosNonExec;
	applyMsg = MSG_FILEBROW_VIEW_TYPES;
	destination = process;
	selectedBooleans = "mask FSFC_DIRS or mask FSFC_NON_GEOS_FILES or \
			mask FSFC_GEOS_EXECUTABLES or \
			mask FSFC_GEOS_NON_EXECUTABLES";
	hints = {
		HINT_DRAW_IN_BOX,
		HINT_ORIENT_CHILDREN_VERTICALLY,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		HINT_CENTER_CHILDREN_HORIZONTALLY
	}
}
TypeDir = GenBoolean {
	moniker = "Folders";
	identifier = "mask FSFC_DIRS";
}
TypeDOS = GenBoolean {
	moniker = "DOS files";
	identifier = "mask FSFC_NON_GEOS_FILES";
}
TypeGeosExec = GenBoolean {
	moniker = "GEOS Executables";
	identifier = "mask FSFC_GEOS_EXECUTABLES";
}
TypeGeosNonExec = GenBoolean {
	moniker = "Geos Non-Executables";
	identifier = "mask FSFC_GEOS_NON_EXECUTABLES";
}

MaskEntry = GenText {
	moniker = "Filemask:";
	textDisplayAttributes = singleLineText, useTabForNavigation;
	maxLength = "VOLUME_NAME_LENGTH";
}

DosAttrSetList = GenBooleanGroup {
	moniker = "DOS File Attributes Set";
	children = DosAttrSetRO, DosAttrSetSys, DosAttrSetHidden;
	hints = {
		HINT_DRAW_IN_BOX,
		HINT_ORIENT_CHILDREN_VERTICALLY,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		HINT_CENTER_CHILDREN_HORIZONTALLY
	}
}

DosAttrSetRO = GenBoolean {
	moniker = "Read Only";
	identifier = "mask FA_RDONLY";
}
DosAttrSetSys = GenBoolean {
	moniker = "System";
	identifier = "mask FA_SYSTEM";
}
DosAttrSetHidden = GenBoolean {
	moniker = "Hidden";
	identifier = "mask FA_HIDDEN";
}

DosAttrUnsetList = GenBooleanGroup {
	moniker = "DOS File Attributes Not Set";
	children = DosAttrUnsetRO, DosAttrUnsetSys, DosAttrUnsetHidden;
	hints = {
		HINT_DRAW_IN_BOX,
		HINT_ORIENT_CHILDREN_VERTICALLY,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		HINT_CENTER_CHILDREN_HORIZONTALLY
	}
}

DosAttrUnsetRO = GenBoolean {
	moniker = "Read Only";
	identifier = "mask FA_RDONLY";
}
DosAttrUnsetSys = GenBoolean {
	moniker = "System";
	identifier = "mask FA_SYSTEM";
}
DosAttrUnsetHidden = GenBoolean {
	moniker = "Hidden";
	identifier = "mask FA_HIDDEN";
}


ReplyApply = GenTrigger {
	moniker = "Apply";
	action = MSG_FILEBROW_APPLY, process;
	genAttributes = default +signalInteractionComplete;
	hints = {
		HINT_SEEK_REPLY_BAR
	}
}

end MenuResource;
