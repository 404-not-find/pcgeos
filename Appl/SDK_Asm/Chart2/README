##############################################################################
#
#	Copyright (c) Geoworks 1994 -- All Rights Reserved
#
# PROJECT:	Chart2 lab
# FILE:		README
#
# AUTHOR:	David Litwin, Dec 15, 1994
#
#	This describes the Chart2 assembly training lab
# 
#
#	$Id: README,v 1.1.4.1 97/03/29 09:36:09 canavese Exp $
#
##############################################################################

		Info for the Chart2 lab
		-----------------------

	The Chart2 lab consists of two parts, neither of which require
knowledge of assembly messaging or objects.  All this is already handled
and routines to be written are called automatically.


	Part I:
	-------
	This part is to implement a chart drawing routine given a global
memory block of height data (and the number of bars in that chart).  This
is done by rewriting the ChartDrawData routine in chart2.asm.
	This routine requires fetching the height data and calling of
graphics routines to draw the bars accordingly.
	Part I involves dealing with global memory blocks, graphic library
routines, simple assembly (looping) and debuging.



	Part II:
	--------
	This part is to implement the generation of the block of data read
in Part I.  This is done by filling in the ChartCreateNewChart routine in
chart2.asm.
	A minimum height, maximum height, number of bars and direction
(acending or decending) are provided.  These have been gathered from the UI
when the user chooses a new chart.  The block produced should contain the
number of heights requested, with their heights being an even progression
from low to high or high to low, according to the direction requested.
	HINT:  In impelementing the generation of heights from low to high,
be aware that integer math rounding can cause problems (check first and last
heights you generate are the heigh and low (in either order) given to you.
	Part II involves more complex dealing with global memory blocks
(freeing and allocation or reallocation), more complex assembly (integer
math) and more debugging.
