COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1992 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		worms screen saver
FILE:		worms.def

AUTHOR:		Jeremy Dashe, April 2nd, '91

	
REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	stevey	12/15/92	Initial revision (grabbed from worms.asm)


DESCRIPTION:
	
	Constants and structures for the "Worms" screen saver.
		
	$Id: worms.def,v 1.1 97/04/04 16:48:16 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

;
; Different lengths:
;
WORMS_MIN_LENGTH		equ	2
WORMS_MAX_LENGTH		equ	20
WORMS_MAX_INITIAL_LENGTH 	equ	3
WORMS_DEFAULT_WORMS_LENGTH 	equ	10

WORMS_DROP_CHANGE		equ	4

WORMS_MAX_WORMS			equ 	50
WORMS_MIN_WORMS			equ 	1
WORMS_DEFAULT_NUMBER_OF_WORMS 	equ	10

;
; Different wigglynesses:
;
WORMS_SEDATE			equ	0
WORMS_WIGGLY			equ	1
WORMS_VERY_WIGGLY		equ	2
WORMS_SPASTIC			equ	3
WORMS_DEFAULT_WIGGLE_FACTOR	equ	WORMS_WIGGLY

WORMS_MIN_WIGGLE		equ	0
WORMS_MAX_WIGGLE		equ	3

;
; Seed the check if a wiggle-less worm decides to turn.
;
WHIMSY_SEED			equ	15

;
; The number of ticks between moves:
;
WORMS_SPEED_SLOW		equ	5
WORMS_SPEED_MEDIUM		equ	3
WORMS_SPEED_FAST		equ	1
WORMS_DEFAULT_SPEED	 	equ	1

WORMS_HIGHEST_DIRECTION		equ	8	; == highest direction + 1
WORMS_ERASE_COLOR		equ	C_BLACK

WormSegmentSizes	etype word, 0, 2
WORMS_TINY			enum	WormSegmentSizes
WORMS_SMALL			enum	WormSegmentSizes
WORMS_MEDIUM			enum	WormSegmentSizes
WORMS_LARGE			enum	WormSegmentSizes

WORMS_DEFAULT_SEGMENT_SIZE	equ	WORMS_MEDIUM

;
; The definition of a worm
;
Worm	struc
    W_length		word		; number of segments
    W_direction		word		; current direction (0-7)
    W_head		word		; index to head of worm in circular list
    W_tail		word		; index to tail
    W_color		word		; this worm's color
    W_wiggleChance	word		; chance that we'll wiggle or not
					; position of each segment's center:
    W_positions		Point		WORMS_MAX_LENGTH dup(<>)
Worm	ends

;
; The definition of a Can_of_worms, in case we ever need more than one of them
;
CanOfWormsStruct	struc
    COWS_height		sword		; height of target window
    COWS_width		sword		; width of target window
    COWS_worms		Worm		WORMS_MAX_WORMS dup(<>)
CanOfWormsStruct	ends

