;RCS STAMP: $Id: freecellMacros.def,v 1.1 97/04/04 15:02:49 newdeal Exp $

PointDi2	macro	fieldName
	mov	di, ds:[si]
	add	di, ds:[di].fieldName
endm

Neg32   macro   low, high
        neg     low             ;; negate low, leaving CF in opposite state
        not     high            ;;  from that desired ('not' doesn't change CF)
        cmc                     ;; Get CF to proper state (1 if low was 0)
        adc     high, 0         ;; Ripple carry to high to complete operation
endm

CallObject	macro	objName, message, diMask
	push	si
	CallObjectNS	objName, message, diMask
	pop	si
endm

CallObjectNS	macro	objName, message, diMask
	GetResourceHandleNS objName, bx
	mov	si, offset objName
	mov	ax, message
ifnb	<diMask>
	mov	di, mask diMask or mask MF_FIXUP_DS
else
	mov	di, mask MF_FIXUP_DS
endif
	call	ObjMessage
endm

CallObjectCXDX	macro	message, diMask
	push	si
	mov	bx, cx
	mov	si, dx
	mov	ax, message
ifnb	<diMask>
	mov	di, mask diMask or mask MF_FIXUP_DS
else
	mov	di, mask MF_FIXUP_DS
endif
	call	ObjMessage
	pop	si
endm

DelayUntilDoneFading	macro	endLabel
	PointDi2 Deck_offset
	tst	ds:[di].DI_nFadeCards
	jz	continue
	mov	bx, ds:[LMBH_handle]
	mov	di, mask MF_FIXUP_DS or mask MF_FORCE_QUEUE
	call	ObjMessage
	jmp	endLabel
continue:
endm

CmpRank	macro	attributes, rank
	push	attributes
	ANDNF	attributes, mask CA_RANK

	cmp	attributes, rank shl offset CA_RANK
	pop	attributes
endm

CmpSuit	macro	attributes, suit
	push	attributes
	ANDNF	attributes, mask CA_SUIT

	cmp	attributes, suit shl offset CA_SUIT
	pop	attributes
endm

SET	macro	bitField, bitMask
	ORNF	bitField, mask bitMask
endm

RESET	macro	bitField, bitMask
	ANDNF	bitField, not mask bitMask
endm

TOGGLE	macro	bitField, bitMask
	XORNF	bitField, mask bitMask
endm

