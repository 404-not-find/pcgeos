/*
 * Moniker generated from pcx\read_checkForNewEmail.pcx with pixel 225 masked out
 */
@visMoniker cuiCheckMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color8;
	cachedSize = 31, 29;
	gstring {
		GSDrawBitmapAtCP(467),
		Bitmap (31, 29, BMC_PACKBITS,(BMF_8BIT | BMT_MASK | BMT_COMPLEX)), 0,0, 29,0, 0,0, 20,0, 20,0, 72,0, 72,0,
		0xfe, 0x00, 0x00, 0x0e,
		0xe5, 0xe1, 0xfe, 0x00,
		0xfe, 0x00, 0x00, 0x1c,
		0xe6, 0xe1, 0x03, 0x00, 0x3b, 0x00, 0xe1,
		0xfe, 0x00, 0x00, 0x78,
		0xe8, 0xe1, 0x05, 0x00, 0x00, 0x3b, 0x00, 0xe1, 
		0xe1,
		0xfe, 0x00, 0x00, 0xf0,
		0xe9, 0xe1, 0x03, 0x00, 0x3b, 0x3b, 0x00, 0xfe, 
		0xe1,
		0x03, 0x00, 0x00, 0x01, 0xe0,
		0xea, 0xe1, 0x03, 0x00, 0x3b, 0x3b, 0x00, 0xfd, 
		0xe1,
		0x03, 0x00, 0x00, 0x03, 0xc0,
		0xeb, 0xe1, 0x03, 0x00, 0x3b, 0x3b, 0x00, 0xfc, 
		0xe1,
		0x03, 0x00, 0x00, 0x0f, 0x80,
		0xed, 0xe1, 0x04, 0x00, 0x00, 0x3b, 0x3b, 0x00, 
		0xfb, 0xe1,
		0x03, 0x00, 0x00, 0x1f, 0x00,
		0xee, 0xe1, 0x00, 0x00, 0xfe, 0x3b, 0x00, 0x00, 
		0xfa, 0xe1,
		0x03, 0x00, 0x00, 0x3e, 0x00,
		0xef, 0xe1, 0x00, 0x00, 0xfe, 0x3b, 0x00, 0x00, 
		0xf9, 0xe1,
		0x03, 0x00, 0x00, 0x7e, 0x00,
		0xf0, 0xe1, 0x00, 0x00, 0xfd, 0x3b, 0x00, 0x00, 
		0xf9, 0xe1,
		0x03, 0x00, 0x00, 0x7c, 0x00,
		0xf0, 0xe1, 0x00, 0x00, 0xfe, 0x3b, 0x00, 0x00, 
		0xf8, 0xe1,
		0x03, 0x00, 0x00, 0xf8, 0x00,
		0xf1, 0xe1, 0x00, 0x00, 0xfe, 0x3b, 0x00, 0x00, 
		0xf7, 0xe1,
		0x03, 0x00, 0x01, 0xf0, 0x00,
		0xf2, 0xe1, 0x00, 0x00, 0xfe, 0x3b, 0x00, 0x00, 
		0xf6, 0xe1,
		0x03, 0x00, 0x03, 0xe0, 0x00,
		0xf3, 0xe1, 0x00, 0x00, 0xfe, 0x3b, 0x00, 0x00, 
		0xf5, 0xe1,
		0x03, 0x00, 0x07, 0xe0, 0x00,
		0xf4, 0xe1, 0x00, 0x00, 0xfd, 0x3b, 0x00, 0x00, 
		0xf5, 0xe1,
		0x03, 0x3c, 0x0f, 0xc0, 0x00,
		0x01, 0xe1, 0xe1, 0xfd, 0x00, 0xfb, 0xe1, 0x00, 
		0x00, 0xfd, 0x3b, 0x00, 0x00, 0xf4, 0xe1,
		0x03, 0x7e, 0x0f, 0x80, 0x00,
		0x01, 0xe1, 0x00, 0xfd, 0x3b, 0x00, 0x00, 0xfc, 
		0xe1, 0x00, 0x00, 0xfe, 0x3b, 0x00, 0x00, 0xf3, 
		0xe1,
		0x03, 0xff, 0x1f, 0x80, 0x00,
		0x01, 0x00, 0x00, 0xfc, 0x3b, 0x00, 0x00, 0xfe, 
		0xe1, 0x00, 0x00, 0xfd, 0x3b, 0x00, 0x00, 0xf3, 
		0xe1,
		0x03, 0x3f, 0x3f, 0x00, 0x00,
		0x02, 0xe1, 0xe1, 0x00, 0xfd, 0x3b, 0x03, 0x00, 
		0xe1, 0xe1, 0x00, 0xfd, 0x3b, 0x00, 0x00, 0xf2, 
		0xe1,
		0x03, 0x3f, 0xbe, 0x00, 0x00,
		0x02, 0xe1, 0xe1, 0x00, 0xfc, 0x3b, 0x02, 0x00, 
		0xe1, 0x00, 0xfe, 0x3b, 0x00, 0x00, 0xf1, 0xe1,
		0x03, 0x1f, 0xfe, 0x00, 0x00,
		0xfe, 0xe1, 0x00, 0x00, 0xfc, 0x3b, 0x00, 0x00, 
		0xfd, 0x3b, 0x00, 0x00, 0xf1, 0xe1,
		0x03, 0x0f, 0xfc, 0x00, 0x00,
		0xfd, 0xe1, 0x00, 0x00, 0xf9, 0x3b, 0x00, 0x00, 
		0xf0, 0xe1,
		0x03, 0x0f, 0xf8, 0x00, 0x00,
		0xfd, 0xe1, 0x00, 0x00, 0xfa, 0x3b, 0x00, 0x00, 
		0xef, 0xe1,
		0x03, 0x07, 0xf8, 0x00, 0x00,
		0xfc, 0xe1, 0x00, 0x00, 0xfb, 0x3b, 0x00, 0x00, 
		0xef, 0xe1,
		0x03, 0x07, 0xf0, 0x00, 0x00,
		0xfc, 0xe1, 0x00, 0x00, 0xfc, 0x3b, 0x00, 0x00, 
		0xee, 0xe1,
		0x03, 0x03, 0xf0, 0x00, 0x00,
		0xfb, 0xe1, 0x00, 0x00, 0xfd, 0x3b, 0x00, 0x00, 
		0xee, 0xe1,
		0x03, 0x03, 0xe0, 0x00, 0x00,
		0xfb, 0xe1, 0x04, 0x00, 0x3b, 0x3b, 0x00, 0x00, 
		0xed, 0xe1,
		0x03, 0x03, 0x80, 0x00, 0x00,
		0xfb, 0xe1, 0x02, 0x00, 0x3b, 0x00, 0xeb, 0xe1,
		0x00, 0x01, 0xfe, 0x00,
		0xfa, 0xe1, 0x00, 0x00, 0xea, 0xe1,
		GSEndString()
	}
};
