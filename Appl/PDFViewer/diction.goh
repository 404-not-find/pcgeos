//========================================================================
//
// Dict.h
//
// Copyright 1996 Derek B. Noonburg
//
//========================================================================

#ifndef DICT_H
#define DICT_H

#ifdef __GNUC__
#pragma interface
#endif


  // Constructor.
extern
void DictInit(Dict *dict);

  // Destructor.
extern
void DictFree(Dict *dict);

  // Reference counting.
extern
  long DictIncRef(Dict *dict);
extern
  long DictDecRef(Dict *dict);

  // Get number of entries.
extern
  long DictGetLength(Dict *dict);

  // Add an entry.  NB: does not copy key.
extern
  void DictAdd(Dict *dict, char *key, Obj *val);

  // Check if dictionary is of specified type.
extern
  GBool DictIs(Dict *dict, char *type);

  // Look up an entry and return the value.  Returns a null object
  // if <key> is not in the dictionary.
extern
  void DictLookup(Dict *dict, char *key, Obj *obj, XRef *xref);
extern
  void DictLookupNF(Dict *dict, char *key, Obj *obj);

  // Iterative accessors.
extern
  char *DictGetKey(Dict *dict, long i);
extern
  void DictGetVal(Dict *dict, long i, Obj *obj, XRef *xref);
extern
  void DictGetValNF(Dict *dict, long i, Obj *obj);


#endif
