/***********************************************************************
 *
 *	Copyright (c) GeoWorks 1990 -- All Rights Reserved
 *
 * PROJECT:	  PCGEOS
 * MODULE:	  infix.ui
 * FILE:	  infix.ui
 *
 * AUTHOR:  	  Adam de Boor: Mar 18, 1990
 *
 * REVISION HISTORY:
 *	Date	  Name	    Description
 *	----	  ----	    -----------
 *	3/18/90	  ardeb	    Initial version
 *
 * DESCRIPTION:
 *	Descriptions of Infix (four-function) version of the calculator
 *
 *
 * 	$Id: infix.ui,v 1.1 97/04/04 14:46:52 newdeal Exp $
 *
 ***********************************************************************/

start Interface;

InfixTop = GenInteraction {
	children = InfixGroup, InfixTape;
	hints = {
	    HINT_ORIENT_CHILDREN_HORIZONTALLY,
	    HINT_EXPAND_WIDTH_TO_FIT_PARENT,
	    HINT_CENTER_CHILDREN_HORIZONTALLY
	}
}

end Interface;

start Infix;

InfixEngine = CalcEngine {
	registers = InfixRegisters;
	display = InfixDisplay;
/*	paperTape = InfixTape;*/
	opStack = InfixOpStack;
	opTop = 0;
}

chunk InfixRegisters = data {}
chunk InfixOpStack = data {
	CalcOps	CALC_OP_START
}

#if 0
chunk InfixDisplayRuler = data {
    VisTextRuler <
	<					;VTR_meta.
	    <1, 0>				;    REH_refCount
	>,
	0,				;VTR_name
	<				;VTR_border.
	    0, 0, 0, 0,			;    VTPBF_(LEFT, TOP, RIGHT, BOTTOM)
	    0, 0,			;    VTPBF_(DOUBLE, DRAW_INNER_LINES)
	    0, 0, 0,			;    VTPBF_(WIDTH, SPACING, SHADOW)
	    SA_TOP_LEFT			;    VTPBF_ANCHOR
	>,
	<SCP_index <			;VTR_borderColor.SCP_index.
	    BLACK,			;    SCPI_index
	    <				;    SCPI_info.
		0,			;	VTCMM_COLOR_FLAG
		VTGS_100,		;	VTCMM_GRAY_SCREEN
		0,			;	VTCMM_TRANSPARENT
		1,			;	VTCMM_ON_BLACK
		COLOR_MAP_SOLID		;	VTCMM_COLOR_MAP_MODE
	    >,
	    0				;    SCPI_unused
	>>,
	<				;VTR_attributes.
	    J_RIGHT,			;    VTRA_JUSTIFICATION
	    VTDT_INCH			;    VTRA_DEFAULT_TABS
	>,
	0*PIXELS_PER_INCH + 0,		;VTR_leftMargin
	0*PIXELS_PER_INCH + 0,		;VTR_rightMargin
	0*PIXELS_PER_INCH + 0,		;VTR_paraMargin
	<0, 1>,				;VTR_lineSpacing (BBFixed)
	0,				;VTR_leading
	<0, 0>,				;VTR_spaceOnTop (BBFixed)
	<0, 0>,				;VTR_spaceOnBottom (BBFixed)
	<SCP_index <			;VTR_bgColor.SCP_index.
	    BLACK,			;    SCPI_index
	    <				;    SCPI_info.
		0,			;	VTCMM_COLOR_FLAG
		VTGS_100,		;	VTCMM_GRAY_SCREEN
		0,			;	VTCMM_TRANSPARENT
		1,			;	VTCMM_ON_BLACK
		COLOR_MAP_SOLID		;	VTCMM_COLOR_MAP_MODE
	    >,
	    0				;    SCPI_unused
	>>,
	0,				;VTR_numberOfTabs
	<0, 0, 0, 0>			;VTR_reserved
    >
}
#endif

chunk InfixDisplayStyle = data {
#ifdef GCM
    CHAR_ATTR_FONT_SIZE_STYLE_COLOR(1, FONT_LED, 40, <>, LT_RED)
#else
    CHAR_ATTR_FONT_SIZE_STYLE_COLOR(1, FONT_LED, 18, <>, LT_RED)
#endif
}

InfixDisplay = CalcDisplay {
	text = "";
	charAttrRuns = "InfixDisplayStyle";
	hints = {
		HINT_NO_SPACES,
		HINT_SIGNED_DECIMAL,
		HINT_WASH_COLOR {
		    ColorQuad <
			    BLACK,		;    SCPI_index
			    COLOR_INDEX,	;    SCPI_info
			    0, 0
		    >
    	    	},
		HINT_EXPAND_WIDTH_TO_FIT_PARENT
	}

	action = MSG_CALC_DISPLAY_RETURN, process;
	engine = InfixEngine;
	shortcuts = InfixShortCuts;
}

chunk InfixShortCuts = data {
	CDShortcut 	<(CS_BSW shl 8) or '+', InfixPlus>,
			<(CS_BSW shl 8) or '*', InfixMult>,
			<(CS_BSW shl 8) or '/', InfixDivide>,
			<(CS_BSW shl 8) or '-', InfixMinus>,
			<(CS_BSW shl 8) or '=', InfixEqual>,
			<(CS_BSW shl 8) or '(', InfixOpenParen>,
			<(CS_BSW shl 8) or ')', InfixCloseParen>,
			<(CS_CONTROL shl 8) or CV_NUMPAD_PLUS, InfixPlus>,
			<(CS_CONTROL shl 8) or CV_NUMPAD_MULT, InfixMult>,
			<(CS_CONTROL shl 8) or CV_NUMPAD_DIV, InfixDivide>,
			<(CS_CONTROL shl 8) or CV_NUMPAD_MINUS, InfixMinus>,
			<(CS_CONTROL shl 8) or CV_PRINTSCREEN, InfixMult>,
			<(CS_BSW shl 8) or '%', InfixPercent>,
			<(CS_BSW shl 8) or 'x', InfixMult>,
			<(CS_BSW shl 8) or 'X', InfixMult>,
			<(CS_BSW shl 8) or '0', Infix0>,
			<(CS_BSW shl 8) or '1', Infix1>,
			<(CS_BSW shl 8) or '2', Infix2>,
			<(CS_BSW shl 8) or '3', Infix3>,
			<(CS_BSW shl 8) or '4', Infix4>,
			<(CS_BSW shl 8) or '5', Infix5>,
			<(CS_BSW shl 8) or '6', Infix6>,
			<(CS_BSW shl 8) or '7', Infix7>,
			<(CS_BSW shl 8) or '8', Infix8>,
			<(CS_BSW shl 8) or '9', Infix9>,
			<(CS_CONTROL shl 8) or '0', Infix0>,
			<(CS_CONTROL shl 8) or '1', Infix1>,
			<(CS_CONTROL shl 8) or '2', Infix2>,
			<(CS_CONTROL shl 8) or '3', Infix3>,
			<(CS_CONTROL shl 8) or '4', Infix4>,
			<(CS_CONTROL shl 8) or '5', Infix5>,
			<(CS_CONTROL shl 8) or '6', Infix6>,
			<(CS_CONTROL shl 8) or '7', Infix7>,
			<(CS_CONTROL shl 8) or '8', Infix8>,
			<(CS_CONTROL shl 8) or '9', Infix9>,
			<(CS_BSW shl 8) or 'c', InfixCE>,
			<(CS_BSW shl 8) or 'C', InfixCE>,
			<(CS_BSW shl 8) or 's', InfixStore>,
			<(CS_BSW shl 8) or 'S', InfixStore>,
			<(CS_BSW shl 8) or 'r', InfixRecall>,
			<(CS_BSW shl 8) or 'R', InfixRecall>,
			<(CS_BSW shl 8) or 't', InfixStorePlus>,
			<(CS_BSW shl 8) or 'T', InfixStorePlus>,
			<(CS_BSW shl 8) or 'p', InfixStorePlus>,
			<(CS_BSW shl 8) or 'P', InfixStorePlus>,
			<(CS_BSW shl 8) or 'n', InfixChs>,
			<(CS_BSW shl 8) or 'N', InfixChs>,
			<(CS_BSW shl 8) or '.', InfixDot>,
			<(CS_BSW shl 8) or ',', InfixDot>,
			<(CS_CONTROL shl 8) or '.', InfixDot>
}

InfixTape = GenTextDisplay {
	genStates = default -usable;
	text = "";

	genFont = fixedWidth;
	paraAttrRuns = DEF_PARA_ATTR_RIGHT
	charAttrRuns = DEF_CHAR_ATTR_FONT_SIZE(VTDF_UNIVERSITY, VTDS_24)
	textDisplayAttributes =
		initScrolling,
		selectable,
		tailOriented;

	hints = {
	    HINT_FIXED_SIZE {
		SpecWidth <SST_PIXELS, PAPER_WIDTH>
		SpecHeight <SST_PIXELS, PAPER_HEIGHT>
	    }
	}
}

InfixGroup = GenInteraction {
	children = InfixDisplay, InfixButtons;
	hints = {
		HINT_ORIENT_CHILDREN_VERTICALLY,
		HINT_EXPAND_HEIGHT_TO_FIT_PARENT,
		HINT_CENTER_CHILDREN_HORIZONTALLY
	}
}

InfixButtons = CalcBogusInteraction {
	children = InfixOpenParen, Infix7, Infix4, Infix1, Infix0,
		 InfixCloseParen, Infix8, Infix5, Infix2, InfixChs,
		 InfixPercent, Infix9, Infix6, Infix3, InfixDot,
		 InfixBS, InfixDivide, InfixMult, InfixMinus, InfixPlus,
		 InfixCE, InfixStore, InfixRecall, InfixStorePlus, InfixEqual;
	hints = {
		HINT_FIXED_SIZE {
			SpecWidth <SST_NUMBER_OF_AVG_WIDTH_CHARS, 5>
			word	BUTTON_INTERACTION_HEIGHT
			word	5
		},
		HINT_ORIENT_CHILDREN_VERTICALLY,
		HINT_EXPAND_HEIGHT_TO_FIT_PARENT,
		HINT_ALLOW_CHILDREN_TO_WRAP,
		HINT_CENTER_CHILDREN_HORIZONTALLY
	}
}

InfixPercent = GenTrigger {
	MONIKER(%)
	kbdAccelerator = specificUI '%';
	action = MSG_CE_INFIX_OP, InfixEngine;
	hints = { 
		HINT_DONT_SHOW_SHORTCUT,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	CALC_OP_PERCENT
		}
	}
}

InfixBS = CalcDataTrigger {
	MONIKER(Del)
	kbdAccelerator = specificUI DELETE;
  	extraAccelerator1 = specificUI BACKSPACE;
	action = MSG_VIS_TEXT_DO_KEY_FUNCTION, InfixDisplay;
	hints = { 
		HINT_DONT_SHOW_SHORTCUT,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	VTKF_DELETE_BACKWARD_CHAR
		}
	}
}

InfixOpenParen = GenTrigger {
#ifdef GCM
	moniker = list {
	    {
		cachedSize = GCM_BUTTON_WIDTH, GCM_BUTTON_HEIGHT;
		size = large;
		aspectRatio = normal;
		gstring {
		    GSBeginString
		    GSSetFont GCM_BUTTON_FONT, GCM_BUTTON_FONTSIZE
		    GSDrawTextAtCP <(>
		    GSEndString
		}
	    },
	    {
		cachedSize = GCM_S_BUTTON_WIDTH, GCM_S_BUTTON_HEIGHT;
		size = tiny;
		aspectRatio = verySquished;
		gstring {
		    GSBeginString
		    GSSetFont GCM_S_BUTTON_FONT, GCM_S_BUTTON_FONTSIZE
		    GSDrawTextAtCP <(>
		    GSEndString
		}
	    }
	}
#else
	moniker = "(";
#endif
	kbdAccelerator = specificUI '(';
	action = MSG_CE_OPEN_PAREN, InfixEngine;
	hints = { 
		HINT_DONT_SHOW_SHORTCUT,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT
	}
}

InfixCloseParen = GenTrigger {
#ifdef GCM
	moniker = list {
	    {
		cachedSize = GCM_BUTTON_WIDTH, GCM_BUTTON_HEIGHT;
		size = large;
		aspectRatio = normal;
		gstring {
		    GSBeginString
		    GSSetFont GCM_BUTTON_FONT, GCM_BUTTON_FONTSIZE
		    GSDrawTextAtCP <)>
		    GSEndString
		}
	    },
	    {
		cachedSize = GCM_S_BUTTON_WIDTH, GCM_S_BUTTON_HEIGHT;
		size = tiny;
		aspectRatio = verySquished;
		gstring {
		    GSBeginString
		    GSSetFont GCM_S_BUTTON_FONT, GCM_S_BUTTON_FONTSIZE
		    GSDrawTextAtCP <)>
		    GSEndString
		}
	    }
	}
#else
	moniker = ")";
#endif
	kbdAccelerator = specificUI ')';
	action = MSG_CE_INFIX_OP, InfixEngine;
	hints = { 
		HINT_DONT_SHOW_SHORTCUT,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	CALC_OP_CLOSE
		}
	}
}

InfixCE = GenTrigger {
	MNEMONIKER('C',C/CE)
	kbdAccelerator = specificUI 'c';
	action = MSG_CD_CLEAR, InfixDisplay;
	hints = { 
		HINT_DONT_SHOW_SHORTCUT,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT
	}
}

Infix7 = CalcDataTrigger {
	MONIKER(7)
	kbdAccelerator = specificUI '7';
	extraAccelerator1 = specificUI NUMPAD_7;
	action = MSG_CD_KBD_CHAR, InfixDisplay;
	hints = { 
		HINT_DONT_SHOW_SHORTCUT,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	(CS_BSW shl 8) or '7'
			word	mask CF_FIRST_PRESS
		}
	}
}

Infix8 = CalcDataTrigger {
	MONIKER(8)
	kbdAccelerator = specificUI '8';
	extraAccelerator1 = specificUI NUMPAD_8;
	action = MSG_CD_KBD_CHAR, InfixDisplay;
	hints = { 
		HINT_DONT_SHOW_SHORTCUT,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	(CS_BSW shl 8) or '8'
			word	mask CF_FIRST_PRESS
		}
	}
}

Infix9 = CalcDataTrigger {
	MONIKER(9)
	kbdAccelerator = specificUI '9';
	extraAccelerator1 = specificUI NUMPAD_9;
	action = MSG_CD_KBD_CHAR, InfixDisplay;
	hints = { 
		HINT_DONT_SHOW_SHORTCUT,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	(CS_BSW shl 8) or '9'
			word	mask CF_FIRST_PRESS
		}
	}
}

InfixDivide = CalcDataTrigger {
	SPECMONIKER(\\xd6,\xd6)
	kbdAccelerator = specificUI '/';
	extraAccelerator1 = specificUI NUMPAD_DIV;
	action = MSG_CE_INFIX_OP, InfixEngine;
	hints = { 
		HINT_DONT_SHOW_SHORTCUT,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	CALC_OP_DIVIDE
			word	MSG_CE_DIVIDE
		}
	}
}

InfixStore = GenTrigger {
	MNEMONIKER('S',STO)
	kbdAccelerator = specificUI 's';
	action = MSG_CE_STORE, InfixEngine;
	hints = { 
		HINT_DONT_SHOW_SHORTCUT,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT
	}
}

Infix4 = CalcDataTrigger {
	MONIKER(4)
	kbdAccelerator = specificUI '4';
	extraAccelerator1 = specificUI NUMPAD_4;
	action = MSG_CD_KBD_CHAR, InfixDisplay;
	hints = { 
		HINT_DONT_SHOW_SHORTCUT,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	(CS_BSW shl 8) or '4'
			word	mask CF_FIRST_PRESS
		}
	}
}

Infix5 = CalcDataTrigger {
	MONIKER(5)
	kbdAccelerator = specificUI '5';
	extraAccelerator1 = specificUI NUMPAD_5;
	action = MSG_CD_KBD_CHAR, InfixDisplay;
	hints = { 
		HINT_DONT_SHOW_SHORTCUT,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	(CS_BSW shl 8) or '5'
			word	mask CF_FIRST_PRESS
		}
	}
}

Infix6 = CalcDataTrigger {
	MONIKER(6)
	kbdAccelerator = specificUI '6';
	extraAccelerator1 = specificUI NUMPAD_6;
	action = MSG_CD_KBD_CHAR, InfixDisplay;
	hints = { 
		HINT_DONT_SHOW_SHORTCUT,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	(CS_BSW shl 8) or '6'
			word	mask CF_FIRST_PRESS
		}
	}
}

InfixMult = CalcDataTrigger {
	MONIKER(x)
	kbdAccelerator = specificUI 'x';
	extraAccelerator1 = specificUI '*';
	extraAccelerator2 = specificUI NUMPAD_MULT;

	action = MSG_CE_INFIX_OP, InfixEngine;
	hints = { 
		HINT_DONT_SHOW_SHORTCUT,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	CALC_OP_MULTIPLY
			word	MSG_CE_MULTIPLY
		}
	}
}

InfixRecall = GenTrigger {
	MNEMONIKER('R',RCL)
	kbdAccelerator = specificUI 'r';
	action = MSG_CE_RECALL, InfixEngine;
	hints = { 
		HINT_DONT_SHOW_SHORTCUT,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT
	}
}

Infix1 = CalcDataTrigger {
	MONIKER(1)
	kbdAccelerator = specificUI '1';
	extraAccelerator1 = specificUI NUMPAD_1;
	action = MSG_CD_KBD_CHAR, InfixDisplay;
	hints = { 
		HINT_DONT_SHOW_SHORTCUT,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	(CS_BSW shl 8) or '1'
			word	mask CF_FIRST_PRESS
		}
	}
}

Infix2 = CalcDataTrigger {
	MONIKER(2)
	kbdAccelerator = specificUI '2';
	extraAccelerator1 = specificUI NUMPAD_2;
	action = MSG_CD_KBD_CHAR, InfixDisplay;
	hints = { 
		HINT_DONT_SHOW_SHORTCUT,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	(CS_BSW shl 8) or '2'
			word	mask CF_FIRST_PRESS
		}
	}
}

Infix3 = CalcDataTrigger {
	MONIKER(3)
	kbdAccelerator = specificUI '3';
	extraAccelerator1 = specificUI NUMPAD_3;
	action = MSG_CD_KBD_CHAR, InfixDisplay;
	hints = { 
		HINT_DONT_SHOW_SHORTCUT,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	(CS_BSW shl 8) or '3'
			word	mask CF_FIRST_PRESS
		}
	}
}

InfixMinus = CalcDataTrigger {
	SPECMONIKER(\\xd0,\xd0)	/* EN Dash */
	kbdAccelerator = specificUI '-';
	extraAccelerator1 = specificUI NUMPAD_MINUS;
	action = MSG_CE_INFIX_OP, InfixEngine;
	hints = { 
		HINT_DONT_SHOW_SHORTCUT,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	CALC_OP_SUBTRACT
			word	MSG_CE_SUBTRACT
		}
	}
}

InfixStorePlus = CalcDataTrigger {
	MNEMONIKER('T',STO+)
	kbdAccelerator = specificUI 't';
	extraAccelerator1 = specificUI 'p';
	action = MSG_CE_STORE_PLUS, InfixEngine;
	hints = { 
		HINT_DONT_SHOW_SHORTCUT,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT
	}
}

Infix0 = CalcDataTrigger {
	MONIKER(0)
	kbdAccelerator = specificUI '0';
	extraAccelerator1 = specificUI NUMPAD_0;
	action = MSG_CD_KBD_CHAR, InfixDisplay;
	hints = { 
		HINT_DONT_SHOW_SHORTCUT,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	(CS_BSW shl 8) or '0'
			word	mask CF_FIRST_PRESS
		}
	}
}

InfixChs = GenTrigger {
	SPECMONIKER(\\xb1,\xb1)	/* +/- */
	kbdAccelerator = specificUI 'n';
	action = MSG_CD_CHANGE_SIGN, InfixDisplay;
	hints = { 
		HINT_DONT_SHOW_SHORTCUT,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT
	}
}

InfixDot = CalcDataTrigger {
	MONIKER(.)
	kbdAccelerator = specificUI '.';
	extraAccelerator1 = specificUI NUMPAD_PERIOD;
	extraAccelerator2 = specificUI ',';
	action = MSG_CD_KBD_CHAR, InfixDisplay;
	hints = { 
		HINT_DONT_SHOW_SHORTCUT,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	(CS_BSW shl 8) or '.'
			word	mask CF_FIRST_PRESS
		}
	}
}

InfixPlus = CalcDataTrigger {
	MONIKER(+)
	kbdAccelerator = specificUI '+';
	extraAccelerator1 = specificUI NUMPAD_PLUS;
	action = MSG_CE_INFIX_OP, InfixEngine;
	hints = { 
		HINT_DONT_SHOW_SHORTCUT,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	CALC_OP_ADD
			word	MSG_CE_ADD
		}
	}
}

InfixEqual = CalcDataTrigger {
	MONIKER(=)
	kbdAccelerator = specificUI '=';
	extraAccelerator1 = specificUI ENTER;
	extraAccelerator2 = specificUI NUMPAD_ENTER;

	action = MSG_CE_FINISH_INFIX, InfixEngine;
	hints = { 
		HINT_DONT_SHOW_SHORTCUT,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT
	}
}

end Infix;
