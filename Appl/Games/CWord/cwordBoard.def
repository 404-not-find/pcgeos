COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) Geoworks 1994 -- All Rights Reserved

PROJECT:	Crossword
MODULE:		Board
FILE:		cwordBoard.def

AUTHOR:		Peter Trinh, May  3, 1994

MACROS:
	Name			Description
	----			-----------

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	PT	5/ 3/94   	Initial revision


DESCRIPTION:
	This file contains constants, macros, and class definitions
	that are related to the Board Module.
		
	$Id: cwordBoard.def,v 1.1 97/04/04 15:14:12 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

; The Border is the thick rectangle that will surround the playing
; grid.  
BOARD_BORDER_WIDTH		equ 2

BOARD_DEFAULT_CELL_SIZE equ 23

BOARD_MIN_CELL_SIZE_FOR_FONT_NUMBER equ 20
BOARD_MIN_CELL_SIZE_FOR_REGION_NUMBER equ 16 ; maybe this should be 17

; Amount to inset rect from bounds of cell for inverting and clearing

BOARD_CELL_FILL_LEFT_INSET equ 1
BOARD_CELL_FILL_TOP_INSET equ 1
BOARD_CELL_FILL_RIGHT_INSET equ 1
BOARD_CELL_FILL_BOTTOM_INSET equ 1

BOARD_CELL_FILL_LEFT_INSET_WITH_SW equ 2
BOARD_CELL_FILL_TOP_INSET_WITH_SW equ 2 
BOARD_CELL_FILL_RIGHT_INSET_WITH_SW equ 2
BOARD_CELL_FILL_BOTTOM_INSET_WITH_SW equ 2

BOARD_SELECTED_WORD_THICKNESS equ 2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; The following are only max values that are default values used in
; the UI file and for EC variables.  Convenient for debugging purposes.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

BOARD_MAX_CELL_WIDTH	equ 50	; 50 points, MAXIMUM VALUE
BOARD_MAX_CELL_HEIGHT	equ 50	; MAXIMUM VALUE
BOARD_MAX_NUM_COL	equ 25	; 25 columns
BOARD_MAX_NUM_ROW	equ 25	; 25 rows

;;; Private and temporary constants.  DO NOT USE!! ;;;;;;;;;;;;;;;;;;;;;
UL_OFFSET_X		equ 0
UL_OFFSET_Y		equ 0
GRID_WIDTH		equ BOARD_MAX_CELL_WIDTH*BOARD_MAX_NUM_COL
GRID_HEIGHT		equ BOARD_MAX_CELL_HEIGHT*BOARD_MAX_NUM_ROW
NUM_PTS_BORDER		equ 2*BOARD_BORDER_WIDTH-1 ; -1 for overlap into cells
NUM_PTS_BOARD_WIDTH	equ NUM_PTS_BORDER+GRID_WIDTH
NUM_PTS_BOARD_HEIGHT	equ NUM_PTS_BORDER+GRID_HEIGHT
NUM_PTS_UL_X		equ 2*UL_OFFSET_X
NUM_PTS_UL_Y		equ 2*UL_OFFSET_Y
NUM_POINTS_WIDE		equ NUM_PTS_UL_X+NUM_PTS_BOARD_WIDTH
NUM_POINTS_HIGH		equ NUM_PTS_UL_Y+NUM_PTS_BOARD_HEIGHT
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; The Upper-Left coordinate used for doing all drawings.  This allows
; the flexibility of moving the grid and its borders.  
; If modifying the following two constants, modify UL_OFFSET_(X/Y)
; instead.
BOARD_DEF_UL_COORD_X	equ 0+UL_OFFSET_X
BOARD_DEF_UL_COORD_Y	equ 0+UL_OFFSET_Y

; Default bounds for the Board and the CwordContent.
BOARD_DEF_DOC_RIGHT	equ NUM_POINTS_WIDE-1
BOARD_DEF_DOC_BOTTOM	equ NUM_POINTS_HIGH-1

; Default bounds of the grid, excluding the borders.
BOARD_DEF_GRID_LEFT	equ BOARD_DEF_UL_COORD_X+BOARD_BORDER_WIDTH
BOARD_DEF_GRID_TOP	equ BOARD_DEF_UL_COORD_Y+BOARD_BORDER_WIDTH
BOARD_DEF_GRID_RIGHT	equ BOARD_DEF_GRID_LEFT+GRID_WIDTH-1
BOARD_DEF_GRID_BOTTOM  	equ BOARD_DEF_GRID_TOP+GRID_WIDTH-1

; Default bounds of the visual board (grid and borders)
BOARD_DEF_BOARD_RIGHT	equ BOARD_DEF_GRID_RIGHT+BOARD_BORDER_WIDTH-1
BOARD_DEF_BOARD_BOTTOM	equ BOARD_DEF_GRID_BOTTOM+BOARD_BORDER_WIDTH-1

; Checking for consistancy in constants
CheckHack <BOARD_DEF_DOC_RIGHT-UL_OFFSET_X eq BOARD_DEF_BOARD_RIGHT>
CheckHack <BOARD_DEF_DOC_BOTTOM-UL_OFFSET_Y eq BOARD_DEF_BOARD_BOTTOM>

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Constants for making words visible
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;   Force a little more than the exact word to be visible so the user
;   can tell that the words ends by seeing some of the next square or edge

BOARD_VISIBLE_RECT_ENHANCEMENT equ 3


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Constants for drawing text
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
BOARD_NUM_FONT		equ     FID_UNIVERSITY
BOARD_NUM_SIZE  	equ     9
BOARD_NUM_H_OFFSET	equ	2
BOARD_NUM_V_OFFSET	equ	-1

BOARD_DEFAULT_TEXT_SIZE		equ     12
BOARD_TEXT_FONT		equ     FID_DTC_URW_SANS
BOARD_TEXT_STYLE	equ	0 ; mask TS_BOLD
BOARD_TEXT_H_OFFSET	equ	0
BOARD_TEXT_V_OFFSET	equ	-3
BOARD_TEXT_COLOR 	equ	C_BLACK

BOARD_HINTED_TEXT_STYLE	equ	0
BOARD_HINTED_TEXT_COLOR equ	C_BLUE

BOARD_SLASH_COLOR	equ	C_RED

BOARD_BORDER_COLOR	equ	C_DARK_GRAY
BOARD_HOLE_COLOR	equ	C_LIGHT_GRAY

;    The size to draw the letters if there is no number in the square
;    and the default cell size is being used
BOARD_DEFAULT_TEXT_SIZE_NO_NUMBER	equ     22

; Expected area color for gstates passed to board drawing routines.
; If you change the area color then you should set it back to this

BOARD_DEFAULT_AREA_COLOR equ	C_BLACK

; number of pixels in SCREEN coordinates from the left edge of
; a region number to the left edge of the next
;
NUMBER_REGION_SEPARATION equ 4


; offset from upper left of cell to upper left of position to
; draw board number in SCREEN coordinates
;

BOARD_NUM_H_OFFSET_SCREEN	equ 	2
BOARD_NUM_V_OFFSET_SCREEN	equ	2


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Structures and constants for doing cool stuff
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

ParticleInfo record
	PI_DRAWN:1			;object at lastDrawnPosition
					;has been drawn
	PI_LAST_DRAWN_INITIALIZED:1	;values at lastDrawnPosition have
					;been set.
ParticleInfo end

Particle struct
	P_lastDrawnPosition	Point
	P_curPosition		PointWWFixed
	P_velocity		PointWWFixed
	P_gravity		PointWWFixed
	P_info			ParticleInfo
	P_sparkProb		byte
	P_width			byte
	P_height		byte
Particle ends

ParticleInit struct
	PI_position		Point
	PI_velocity		PointWWFixed
	PI_gravity		PointWWFixed	;drag in x and vertical gravity
						;in y
	PI_sparkProb		byte
	PI_width		byte
	PI_height		byte
ParticleInit ends

;    These apply to initial velocities
;	

MAX_PARTICLE_FRAC 		equ	65534

MAX_STAR_HORIZ_VELOCITY_INT	equ	16
MIN_STAR_HORIZ_VELOCITY_INT	equ	13
MAX_STAR_HORIZ_VELOCITY_FRAC	equ	MAX_PARTICLE_FRAC
MIN_STAR_HORIZ_VELOCITY_FRAC	equ	0

MAX_STAR_VERT_VELOCITY_INT	equ	3
MIN_STAR_VERT_VELOCITY_INT	equ	1
MAX_STAR_VERT_VELOCITY_FRAC	equ	MAX_PARTICLE_FRAC
MIN_STAR_VERT_VELOCITY_FRAC	equ	0

MAX_STAR_VERT_GRAVITY_INT	equ	0
MAX_STAR_VERT_GRAVITY_FRAC	equ	12288
MIN_STAR_VERT_GRAVITY_INT	equ	0
MIN_STAR_VERT_GRAVITY_FRAC	equ	2048

MAX_SPARK_HORIZ_VELOCITY_INT	equ	1
MIN_SPARK_HORIZ_VELOCITY_INT	equ	0
MAX_SPARK_HORIZ_VELOCITY_FRAC	equ	MAX_PARTICLE_FRAC
MIN_SPARK_HORIZ_VELOCITY_FRAC	equ	(MAX_PARTICLE_FRAC*3)/4

MAX_SPARK_HORIZ_DRAG_INT		equ	0
MAX_SPARK_HORIZ_DRAG_FRAC	equ	2048
MIN_SPARK_HORIZ_DRAG_INT		equ	0
MIN_SPARK_HORIZ_DRAG_FRAC	equ	256

MAX_STAR_TO_SPARK_GRAVITY_INCREASE_INT		equ 0
MIN_STAR_TO_SPARK_GRAVITY_INCREASE_INT		equ 0
MAX_STAR_TO_SPARK_GRAVITY_INCREASE_FRAC		equ 32676
MIN_STAR_TO_SPARK_GRAVITY_INCREASE_FRAC		equ 16384

MAX_STAR_TO_SPARK_VERT_VELOCITY_INCREASE_INT	equ 5
MAX_STAR_TO_SPARK_VERT_VELOCITY_INCREASE_FRAC	equ MAX_PARTICLE_FRAC
MAX_STAR_TO_SPARK_VERT_VELOCITY_INCREASE_HALF	equ 3

PERCENT_CHANCE_OF_NEW_STAR	equ	8
STAR_WIDTH	equ	5
STAR_HEIGHT	equ	3

SPARK_MAX_WIDTH		equ	3
SPARK_MAX_HEIGHT	equ	3
SPARK_MIN_WIDTH		equ	3
SPARK_MIN_HEIGHT	equ	3

MAX_STARS_CREATED	equ	20
MIN_STARS_CREATED	equ	12

MAX_SPARK_PROB		equ	37
MIN_SPARK_PROB		equ	16


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Default GState setting
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; The design philosophy is such that a routine will need to modify the
; GState in whatever it needs to before drawing.  No need to save the
; states.  The following constants are assumed by all the graphic
; routines in Crossword.  Thus any deviation from such default states
; would need to be corrected and restored to the default.

BOARD_MIX_MODE	equ	MM_COPY
BOARD_AREA_MASK	equ	SDM_100



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Useful status of a CellFlag settings.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
BOARD_NOT_SELECTABLE_CELL	equ (mask CF_HOLE or mask CF_NON_EXISTENT)
BOARD_NOT_ERASABLE_CELL		equ (mask CF_HINTED or mask CF_HOLE or mask CF_NON_EXISTENT)
BOARD_NOT_HINTABLE_CELL		equ (mask CF_HINTED or mask CF_HOLE or mask CF_NON_EXISTENT)
BOARD_NOT_WRITABLE_CELL		equ BOARD_NOT_HINTABLE_CELL


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Useful status of DrawOptions and HighlightStatus
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
BOARD_KEYBOARD_DRAW_OPTIONS	equ (mask DO_SELECTED_SQUARE or mask DO_SELECTED_WORD)
BOARD_PEN_DRAW_OPTIONS		equ ( mask DO_SELECTED_SQUARE) 	; don't draw highlight
BOARD_KEYBOARD_HIGHLIGHT_STATUS	equ (mask HS_SELECTED_SQUARE  or mask DO_SELECTED_WORD)
BOARD_PEN_HIGHLIGHT_STATUS	equ mask HS_SELECTED_SQUARE

;  Used for clearing out input dependent options
BOARD_INPUT_DRAW_OPTIONS	equ (mask DO_SELECTED_SQUARE or mask DO_SELECTED_WORD )

BOARD_DEFAULT_DRAW_OPTIONS 	equ mask DO_NUMBER

;--------------------------------------------------------------------------
; 	Structure to send initialization data to the Board module
;--------------------------------------------------------------------------

BoardInitializeData	struct
	BID_engine	EngineTokenType	; engine token
	BID_cell	CellTokenType	; selected cell
	BID_direction	DirectionType	; current direction
	BID_acrossClue	ClueTokenType	; selected across clue
	BID_downClue	ClueTokenType	; selected down clue
BoardInitializeData	ends

;------------------------------------------------------------------------------
;		Macros
;------------------------------------------------------------------------------



COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		BoardAllocStructOnStack
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

SYNOPSIS:	Given the struct name, will allocate on the stack a
		buffer of large enough for the struct.  It will also
		make sure allocation that sp will always be on even
		boundary for the sake of Swat.

PASS:		structName

RETURN:		ss:bp	= points to beginning of structure

PSEUDO CODE/STRATEGY:

KNOWN BUGS/SIDE EFFECTS/IDEAS:
	sp is adjusted appropriately.

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	PT	5/12/94   	Initial version

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@
BoardAllocStructOnStack		macro	structName

local	structSize

structSize = size structName

if ( structSize mod 2 )
;
; if odd, then add 1 to size
;
	structSize = structSize + 1
endif
	sub	sp, structSize
	mov	bp, sp			; bp = start of struct

		endm




COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		BoardDeAllocStructOnStack
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

SYNOPSIS:	Deallocates the given struct on the stack, by
		assigning bp to sp.  

PASS:		structName
		ss:bp	= beginning of structure

RETURN:		ss:bp	= invalid ptr

PSEUDO CODE/STRATEGY:

KNOWN BUGS/SIDE EFFECTS/IDEAS:
	sp is adjusted appropriately.

	Warning! Everything that is on the stack after the initial
	call to BoardAllocStructOnStack will be lost.

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	PT	5/12/94   	Initial version

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@
BoardDeAllocStructOnStack		macro	structName
ifb <structName>
	ErrMessage <BoardDeAllocStructOnStack expects 1 argument.>
endif

local	structSize

structSize = size structName

if ( structSize mod 2 )
;
; if odd, then add 1 to size
;
	structSize = structSize + 1
endif
	add	sp, structSize

		endm



COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		BoardAdvanceSelectedSquare
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

SYNOPSIS:	Moves the selected square forward, right or down
		depending on the current direction, one cell.  If the
		next cell is BOARD_NOT_SELECTABLE or ENGINE_GRID_EDGE,
		then will not advance.

PASS:		*ds:si	- CwordBoardClass object

DESTROY:	Nothing
Pseudo CODE/STRATEGY:

KNOWN BUGS/SIDE EFFECTS/IDEAS:	None

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	PT	6/21/94   	Initial version

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@
BoardAdvanceSelectedSquare		macro

	PreserveAndGetIntoReg	ax, MSG_CWORD_BOARD_INCREMENT_SELECTED_SQUARE
	call	ObjCallInstanceNoLock
	RestoreReg		ax, MSG_CWORD_BOARD_INCREMENT_SELECTED_SQUARE

		endm




COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		BoardRetreatSelectedSquare
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

SYNOPSIS:	Moves the selected square backward, left or up
		depending on the current direction, one cell.  If the
		next cell is BOARD_NOT_SELECTABLE or ENGINE_GRID_EDGE,
		then will not advance.

PASS:		*ds:si	- CwordBoardClass object

DESTROY:	Nothing
Pseudo CODE/STRATEGY:

KNOWN BUGS/SIDE EFFECTS/IDEAS:	None

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	PT	6/21/94   	Initial version

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@
BoardRetreatSelectedSquare		macro

	PreserveAndGetIntoReg	ax, MSG_CWORD_BOARD_DECREMENT_SELECTED_SQUARE
	call	ObjCallInstanceNoLock
	RestoreReg		ax, MSG_CWORD_BOARD_DECREMENT_SELECTED_SQUARE

		endm



COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		BoardDrawHiLites
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

SYNOPSIS:	Will draw the highlight for the selected word and
		squares. If doesn't pass a GState, will clr di.

PASS:		*ds:si	- CwordBoardClass object
		^hdi	- GState or 0

PSEUDO CODE/STRATEGY:

KNOWN BUGS/SIDE EFFECTS/IDEAS:

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	PT	7/27/94   	Initial version

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@
BoardDrawHiLites		macro

	call	BoardDrawHiLiteSelectedWord
	call	BoardDrawHiLiteSelectedSquare
		endm




COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		BoardEraseHiLites
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

SYNOPSIS:	Will erase the highlights of both the selected word
		and selected square.

PASS:		*ds:si	- CwordBoardClass object
		^hdi	- GState or 0

PSEUDO CODE/STRATEGY:

KNOWN BUGS/SIDE EFFECTS/IDEAS:

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	PT	7/27/94   	Initial version

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@
BoardEraseHiLites		macro

	call	BoardEraseHiLiteSelectedWord
	call	BoardEraseHiLiteSelectedSquare

		endm


;------------------------------------------------------------------------------
;		Class Definitions
;------------------------------------------------------------------------------

CwordApplicationClass class GenApplicationClass
CwordApplicationClass endc

idata	segment
	CwordApplicationClass
idata	ends


CwordBoardClass		class	VisClass


;------------------------------------------------------------------------------
;		Messages
;------------------------------------------------------------------------------

MSG_CWORD_BOARD_INITIALIZE_BOARD	message
;
; Will initialize the Board's instance data.
;
; Context:	Called during the initialization stage, after the
; 		Engine is built.
; Source:	Unrestricted
; Destination:  Any CwordBoard objects
; Interception: Generally not intercepted
;
; Pass:		bp	= stack pointer to BoardInitializeData structure.
;			
; Return:	ax	- InitReturnValue
; 		nothing	- destroyed
;

MSG_CWORD_BOARD_CLEAN_UP		message
;
; Will clear the engine field and tells the ClueList to clean up.
;
; Context:	Called during shutting down.
; Source:	Unrestricted
; Destination:  Any CwordBoard objects
; Interception: Generally not intercepted
;
; Pass:		nothing
; Return:	nothing
; 		nothing	- destroyed
;

MSG_CWORD_BOARD_UPDATE_CLUE_LIST	message
;
; This message is sent by one of the ClueLists who needs to have its
; list updated/refreshed visually.  This happens when the user scrolls
; through the ClueList.  The reason for this message is that the data
; of the list items are managed by the Engine Module which is on the
; process thread.  Since the ClueLists are on the UI thread, we need
; to send a message to the Board (on the process thread as well) to
; retrieve the necessary informations, and send them to the ClueList.
; Thus this is the former message.
;
; Context:	Called when the ClueList is being updated.
; Source:	Any CwordClueList objects
; Destination:  Any CwordBoard objects
; Interception: Generally not intercepted
;
; Pass:		cx	= ClueToken of item to be displayed
;		dh	= ListItemInfo
;		dl	= item position needing the update
;		bp	= DirectionType indentifying the sender
;			
; Return:	nothing
;
; 		nothing	- destroyed
;

MSG_CWORD_BOARD_INCREMENT_SELECTED_SQUARE	message
MSG_CWORD_BOARD_DECREMENT_SELECTED_SQUARE	message
;
; Will increment/decrement the selected square in the current
; direction as indicated in CBI_direction.  Increment means moves
; right or down, and decrement means move left or up.
;
; Context:	Called at any time.
; Source:	No restriction
; Destination:  Any CwordBoard objects
; Interception: Generally not intercepted
;
; Pass:		nothing
; Return:	nothing
;		nothing	- destroyed
;

MSG_CWORD_BOARD_TRACK_CELL			message
;
; Will force the cell to be at the top left corner of the CwordView.
;
; Context:	Called at any time.
; Source:	No restriction
; Destination:  Any CwordBoard objects
; Interception: Generally not intercepted
;
; Pass:		cx	= ClueTokenType
;		bp	= DirectionType
;
; Return:	nothing
;		nothing	- destroyed
;

MSG_CWORD_BOARD_SET_DIRECTION			message
MSG_CWORD_BOARD_SET_VERIFICATION_MODE		message
MSG_CWORD_BOARD_SET_SELECTED_CELL_TOKEN		message
MSG_CWORD_BOARD_SET_SELECTED_DOWN_CLUE_TOKEN	message
MSG_CWORD_BOARD_SET_SELECTED_ACROSS_CLUE_TOKEN	message
;
; Will set the corresponding instance variable with the given value.
;
; Context:	Called during the progress of the game.
; Source:	No restrictions.
; Destination:  Any CwordBoard objects
; Interception: Generally not intercepted
;
; Pass:		dx	= value to set instance variables with.
;			
; Return:	nothing
;
; 		nothing	- destroyed
;

MSG_CWORD_BOARD_GET_DIRECTION			message
MSG_CWORD_BOARD_GET_SYSTEM_TYPE			message
MSG_CWORD_BOARD_GET_VERIFICATION_MODE		message
MSG_CWORD_BOARD_GET_SELECTED_CELL_TOKEN		message
MSG_CWORD_BOARD_GET_SELECTED_DOWN_CLUE_TOKEN	message
MSG_CWORD_BOARD_GET_SELECTED_ACROSS_CLUE_TOKEN	message
;
; Will get the value in the corresponding instance variable.
;
; Context:	Called during the progress of the game.
; Source:	No restrictions.
; Destination:  Any CwordBoard objects
; Interception: Generally not intercepted
;
; Pass:		nothing
;			
; Return:	ax	= value of instance variable
;
; 		nothing	- destroyed
;

MSG_CWORD_BOARD_GET_SELECTED_WORD	message
;
; Will get the Direction and the Selected CellToken.
;
; Context:	Called during the progress of the game.
; Source:	No restrictions.
; Destination:  Any CwordBoard objects
; Interception: Generally not intercepted
;
; Pass:		nothing
;			
; Return:	ax	= CBI_cell
;		dx	= CBI_direction
;
; 		nothing	- destroyed
;

MSG_CWORD_BOARD_SET_SELECTED_WORD	message
;
; Will set the Direction and the Selected CellToken.
;
; Context:	Called during the progress of the game.
; Source:	No restrictions.
; Destination:  Any CwordBoard objects
; Interception: Generally not intercepted
;
; Pass:		cx	= CellTokenType
;		dx	= DirectionType
;
; 		nothing	- destroyed
;

MSG_CWORD_BOARD_SET_UP_LEFT_COORD_X	message
MSG_CWORD_BOARD_SET_UP_LEFT_COORD_Y	message
;
; Will set the cell's upper-left coordinate.
;
; Context:	Called during the progress of the game.
; Source:	No restrictions, but usually GenValue object
; Destination:  Any CwordBoard objects
; Interception: Generally not intercepted
;
; Pass:		dx.cx	= x/y value (int.frac)
;		bp	= GenValueStateFlags (not used)
;
; 		nothing	- destroyed
;

MSG_CWORD_BOARD_CLIP_DC	message
;
; Forces the given Point to fall within the Grid.
;
; Context:	Called at any time.
; Source:	No restriction
; Destination:  Any CwordBoard objects
; Interception: Generally not intercepted
;
; Pass:		cx,dx	- Point
;			
; Return:	cx,dx	- clipped Point
;
;		nothing	- destroyed
;

MSG_CWORD_BOARD_VERIFY	message
;
; Verifies all the user letters in non-empty cells and gives feedback
; of the results to the user.
;
; Context:	Called at any time when the Verify button is pushed.
; Source:	No restriction
; Destination:  Any CwordBoard objects
; Interception: Generally not intercepted.
;
; Pass:		nothing
; Return:	nothing
;		nothing - unchanged
;		nothing - destroyed


MSG_CWORD_BOARD_GESTURE_HANDLE_INK_CHAR	message
;
; Given a recognized character and its center point, handle it.
;
; Context:	Called when handling ink/gesture stuff
; Source:	No restriction
; Destination:  Any CwordBoard object
; Interception: Generally not intercepted.
;
; Pass:		ss:[bp]	- TextInfo
;			
; Return:	nothing
;		nothing - unchanged
;		nothing - destroyed
;

MSG_CWORD_BOARD_GESTURE_SET_MODE_CHAR	message
;
; Sets the instance data with the appropriate value so that we can
; handle the call to BaordReplaceLastChar. This is part of the
; mechanism to support Graffiti. This routine is called after one does
; a call to HWRR_DO_GESTURE_RECOGNITION and the return GestureType is
; a GT_MODE_CHAR.  The value returned in dx should be passed here.
;
; Context:	Part of the mechanism to support Graffiti; called
; 		after a call to HWRR_RECOGNIZE_GESTURE
; Source:	No restriction
; Destination:  Any CwordBoard object
; Interception: Generally not intercepted.
;
; Pass:		dx	- character returned with GT_MODE_CHAR
;		ss:[bp]	- Rectangle (bound of gesture)
;			
; Return:	nothing
;		nothing - unchanged
;		nothing - destroyed
;

MSG_CWORD_BOARD_GESTURE_REPLACE_LAST_CHAR	message
;
; Will replace the "last char" with this new char.  Depending on what
; is stored in CBI_currModeChar, different actions will be taken with
; the following assumptions.  If CBI_currModeChar is null, then we
; assume that we are not in any Graffiti Mode, and the last character
; was actually stored in the cell designated by CBI_lastCell.  The
; only instances when this is called and CBI_currModeChar is NULL are
; as follows: 
;
;	When the user enters a character, and adds a post-character
;		modifier, like an accent.
;	Or when the user enters a mode modifier like to enter
;		punctuation. 
;
; Context:	Part of the mechanism to support Graffiti; called
; 		after a call to HWRR_RECOGNIZE_GESTURE
; Source:	No restriction
; Destination:  Any CwordBoard object
; Interception: Generally not intercepted.
;
; Pass:		dx	- new character
;		ss:[bp]	- Rectangle (bounds of gesture)
;			
; Return:	nothing
;		nothing - unchanged
;		nothing - destroyed
;

MSG_CWORD_BOARD_GESTURE_RESET_MACRO	message
;
; This routine is called to abort the current macro mode started.
; Basically will update the instance data lastCell and currModeChar to
; reflect this abortion. 
;
; Context:	Part of the mechanism to support Graffiti; called
; 		after a call to HWRR_RECOGNIZE_GESTURE
; Source:	No restriction
; Destination:  Any CwordBoard object
; Interception: Generally not intercepted.
;
; Pass:		nothing
; Return:	nothing
;		nothing - unchanged
;		nothing - destroyed
;

MSG_CWORD_BOARD_GESTURE_CHAR		message
;
; This routine is called after receiving a GT_CHAR from a call to
; HWRR_DO_GESTURE_RECOGNITION.  It basically sets up the lastCell and
; currModeChar correctly and then stores the new character in the cell
; corresponding to the gesture bounds. 
;
; Context:	Part of the mechanism to support Graffiti; called
; 		after a call to HWRR_RECOGNIZE_GESTURE
; Source:	No restriction
; Destination:  Any CwordBoard object
; Interception: Generally not intercepted.
;
; Pass:		dx	- new character
;		ss:[bp]	- Rectangle (gesture bounds)
;			
; Return:	nothing
;		nothing - unchanged
;		nothing - destroyed
;


MSG_CWORD_BOARD_OPEN_APPLICATION	message
;
;	Initialize once only things, like pen or keyboard, color system.
;
; Context:	Sent to board during MSG_GEN_PROCESS_OPEN_APPLICATION
; Source:	Processs
; Destination:  Any CwordBoard object
; Interception: Generally not intercepted.
;
; Pass:		nothing
;			
; Return:	nothing
;		nothing - unchanged
;		nothing - destroyed
;

;****************************************************************************
MSG_CWORD_BOARD_ERASE_HIGHLIGHTS	message
;
;	Erase selected word and selected square highlights if they
;	are currently drawn.
;
; Context:	Utility
; Source:	Unrestricted
; Destination:  CwordBoard
; Interception: This message is not used internally, direct calls are made
;		to the erasing routines. 
;
;PASS:		
;	nothing
;			
;RETURN:	
;	nothing
;
;DESTROYED:
;	nothing
;

;****************************************************************************
MSG_CWORD_BOARD_SET_CELL_SIZE	message
;
;	Changes cell width and height, recalculates point size and
;	board bounds
;
; Context:	Zoom in, Zoom out
; Source:	ScreenInteraction
; Destination:  CwordBoard
; Interception: Unlikely
;
;PASS:		
;	cx - cell size in points
;			
;RETURN:	
;	nothing
;
;DESTROYED:
;	ax
;



;****************************************************************************
MSG_CWORD_BOARD_SET_KEYBOARD_MODE	message
;
;	Switch board into keyboard mode. This affects how it draws the
;	highlighted cell and word.
;
; Context:	When floating keyboard is brought up
; Source:	PenInputControl
; Destination:  CwordBoard
; Interception: Unlikely. Not used internally to switch modes.
;
;PASS:		
;	nothing
;			
;RETURN:	
;	nothing
;
;DESTROYED:
;	ax
;


;****************************************************************************
MSG_CWORD_BOARD_SET_PEN_MODE	message
;
;	Switch board into pen mode. This affects how it draws the
;	highlighted cell and word.
;
; Context:	When floating keyboard is brought down
; Source:	PenInputControl
; Destination:  CwordBoard
; Interception: Unlikely. Not used internally to switch modes.
;
;PASS:		
;	nothing
;			
;RETURN:	
;	nothing
;
;DESTROYED:
;	ax
;


;****************************************************************************
MSG_CWORD_BOARD_ENSURE_SELECTED_WORDS_VISIBLE	message
;
;	Scroll the board to ensure that the words passing through the selected
;	cell are visible.
;
;
; Context:	When user zooms in.
; Source:	View
; Destination:  Board
; Interception: Unlikely
;
;PASS:		
;	nothing
;			
;RETURN:	
;	nothing
;
;DESTROYED:
;	ax
;

PuzzleCompletionStatus	etype word
PCS_CORRECT		enum PuzzleCompletionStatus	;All cells are filled
							;with either the correct
							;letter or are hinted.

PCS_FILLED		enum PuzzleCompletionStatus	;All cells are filled
							;but at least one letter
							;is wrong.

PCS_PARTIALLY_FILLED	enum PuzzleCompletionStatus	;Some of the cells
							;are filled

PCS_EMPTY		enum PuzzleCompletionStatus	;None of the cells
							;are filled

;****************************************************************************
MSG_CWORD_BOARD_CHECK_PUZZLE_COMPLETION_STATUS	message
;
;	Determine if puzzle is all correct, all filled in, partially filled
;	or entirely empty
;
; Context:	User is closing this puzzle.
; Source:	unrestricted
; Destination:  CwordBoard
; Interception: Unlikely
;
;PASS:		
;	nothing
;			
;RETURN:	
;	cx - PuzzleCompletionStatus
;
;DESTROYED:
;	ax
;

;****************************************************************************
MSG_CWORD_BOARD_FIND_EMPTY_CELL	message
;
;	Search the puzzle for an empty cell and if one is found then
;	select it and make sure it is visible
;
; Context:	Unrestricted
; Source:	Unrestricted
; Destination:  CwordBoard
; Interception: Unlikely
;
;PASS:		
;	nothing
;			
;RETURN:	
;	nothing
;
;DESTROYED:
;	nothing
;

;****************************************************************************
MSG_CWORD_BOARD_CLEAR_PUZZLE	message
;
;	Set all cells to empty and redraw
;
; Context:	Unrestricted
; Source:	Unrestricted
; Destination:  CwordBoard
; Interception: Unlikely
;
;PASS:		
;	nothing
;			
;RETURN:	
;	nothing
;
;DESTROYED:
;	nothing
;

;****************************************************************************
MSG_CWORD_BOARD_CLEAR_X_CELLS	message
;
;	Set to empty all cells that are wrong
;
; Context:	Unrestricted
; Source:	Unrestricted
; Destination:  CwordBoard
; Interception: Unlikely
;
;PASS:		
;	nothing
;			
;RETURN:	
;	nothing
;
;DESTROYED:
;	nothing
;

	
;****************************************************************************
MSG_CWORD_BOARD_VERIFY_WORD	message
;
;	Verifies the word comprised of the currently selected cell
;       and the current direction.
;
; Context:	Unrestricted
; Source:	Unrestricted
; Destination:  CwordBoard
; Interception: Unlikely
;
;PASS:		
;	nothing
;			
;RETURN:	
;	nothing
;
;DESTROYED:
;	nothing
;


;****************************************************************************
MSG_CWORD_BOARD_TOGGLE_CLUE_LIST	message
;
;	In the _SINGLE_CLUE_LIST mode, will toggle which ClueList is seen.
;
; Context:	Unrestricted
; Source:	Unrestricted
; Destination:  CwordBoardClass object
; Interception: Unlikely
;
;PASS:		
;	nothing
;			
;RETURN:	
;	nothing
;
;DESTROYED:
;	nothing
;

MSG_CWORD_BOARD_CHANGE_SHOW_NUMBER_OPTION	message
	

;------------------------------------------------------------------------------
;		Types
;------------------------------------------------------------------------------

MovedStatus	etype	word
	; The result of a move action
	MS_MOVED	enum	MovedStatus
			; Move was successful.
	MS_HOLE		enum	MovedStatus
			; Could not move, encountered a hole.
	MS_EDGE		enum	MovedStatus
			; Could not move, encountered one of the edges
			; of the grid.
	MS_BAD_ETYPE	enum	MovedStatus

SystemType	etype	word
	; The type of system we're working on
	ST_PEN		enum	SystemType
			; Eg. the Zoomer.
	ST_KEYBOARD	enum	SystemType
			; Eg. desktop
	ST_BAD_ETYPE	enum	SystemType
			; Used for EC checking.  Make sure this is the
			; last enum. 

VerifyModeType	etype	word
	; The status of the Verification Mode.
	VMT_OFF		enum	VerifyModeType
	VMT_ON		enum	VerifyModeType
	VMT_BAD_ETYPE	enum	VerifyModeType
			; Used for EC checking.  Make sure this is the
			; last enum. 

SquareSizeType	etype	word
	; The size of the squares thus determines the size of the
	; grid.
	SST_LARGE	enum	SquareSizeType
	SST_SMALL	enum	SquareSizeType
	SST_BAD_ETYPE	enum	SquareSizeType
			; Used for EC checking.  Make sure this is the
			; last enum. 

DrawOptions	record
	; Normally the game will draw the basic information: the cells
	; and their contents.  The following are optional information
	; that, if set, can be drawn.
	DO_SELECTED_WORD:1	; draw the selected word.
	DO_SELECTED_SQUARE:1	; draw the selected square.
	DO_NUMBER:1		; draw the cell numbers.
	DO_COLOR:1		; can use color when drawing
	:4
DrawOptions	end

HighlightStatus	record
	; A field is set if the highlight needs to be drawn, or is
	; currently being displayed.
	HS_SELECTED_WORD:1
	HS_SELECTED_SQUARE:1
	HS_HAS_FOCUS:1		; will draw the hi-lite if set
	HS_HAS_TARGET:1		; will draw the hi-lite if set
	:4
HighlightStatus	end

;------------------------------------------------------------------------------
;		Instance Data
;------------------------------------------------------------------------------
	CBI_cellWidth	word		; in points
;		The width includes the right grid line.  Thus the
;		right grid line is within the cell's bounds.
;
	CBI_cellHeight	word		; in points
;		The height includes the bottom grid line.  Thus the
;		bottom grid line is within the cell's bounds.
;
	CBI_pointSize	WBFixed		; in points
;		Point Size to draw the letters in.
;
	CBI_engine	hptr ;EngineTokenType	; Token to the engine
;		This token is necessary to access any of the Engine
;		routines.
;
	CBI_system	SystemType	; Layout indicator
;		This will tell us how to layout the UI components.
;
	CBI_upLeftCoord		Point
;		This is the upper-left point, in document coordinate,
;		of the visual Board (grid and borders).  This point
;		will be used to offset all points referred to by any
;		routines drawing to the Crossword Board.
;
	CBI_lowRightCoord	Point
;		This is the lower-right point of the visual Board.
;
	CBI_cell	CellTokenType	; Current Selected Cell
;		Contains the token of the currently selected cell.  If
;		enabled, the cell would be differentiated graphically
;		from the other cells: it will be highlighted.
;
	CBI_direction	DirectionType	; Current clue direction
;		This combined with the content of CBI_cell will form
;		the Current Selected Word.  This is also used when
;		inputting letters from the keyboard.  We need to know
;		where to advance the cursor (Current Selected Cell).
;
	CBI_acrossClue	ClueTokenType	; Last Selected AcrossClue
;		This indicates the across clue that corresponds to the
;		Current Selected Cell.  This will only change when the
;		user clicks on a cell, or selects an item in the
;		AcrossClueList.
;
	CBI_downClue	ClueTokenType	; Last Selected DownClue
;
	CBI_verifyMode	VerifyModeType	; Verification mode
;		Indicates the mode that the game is currently in.  The
;		Board will need to handle user inputs and graphic
;		outputs appropriately. 
;
;;;;;;;;;;;;;;;;;;;;;;;
;INTERNAL INSTANCE DATA
;;;;;;;;;;;;;;;;;;;;;;;
	CBI_drawOptions		DrawOptions
;		Gives the selected optional drawing that should be
;		done.
	CBI_highlightStatus	HighlightStatus
;		Indicates whether the selected word/square is
;		currently being or need to be displayed.
	CBI_lastCell		CellTokenType
;		Tells us the last cell that potentially would need to
;		be replaced when receiving a GT_REPLACE_LAST_CHAR as a
;		recognized gesture type.
	CBI_currModeChar	word
;		The current ModeChar.  This is set with the value
;		returned along with GT_MODE_CHAR or else 0 otherwise.
;		This instance data is crucial for the operation of
;		MSG_CWORD_BOARD_REPLACE_LAST_CHAR.
	CBI_hideNumber		byte
;		This turns on/off the number in the squares.
;

CwordBoardClass		endc



idata	segment

	CwordBoardClass

	method	VisObjectHandlesInkReply, CwordBoardClass, MSG_VIS_QUERY_IF_OBJECT_HANDLES_INK;

idata	ends


















