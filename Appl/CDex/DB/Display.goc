/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1992 -- All Rights Reserved

PROJECT:	GeoDex
MODULE:		Database		
FILE:		dbDisplay.asm -> dosplay.goc

AUTHOR:		Ted H. Kim, March 3, 1992

ROUTINES:
	Name			Description
	----			-----------
	DisplayCurRecord	Top level routine for displaying a record
	DisplayPhoneType	Displays phone number type name
	DisplayPhoneNoField	Displays phone number

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	ted	3/92		Initial revision
	jfh	12/13/04	Port to GOC

DESCRIPTION:
	Contains the routines used in displaying a record in GeoDex.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

@include "cdex.goh"

@extern object LastNameField;
@extern object AddrField;
@extern object NoteText;
@extern object PhoneNoTypeField;
@extern object PhoneNoField;

@extern object ScrollDownTrigger;
@extern object ScrollUpTrigger;


/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		DisplayCurRecord
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

SYNOPSIS:	Displays the contents of current record on screen.

CALLED BY:	UTILITY

PASS:		ds - segment of core block
		si - current record handle

RETURN:		nothing

PSEUDO CODE/STRATEGY:
	Read in index field text string into core block
	Clear all of the text edit fields
	Display all the text strings on screen
	Give focus to index field
	Update the letter tab

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	ted	9/4/89		Initial version
	Don	4/20/95		Optimized to re-draw as little as possible
	jfh	12/13/04	Port to GOC

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/
void DisplayCurRecord(DBItem curRec)
{
 DB_Record		*record, *start;
 char				*string;
 Boolean			showPhoneNum = TRUE;


	if (!curRec) return;

	/*  if we're already on this record ...just clean things up a bit */
	if (curRec != g_curRecord) {
		/* save current record handle */
		g_curRecord = curRec;
		/* copy the contents of index field into 'sortBuffer' */
		GetLastName();
		/* clear the text edit fields */
		ClearTextFields(NUM_TEXT_EDIT_FIELDS + 1, 0);

		/* now display all text strings in text objects */
		g_recStatus = g_recStatus & ~RSF_NEW;
		record = DBLock(g_fileHandle, g_groupHandle, curRec);
		/* display index field text string */
		if (record->DBR_indexSize) {
			/* ptr to index field */
			start = record;
			start++;
			/* clear flag */
			g_recStatus = g_recStatus & ~RSF_SORT_EMPTY;
			@call LastNameField::MSG_VIS_TEXT_REPLACE_ALL_PTR(start, 0);
			}
		/* display address field text string */
		if (record->DBR_addrSize) {
			/* ptr to addr field */
			string = record;
			string += record->DBR_toAddr;
			/* clear flag */
			g_recStatus = g_recStatus & ~RSF_ADDR_EMPTY;
			@call AddrField::MSG_VIS_TEXT_REPLACE_ALL_PTR(string, 0);
			/* XXX orig code selects the text at 0,0 */
			}
		/* display notes if there are any */
		if (record->DBR_notes) {
			/* open up the notes data block */
			string = DBLock(g_fileHandle, g_groupHandle, record->DBR_notes);
			/* XXX should we clear the flag? Orig coed doesn't */
			@call NoteText::MSG_VIS_TEXT_REPLACE_ALL_PTR(string, 0);
			DBUnlock(string);
			/* XXX orig code selects the text at 0,0 */
			}

		if (g_displayStatus != BROWSE_VIEW) {
			/* set focus to index field if card view is up */
			@send LastNameField::MSG_META_GRAB_FOCUS_EXCL();
			}

		/* update the letter tab */
		UpdateLetterButton();
		} /* end of different record if */

	else {  /* no record change - just phone */
		/* we're already displaying this record, so just clean things up.
			Unfortunately, because Ted was a dork, we need to do a lot of
			work to just update the phone field, but that's life. Don */
		ClearTextFieldsSelection();
		record = DBLock(g_fileHandle, g_groupHandle, curRec);
		/* don't show same phone number */
		if (record->DBR_phoneDisp != g_gmb.GMB_curPhoneIndex) {
			/* clear both phone fields */
			ClearTextFields(2, TEFO_PHONE_TYPE);
			}
		else  showPhoneNum = FALSE;
		}  /* end of no rec change else */

	/* display the correct phone number */
	if (showPhoneNum) {
		/* display the correct phone number.  I'm not sure why they didn't want
			to always show the phone type that was displayed when the rec was
			saved even when all 8 phone slots were full... */
		if (record->DBR_noPhoneNo != MAX_PHONE_NO_RECORD) {
			/* if not max, display desired number */
			g_gmb.GMB_curPhoneIndex = record->DBR_phoneDisp;
			}
		else {
			/* otherwise, always show the 2nd entry */
			g_gmb.GMB_curPhoneIndex = 1;
			}
		/* and display the phone number */
		DisplayPhoneNoField(record);
      }

	DBUnlock(record);
	/* set the RSF_EMPTY flag, if record really is empty */
   g_recStatus = g_recStatus & ~RSF_EMPTY;
	if ((g_recStatus & RSF_SORT_EMPTY) && (g_recStatus & RSF_ADDR_EMPTY)
							&& (g_recStatus & RSF_PHONE_NO_EMPTY))
		g_recStatus |= RSF_EMPTY;
	/* clear various phone flags */
	g_phoneFlag = 0;

}

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		DisplayPhoneType 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

SYNOPSIS:	Displays phone number name type field text string.

CALLED BY:	UTILITY

PASS:		ds:gmb.GMB_phoneTypeBlk - phone number type name data block
		ds:curPhoneType - index of type name to display

RETURN:		nothing

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	Ted	12/7/89		Initial version
	witt	1/24/94  	DBCS-ized.
   jfh	12/09/04	Port to GOC

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/
void DisplayPhoneType(void)
{
 PhoneTypeNameItem	*phoneStruct;
 word						start;
 char						*string;


	phoneStruct = DBLock(g_fileHandle, g_groupHandle, g_gmb.GMB_phoneTypeBlk);
	/* the second string in the struct is PTI_HOME (2) so we set our
		starting point accordingly */
	start = phoneStruct->PEI_offsets[g_curPhoneType - 1];
	string = phoneStruct;
	/* display the string */
	@call PhoneNoTypeField::MSG_VIS_TEXT_REPLACE_ALL_PTR(string + start, 0);
	DBUnlock(phoneStruct);

}

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		DisplayPhoneNoField 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

SYNOPSIS:	Displays both phone type name and phone number. 

CALLED BY:	DisplayCurRecord

PASS:		es:di - pointer to beg. of record data
		cl - phone number counter
		bp - record handle of database block
	GOC: DB_Record *record

RETURN:		nothing

PSEUDO CODE/STRATEGY:
	Get the offset to the current phone entry
	Display the phone type name
	Display the phone number

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	Ted	12/7/89		Initial version
	witt	1/21/94  	DBCS-ized
	jfh	12/11/04	Port to GOC

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/
void DisplayPhoneNoField(DB_Record *record)
{
 PhoneEntry		*entryPtr;
 byte				*offset;
 word				i, len;
 char				*string;


   /* set the pone type up down buttons */
	if (record->DBR_noPhoneNo == MAX_PHONE_NO_RECORD) {
		/* don't allow rotating thru blank field */
		if (g_gmb.GMB_curPhoneIndex == MAX_PHONE_NO_RECORD-1) {
			/* we're at the last entry */
			@send ScrollDownTrigger::MSG_GEN_SET_NOT_ENABLED(VUM_NOW);
			@send ScrollUpTrigger::MSG_GEN_SET_ENABLED(VUM_NOW);
			}
		else if (g_gmb.GMB_curPhoneIndex == 1) {
			/* we're at the first entry */
			@send ScrollDownTrigger::MSG_GEN_SET_ENABLED(VUM_NOW);
			@send ScrollUpTrigger::MSG_GEN_SET_NOT_ENABLED(VUM_NOW);
			}
		else {
			/* we're in the middle */
			@send ScrollDownTrigger::MSG_GEN_SET_ENABLED(VUM_NOW);
			@send ScrollUpTrigger::MSG_GEN_SET_ENABLED(VUM_NOW);
			}
		}
	else {
		/* enable both triggers */
		@send ScrollDownTrigger::MSG_GEN_SET_ENABLED(VUM_NOW);
		@send ScrollUpTrigger::MSG_GEN_SET_ENABLED(VUM_NOW);
		}

	/*start: XXX gotta check what the other callers use for input!
		DisplayCurRecord needs only pass in the locked record */
	/*mov	es:[di].DBR_phoneDisp, cl	; save new phone counter
	add	di, es:[di].DBR_toPhone	; di - pointer to phone entries */

	/* Cycle thru to the desired phone entry.  Yes, I know this is clunky
		but pointer math still gets the better of me */
	offset = record;
	/* add the record offset as a byte* to add bytes */
	offset += record->DBR_toPhone;
   /* we set the first entryPtr so we can extract it's info */
	entryPtr = offset;
	for (i = 0; i < g_gmb.GMB_curPhoneIndex; i++) {
		len = entryPtr->PE_length;
		offset += len;
		entryPtr = offset;
		entryPtr++;
      offset = entryPtr;
		}

	/* save the type */
	g_curPhoneType = entryPtr->PE_type;

	/* display the phone type name */
   DisplayPhoneType();

	/* if there's a phone number show it */
	if (entryPtr->PE_length) {
		/* set phone # not emtpy flag */
		g_recStatus = g_recStatus & ~RSF_PHONE_NO_EMPTY;
		/* display the number */
		string = offset + sizeof(PhoneEntry);
		@call PhoneNoField::MSG_VIS_TEXT_REPLACE_ALL_PTR(string, 0);

		}

}


