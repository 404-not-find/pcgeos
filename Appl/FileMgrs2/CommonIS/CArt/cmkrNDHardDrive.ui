/*
 * Moniker generated from PCX/nd4.pcx with pixel 13 masked out
 */
start NDStandardSCMonikerResource, data;
visMoniker NDHardDriveSCMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color4;
	cachedSize = 48, 30;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 390
		Bitmap <48,30,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0xfb, 0x00
	db	0xe9, 0xdd
	db	0xfb, 0x00
	db	0xe9, 0xdd
	db	0xfb, 0x00
	db	0xe9, 0xdd
	db	0xfb, 0x00
	db	0xe9, 0xdd
	db	0xfb, 0x00
	db	0xe9, 0xdd
	db	0xfb, 0x00
	db	0xe9, 0xdd
	db	0x01, 0x00, 0x07, 0xfe, 0xff, 0x00, 0xf0
	db	0xfb, 0xdd, 0x00, 0xd8, 0xf2, 0x88, 0x01, 0xdd, 
		0xdd
	db	0x01, 0x00, 0x1f, 0xfe, 0xff, 0x00, 0xf8
	db	0xfc, 0xdd, 0x01, 0xd8, 0x87, 0xf2, 0x77, 0x01, 
		0x0d, 0xdd
	db	0x01, 0x00, 0x7f, 0xfe, 0xff, 0x00, 0xf8
	db	0xfd, 0xdd, 0x01, 0xd8, 0x87, 0xf2, 0x77, 0x02, 
		0x00, 0x0d, 0xdd
	db	0x00, 0x01, 0xfd, 0xff, 0x00, 0xf8
	db	0xfe, 0xdd, 0x01, 0xd8, 0x87, 0xf2, 0x77, 0x03, 
		0x00, 0x88, 0x0d, 0xdd
	db	0x00, 0x03, 0xfd, 0xff, 0x00, 0xf8
	db	0xfe, 0xdd, 0xf0, 0xff, 0x03, 0x88, 0x88, 0x0d, 
		0xdd
	db	0x00, 0x07, 0xfd, 0xff, 0x00, 0xf8
	db	0x03, 0xdd, 0xdd, 0xdf, 0xf7, 0xf1, 0x77, 0x03, 
		0x88, 0x88, 0x0d, 0xdd
	db	0x00, 0x07, 0xfd, 0xff, 0x00, 0xf8
	db	0x07, 0xdd, 0xdd, 0xdf, 0x77, 0x72, 0x22, 0x7e, 
		0xee, 0xf5, 0x77, 0x03, 0x88, 0x88, 0x0d, 0xdd
	db	0x00, 0x07, 0xfd, 0xff, 0x00, 0xf8
	db	0x08, 0xdd, 0xdd, 0xdf, 0x77, 0x72, 0x22, 0x8e, 
		0xee, 0x87, 0xf6, 0x77, 0x03, 0x88, 0x88, 0x0d, 
		0xdd
	db	0x00, 0x07, 0xfd, 0xff, 0x00, 0xf8
	db	0x09, 0xdd, 0xdd, 0xdf, 0x77, 0x77, 0x88, 0x87, 
		0x88, 0x87, 0x78, 0xf8, 0x88, 0x04, 0x87, 0x88, 
		0x88, 0x0d, 0xdd
	db	0x00, 0x07, 0xfd, 0xff, 0x00, 0xf8
	db	0x02, 0xdd, 0xdd, 0xdf, 0xfb, 0x77, 0x00, 0x7f, 
		0xf8, 0xff, 0x04, 0xf7, 0x88, 0x88, 0x0d, 0xdd
	db	0x00, 0x07, 0xfd, 0xff, 0x00, 0xf8
	db	0x02, 0xdd, 0xdd, 0xdf, 0xfb, 0x77, 0x00, 0x78, 
		0xf8, 0x88, 0x04, 0x87, 0x88, 0x88, 0x0d, 0xdd
	db	0x00, 0x07, 0xfd, 0xff, 0x00, 0xf8
	db	0x02, 0xdd, 0xdd, 0xdf, 0xfb, 0x77, 0x00, 0x7f, 
		0xf8, 0xff, 0x04, 0xf7, 0x88, 0x80, 0x0d, 0xdd
	db	0x00, 0x07, 0xfd, 0xff, 0x00, 0xf8
	db	0x02, 0xdd, 0xdd, 0xdf, 0xf0, 0x77, 0x03, 0x88, 
		0x0f, 0x0d, 0xdd
	db	0x00, 0x07, 0xfd, 0xff, 0x00, 0xf8
	db	0x02, 0xdd, 0xdd, 0xdf, 0xf0, 0x77, 0x03, 0x80, 
		0xf8, 0x0d, 0xdd
	db	0x00, 0x07, 0xfd, 0xff, 0x00, 0xf0
	db	0x02, 0xdd, 0xdd, 0xd8, 0xf0, 0x88, 0x03, 0x0f, 
		0x80, 0xdd, 0xdd
	db	0x00, 0x07, 0xfd, 0xff, 0x00, 0xe0
	db	0x02, 0xdd, 0xdd, 0xdf, 0xf0, 0xff, 0x03, 0x77, 
		0x0d, 0xdd, 0xdd
	db	0x00, 0x07, 0xfd, 0xff, 0x00, 0xc0
	db	0x02, 0xdd, 0xdd, 0xdf, 0xf0, 0x77, 0x00, 0x00, 
		0xfe, 0xdd
	db	0x00, 0x03, 0xfd, 0xff, 0x00, 0x80
	db	0xfe, 0xdd, 0xf0, 0x00, 0x00, 0x0d, 0xfe, 0xdd
	db	0xfb, 0x00
	db	0xe9, 0xdd
	db	0xfb, 0x00
	db	0xe9, 0xdd
	db	0xfb, 0x00
	db	0xe9, 0xdd
	db	0xfb, 0x00
	db	0xe9, 0xdd
	db	0xfb, 0x00
	db	0xe9, 0xdd
	db	0xfb, 0x00
	db	0xe9, 0xdd
		GSEndString
	}
}
end NDStandardSCMonikerResource;
/*
 * Moniker generated from PCX/nd4.pcx with pixel 13 masked out
 */
start NDStandardSMMonikerResource, data;
visMoniker NDHardDriveSMMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 48, 30;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 146
		Bitmap <48,30,BMC_PACKBITS,BMF_MONO>
	db	0xfb, 0x00
	db	0xfb, 0x00
	db	0xfb, 0x00
	db	0xfb, 0x00
	db	0xfb, 0x00
	db	0xfb, 0x00
	db	0x01, 0x00, 0x07, 0xfe, 0xff, 0x00, 0xf0
	db	0x01, 0x00, 0x18, 0xfe, 0x00, 0x00, 0x08
	db	0x01, 0x00, 0x60, 0xfe, 0x00, 0x00, 0x38
	db	0x01, 0x01, 0x80, 0xfe, 0x00, 0x00, 0xf8
	db	0x00, 0x03, 0xfd, 0xff, 0x00, 0xf8
	db	0x00, 0x06, 0xfd, 0x00, 0x00, 0xf8
	db	0x05, 0x04, 0x7f, 0x80, 0x00, 0x00, 0xf8
	db	0x05, 0x04, 0x4c, 0x80, 0x00, 0x00, 0xf8
	db	0x05, 0x04, 0x7f, 0x9f, 0xff, 0xfe, 0xf8
	db	0x00, 0x04, 0xfd, 0x00, 0x00, 0xf8
	db	0x05, 0x04, 0x00, 0x1f, 0xff, 0xfe, 0xf8
	db	0x00, 0x04, 0xfd, 0x00, 0x00, 0xf8
	db	0x00, 0x04, 0xfd, 0x00, 0x00, 0xf8
	db	0x00, 0x04, 0xfd, 0x00, 0x00, 0xf8
	db	0x00, 0x04, 0xfd, 0x00, 0x00, 0xf0
	db	0x00, 0x04, 0xfd, 0x00, 0x00, 0xe0
	db	0x00, 0x07, 0xfd, 0xff, 0x00, 0xc0
	db	0x00, 0x03, 0xfd, 0xff, 0x00, 0x80
	db	0xfb, 0x00
	db	0xfb, 0x00
	db	0xfb, 0x00
	db	0xfb, 0x00
	db	0xfb, 0x00
	db	0xfb, 0x00
		GSEndString
	}
}
end NDStandardSMMonikerResource;
/*
 * Moniker generated from PCX/nd4.pcx with pixel 13 masked out
 */
start NDStandardSCGAMonikerResource, data;
visMoniker NDHardDriveSCGAMoniker = {
	size = tiny;
	style = icon;
	aspectRatio = verySquished;
	color = gray1;
	cachedSize = 48, 14;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 90
		Bitmap <48,14,0,BMF_MONO>
	db	0x00, 0x1f, 0xff, 0xff, 0xff, 0xf0
	db	0x00, 0x60, 0x00, 0x00, 0x00, 0x18
	db	0x01, 0x80, 0x00, 0x00, 0x00, 0x78
	db	0x03, 0xff, 0xff, 0xff, 0xff, 0xf8
	db	0x04, 0x00, 0x00, 0x00, 0x00, 0xf8
	db	0x04, 0x33, 0x1f, 0xff, 0xfe, 0xf8
	db	0x04, 0x00, 0x00, 0x00, 0x00, 0xf8
	db	0x04, 0x00, 0x1f, 0xff, 0xfe, 0xf8
	db	0x04, 0x00, 0x00, 0x00, 0x00, 0xf8
	db	0x04, 0x00, 0x00, 0x00, 0x00, 0xf0
	db	0x04, 0x00, 0x00, 0x00, 0x00, 0xe0
	db	0x07, 0xff, 0xff, 0xff, 0xff, 0xc0
	db	0x03, 0xff, 0xff, 0xff, 0xff, 0x80
	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00
		GSEndString
	}
}
end NDStandardSCGAMonikerResource;
/*
 * Moniker generated from PCX/nd4.pcx with pixel 13 masked out
 */
start NDStandardTMMonikerResource, data;
visMoniker NDHardDriveTMMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 15, 15;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 36
		Bitmap <15,15,0,BMF_MONO>
	db	0x00, 0x00
	db	0x00, 0x00
	db	0x00, 0x00
	db	0x3f, 0xff
	db	0xff, 0xff
	db	0xff, 0xff
	db	0x80, 0x07
	db	0xb0, 0x07
	db	0x87, 0xf7
	db	0x80, 0x07
	db	0x80, 0x07
	db	0xff, 0xff
	db	0x7f, 0xfc
	db	0x00, 0x00
	db	0x00, 0x00
		GSEndString
	}
}
end NDStandardTMMonikerResource;
/*
 * Moniker generated from PCX/nd4.pcx with pixel 13 masked out
 */
start NDStandardTCGAMonikerResource, data;
visMoniker NDHardDriveTCGAMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = verySquished;
	color = gray1;
	cachedSize = 15, 10;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 26
		Bitmap <15,10,0,BMF_MONO>
	db	0x00, 0x00
	db	0x3f, 0xfc
	db	0x7f, 0xfc
	db	0x40, 0x0c
	db	0x58, 0x0c
	db	0x43, 0xec
	db	0x40, 0x0c
	db	0x7f, 0xfc
	db	0x3f, 0xf8
	db	0x00, 0x00
		GSEndString
	}
}
end NDStandardTCGAMonikerResource;
