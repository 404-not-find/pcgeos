COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1990 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		Graphical Setup -- Constants
FILE:		setupConstant.def

AUTHOR:		Adam de Boor, Oct  4, 1990

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	Adam	10/ 4/90	Initial revision


DESCRIPTION:
	Constants for graphical setup.
		
	$Id: setupConstant.def,v 1.3 98/06/17 21:27:08 gene Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

idata	segment

;
; class record for SetupClass' master class
;
FileManagerClass

; Define methods for process class that live in other modules
method FMDupAndAdd, FileManagerClass, MSG_FM_DUP_AND_ADD

idata	ends


include	prefConstant.def

CORNER_POLY_W			=	16
CORNER_POLY_H			=	CORNER_POLY_W
CORNER_POLY_THICKNESS		=	CORNER_POLY_W/4

LINE_SPACE_Y			=	13
LINE_SPACE_Y_LOW_RES		=	12

;corner polygon coordinates numbered clockwise starting from top left corner
;
; eg.
;
;	1---------------2
;	|		|
;	|		|
;	|         4-----3
;	|     7
;	|     |
;	|     |
;	|     |         5
;	9-----8      6

CornerPolyStruct	struct
	CPS_1	Point	<0,0>
	CPS_2	Point	<0,0>
	CPS_3	Point	<0,0>
	CPS_4	Point	<0,0>
	CPS_5	Point	<0,0>
	CPS_6	Point	<0,0>
	CPS_7	Point	<0,0>
	CPS_8	Point	<0,0>
	CPS_9	Point	<0,0>
CornerPolyStruct	ends

SETUP_LOW_RES_POINT_SIZE	=	9
SETUP_HIGH_RES_POINT_SIZE	=	14
;------------------------------------------------------------------------------
;			   SetupScreenClass
;------------------------------------------------------------------------------

SetupScreenClass	class	GenInteractionClass

MSG_SETUP_SCREEN_CHANGE_START		message
; Sent whenever a new screen is being brought to the front for the user to
; interact with.

MSG_SETUP_SCREEN_CHANGE_IN_PROGRESS		message
; Indicate first UI queue flush has occured since CHANGE_START.  Initiates
; one more flush in sending CHANGE_END.

MSG_SETUP_SCREEN_CHANGE_END			message
; Sent when the new screen has completed coming forward, has been drawn, &
; the UI queue has been flushed

MSG_SETUP_SCREEN_REAL_INITIATE_INTERACTION	message
; Actually bring up the new screen  (Delayed to give ui a chance to change
; ptr image to busy)

MSG_SETUP_SCREEN_DISMISS	message
; Send a MSG_GEN_GUP_INTERACTION_COMMAND with IC_Dismiss to the
; superclass

SSI_initiateAction	ActionDescriptor
    ; Action to perform when summons receives a MSG_GEN_INITIATE_INTERACTION.
    ; Typically, this will perform any additional setup required for the
    ; proper display of the screen.
    
SSI_enterAction		ActionDescriptor
    ; What to do when the ENTER key is pressed.
    
SSI_escapeAction	ActionDescriptor
    ; What to do when the ESC key is pressed.
    
SSI_f10Action		ActionDescriptor
    ; What to do if F10 is pressed.
    
ifdef	GPC_VERSION
SSI_yesAction		ActionDescriptor
    ; What to do when the 'Y' key is pressed.
endif	; GPC_VERSION

SSI_extraDrawAction	fptr.far
    ; Routine to call if extra stuff must be done when the summons receives
    ; a MSG_VIS_DRAW. 0 if nothing extra need be done.
    
SSInstructions	record
    SSI_ENTER_TO_CONTINUE:1,	; Set if should tell user to hit ENTER to
				;  continue.
ifdef	GPC_VERSION
    SSI_Y_TO_CONTINUE:1,	; Set if should tell user to hit 'Y' to
				;  continue.
endif	; GPC_VERSION
    SSI_ESC_TO_RETURN_TO_PREV:1,; Set if should tell user to hit ESC to return
				;  to the previous screen.
    SSI_F10_TO_CHANGE_VIDEO:1,	; Set if should tell user to hit F10 to change
				;  the video driver.
    SSI_F10_TO_REVERT_VIDEO:1,	; Set if should tell user to hit F10 to revert
				;  to his/her previous video driver.
    SSI_F10_TO_CHANGE_MOUSE:1,	; Set if should tell user to hit F10 to change
				;  the mouse driver.
    SSI_F10_TO_CHANGE_PRINTER:1,; Set if should tell user to hit F10 to change
				;  the printer driver.
    SSI_ESC_TO_ENTER_LATER:1,	; Set if should tell user to hit ESC to enter
				;  serial number later.
    SSI_F3_TO_EXIT_TO_DOS:1	; Set if should tell user to hit F3 to exit
				;  to DOS
ifdef	GPC_VERSION
    :7
endif	; GPC_VERSION
SSInstructions	end

SSI_instructions	SSInstructions
    ; What instruction strings to place in a box at the bottom of the screen.

SSFlags	record
    SSF_CHANGING_SCREENS:1
    ; Set if we're in the process of switching between two different setup
    ; screens.  When set, ENTER & ESC keys are ignored, so that the user
    ; doesn't accidentally zip through a bunch of screens without intending
    ; to.  The mouse is set to the BUSY cursor as well, to give a little
    ; feedback.  This bit is set on MSG_GEN_INITIATE_INTERACTION & cleared
    ; once the app & ui queue's have been flushed (the screen should have 
    ; finished drawing by then) -- doug

    SSF_ON_SCREEN:1
    ; Set if the screen has received an INITIATE_INTERACTION and is currently
    ; open and on-screen. This allows us to track the number of screens that
    ; are up and avoid taking down the last one no matter how many times
    ; the user presses the Esc key.

    :6

SSFlags	end

SSI_flags		SSFlags
    ; Flags for SetupScreenClass


SetupScreenClass	endc

;------------------------------------------------------------------------------
;			    Process Class
;------------------------------------------------------------------------------


SetupClass	class	FileManagerClass

;
;			Method Definitions
;

global	SetupDrawCornerArrows:far	; define for screen object

MSG_SETUP_SHOW_COLOR_SCREEN_IF_APPROPRIATE message
;	If the current video driver is not monochrome, put up the ColorScreen,
;	else consider video test complete.

MSG_SETUP_VIDEO_TEST_COMPLETE 	message
;	Acknowledge the completion of all video test screens, advancing to
;	the mouse selection screen if not in MODE_AFTER_PM_VIDEO_CHANGE

MSG_SETUP_REVERT_VIDEO		message
;	User hit F10 at the video test screen where he/she can revert to the
;	previous video driver. Do so and restart GEOS.
;

MSG_SETUP_VIDEO_SELECTED		message
;	Acknowledge the selection of the video driver and put up restart
;	screen. Should probably load the selected video driver and see if
;	it can tell us the device is definitely *not* around so we can bitch.

MSG_SETUP_RESTART_FOR_VIDEO		message
;	Restart GEOS after taking measures to preserve the current (working)
;	video driver settings, then installing the new video driver settings.

;------------------------------------------------------------------------------

MSG_SETUP_MOUSE_SELECTED		message
;	The user has chosen a mouse driver from the list and wishes to go
;	to the next screen, whatever that screen may be.
;

MSG_SETUP_SET_MOUSE_PORT		message
;	PASS:	cx	= SerialPortNum for selected port
;
;	Method sent by the MouseSerialPortList when one of its entries is
;	selected.
;

MSG_SETUP_MOUSE_PORT_SELECTED	message
;	The user has chosen the COM port the mouse is on; go to the
;	interrupt screen or the mouse test screen, as appropriate.
;

MSG_SETUP_MOUSE_INT_SELECTED		message
;	The user has chosen the interrupt level the mouse is on; go to the
;	test screen.
;

MSG_SETUP_MOUSE_TEST_ON_SCREEN	message
;	Do what's needed to bring up the MouseTestScreen.
;

MSG_SETUP_LOAD_MOUSE_DRIVER		message
;	Attempt to load the mouse driver indicated in the .ini file.
;

MSG_SETUP_MOUSE_TEST			message
;	User clicked the mouse test trigger, so react to it.
;

MSG_SETUP_MOUSE_TEST_COMPLETE	message
;	The mouse has tested ok, so either advance to printer selection, or
;	to the DoneScreen, if in MODE_AFTER_PM_MOUSE_CHANGE
;

;------------------------------------------------------------------------------

MSG_SETUP_PRINTER_SELECTED		message
;	Acknowledge the selection of a printer by the user.
;

MSG_SETUP_PRINTER_PORT_SELECTED	message
;	Sent when the printer port is chosen, to allow an interrupt-request
;	screen to be put up, if necessary. If no interrupt level is needed,
;	bring up the printer-test screen.
;

MSG_SETUP_SET_PRINTER_PORT		message
;	PASS:	cx	= offset of pascal-format string (count at the start)
;			  giving name for the chosen port.
;	RETURN: nothing
;
;	Sent out by PrinterPortList to tell us the name of the port chosen...
;

MSG_SETUP_PRINTER_INT_SELECTED	message
;	Sent when the interrupt level for the previously-unknown COM port,
;	into which the printer has been plugged, has been set by the user.
;

MSG_SETUP_START_PRINTER_TEST		message
;	Start printing the test page.
;

MSG_SETUP_TEST_PRINTER		message
;	Sent by the SpoolPrintControl to get us to perform the actual printing
;	of the test page.
;

MSG_SETUP_PRINTER_TEST_COMPLETE	message
;	Printer test/installation is finished. User wishes to advance to
;	the next screen, thanks.

PrinterTestState	record
    PTS_TESTED:1,		; non-zero if printer was actually tested.
    PTS_INSTALLED:1,		; non-zero if the printer data have been
				;  installed in the ini file.
    PTS_VERIFY_FAILED:1,	; non-zero if we've tried to verify the port
    				;  and failed.
    PTS_INSTALL_ANYWAY:1,	; non-zero if user wants to install the
				;  printer anyway, even though the port
				;  verify failed miserably.
PrinterTestState	end

PortVerifyResult	etype	word
    PVR_OK		enum	PortVerifyResult
    PVR_BAD_IGNORE	enum	PortVerifyResult
    PVR_BAD		enum	PortVerifyResult
;------------------------------------------------------------------------------

MSG_SETUP_SERIAL_NUMBER_ENTERED		message
;	User entered serial number.
;

MSG_SETUP_SERIAL_NUMBER_ENTER_LATER	message
;	User wants to enter serial number later.
;

MSG_SETUP_SERIAL_NUMBER_COMPLETE	message
;	User acknowledges that he entered good serial number.
;

;------------------------------------------------------------------------------

MSG_SETUP_DOCUMENT_UPGRADE_COMPLETE	message
;	All documents have been upgraded, or user has chosen not
;	to upgrade.
;

MSG_SETUP_UPGRADE_ALL_DOCUMENTS		message
;	User has selected to upgrade all documents.
;

;------------------------------------------------------------------------------

MSG_SETUP_REENTER_GEOS		message
;	Setup complete -- go on to normal GEOS operation.
;

MSG_SETUP_GENERATE_SYS_INFO		message
;	Generate the sysinfo file
;

;------------------------------------------------------------------------------
MSG_SETUP_UI_CHECK_RESTART		message
;	See if we need to restart for a change in the user interface

MSG_SETUP_UI_RESTART_FOR_UI		message
;	Bring up screen to restart for a new SPUI

SetupDisplayType	etype	word, 0, 2
SDT_COLOR		enum	SetupDisplayType
SDT_BW			enum	SetupDisplayType
SDT_CGA			enum	SetupDisplayType

SetupUICombo	etype byte
SUIC_MOTIF		enum SetupUICombo
SUIC_NEWUI		enum SetupUICombo
SUIC_NEWUI_CUI		enum SetupUICombo

;------------------------------------------------------------------------------
;			Instance Data Definitions
;------------------------------------------------------------------------------

SetupClass	endc

;------------------------------------------------------------------------------
;			SetupSPUISampleClass
;------------------------------------------------------------------------------
SetupSPUISampleClass	class	GenGadgetClass
SetupSPUISampleClass	endc

;------------------------------------------------------------------------------
;			SetupColorBoxClass
;------------------------------------------------------------------------------

SetupColorBoxClass	class	GenGadgetClass, master
SCBI_boxWidth		word		; Width of a single box
SCBI_boxHeight		word		; Height of a single box
SCBI_isGradient		byte		; TRUE: if gradient fill
SetupColorBoxClass	endc

;------------------------------------------------------------------------------
;			SetupDeviceListClass
;------------------------------------------------------------------------------
SetupDeviceListClass	class	PrefTocListClass

SDL_NUM_LOWRES_KIDS	equ	3		; display only 3 things at
						;  once on a lowres display.
SDL_NUM_HIGHRES_KIDS	equ	9		; display 9 things at once on
						;  a high-res display.

SetupDeviceListClass	endc

global MouseSpecialDevice:chunk
global PrinterSpecialDevice:chunk

;------------------------------------------------------------------------------
;			SetupTextDisplayClass
;------------------------------------------------------------------------------

SetupTextDisplayClass	class	GenTextClass

if PZ_PCGEOS

STD_LOW_RES_POINTSIZE	equ	12
STD_LOW_RES_CHAR_ATTR	equ	VisTextDefaultCharAttr <
			0, 0, 0,	; underline, bold, italic
			C_BLACK,		; color
			VTDS_12,		; size
			VTDF_PIZZA_KANJI	; font
		>

STD_REGULAR_POINTSIZE	equ	16
STD_REGULAR_CHAR_ATTR	equ	VisTextDefaultCharAttr <
			0, 0, 0,		; underline, bold, italic
			C_BLACK,		; color
			VTDS_16,		; size
			VTDF_BERKELEY		; font
		>

else

STD_LOW_RES_POINTSIZE	equ	9
STD_LOW_RES_CHAR_ATTR	equ	VisTextDefaultCharAttr <
			0, 0, 0,	; underline, bold, italic
			C_BLACK,		; color
			VTDS_9,		; size
			VTDF_BERKELEY	; font
		>

STD_REGULAR_POINTSIZE	equ	10
STD_REGULAR_CHAR_ATTR	equ	VisTextDefaultCharAttr <
			0, 0, 0,	; underline, bold, italic
			C_BLACK,		; color
			VTDS_10,	; size
			VTDF_BERKELEY	; font
		>

STD_HIGH_RES_POINTSIZE	equ	14
STD_HIGH_RES_CHAR_ATTR	equ	VisTextDefaultCharAttr <
			0, 0, 0,	; underline, bold, italic
			C_BLACK,		; color
			VTDS_14,	; size
			VTDF_BERKELEY	; font
		>

endif

STD_PLAIN_STYLE		equ	1	; E_id field for plain styles
STD_FRILLY_STYLE	equ	2	; E_id field for non-plain styles

MSG_STD_REPLACE_PARAM	message
;	PASS:	cx:dx	= fptr to null-terminated string to insert
;	RETURN:	nothing
;
;	Replaces all instances of \x01 in the text object with the passed
;	null-terminated string.
;

;----------------------------------------------------------------------
;	VARIABLE DATA
;----------------------------------------------------------------------

ATTR_SETUP_TEXT_DEFAULT_PARAM	vardata	optr
; default value for the parameter to be used to replace \x01 in the
; text, if the .INI file doesn't contain anything useful.

SetupTextDisplayClass	endc

SetupUIListClass	class	PrefDynamicListClass

MSG_SETUP_UI_LIST_SELECTED			message

SetupUIListClass	endc

;------------------------------------------------------------------------------
;			Fatal Errors
;------------------------------------------------------------------------------

BAD_DS                  				enum    FatalErrors
BAD_ES                  				enum    FatalErrors
MOUSE_DRIVER_NAME_MISSING				enum	FatalErrors
INVALID_FM_PARENT              				enum    FatalErrors

