/***************************************************************************
 *  FILE:  GUARDS.GOC
 ***************************************************************************/

/*-------------------------------------------------------------------------
 | Project:  GeoCon 3.0
 |           Copyright (c) 1997 Breadbox Computer Company
 *-----------------------------------------------------------------------*/

@include <stdapp.goh>
@include "source\geocon.goh"
@include "source\iniguard.goh"
@include "source\startlst.goh"
@include "source\tokenlst.goh"

/***************************************************************************
 *		External UI objects
 ***************************************************************************/

@extern object GotoGeoManager ;
@extern object RunningApplications;
@extern object DeskAccessories;
@extern object WorldApplications;
@extern object WorldSubdirs;
@extern object ControlPanel;
@extern object RunningDOSApps;
@extern object Utilities;
@extern object ExitToDOS ;
@extern object RunningAppsSubmenu;
@extern object WorldAppsSubmenu;
@extern object OtherSubmenu ;
@extern object BypassNewOpenDialog;
@extern object AddOpenToFileMenu;
@extern object AutoResetAfterCrash;
@extern object ConfirmShutdown;
@extern object RebootOnCtrlAltDel;
@extern object ClickSounds;
@extern object EnableHelpEditor;
@extern object DeskAccessoriesOnTop;
@extern object LeftHandedMouse;
@extern object DisableBDrive ;
@extern object SystemList2 ;
@extern object MaxWindows;
@extern object RemoveMinMax;
@extern object OneClickClose;
@extern object PinnableMenus;
@extern object DisableHelpButtons;
@extern object KeyboardAccelKeys;
@extern object BlinkingCursor;
@extern object FloatingKeyboard ;
@extern object ScrollRepeatRate;
@extern object ScrollBarWidth;
@extern object FileManagerSizeFont ;
@extern object ColorChoices ;
@extern object StartupList ;
@extern object DOSList ;

/***************************************************************************
 *		Guard Objects
 ***************************************************************************/


/*=========================================================================*/

@start Guards ;
    /*---------------------------------------------------------------------*/
    /* Commonly used chunk strings */
    @chunk char uiFeatures[] = "uiFeatures" ;
    @chunk char expressOptions[] = "expressOptions" ;
    @chunk char expressMenuControl[] = "expressMenuControl" ;
    @chunk char windowOptions[] = "windowOptions" ;
    @chunk char motifOptions[] = "motif options" ;
    @chunk char docControlOptions[] = "docControlOptions" ;
    @chunk char ui[] = "ui" ;
    @chunk char input[] = "input" ;
    /*---------------------------------------------------------------------*/
@ifdef EXPRESS_MENU_OPTIONS
    /* Express list 1 */
    @defINIGuard(Guard1, uiFeatures, expressOptions, GotoGeoManager,
                 IG_TYPE_BITWISE, 2048, 2048, 2048, 0, TRUE) ;
    @defINIGuard(Guard2, uiFeatures, expressOptions, RunningApplications,
                 IG_TYPE_BITWISE, 1024, 1024, 1024, 0, TRUE) ;
    @defINIGuard(Guard3, uiFeatures, expressOptions, DeskAccessories,
                 IG_TYPE_BITWISE, 512, 512, 512, 0, TRUE) ;
    @defINIGuard(Guard4, uiFeatures, expressOptions, WorldApplications,
                 IG_TYPE_BITWISE, 256, 256, 256, 0, TRUE) ;
    @defINIGuard(Guard5, uiFeatures, expressOptions, WorldSubdirs,
                 IG_TYPE_BITWISE, 128, 128, 128, 0, TRUE) ;
    @defINIGuard(Guard6, uiFeatures, expressOptions, ControlPanel,
                 IG_TYPE_BITWISE, 64, 64, 64, 0, TRUE) ;
    @defINIGuard(Guard7, uiFeatures, expressOptions, RunningDOSApps,
					  IG_TYPE_BITWISE, 32, 0, 32, 0, TRUE) ;
    @defINIGuard(Guard8, uiFeatures, expressOptions, Utilities,
					  IG_TYPE_BITWISE, 16, 0, 16, 0, TRUE) ;
    @defINIGuard(Guard9, uiFeatures, expressOptions, ExitToDOS,
                 IG_TYPE_BITWISE, 8, 8, 8, 0, TRUE) ;
    /*---------------------------------------------------------------------*/
    /* Express list 2 */
    @defINIGuard(Guard10, expressMenuControl, "runningAppSubMenu",
                 RunningAppsSubmenu,
                 IG_TYPE_BOOLEAN, 0xFFFF, TRUE, TRUE, FALSE, TRUE) ;
    @defINIGuard(Guard11, expressMenuControl, "runSubMenu", WorldAppsSubmenu,
                 IG_TYPE_BOOLEAN, 0xFFFF, TRUE, TRUE, FALSE, TRUE) ;
    @defINIGuard(Guard12, expressMenuControl, "otherAppSubMenu", OtherSubmenu,
                 IG_TYPE_BOOLEAN, 0xFFFF, FALSE, TRUE, FALSE, TRUE) ;
@endif
    /*---------------------------------------------------------------------*/
    /* UI Interface list 1 */
    @defINIGuard(Guard13, uiFeatures, windowOptions, MaxWindows,
                 IG_TYPE_BITWISE, 0x4040, 0, 0x4040, 0, TRUE) ;
    @defINIGuard(Guard14, uiFeatures, windowOptions, RemoveMinMax,
                 IG_TYPE_BITWISE, 0x1000, 0, 0x1000, 0, TRUE) ;
@ifdef ENSEMBLE_BUILD
    @defINIGuard(Guard15, uiFeatures, windowOptions, OneClickClose,
                 IG_TYPE_BITWISE, 2048, 0, 2048, 0, TRUE) ;
@endif
@ifdef NEWDEAL98_BUILD
    @defINIGuard(Guard15, uiFeatures, windowOptions, OneClickClose,
                 IG_TYPE_BITWISE, 2048, 2048, 2048, 0, TRUE) ;
@endif
    @defINIGuard(Guard16, uiFeatures, windowOptions, PinnableMenus,
                 IG_TYPE_BITWISE, 0x404, 0, 0x400, 0, TRUE) ;
    @defINIGuard(Guard17, uiFeatures, "helpOptions", DisableHelpButtons,
                 IG_TYPE_BITWISE, 1, 0, 1, 0, TRUE) ;
    @defINIGuard(Guard18, uiFeatures, windowOptions, KeyboardAccelKeys,
                 IG_TYPE_BITWISE, 0x202, 0, 0x200, 0, TRUE) ;
    @defINIGuard(Guard19, ui, "kbdAcceleratorMode", KeyboardAccelKeys,
                 IG_TYPE_BOOLEAN, 0xFFFF, FALSE, FALSE, TRUE, TRUE) ;
    @defINIGuard(Guard20, input, "blinkingCursor", BlinkingCursor,
                 IG_TYPE_BOOLEAN, 0xFFFF, TRUE, TRUE, FALSE, TRUE) ;
/*    @defINIGuard(Guard21, expressMenuControl, "floatingKeyboard",
                 FloatingKeyboard,
                 IG_TYPE_BOOLEAN, 0xFFFF, FALSE, TRUE, FALSE, TRUE) ;
	 @defINIGuard(Guard22, input, "noKeyboard", FloatingKeyboard,
					  IG_TYPE_BOOLEAN, 0xFFFF, FALSE, TRUE, FALSE, TRUE) ;
    /*---------------------------------------------------------------------*/
    /* UI Interface list 2: */
    @defINIGuard(Guard23, motifOptions, "gadgetRepeatDelay", ScrollRepeatRate,
                 IG_TYPE_CHOICE, 0xFFFF, 18, 0, 0, TRUE) ;
    @defINIGuard(Guard24, motifOptions, "scrollArrowSize", ScrollBarWidth,
                 IG_TYPE_CHOICE, 0xFFFF, 12, 0, 0, TRUE) ;
    @defINIGuard(Guard25, "fileManager", "fontSize", FileManagerSizeFont,
                 IG_TYPE_CHOICE, 0xFFFF, 10, 0, 0, TRUE) ;
    /*---------------------------------------------------------------------*/
    /* System interface list 1: */
    @defINIGuard(Guard26, uiFeatures, docControlOptions, BypassNewOpenDialog,
                 IG_TYPE_BITWISE, 32768, 0, 32768, 0, TRUE) ;
@ifdef ENSEMBLE_BUILD
    @defINIGuard(Guard27, uiFeatures, docControlOptions, AddOpenToFileMenu,
                 IG_TYPE_BITWISE, 8192, 0, 8192, 0, TRUE) ;
@endif
@ifdef NEWDEAL98_BUILD
    @defINIGuard(Guard27, uiFeatures, docControlOptions, AddOpenToFileMenu,
                 IG_TYPE_BITWISE, 8192, 8192, 8192, 0, TRUE) ;
@endif
    @defINIGuard(Guard28, ui, "deleteStateFilesAfterCrash", AutoResetAfterCrash,
                 IG_TYPE_BOOLEAN, 0xFFFF, FALSE, TRUE, FALSE, FALSE) ;
    @defINIGuard(Guard29, ui, "doNotDisplayResetBox", AutoResetAfterCrash,
                 IG_TYPE_BOOLEAN, 0xFFFF, FALSE, TRUE, FALSE, FALSE) ;
    @defINIGuard(Guard30, ui, "confirmShutDown", ConfirmShutdown,
                 IG_TYPE_BOOLEAN, 0xFFFF, TRUE, TRUE, FALSE, TRUE) ;
    @defINIGuard(Guard31, input, "rebootOnReset", RebootOnCtrlAltDel,
                 IG_TYPE_BOOLEAN, 0xFFFF, FALSE, TRUE, FALSE, TRUE) ;
    @defINIGuard(Guard32, motifOptions, "clickSounds", ClickSounds,
                 IG_TYPE_BOOLEAN, 0xFFFF, FALSE, TRUE, FALSE, TRUE) ;
    @defINIGuardDel(Guard33, "configure", "helpEditor", EnableHelpEditor,
                 IG_TYPE_BOOLEAN, 0xFFFF, FALSE, TRUE, FALSE, TRUE) ;
/*
    @defINIGuard(Guard41, "write   ", "features", EnableHelpEditor,
                 IG_TYPE_BITWISE, 0x0008, 0, 0x0008, 0, TRUE) ;
*/

    @defINIGuard(Guard34, uiFeatures, "launchOptions", DeskAccessoriesOnTop,
                 IG_TYPE_BITWISE, 32768, 32768, 32768, 0, TRUE) ;
    @defINIGuard(Guard35, input, "leftHanded", LeftHandedMouse,
                 IG_TYPE_BOOLEAN, 0xFFFF, FALSE, TRUE, FALSE, TRUE) ;
 /*   @defINIGuardDel(Guard36, "system", "drive b", DisableBDrive,
					  IG_TYPE_BITWISE, 1, 0, 0, 1, TRUE) ;  */
	 /* Since BBX Ensemble starts with drive b = 0 then we need to change
     * the default value from 0 to 1.  1/31/02 - jfh */
	 @defINIGuardDel(Guard36, "system", "drive b", DisableBDrive,
                 IG_TYPE_BITWISE, 1, 1, 0, 1, TRUE) ;
	 /*---------------------------------------------------------------------*/
    /* System interface list 2: */
    @defINIGuard(Guard37, uiFeatures, "launchModel", SystemList2,
                 IG_TYPE_CHOICE, 0xFFFF, -1, 0, -1, TRUE) ;
    /*---------------------------------------------------------------------*/
    /* Colors panel items: */
@ifdef ENSEMBLE_BUILD
    @defINIGuard(Guard38, motifOptions, "activetitlebarcolor", ColorChoices,
                 IG_TYPE_COLOR, 0xFFFF, 8, 0, 0, TRUE) ;
    @defINIGuard(Guard39, motifOptions, "darkColor", ColorChoices,
                 IG_TYPE_COLOR, 0xFFFF, 8, 1, 0, TRUE) ;
@endif
@ifdef NEWDEAL98_BUILD
    @defINIGuard(Guard38, motifOptions, "activetitlebarcolor", ColorChoices,
                 IG_TYPE_COLOR, 0xFFFF, 3, 0, 0, TRUE) ;
    @defINIGuard(Guard39, motifOptions, "darkColor", ColorChoices,
                 IG_TYPE_COLOR, 0xFFFF, 3, 1, 0, TRUE) ;
@endif
    @defINIGuard(Guard40, motifOptions, "lightColor", ColorChoices,
                 IG_TYPE_COLOR, 0xFFFF, 7, 2, 0, TRUE) ;
    /*---------------------------------------------------------------------*/
    @object INIStartupListClass GuardStartupList = {
        IG_category = "ui" ;
        IG_key = "execOnStartup" ;
        IG_uiObject = StartupList ;
    }
    /*---------------------------------------------------------------------*/
    @object INITokenListClass GuardTokenList = {
        IG_category = "fileManager" ;
        IG_key = "filenameTokens" ;
        IG_uiObject = DOSList ;
        IG_requireReboot = TRUE ;
    }
    /*---------------------------------------------------------------------*/
@end Guards

/*=========================================================================*/

static optr G_guards[] = {
@ifdef EXPRESS_MENU_OPTIONS
    @Guard1,
    @Guard2,
    @Guard3,
    @Guard4,
    @Guard5,
    @Guard6,
    @Guard7,
    @Guard8,
    @Guard9,
    @Guard10,
    @Guard11,
    @Guard12,
@endif
    @Guard13,
    @Guard14,
    @Guard15,
    @Guard16,
    @Guard17,
    @Guard18,
    @Guard19,
    @Guard20,
//    @Guard21,
//    @Guard22,
    @Guard23,
    @Guard24,
    @Guard25,
    @Guard26,
    @Guard27,
    @Guard28,
    @Guard29,
    @Guard30,
    @Guard31,
    @Guard32,
    @Guard33,
    @Guard34,
    @Guard35,
    @Guard36,
    @Guard37,
    @Guard38,
    @Guard39,
    @Guard40,
    @GuardStartupList,
    @GuardTokenList
} ;

#define NUM_GUARD_OBJECTS (sizeof(G_guards)/sizeof(G_guards[0]))

void LoadGuards(void)
{
    word i;

    for (i=0; i<NUM_GUARD_OBJECTS; i++)
        @call G_guards[i]::MSG_INI_GUARDIAN_LOAD() ;
}

void SaveGuards(void)
{
    word i;

    for (i=0; i<NUM_GUARD_OBJECTS; i++)
        @call G_guards[i]::MSG_INI_GUARDIAN_SAVE() ;
}

void RevertGuards(void)
{
    word i;

    for (i=0; i<NUM_GUARD_OBJECTS; i++)
        @call G_guards[i]::MSG_INI_GUARDIAN_REVERT() ;
}

void UseDefaultValueGuards(void)
{
    word i;

    for (i=0; i<NUM_GUARD_OBJECTS; i++)
        @call G_guards[i]::MSG_INI_GUARDIAN_USE_DEFAULT() ;
}

Boolean CheckIfChangedGuards(Boolean *p_rebootNecessary)
{
    word i;
    Boolean anyChanged = FALSE ;

    *p_rebootNecessary = FALSE ;

    /* Return TRUE if we find a single object changed */
    for (i=0; i<NUM_GUARD_OBJECTS; i++)
        if ((@call G_guards[i]::MSG_INI_GUARDIAN_CHECK_IF_CHANGED()) == TRUE)  {
            anyChanged = TRUE ;

            /* See if a reboot is necessary */
            if (@call G_guards[i]::MSG_INI_GUARDIAN_CHECK_IF_REQUIRE_REBOOT())
                *p_rebootNecessary = TRUE ;
        }

    return anyChanged ;
}

/*-------------------------------------------------------------------------
 | Routine:  CloseGuards
 *-------------------------------------------------------------------------
 |
 | Description:
 |    Tells all the guardians to close out any open information or memory.
 |
 | Revision History:
 |    Who  Date:     Comments:
 |    ---  --------  ---------
 |    LES  08/18/97  Created
 |
 *-----------------------------------------------------------------------*/

void CloseGuards(void)
{
    word i;

    /* Send close to all guardians */
    for (i=0; i<NUM_GUARD_OBJECTS; i++)
        @call G_guards[i]::MSG_INI_GUARDIAN_CLOSE() ;
}

/***************************************************************************
 *  END OF FILE:  GUARDS.GOC
 ***************************************************************************/

