/***************************************************************************
 *  FILE:  MAIN.GOC
 ***************************************************************************/

/*-------------------------------------------------------------------------
 | Project:  GeoCon 3.0
 |           Copyright (c) 1997 Breadbox Computer Company
 *-----------------------------------------------------------------------*/

@include <stdapp.goh>
@include <Objects\colorc.goh>
#include <initfile.h>
@include "source/geocon.goh"
@include "source/guards.goh"

@extern object GeoConApp ;
@extern object UIGroup ;
@extern object ColorChoices ;
@extern object ColorPanel ;
@extern object ColorSelector ;
@extern object ColorView ;
@extern object ExpressPanel ;
@extern object DOSPanel ;
@extern object UIPanel ;
@extern object SystemPanel ;
@extern object StartupPanel ;
@extern object ButtonItemGroup ;
@extern chunk DialogTextAskSave ;
@extern chunk DialogTextReboot ;
@extern object DOSList ;

void Draw3dRect(
         GStateHandle gstate,
         word fillColor,
         word lineColor,
         word x1,
         word y1,
         word x2,
         word y2) ;

/*=========================================================================*
 *  METHODS FOR CLASS:  GenConProcessClass
 *=========================================================================*/

    @classdecl GeoConProcessClass, neverSaved ;

/*-------------------------------------------------------------------------
 | Method: GenConProcessClass::MSG_GEN_PROCESS_OPEN_APPLICATION
 *-------------------------------------------------------------------------
 |
 | Description:
 |    Startup by selling the first UI panel.
 |
 | Inputs:
 |    AppAttachFlags attachFlags  -- Flags telling how is being opened
 |    MemHandle launchBlock       -- Launch information
 |    MemHandle extraState        -- State information
 |
 | Revision History:
 |    Who  Date:     Comments:
 |    ---  --------  ---------
 |    LES  08/14/97  Created
 |
 *-----------------------------------------------------------------------*/

@method GeoConProcessClass, MSG_GEN_PROCESS_OPEN_APPLICATION
{
    @send ButtonItemGroup::MSG_GEN_ITEM_GROUP_SET_SINGLE_SELECTION(
                      COLOR,
                      FALSE) ;

    @callsuper() ;

    /* Startup all the guards */
    LoadGuards() ;

    /* Turn on the color selector. */
    @send ColorSelector::MSG_GEN_SET_ENABLED(VUM_NOW);
    @call ColorChoices::MSG_GEN_ITEM_GROUP_SEND_STATUS_MSG(TRUE) ;
    @send oself::MSG_GEOCON_PROCESS_SELECT_PANEL(COLOR, 1, 0) ;
}

/*-------------------------------------------------------------------------
 | Method: GenConProcessClass::MSG_GEN_PROCESS_CLOSE_APPLICATION
 *-------------------------------------------------------------------------
 |
 | Description:
 |    End the application and save the changes.
 |
 | Outputs:
 |    MemHandle                   -- Status block
 |
 | Revision History:
 |    Who  Date:     Comments:
 |    ---  --------  ---------
 |    LES  08/14/97  Created
 |
 *-----------------------------------------------------------------------*/

@method GeoConProcessClass, MSG_GEN_PROCESS_CLOSE_APPLICATION
{
    /* No matter how we close the app, tell them to get */
    /* rid any extra data they don't need */
    CloseGuards() ;

    return @callsuper() ;
}

/*-------------------------------------------------------------------------
 | Method:  GenConProcessClass::MSG_GEOCON_PROCESS_DISCARD_CHANGES
 *-------------------------------------------------------------------------
 |
 | Description:
 |    Get rid of all changes to the ui and start fresh to the loaded
 |    values.
 |
 | Inputs:
 |    optr trigger                -- Trigger with this action.  Ignored.
 |
 | Revision History:
 |    Who  Date:     Comments:
 |    ---  --------  ---------
 |    LES  08/15/97  Created
 |
 *-----------------------------------------------------------------------*/

@method GeoConProcessClass, MSG_GEOCON_PROCESS_DISCARD_CHANGES
{
    RevertGuards() ;
    @call ColorChoices::MSG_GEN_ITEM_GROUP_SEND_STATUS_MSG(TRUE) ;
    @call ColorView::MSG_GEN_VIEW_REDRAW_CONTENT();
}

/*-------------------------------------------------------------------------
 | Method:  GenConProcessClass::MSG_GEOCON_PROCESS_RESTORE_DEFAULTS
 *-------------------------------------------------------------------------
 |
 | Description:
 |    Put everything back to the original factory settings.
 |
 | Inputs:
 |    optr trigger                -- Trigger with this action.  Ignored.
 |
 | Revision History:
 |    Who  Date:     Comments:
 |    ---  --------  ---------
 |    LES  08/15/97  Created
 |
 *-----------------------------------------------------------------------*/

@method GeoConProcessClass, MSG_GEOCON_PROCESS_RESTORE_DEFAULTS
{
    UseDefaultValueGuards() ;
    @call ColorChoices::MSG_GEN_ITEM_GROUP_SEND_STATUS_MSG(TRUE) ;
    @call ColorView::MSG_GEN_VIEW_REDRAW_CONTENT();
}

/*-------------------------------------------------------------------------
 | Method:  GenConProcessClass::MSG_GEOCON_PROCESS_APPLY_CHANGES
 *-------------------------------------------------------------------------
 |
 | Description:
 |    Save all the changes and reboot.
 |
 | Inputs:
 |    optr trigger                -- Trigger with this action.  Ignored.
 |
 | Revision History:
 |    Who  Date:     Comments:
 |    ---  --------  ---------
 |    LES  08/22/97  Created
 |
 *-----------------------------------------------------------------------*/

@method GeoConProcessClass, MSG_GEOCON_PROCESS_APPLY_CHANGES
{
    SaveGuards() ;
    InitFileCommit() ;

    UserStandardDialogOptr(
        NullHandle,
        NullHandle,
        NullHandle,
        NullHandle,
        @DialogTextReboot,
        (CDT_NOTIFICATION<<CDBF_DIALOG_TYPE_OFFSET) |
            (GIT_NOTIFICATION << CDBF_INTERACTION_TYPE_OFFSET)) ;

    SysShutdown(SST_RESTART) ;
}

/*-------------------------------------------------------------------------
 | Method: GenConProcessClass::MSG_GEOCON_PROCESS_SELECT_PANEL
 *-------------------------------------------------------------------------
 |
 | Description:
 |    Changes the UI to show the selected panel.
 |
 | Inputs:
 |    word selection              -- ID of the panel to select
 |    word numSelections          -- Should always be 1
 |    GenItemGroupStateFlags      -- State of GenItemGroup. Ignored.
 |
 | Revision History:
 |    Who  Date:     Comments:
 |    ---  --------  ---------
 |    LES  08/14/97  Created
 |
 *-----------------------------------------------------------------------*/

#ifdef DEBUG_VERSION
extern FileHandle G_debugFile ;
#define DebugOut(str, n)  { \
            FileWrite(G_debugFile, (str), (n), FALSE) ; \
            FileCommit(G_debugFile, FALSE) ;  \
        }
#else
#define DebugOut(str, n)  {} /* Nothing */
#endif

@method GeoConProcessClass, MSG_GEOCON_PROCESS_SELECT_PANEL
{
    optr child ;
    static optr G_panels[] = {
        @ColorPanel,
        @ExpressPanel,
        @DOSPanel,
        @UIPanel,
        @SystemPanel,
        @StartupPanel
    } ;

    if (selection < EXIT)  {
        if (selection == LAUNCH)  {
DebugOut("Sending\r\n", 9) ;
            @call DOSList::MSG_GEN_ITEM_GROUP_SEND_STATUS_MSG(TRUE) ;
DebugOut("Sent\r\n", 6) ;
        }

        /* Get the current child of the Panel */
        child = @call UIGroup::MSG_GEN_FIND_CHILD_AT_POSITION(0) ;
        if (child != NullHandle)  {
            @call child::MSG_GEN_SET_NOT_USABLE(VUM_NOW) ;
            @call child::MSG_GEN_SET_NOT_ENABLED(VUM_NOW) ;
            @call UIGroup::MSG_GEN_REMOVE_CHILD(child, 0) ;
        }

        /* Find who we are about to add */
        child = G_panels[selection] ;
        @call UIGroup::MSG_GEN_ADD_CHILD(child, 0) ;
        @call child::MSG_GEN_SET_USABLE(VUM_NOW) ;
        @call child::MSG_GEN_SET_ENABLED(VUM_NOW) ;
    } else {
        @call GeoConApp::MSG_META_QUIT() ;
    }
}

/*-------------------------------------------------------------------------
 | Method: GenConProcessClass::MSG_META_COLORED_OBJECT_SET_COLOR
 *-------------------------------------------------------------------------
 |
 | Description:
 |    A color has been chosen off the color selector.
 |
 | Inputs:
 |    ColorQuad colorQuad         -- Color to use
 |
 | Revision History:
 |    Who  Date:     Comments:
 |    ---  --------  ---------
 |    LES  08/14/97  Imported
 |
 *-----------------------------------------------------------------------*/

@method GeoConProcessClass, MSG_META_COLORED_OBJECT_SET_COLOR
{
    word item = @call ColorChoices::MSG_GEN_ITEM_GROUP_GET_SELECTION();
    @call ColorChoices::MSG_COLOR_SET_COLOR(item, colorQuad);
    @call ColorView::MSG_GEN_VIEW_REDRAW_CONTENT();
}

/*-------------------------------------------------------------------------
 | Method: GenConProcessClass::MSG_COLOR_ITEM_STATUS
 *-------------------------------------------------------------------------
 |
 | Description:
 |    A different color item has been selected.
 |
 | Inputs:
 |    word selection              -- ID of item selected
 |    word numSelections          -- Should always be 1.  Ignored.
 |    GenItemGroupStateFlags      -- status of GenItemGroup.  Ignored.
 |
 | Revision History:
 |    Who  Date:     Comments:
 |    ---  --------  ---------
 |    LES  08/14/97  Imported
 |
 *-----------------------------------------------------------------------*/

@method GeoConProcessClass, MSG_COLOR_ITEM_STATUS
{
    ColorQuad colorQuad = @call ColorChoices::MSG_COLOR_GET_COLOR(selection);
    @call ColorSelector::MSG_COLOR_SELECTOR_SET_COLOR(colorQuad, 0);
}

/*-------------------------------------------------------------------------
 | Method: GenConProcessClass::MSG_META_EXPOSED
 *-------------------------------------------------------------------------
 |
 | Description:
 |    Draws the example view of the color choices of the UI.
 |
 | Inputs:
 |    WindowHandle win            -- Handle of window being exposed
 |
 | Revision History:
 |    Who  Date:     Comments:
 |    ---  --------  ---------
 |    LES  08/14/97  Imported
 |
 *-----------------------------------------------------------------------*/

@method GeoConProcessClass, MSG_META_EXPOSED
{
    GStateHandle gstate;
    word title, dark, light;
    ColorQuad colorQuad;

    /* get colors */
    colorQuad = @call ColorChoices::MSG_COLOR_GET_COLOR(0);
    title = colorQuad.CQ_redOrIndex;
    colorQuad = @call ColorChoices::MSG_COLOR_GET_COLOR(1);
    dark = colorQuad.CQ_redOrIndex;
    colorQuad = @call ColorChoices::MSG_COLOR_GET_COLOR(2);
    light = colorQuad.CQ_redOrIndex;

    /* set up gstate */
    gstate = GrCreateState(win);
    GrBeginUpdate(gstate);

    /* draw window */
    GrSetLineWidth(gstate, MakeWWFixed(0.5));
    Draw3dRect(gstate, light, 0, 9, 9, 206, 127);

    /* draw view within window */
    GrSetAreaColor(gstate, CF_INDEX, C_WHITE, 0, 0);
    GrFillRect(gstate, 15, 35, 191, 121);
    GrSetLineColor(gstate, CF_INDEX, dark, 0, 0);
    GrDrawRect(gstate, 15, 35, 191, 121);

    /* draw scroller */
    GrSetAreaColor(gstate, CF_INDEX, dark, 0, 0);
    GrFillRect(gstate, 193, 35, 205, 121);
    Draw3dRect(gstate, light, dark, 194, 46, 204, 54);

    /* draw triangles */
    GrSetLineColor(gstate, CF_INDEX, light, 0, 0);
    GrDrawLine(gstate, 198, 37, 200, 37);
    GrDrawLine(gstate, 198, 38, 200, 38);
    GrDrawLine(gstate, 197, 39, 201, 39);
    GrDrawLine(gstate, 197, 40, 201, 40);
    GrDrawLine(gstate, 196, 41, 202, 41);
    GrDrawLine(gstate, 196, 42, 202, 42);
    GrDrawLine(gstate, 195, 43, 203, 43);
    GrDrawLine(gstate, 195, 44, 203, 44);

    GrDrawLine(gstate, 198, 119, 200, 119);
    GrDrawLine(gstate, 198, 118, 200, 118);
    GrDrawLine(gstate, 197, 117, 201, 117);
    GrDrawLine(gstate, 197, 116, 201, 116);
    GrDrawLine(gstate, 196, 115, 202, 115);
    GrDrawLine(gstate, 196, 114, 202, 114);
    GrDrawLine(gstate, 195, 113, 203, 113);
    GrDrawLine(gstate, 195, 112, 203, 112);

    GrSetLineColor(gstate, CF_INDEX, 15, 0, 0);
    GrDrawLine(gstate, 199, 36, 194, 45);
    GrDrawLine(gstate, 194, 111, 199, 120);
    GrDrawLine(gstate, 194, 111, 204, 111);
    GrSetLineColor(gstate, CF_INDEX, dark, 0, 0);
    GrDrawLine(gstate, 199, 36, 204, 45);
    GrDrawLine(gstate, 194, 45, 204, 45);
    GrDrawLine(gstate, 199, 120, 204, 111);
    GrSetLineColor(gstate, CF_INDEX, light, 0, 0);

    /* draw title */
    GrSetAreaColor(gstate, CF_INDEX, title, 0, 0);
    GrFillRect(gstate, 30, 11, 186, 21);
    GrSetTextColor(gstate, CF_INDEX, C_WHITE, 0, 0);
    GrSetFont(gstate, FID_BERKELEY, MakeWWFixed(4));
    GrDrawText(gstate, 80, 10, "Sample Win", 0);
    GrSetTextColor(gstate, CF_INDEX, C_BLACK, 0, 0);
    GrDrawText(gstate, 13, 20, "File Edit Options", 0);

    /* draw gadgets */
    Draw3dRect(gstate, light, dark, 11, 11, 19, 20);
    GrSetTextColor(gstate, CF_INDEX, C_LIGHT_CYAN, 0, 0);
    GrDrawText(gstate, 21, 10, "E", 0);
    Draw3dRect(gstate, light, dark, 187, 11, 195, 20);
    Draw3dRect(gstate, light, dark, 196, 11, 204, 20);

    /* all done */
    GrEndUpdate(gstate);
    GrDestroyState(gstate);
}

/*-------------------------------------------------------------------------
 | Method: GenConProcessClass::MSG_META_KBD_CHAR
 *-------------------------------------------------------------------------
 |
 | Description:
 |    For the GeoConProcess, it waits for page up and page down key
 |    presses to change the active panel.
 |
 | Inputs:
 |    word character              -- Character pressed
 |    word flags                  -- High byte is ShiftState,
 |                                   low byte is CharFlags
 |    word state                  -- High byte is raw PC scan code,
 |                                   low byte is ToggleState (Ignored).
 |
 | Revision History:
 |    Who  Date:     Comments:
 |    ---  --------  ---------
 |    LES  08/14/97  Imported
 |
 *-----------------------------------------------------------------------*/
@if 0
/* Harumph!  This doesn't work! */
@method GeoConProcessClass, MSG_META_KBD_CHAR
{
    word panelNum ;

    @callsuper() ;

    /* Detect when the key is being pressed, but not released */
    if (!(flags & CF_RELEASE))  {
        panelNum = @call ButtonItemGroup::MSG_GEN_ITEM_GROUP_GET_SELECTION() ;
        if (character == '1' /* VC_PREVIOUS*/ )  {
            panelNum-- ;
            if (panelNum >= EXIT)
                panelNum = 0 ;
            @call ButtonItemGroup::MSG_GEN_ITEM_GROUP_SET_SINGLE_SELECTION(
                     panelNum, FALSE) ;
        }
        if (character == '2' /* VC_NEXT */)  {
            panelNum++ ;
            if (panelNum >= EXIT)
                panelNum = 0 ;
        }
    }
}
@endif

/*-------------------------------------------------------------------------
 | Routine:  Draw3dRect
 *-------------------------------------------------------------------------
 |
 | Description:
 |    Helper routine that draws 3d like edged rectangles
 |
 | Inputs:
 |    GStateHandle gstate         -- State to draw to
 |    word fillColor              -- Color of inside of rectangle
 |    word lineColor              -- Outside line edge color
 |    word x1, y1                 -- Upper left location
 |    word x2, y2                 -- Lower right location
 |
 | Revision History:
 |    Who  Date:     Comments:
 |    ---  --------  ---------
 |    LES  08/14/97  Imported
 |
 *-----------------------------------------------------------------------*/

void Draw3dRect(
         GStateHandle gstate,
         word fillColor,
         word lineColor,
         word x1,
         word y1,
         word x2,
         word y2)
{
    GrSetAreaColor(gstate, CF_INDEX, fillColor, 0, 0);
    GrFillRect(gstate, x1, y1, x2, y2);
    GrSetLineColor(gstate, CF_INDEX, 15, 0, 0);
    GrDrawLine(gstate, x1, y1, x2, y1);
    GrDrawLine(gstate, x1, y1, x1, y2);
    GrSetLineColor(gstate, CF_INDEX, lineColor, 0, 0);
    GrDrawLine(gstate, x2, y1, x2, y2);
    GrDrawLine(gstate, x1, y2, x2, y2);
}

/*=========================================================================*
 *  METHODS FOR CLASS:  ColorItemGroupClass
 *=========================================================================*/

    @classdecl ColorItemGroupClass ;

/*-------------------------------------------------------------------------
 | Method:  ColorItemGroupClass::MSG_COLOR_SET_COLOR
 *-------------------------------------------------------------------------
 |
 | Description:
 |    Sets the color of the given color item.
 |
 | Inputs:
 |    word num                    -- Number of color item to set.
 |    ColorQuad colorQuad         -- Color to change to
 |
 | Revision History:
 |    Who  Date:     Comments:
 |    ---  --------  ---------
 |    LES  08/14/97  Imported
 |
 *-----------------------------------------------------------------------*/

@method ColorItemGroupClass, MSG_COLOR_SET_COLOR
{
    pself->colors[num] = colorQuad;
}

/*-------------------------------------------------------------------------
 | Method:  ColorItemGroupClass::MSG_COLOR_GET_COLOR
 *-------------------------------------------------------------------------
 |
 | Description:
 |    Gets the color of the requested color item.
 |
 | Inputs:
 |    word num                    -- Number of color item to get.
 |
 | Outputs:
 |    ColorQuad                   -- Color quad of the item
 |
 | Revision History:
 |    Who  Date:     Comments:
 |    ---  --------  ---------
 |    LES  08/14/97  Imported
 |
 *-----------------------------------------------------------------------*/

@method ColorItemGroupClass, MSG_COLOR_GET_COLOR
{
    return pself->colors[num];
}

/*=========================================================================*
 *  METHODS FOR CLASS:  GeoConApplicationClass
 *=========================================================================*/

    @classdecl GeoConApplicationClass ;

/*-------------------------------------------------------------------------
 | Method:  GeoConApplicationClass::MSG_META_QUIT
 *-------------------------------------------------------------------------
 |
 | Description:
 |    Intercepts the request to quit the application.
 |    If any changes are detected, asks the user if he/she wants to save
 |    them.  If yes, save changes.  Then see if a reboot is necessary
 |    and do so with a warning.  If no save is requested, just quit
 |    like normal.
 |
 | Revision History:
 |    Who  Date:     Comments:
 |    ---  --------  ---------
 |    LES  08/18/97  Created
 |
 *-----------------------------------------------------------------------*/

@method GeoConApplicationClass, MSG_META_QUIT
{
    Boolean doReboot = FALSE ;

    /* Anything changed? */
    if (CheckIfChangedGuards(&doReboot))  {
        /* Ask if the user wants to save his changes */
        if (UserStandardDialogOptr(
                NullHandle,
                NullHandle,
                NullHandle,
                NullHandle,
                @DialogTextAskSave,
                (CDT_QUESTION<<CDBF_DIALOG_TYPE_OFFSET) |
                    (GIT_AFFIRMATION << CDBF_INTERACTION_TYPE_OFFSET)) == IC_YES)  {
            /* Save the changes */
            SaveGuards() ;
            InitFileCommit() ;

            /* Notify the user that the save requires a reboot */
            if (doReboot)  {
                UserStandardDialogOptr(
                    NullHandle,
                    NullHandle,
                    NullHandle,
                    NullHandle,
                    @DialogTextReboot,
                    (CDT_NOTIFICATION<<CDBF_DIALOG_TYPE_OFFSET) |
                        (GIT_NOTIFICATION << CDBF_INTERACTION_TYPE_OFFSET)) ;

                SysShutdown(SST_RESTART);
            }
        } else {
            doReboot = FALSE ;
        }
    }

    /* Close if we are not rebooting */
    if (doReboot == FALSE)
        @callsuper();
}

/***************************************************************************
 *  END OF FILE:  MAIN.GOC
 ***************************************************************************/

