/* ***************************
 * Copyright (C) 1995 Clemens Kochinke d/b/a FuzzyLogicTM
 * Portions:
 * Portions Copyright (c) Geoworks 1992 -- All Rights Reserved
 * PROJECT:  Jupiter 2Web Editor
 * MODULE:   Methods for Document Class
 * FILE:     msgmenu.goc
 * AUTHORS:  Lawrence Hosken: Sep 21, 1992
 *           Clemens Kochinke: December 29, 1995
 * REVISION HISTORY:
 *      Name   Date      Description
 *      ----   ----      -----------
 *      CK     12/29/95  Completion
 *      CK      1/1/96  Separate button from menu functions
 *	CK	2/9/96   Chunk Strings separated out
 * DESCRIPTION:
 *      These are the function definitions and method definitions
 *      for the document object - only menu functions
***********************************/
/* INDEX:
@extern method HTMDocumentClass, MSG_TAG_ONE
                ASCII Chars (1-110), Forms (11-33)
@extern method HTMDocumentClass, MSG_TAG_TWO
                Used for Tables, Miscellaneous, Frames (1-11), Java (12)
*/
/*     **************************
 *                 Headers
 **********************************/
    @include "app.goh"    /* Includes classes and constants. */
    @include "global.goh" /* Must be after app.goh.
                           * Includes globals, objects, prototypes. */
#include <heap.h>
@include <men1str.goh>
/**************************/
/* Now in MSGMENU1.GOC:
@extern method HTMDocumentClass, MSG_TAG_ONE */

/*************************************************/
@extern method HTMDocumentClass, MSG_TAG_TWO
{
char * tagBufPtr, *tagFront, *tagEnd;   
  optr ourText;
  optr textOD; 

  @callsuper(); 

  pself = ObjDerefGen( oself );
  if ( pself->HTMDI_textHandle != NullHandle )  {
    ourText = /*GeodeGetOptrNS( */@HTMText /*)*/;
    textOD = ConstructOptr( pself->HTMDI_textHandle,
                             OptrToChunk( ourText ) );
(void) MemLock(OptrToHandle(@M2Tag1)); /* "void" new from GeoFile / layout */
 switch (whichTag)
        {
         case 1:
/*
tagBufPtr = LMemDeref(@M2Tag1);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
*/
tagFront = LMemDeref(@M2Tag1);
tagEnd = LMemDeref(@M2Tag1a);
InsertTags(textOD,tagFront,tagEnd);
    break;
         case 2:
tagBufPtr = LMemDeref(@M2Tag2);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
                                        case 3:
tagBufPtr = LMemDeref(@M2Tag3);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
                                        case 4:
tagBufPtr = LMemDeref(@M2Tag4);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
case 5:
tagBufPtr = LMemDeref(@M2Tag5);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
                                        case 6:
tagBufPtr = LMemDeref(@M2Tag6);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
                                        case 7:
tagBufPtr = LMemDeref(@M2Tag7);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
                                        case 8:
tagBufPtr = LMemDeref(@M2Tag8);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
                                        case 9:
tagBufPtr = LMemDeref(@M2Tag9);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
                                        case 90:
tagBufPtr = LMemDeref(@M2Tag90);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
                                        case 91:
tagBufPtr = LMemDeref(@M2Tag91);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
                                        case 10:
tagBufPtr = LMemDeref(@M2Tag10);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
case 11:
/*tagBufPtr = LMemDeref(@M2Tag11);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
*/
tagFront = LMemDeref(@M2Tag11);
tagEnd = LMemDeref(@M2Tag11a);
InsertTags(textOD,tagFront,tagEnd);
    break;
/*                                        case 12: 
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
                                      case 13:
tagBufPtr = LMemDeref(@M2Tag13);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
                                        case 14:
tagBufPtr = LMemDeref(@M2Tag14);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
                                        case 15:
tagBufPtr = LMemDeref(@M2Tag15);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
                                        case 150:
tagBufPtr = LMemDeref(@M2Tag150);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
*/
/* ====>> 16 - 40 Tables <<====== */
case 16:
/*tagBufPtr = LMemDeref(@M2Tag16);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
*/
tagFront = LMemDeref(@M2Tag16);
tagEnd = LMemDeref(@M2Tag16a);
InsertTags(textOD,tagFront,tagEnd);
break;
case 17:
/*
tagBufPtr = LMemDeref(@M2Tag17);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
*/
tagFront = LMemDeref(@M2Tag17);
tagEnd = LMemDeref(@M2Tag16a);
InsertTags(textOD,tagFront,tagEnd);
    break;
case 18:
/*
tagBufPtr = LMemDeref(@M2Tag18);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
*/
tagFront = LMemDeref(@M2Tag18);
tagEnd = LMemDeref(@M2Tag16a);
InsertTags(textOD,tagFront,tagEnd);
    break;
case 19:
tagBufPtr = LMemDeref(@M2Tag19);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
case 20:  
tagBufPtr = LMemDeref(@M2Tag20);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
case 21:
tagBufPtr = LMemDeref(@M2Tag21);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
case 22:
tagBufPtr = LMemDeref(@M2Tag22);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
case 23:
/*
tagBufPtr = LMemDeref(@M2Tag23);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
*/
tagFront = LMemDeref(@M2Tag23);
tagEnd = LMemDeref(@M2Tag23a);
InsertTags(textOD,tagFront,tagEnd);
    break;
case 24:  
/*
tagBufPtr = LMemDeref(@M2Tag24);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
now as per Dirk Haase: */
tagFront = LMemDeref(@M2Tag24);
tagEnd = LMemDeref(@M2Tag23a);
InsertTags(textOD,tagFront,tagEnd);
    break;
case 25:
/*
tagBufPtr = LMemDeref(@M2Tag25);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
*/
tagFront = LMemDeref(@M2Tag25);
tagEnd   = LMemDeref(@M2Tag25a);
InsertTags(textOD,tagFront,tagEnd);
    break;

case 26:
/*
tagBufPtr = LMemDeref(@M2Tag26);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
Add /TD to TD ALIGN as per Dirk Haase:  */
tagFront = LMemDeref(@M2Tag26);
tagEnd   = LMemDeref(@M2Tag25a);
InsertTags(textOD,tagFront,tagEnd);
    break;
case 27:
tagBufPtr = LMemDeref(@M2Tag27);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
case 28:
tagBufPtr = LMemDeref(@M2Tag28);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
case 29:
tagBufPtr = LMemDeref(@M2Tag29);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
case 30:
tagBufPtr = LMemDeref(@M2Tag30);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
/* new 2/13/1997 */
case 3000:
tagBufPtr = LMemDeref(@M2Tag3000);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
case 3001:
tagBufPtr = LMemDeref(@M2Tag3001);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
case 3002:
tagBufPtr = LMemDeref(@M2Tag3002);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
case 3003:
tagBufPtr = LMemDeref(@M2Tag3003);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
case 3004:
tagBufPtr = LMemDeref(@M2Tag3004);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
case 3005:
tagBufPtr = LMemDeref(@M2Tag3005);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;

/* new 4/13/1997 -- This were missing, although the tags were defined */
case 300:
tagBufPtr = LMemDeref(@M2Tag300);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
case 301:
tagBufPtr = LMemDeref(@M2Tag301);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
case 302:
tagBufPtr = LMemDeref(@M2Tag302);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;



case 31:
/*tagBufPtr = LMemDeref(@M2Tag31);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
*/
tagFront = LMemDeref(@M2Tag31);
tagEnd   = LMemDeref(@M2Tag31a);
InsertTags(textOD,tagFront,tagEnd);
    break;
case 32: 
/*
tagBufPtr = LMemDeref(@M2Tag32);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
now with end tag as per Dirk Haase: */
tagFront = LMemDeref(@M2Tag32);
tagEnd   = LMemDeref(@M2Tag31a);
InsertTags(textOD,tagFront,tagEnd);
    break;
case 33:
tagBufPtr = LMemDeref(@M2Tag33);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
case 34:  
tagBufPtr = LMemDeref(@M2Tag34);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
case 35:
tagBufPtr = LMemDeref(@M2Tag35);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break; 
case 36:
tagBufPtr = LMemDeref(@M2Tag36);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;
case 37:
tagBufPtr = LMemDeref(@M2Tag37);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break;  
case 38:
/*
tagBufPtr = LMemDeref(@M2Tag38);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
*/
tagFront = LMemDeref(@M2Tag38);
tagEnd   = LMemDeref(@M2Tag38a);
InsertTags(textOD,tagFront,tagEnd);
    break;  
case 39:
/*tagBufPtr = LMemDeref(@M2Tag39);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
Now new as per Dirk Haase:  */
tagFront = LMemDeref(@M2Tag39);
tagEnd   = LMemDeref(@M2Tag38a);
InsertTags(textOD,tagFront,tagEnd);
    break; 
/*              For future use
case 40:
tagBufPtr = LMemDeref(@M2Tag40);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);  
    break; 
*/
/* ======>> 36-40 reserved for future use <<===== */
case 41:
/* tagBufPtr = LMemDeref(@M2Tag41);
    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
Comment separated and wrappable as per Dirk Hasse: */
tagFront = LMemDeref(@M2Tag41);
tagEnd   = LMemDeref(@M2Tag41a);
InsertTags(textOD,tagFront,tagEnd);
    break;
case 42:
/*
tagBufPtr = LMemDeref(@M2Tag42);
    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0); 
*/
tagFront = LMemDeref(@M2Tag42);
tagEnd   = LMemDeref(@M2Tag42a);
InsertTags(textOD,tagFront,tagEnd);
    break;
case 43: 
tagBufPtr = LMemDeref(@M2Tag43);
    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0); 
    break;
case 44:
tagBufPtr = LMemDeref(@M2Tag44);
    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0); 
    break;
case 45:  
/*tagBufPtr = LMemDeref(@M2Tag45);
    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0); 
*/
tagFront = LMemDeref(@M2Tag45);
tagEnd   = LMemDeref(@M2Tag45a);
InsertTags(textOD,tagFront,tagEnd);
    break;
case 46:
tagBufPtr = LMemDeref(@M2Tag46);
    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0); 
    break;
case 47:
tagBufPtr = LMemDeref(@M2Tag47);
    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0); 
    break;
case 48:  
tagBufPtr = LMemDeref(@M2Tag48);
    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0); 
    break;
case 49:
tagBufPtr = LMemDeref(@M2Tag49);
    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0); 
    break;
case 50:
tagBufPtr = LMemDeref(@M2Tag50);
    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0); 
    break;
case 500:
tagBufPtr = LMemDeref(@M2Tag500);
    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0); 
    break;
case 501:
tagBufPtr = LMemDeref(@M2Tag501);
    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0); 
    break;
case 51:
tagBufPtr = LMemDeref(@M2Tag51);
    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0); 
    break;
case 510:
tagBufPtr = LMemDeref(@M2Tag510);
    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0); 
    break;
case 511:
/*
tagBufPtr = LMemDeref(@M2Tag511);
    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0); 
*/
tagFront = LMemDeref(@M2Tag511);
tagEnd   = LMemDeref(@M2Tag511a);
InsertTags(textOD,tagFront,tagEnd);
    break;
case 512:
tagBufPtr = LMemDeref(@M2Tag512);
    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0); 
    break;
case 513:
tagBufPtr = LMemDeref(@M2Tag513);
    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0); 
    break;
case 514:
tagBufPtr = LMemDeref(@M2Tag514);
    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0); 
    break;
case 515:
/*
tagBufPtr = LMemDeref(@M2Tag515);
    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0); 
*/
tagFront = LMemDeref(@M2Tag515);
tagEnd   = LMemDeref(@M2Tag515a);
InsertTags(textOD,tagFront,tagEnd);
    break;
case 516:
/*
tagBufPtr = LMemDeref(@M2Tag516);
    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0); 
*/
tagFront = LMemDeref(@M2Tag516);
tagEnd   = LMemDeref(@M2Tag516a);
InsertTags(textOD,tagFront,tagEnd);
    break;
        }

MemUnlock(OptrToHandle(@M2Tag1));
        }

@call textOD::MSG_META_TEXT_USER_MODIFIED(textOD);
}

