#ifndef __ERRORS_GOH_
#define __ERRORS_GOH_

#include <ec.h>

typedef enum {
    SYSTEM_ERROR_CODES,
    ERROR_NEWS_DATA_FILE_ALREADY_OPEN,
    ERROR_NEWS_DATA_FILE_NOT_OPEN,
    ERROR_NEWS_DATA_FILE_MAP_BLOCK_LOCKED_TOO_MANY_TIMES,
    ERROR_NEWS_DATA_FILE_CLOSE_WHILE_MAP_BLOCK_IS_LOCKED,
    ERROR_NEWS_DATA_MISSING_MAP_BLOCK,
    ERROR_NEWS_DATA_CANT_LOCK_MAP_BLOCK,
    ERROR_NEWS_DATA_MAP_BLOCK_ALREADY_UNLOCKED,
    ERROR_NEWS_DATA_MAP_BLOCK_UNLOCKED_TOO_MANY_TIMES,
    ERROR_NEWS_DATA_BAD_GROUP_INDEX,
    ERROR_NEWS_DATA_GROUP_IS_NULL,
    ERROR_NEWS_DATA_CANT_CREATE_THREAD_ARRAY,
    ERROR_NEWS_DATA_BAD_THREAD_INDEX,
    ERROR_NEWS_DATA_THREAD_IS_NULL,
    ERROR_NEWS_DATA_CANT_SELECT_NEW_GROUP_IF_THREAD_SELECTED,
    ERROR_NEWS_DATA_ARTICLE_IS_NULL,
    ERROR_NEWS_DATA_ARTICLE_HAS_NO_HEADERS,
    ERROR_NEWS_DATA_LINE_IS_NULL,
    ERROR_NEWS_DATA_BAD_ARTICLE_INDEX,
    ERROR_NEWS_DATA_CANT_SELECT_NEW_THREAD_IF_ARTICLE_SELECTED,
    ERROR_NEWS_DATA_CORRUPT_ARTICLE_ENTRY,
    ERROR_BUCKETS_FILES_STILL_OPEN,
    ERROR_BUCKETS_STILL_HAVE_LOCKS,
    ERROR_BUCKETS_TOO_MANY_LOCKS,
    ERROR_BUCKETS_TOO_MANY_FILES_OPENED,
    ERROR_BUCKETS_ARRAY_ALREADY_IN_USE,
    ERROR_BUCKETS_ARRAY_ALREADY_DESTROYED,
    ERROR_BUCKETS_ARRAY_CANT_CLOSE_LOCKED_BUCKET,
} FatalErrors ;

extern FatalErrors G_fakeError ;


#endif
