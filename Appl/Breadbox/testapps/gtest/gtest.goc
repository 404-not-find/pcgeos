/***********************************************************************
 *
 *
 * PROJECT:	Test Applications
 * MODULE:	Testing CGadgets library
 * FILE:		gtest.goc
 * AUTHOR:	jfh  8/04
 *
 * DESCRIPTION:
 *
 *
 *
 *
 *
 *
 *
 ***********************************************************************/

/*
 ***************************************************************************
 *		Include files
 ***************************************************************************
 */

@include <stdapp.goh>
#include <ansi/string.h>
#include <ansi/stdlib.h>
/*@include <objects/gadgets.goh> */
@include <objects/cgadget.goh>

/*
 ***************************************************************************
 *		Structures
 ***************************************************************************
 */

/*
 ***************************************************************************
 *		Class & Message Definitions
 ***************************************************************************
 */


@class	TestProcessClass, GenProcessClass ;
	@message (TIME_INPUT_ACTION) MSG_TEST_TIME_ACTION;
	@message void MSG_TEST_OPEN_SET_INC();
	@message void MSG_TEST_OPEN_SET_TIME();
	@message void MSG_TEST_SET_INC();
	@message void MSG_TEST_GET_INC();
	@message void MSG_TEST_SET_TIME();
	@message void MSG_TEST_GET_TIME();
	@message void MSG_TEST_SET_CUR_TIME();

	@message (DATE_INPUT_ACTION) MSG_TEST_DATE_ACTION;
	@message void MSG_TEST_OPEN_SET_DATE();
	@message void MSG_TEST_SET_DATE();
	@message void MSG_TEST_GET_DATE();
	@message void MSG_TEST_SET_CUR_DATE();

@endc

@classdecl	TestProcessClass, neverSaved ;

/*
 ***************************************************************************
 *		UI Objects
 ***************************************************************************
 */

@start	AppResource;

@object GenApplicationClass TestApp = {
	GI_visMoniker = list { @TestTextMoniker }
	GI_comp = @TestPrimary;
	gcnList(MANUFACTURER_ID_GEOWORKS,GAGCNLT_WINDOWS) = @TestPrimary;
}

@visMoniker TestTextMoniker = "CGadget Tester";

@end	AppResource

@start	Interface;

@object GenPrimaryClass TestPrimary  = {
	GI_comp = @TimeGroup, @DateGroup;
	HINT_ORIENT_CHILDREN_HORIZONTALLY;
	HINT_SIZE_WINDOW_AS_DESIRED;
}

@object GenInteractionClass TimeGroup = {
	GI_visMoniker = "TimeInput";
	GI_comp = @TimeInputTestObj1,
				@TimeOutput,
				@TITestGroup, @TITestDisplay, @TITestInput;
	HINT_DRAW_IN_BOX;
	HINT_PLACE_MONIKER_ABOVE;
	HINT_CENTER_MONIKER;
}

@object TimeInputClass TimeInputTestObj1 = {
	GI_visMoniker = "Time1: ";
	GCI_output = process;
	TII_actionMsg = MSG_TEST_TIME_ACTION;
//	TII_incrementValue = 15;
	HINT_MAXIMUM_SIZE = {SST_AVG_CHAR_WIDTHS | 10, 0};
}

@object GenTextClass TimeOutput = {
	GI_visMoniker = "Output";
	GTXI_attrs = @default | GTA_SINGLE_LINE_TEXT;

}

@object GenInteractionClass TITestGroup = {
	GI_visMoniker = "Message Tests";
	GI_comp = @SetIncTrig, @GetIncTrig, @SetTimeTrig,
				 @GetTimeTrig, @SetCurTimeTrig;
	HINT_ORIENT_CHILDREN_HORIZONTALLY;
	HINT_DRAW_IN_BOX;
	HINT_PLACE_MONIKER_ABOVE;
	HINT_CENTER_MONIKER;
}

@object GenTriggerClass SetIncTrig = {
	GI_visMoniker = "SetInc";
	GTI_destination = process;
	GTI_actionMsg = MSG_TEST_OPEN_SET_INC;
}

@object GenTriggerClass GetIncTrig = {
	GI_visMoniker = "GetInc";
	GTI_destination = process;
	GTI_actionMsg = MSG_TEST_GET_INC;
}

@object GenTriggerClass SetTimeTrig = {
	GI_visMoniker = "SetTime";
	GTI_destination = process;
	GTI_actionMsg = MSG_TEST_OPEN_SET_TIME;
}

@object GenTriggerClass GetTimeTrig = {
	GI_visMoniker = "GetTime";
	GTI_destination = process;
	GTI_actionMsg = MSG_TEST_GET_TIME;
}

@object GenTriggerClass SetCurTimeTrig = {
	GI_visMoniker = "SetCur";
	GTI_destination = process;
	GTI_actionMsg = MSG_TEST_SET_CUR_TIME;
}

@object GenTextClass TITestDisplay = {
	GI_visMoniker = "Test Display";
	GTXI_attrs = @default | GTA_SINGLE_LINE_TEXT;
}

@object GenInteractionClass TITestInput = {
	GI_visMoniker = "Test Input";
	GI_comp = @HrsIncVal, @MinVal, @SecVal, @TITIApplyTrig;
	GII_type = GIT_ORGANIZATIONAL;
	GII_visibility = GIV_DIALOG;
	GII_attrs = @default | GIA_NOT_USER_INITIATABLE;
}

@object GenValueClass HrsIncVal = {
	GI_visMoniker = "Inc/Hrs";
}

@object GenValueClass MinVal = {
	GI_visMoniker = "Minutes";
	GI_states = @default & ~GS_ENABLED;
}

@object GenValueClass SecVal = {
	GI_visMoniker = "Seconds";
	GI_states = @default & ~GS_ENABLED;
}

@object GenTriggerClass TITIApplyTrig = {
	GI_visMoniker = "Set";
	GI_attrs = @default | GA_SIGNAL_INTERACTION_COMPLETE;
	GTI_destination = process;
	HINT_SEEK_REPLY_BAR;
}

@object GenInteractionClass DateGroup = {
	GI_visMoniker = "DateInput";
	GI_comp = @DateInputTestObj1,
				@DateOutput,
				@DITestGroup, @DITestDisplay, @DITestInput;
	HINT_DRAW_IN_BOX;
	HINT_PLACE_MONIKER_ABOVE;
	HINT_CENTER_MONIKER;
}

@object DateInputClass DateInputTestObj1 = {
	GI_visMoniker = "Date1: ";
	GCI_output = process;
	DII_actionMsg = MSG_TEST_DATE_ACTION;
	HINT_MAXIMUM_SIZE = {SST_AVG_CHAR_WIDTHS | 10, 0};
}

@object GenValueClass TestGenVal = {
}

@object GenTextClass DateOutput = {
	GI_visMoniker = "Output";
	GTXI_attrs = @default | GTA_SINGLE_LINE_TEXT;

}

@object GenInteractionClass DITestGroup = {
	GI_visMoniker = "Message Tests";
	GI_comp = @SetDateTrig, @GetDateTrig, @SetCurDateTrig;
	HINT_ORIENT_CHILDREN_HORIZONTALLY;
	HINT_DRAW_IN_BOX;
	HINT_PLACE_MONIKER_ABOVE;
	HINT_CENTER_MONIKER;
}

@object GenTriggerClass SetDateTrig = {
	GI_visMoniker = "SetDate";
	GTI_destination = process;
	GTI_actionMsg = MSG_TEST_OPEN_SET_DATE;
}

@object GenTriggerClass GetDateTrig = {
	GI_visMoniker = "GetDate";
	GTI_destination = process;
	GTI_actionMsg = MSG_TEST_GET_DATE;
}

@object GenTriggerClass SetCurDateTrig = {
	GI_visMoniker = "SetCur";
	GTI_destination = process;
	GTI_actionMsg = MSG_TEST_SET_CUR_DATE;
}

@object GenTextClass DITestDisplay = {
	GI_visMoniker = "Test Display";
	GTXI_attrs = @default | GTA_SINGLE_LINE_TEXT;
}

@object GenInteractionClass DITestInput = {
	GI_visMoniker = "Test Input";
	GI_comp = @YearVal, @MonthVal, @DayVal, @DITIApplyTrig;
	GII_type = GIT_ORGANIZATIONAL;
	GII_visibility = GIV_DIALOG;
	GII_attrs = @default | GIA_NOT_USER_INITIATABLE;
}

@object GenValueClass YearVal = {
	GI_visMoniker = "Year";
}

@object GenValueClass MonthVal = {
	GI_visMoniker = "Month";
}

@object GenValueClass DayVal = {
	GI_visMoniker = "Day";
}

@object GenTriggerClass DITIApplyTrig = {
	GI_visMoniker = "Set";
	GI_attrs = @default | GA_SIGNAL_INTERACTION_COMPLETE;
	GTI_destination = process;
	HINT_SEEK_REPLY_BAR;
}

@end Interface

/*             
 ***************************************************************************
 *		Code for TestProcessClass
 ***************************************************************************
 */


/***********************************************************************
 *
 * MESSAGE:	MSG_TEST_TIME_ACTION for TestProcessClass
 *         			byte hours,
 *					  	byte minutes,
 *					  	byte seconds
 * DESCRIPTION:
 *
 *
 ***********************************************************************/
@method TestProcessClass, MSG_TEST_TIME_ACTION
{
 TimerDateAndTime	time;
 char					buf[15];


	time.TDAT_hours = hours;
	time.TDAT_minutes = minutes;
	time.TDAT_seconds = seconds;

	LocalFormatDateTime(buf, DTF_HMS, &time);

	@call TimeOutput::MSG_VIS_TEXT_REPLACE_ALL_PTR(buf, 0);

}

/***********************************************************************
 *
 * MESSAGE:	MSG_TEST_OPEN_SET_INC for TestProcessClass
 *
 * DESCRIPTION:
 *
 *
 ***********************************************************************/
@method TestProcessClass, MSG_TEST_OPEN_SET_INC
{

	@send MinVal::MSG_GEN_SET_NOT_ENABLED(VUM_NOW);
	@send SecVal::MSG_GEN_SET_NOT_ENABLED(VUM_NOW);
	@send TITIApplyTrig::MSG_GEN_TRIGGER_SET_ACTION_MSG(MSG_TEST_SET_INC);

	@send HrsIncVal::MSG_GEN_VALUE_SET_INTEGER_VALUE(0, FALSE);

	@send TITestInput::MSG_GEN_INTERACTION_INITIATE();

}

/***********************************************************************
 *
 * MESSAGE:	MSG_TEST_SET_INC for TestProcessClass
 *
 * DESCRIPTION:
 *
 *
 ***********************************************************************/
@method TestProcessClass, MSG_TEST_SET_INC
{
 word		value;


	value = @call HrsIncVal::MSG_GEN_VALUE_GET_INTEGER_VALUE();

	@send TimeInputTestObj1::MSG_TIME_INPUT_SET_INCREMENT_VALUE(value);

}

/***********************************************************************
 *
 * MESSAGE:	MSG_TEST_GET_INC for TestProcessClass
 *
 * DESCRIPTION:
 *
 *
 ***********************************************************************/
@method TestProcessClass, MSG_TEST_GET_INC
{
 word		value;
 char		buf[15];


	value = @call TimeInputTestObj1::MSG_TIME_INPUT_GET_INCREMENT_VALUE();

	UtilHex32ToAscii(buf, (dword)value, UHTAF_NULL_TERMINATE);
	@call TITestDisplay::MSG_VIS_TEXT_REPLACE_ALL_PTR(buf, 0);

}

/***********************************************************************
 *
 * MESSAGE:	MSG_TEST_OPEN_SET_TIME for TestProcessClass
 *
 * DESCRIPTION:
 *
 *
 ***********************************************************************/
@method TestProcessClass, MSG_TEST_OPEN_SET_TIME
{

	@send MinVal::MSG_GEN_SET_ENABLED(VUM_NOW);
	@send SecVal::MSG_GEN_SET_ENABLED(VUM_NOW);
	@send TITIApplyTrig::MSG_GEN_TRIGGER_SET_ACTION_MSG(MSG_TEST_SET_TIME);


	@send HrsIncVal::MSG_GEN_VALUE_SET_INTEGER_VALUE(0, FALSE);
	@send MinVal::MSG_GEN_VALUE_SET_INTEGER_VALUE(0, FALSE);
	@send SecVal::MSG_GEN_VALUE_SET_INTEGER_VALUE(0, FALSE);

	@send TITestInput::MSG_GEN_INTERACTION_INITIATE();


}

/***********************************************************************
 *
 * MESSAGE:	MSG_TEST_SET_TIME for TestProcessClass
 *
 * DESCRIPTION:
 *
 *
 ***********************************************************************/
@method TestProcessClass, MSG_TEST_SET_TIME
{
 sbyte		hours, minutes, seconds;


	hours = @call HrsIncVal::MSG_GEN_VALUE_GET_INTEGER_VALUE();
	minutes = @call MinVal::MSG_GEN_VALUE_GET_INTEGER_VALUE();
	seconds = @call SecVal::MSG_GEN_VALUE_GET_INTEGER_VALUE();

	@send TimeInputTestObj1::MSG_TIME_INPUT_SET_TIME(hours, minutes, seconds);

}

/***********************************************************************
 *
 * MESSAGE:	MSG_TEST_GET_TIME for TestProcessClass
 *
 * DESCRIPTION:
 *
 *
 ***********************************************************************/
@method TestProcessClass, MSG_TEST_GET_TIME
{
 TimeStruct		time;
 char		buf[15];


	@call TimeInputTestObj1::MSG_TIME_INPUT_GET_TIME(&time);
	UtilHex32ToAscii(buf, /*(dword)*/time.T_hours, UHTAF_NULL_TERMINATE);
	@call TITestDisplay::MSG_VIS_TEXT_REPLACE_ALL_PTR(buf, 0);
	@call TITestDisplay::MSG_VIS_TEXT_APPEND_PTR(":", 1);
	UtilHex32ToAscii(buf, /*(dword)*/time.T_minutes, UHTAF_NULL_TERMINATE);
	@call TITestDisplay::MSG_VIS_TEXT_APPEND_PTR(buf, 0);
	@call TITestDisplay::MSG_VIS_TEXT_APPEND_PTR(":", 1);
	UtilHex32ToAscii(buf, /*(dword)*/time.T_seconds, UHTAF_NULL_TERMINATE);
	@call TITestDisplay::MSG_VIS_TEXT_APPEND_PTR(buf, 0);


}

/***********************************************************************
 *
 * MESSAGE:	MSG_TEST_SET_CUR_TIME for TestProcessClass
 *
 * DESCRIPTION:
 *
 *
 ***********************************************************************/
@method TestProcessClass, MSG_TEST_SET_CUR_TIME
{

	@send TimeInputTestObj1::MSG_TIME_INPUT_SET_CURRENT_TIME();

}


/***********************************************************************
 *
 * MESSAGE:	MSG_TEST_DATE_ACTION for TestProcessClass
 *         			(byte day, bytemonth, word year)
 *
 *
 * DESCRIPTION:
 *
 *
 ***********************************************************************/
@method TestProcessClass, MSG_TEST_DATE_ACTION
{
 TimerDateAndTime	tDate;
 char					buf[15];


	tDate.TDAT_year = year;
	tDate.TDAT_month = month;
	tDate.TDAT_day = day;

	LocalFormatDateTime(buf, DTF_SHORT, &tDate);

	@call DateOutput::MSG_VIS_TEXT_REPLACE_ALL_PTR(buf, 0);

}

/***********************************************************************
 *
 * MESSAGE:	MSG_TEST_OPEN_SET_DATE for TestProcessClass
 *
 * DESCRIPTION:
 *
 *
 ***********************************************************************/
@method TestProcessClass, MSG_TEST_OPEN_SET_DATE
{

	@send DITIApplyTrig::MSG_GEN_TRIGGER_SET_ACTION_MSG(MSG_TEST_SET_DATE);


	@send YearVal::MSG_GEN_VALUE_SET_INTEGER_VALUE(0, FALSE);
	@send MonthVal::MSG_GEN_VALUE_SET_INTEGER_VALUE(0, FALSE);
	@send DayVal::MSG_GEN_VALUE_SET_INTEGER_VALUE(0, FALSE);

	@send DITestInput::MSG_GEN_INTERACTION_INITIATE();


}

/***********************************************************************
 *
 * MESSAGE:	MSG_TEST_SET_DATE for TestProcessClass
 *
 * DESCRIPTION:
 *
 *
 ***********************************************************************/
@method TestProcessClass, MSG_TEST_SET_DATE
{
 byte		month, day;
 word		year;


	year = @call YearVal::MSG_GEN_VALUE_GET_INTEGER_VALUE();
	month = @call MonthVal::MSG_GEN_VALUE_GET_INTEGER_VALUE();
	day = @call DayVal::MSG_GEN_VALUE_GET_INTEGER_VALUE();

	@send DateInputTestObj1::MSG_DATE_INPUT_SET_DATE(day, month, year);

}

/***********************************************************************
 *
 * MESSAGE:	MSG_TEST_GET_DATE for TestProcessClass
 *
 * DESCRIPTION:
 *
 *
 ***********************************************************************/
@method TestProcessClass, MSG_TEST_GET_DATE
{
 DateStruct		date;
 char		buf[15];


	@call DateInputTestObj1::MSG_DATE_INPUT_GET_DATE(&date);
	UtilHex32ToAscii(buf, /*(dword)*/date.DT_month, UHTAF_NULL_TERMINATE);
	@call DITestDisplay::MSG_VIS_TEXT_REPLACE_ALL_PTR(buf, 0);
	@call DITestDisplay::MSG_VIS_TEXT_APPEND_PTR("/", 1);
	UtilHex32ToAscii(buf, /*(dword)*/date.DT_day, UHTAF_NULL_TERMINATE);
	@call DITestDisplay::MSG_VIS_TEXT_APPEND_PTR(buf, 0);
	@call DITestDisplay::MSG_VIS_TEXT_APPEND_PTR("/", 1);
	UtilHex32ToAscii(buf, /*(dword)*/date.DT_year, UHTAF_NULL_TERMINATE);
	@call DITestDisplay::MSG_VIS_TEXT_APPEND_PTR(buf, 0);


}

/***********************************************************************
 *
 * MESSAGE:	MSG_TEST_SET_CUR_DATE for TestProcessClass
 *
 * DESCRIPTION:
 *
 *
 ***********************************************************************/
@method TestProcessClass, MSG_TEST_SET_CUR_DATE
{

	@send DateInputTestObj1::MSG_DATE_INPUT_SET_CURRENT_DATE();

}

