
@start MODEMICONRES, data;
@visMoniker ModemGR = {
/* @visMoniker Moniker0 = { */
	size = standard;
	style = icon;
	color = color4;
	aspectRatio = normal;
	cachedSize = 15, 9;
	gstring {
		GSDrawBitmapAtCP (94),
		Bitmap (15,9,BMC_PACKBITS,(BMT_MASK | BMF_4BIT)),
		0x03, 0x1f, 0xfe, 0xff, 0xf0, 0xfc, 0x00, 0x00, 
		0x8f, 0x03, 0x3f, 0xfe, 0xff, 0x07, 0xfd, 0x87, 
		0x01, 0x80, 0x8f, 0x02, 0x7f, 0xfe, 0xf0, 0xfc, 
		0x78, 0x01, 0x00, 0x8f, 0x01, 0xff, 0xfe, 0xfb, 
		0x00, 0x01, 0x80, 0x8f, 0x09, 0xff, 0xfe, 0x02, 
		0x22, 0x00, 0x44, 0x40, 0x08, 0x80, 0x8f, 0x09, 
		0xff, 0xfc, 0x02, 0xa2, 0x00, 0x4c, 0x40, 0x08, 
		0x08, 0xff, 0x09, 0xff, 0xf8, 0x02, 0x22, 0x00, 
		0x44, 0x40, 0x00, 0x8f, 0xff, 0x01, 0xff, 0xf0, 
		0xfc, 0x00, 0x02, 0x08, 0xff, 0xff, 0x02, 0x7f, 
		0xe0, 0xf8, 0xfd, 0x88, 0x02, 0x8f, 0xff, 0xff, 
		
		GSEndString()
	}
}
@end MODEMICONRES;
@start MODEMICON1RES, data;
@visMoniker ModemRG = {
	size = standard;
	style = icon;
	color = color4;
	aspectRatio = normal;
	cachedSize = 15, 9;
	gstring {
		GSDrawBitmapAtCP (94),
		Bitmap (15,9,BMC_PACKBITS,(BMT_MASK | BMF_4BIT)),
		0x03, 0x1f, 0xfe, 0xff, 0xf0, 0xfc, 0x00, 0x00, 
		0x8f, 0x03, 0x3f, 0xfe, 0xff, 0x07, 0xfd, 0x87, 
		0x01, 0x80, 0x8f, 0x02, 0x7f, 0xfe, 0xf0, 0xfc, 
		0x78, 0x01, 0x00, 0x8f, 0x01, 0xff, 0xfe, 0xfb, 
		0x00, 0x01, 0x80, 0x8f, 0x09, 0xff, 0xfe, 0x04, 
		0x44, 0x00, 0x22, 0x20, 0x08, 0x80, 0x8f, 0x09, 
		0xff, 0xfc, 0x04, 0xc4, 0x00, 0x2a, 0x20, 0x08, 
		0x08, 0xff, 0x09, 0xff, 0xf8, 0x04, 0x44, 0x00, 
		0x22, 0x20, 0x00, 0x8f, 0xff, 0x01, 0xff, 0xf0, 
		0xfc, 0x00, 0x02, 0x08, 0xff, 0xff, 0x02, 0x7f, 
		0xe0, 0xf8, 0xfd, 0x88, 0x02, 0x8f, 0xff, 0xff, 
		
		GSEndString()
	}
}
@end MODEMICON1RES;
@start MODEMICON2RES, data;

@visMoniker ModemRR = {
	size = standard;
	style = icon;
	color = color4;
	aspectRatio = normal;
	cachedSize = 15, 9;
	gstring {
		GSDrawBitmapAtCP (94),
		Bitmap (15,9,BMC_PACKBITS,(BMT_MASK | BMF_4BIT)),
		0x03, 0x1f, 0xfe, 0xff, 0xf0, 0xfc, 0x00, 0x00, 
		0x8f, 0x03, 0x3f, 0xfe, 0xff, 0x07, 0xfd, 0x87, 
		0x01, 0x80, 0x8f, 0x02, 0x7f, 0xfe, 0xf0, 0xfc, 
		0x78, 0x01, 0x00, 0x8f, 0x01, 0xff, 0xfe, 0xfb, 
		0x00, 0x01, 0x80, 0x8f, 0x09, 0xff, 0xfe, 0x04, 
		0x44, 0x00, 0x44, 0x40, 0x08, 0x80, 0x8f, 0x09, 
		0xff, 0xfc, 0x04, 0xc4, 0x00, 0x4c, 0x40, 0x08, 
		0x08, 0xff, 0x09, 0xff, 0xf8, 0x04, 0x44, 0x00, 
		0x44, 0x40, 0x00, 0x8f, 0xff, 0x01, 0xff, 0xf0, 
		0xfc, 0x00, 0x02, 0x08, 0xff, 0xff, 0x02, 0x7f, 
		0xe0, 0xf8, 0xfd, 0x88, 0x02, 0x8f, 0xff, 0xff, 
		
		GSEndString()
	}
}
@end MODEMICON2RES;
@start MODEMICON3RES, data;

@visMoniker ModemGG = {
	size = standard;
	style = icon;
	color = color4;
	aspectRatio = normal;
	cachedSize = 15, 9;
	gstring {
		GSDrawBitmapAtCP (94),
		Bitmap (15,9,BMC_PACKBITS,(BMT_MASK | BMF_4BIT)),
		0x03, 0x1f, 0xfe, 0xff, 0xf0, 0xfc, 0x00, 0x00, 
		0x8f, 0x03, 0x3f, 0xfe, 0xff, 0x07, 0xfd, 0x87, 
		0x01, 0x80, 0x8f, 0x02, 0x7f, 0xfe, 0xf0, 0xfc, 
		0x78, 0x01, 0x00, 0x8f, 0x01, 0xff, 0xfe, 0xfb, 
		0x00, 0x01, 0x80, 0x8f, 0x09, 0xff, 0xfe, 0x02, 
		0x22, 0x00, 0x22, 0x20, 0x08, 0x80, 0x8f, 0x09, 
		0xff, 0xfc, 0x02, 0xa2, 0x00, 0x2a, 0x20, 0x08, 
		0x08, 0xff, 0x09, 0xff, 0xf8, 0x02, 0x22, 0x00, 
		0x22, 0x20, 0x00, 0x8f, 0xff, 0x01, 0xff, 0xf0, 
		0xfc, 0x00, 0x02, 0x08, 0xff, 0xff, 0x02, 0x7f, 
		0xe0, 0xf8, 0xfd, 0x88, 0x02, 0x8f, 0xff, 0xff, 
		
		GSEndString()
	}
}

@end MODEMICON3RES;
