/*#include <geos.h>*/
/*#include <heap.h>*/
/*#include <object.h>*/
/*#include <uDialog.h>*/
/*#include <system.h>*/
/*@include <Objects/gAppC.goh>*/
@include <stdapp.goh>
@include "extern.goh"

@start ErrorStringResource, data;

/* Signon error messages. */
@chunk char ErrorSignonCantConnect[] = "Cannot connect to the server. (Error #\001)";
@chunk char ErrorSignonGeneral[] = "A general error occurred while trying to signon. (Error #\001)";
/* 980 */
@chunk char ErrorSignonAuth[] = "Either the username or the password specified was incorrect.";
/* 981 */
@chunk char ErrorSignonUnavailable[] = "The TOC service is temporarily unavailable.";
/* 982 */
@chunk char ErrorSignonWarning[] = "Your warning level is currently too high to sign on.";
/* 983 */
@chunk char ErrorSignonFrequent[] = "You have been connecting and disconnecting too frequently. Wait 10 minutes and try again. If you continue to try, you will need to wait longer.";
@chunk char ErrorSignonVersion[] = "The server version is not supported by this client.";
@chunk char ErrorSignonTimeout[] = "A timeout occurred while trying to signon.";
@chunk char ErrorSignonDropped[] = "Your connection to the server was lost.";

/* Server-reported general errors. */
/* 901 */
@chunk char ErrorGeneralNotAvail[] = "User \001 is not currently available.";
/* 902 */
@chunk char ErrorGeneralWarning[] = "Warning of user \001 is not currently available.";
/* 903 */
@chunk char ErrorGeneralSpeed[] = "You are exceeding the server speed limit. Wait one minute and try again. If you continue to try, you will need to wait longer.";

/* Server-reported IM and info errors. */
/* 960 */
@chunk char ErrorIMOutSpeed[] = "You are sending messages too fast to \001.";
/* 961 */
@chunk char ErrorIMInBig[] = "You missed an IM from \001 because it was too big.";
/* 962 */
@chunk char ErrorIMInSpeed[] = "You missed an IM from \001 because it was sent too fast.";

/* Other error messages */
@chunk char ErrorInternalMsg[] = "An internal error occurred.";
@chunk char ErrorCommMsg[] = "A communications error occurred.";

@end ErrorStringResource;

void ErrorDisplaySignon(ChunkHandle error, word value)
{
    char param[UHTA_NULL_TERM_BUFFER_SIZE];

    UtilHex32ToAscii(param, value, UHTAF_NULL_TERMINATE);
    MemLock(HandleOf(@ErrorSignonCantConnect));
    UserStandardDialog(NULL, NULL, NULL, param,
      LMemDerefHandles(HandleOf(@ErrorSignonCantConnect), error),
      (CDT_ERROR << CDBF_DIALOG_TYPE_OFFSET) |
      (GIT_NOTIFICATION << CDBF_INTERACTION_TYPE_OFFSET));
    MemUnlock(HandleOf(@ErrorSignonCantConnect));
}

Boolean ErrorTestIfUserScoped(ChunkHandle error)
{
    Boolean retval = FALSE;
    char *p;
    
    /* Currently, error messages containing a parameter marker expect a
       user name to be inserted at that point. */

    MemLock(HandleOf(@ErrorGeneralNotAvail));
    p = LMemDeref(ConstructOptr(HandleOf(@ErrorGeneralNotAvail), error));
    while (*p != '\0' && !retval)
        if (*(p++) == '\001')
            retval = TRUE;
    MemUnlock(HandleOf(@ErrorGeneralNotAvail));
    
    return retval;
}

void ErrorDisplayMessage(ChunkHandle error, char *param)
{
    MemLock(HandleOf(@ErrorGeneralNotAvail));
    @call application::MSG_GEN_APPLICATION_DO_STANDARD_DIALOG(
      0, NullOptr, NULL,
      NULL, NULL, param,
      LMemDeref(ConstructOptr(HandleOf(@ErrorGeneralNotAvail), error)),
      (CDT_ERROR << CDBF_DIALOG_TYPE_OFFSET) |
      (GIT_NOTIFICATION << CDBF_INTERACTION_TYPE_OFFSET));
    MemUnlock(HandleOf(@ErrorGeneralNotAvail));
}

void ErrorInternal(void)
{
    UserStandardDialogOptr(NullOptr, NullOptr, NullOptr, NullOptr,
      @ErrorInternalMsg,
      (CDT_ERROR << CDBF_DIALOG_TYPE_OFFSET) |
      (GIT_NOTIFICATION << CDBF_INTERACTION_TYPE_OFFSET));
}

void ErrorComm(void)
{
    UserStandardDialogOptr(NullOptr, NullOptr, NullOptr, NullOptr,
      @ErrorCommMsg,
      (CDT_ERROR << CDBF_DIALOG_TYPE_OFFSET) |
      (GIT_NOTIFICATION << CDBF_INTERACTION_TYPE_OFFSET));
}

void ErrorNotify(optr msg)
{
    UserStandardDialogOptr(NullOptr, NullOptr, NullOptr, NullOptr, msg,
      (CDT_NOTIFICATION << CDBF_DIALOG_TYPE_OFFSET) |
      (GIT_NOTIFICATION << CDBF_INTERACTION_TYPE_OFFSET));
}

