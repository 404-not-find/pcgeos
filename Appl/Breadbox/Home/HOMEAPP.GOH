/***********************************************************************
 *                      Global Variables
 ***********************************************************************/
@include <Objects/gviewcc.goh>
                
#define MANUFACTURER_ID_BREADBOX 16431

#define DOCUMENT_PROTOCOL_MAJOR 1
#define DOCUMENT_PROTOCOL_MINOR 0

#define INITIAL_UNIT_USER_ID            0x0001
#define INITIAL_ROOM_USER_ID            0x5500
#define INITIAL_GROUP_USER_ID				 0x7F80
#define FIRST_EVENT_USER_ID             0xAA00
#define FIRST_ROOM_EVENT_USER_ID        0xAB00

#define DOCUMENT_WIDTH          72*17/2
#define DOCUMENT_HEIGHT         11*72
#define VIEW_BACKGROUND_COLOR   C_WHITE

#define DOC_HEIGHT      11*72
#define DOC_WIDTH       72*17/2
#define UNIT_HEIGHT     30
#define UNIT_WIDTH      30
#define UNIT_TEXT_POINT_SIZE GetUnitTextPointSize()
#define UNIT_TEXT_FONT GetUnitTextFont()
#define ROOM_TEXT_POINT_SIZE GetRoomTextPointSize()
#define ROOM_TEXT_FONT GetRoomTextFont()
#define ROOM_SCALE_FACTOR GetRoomScaleFactor()
#define GRID_POINT_SIZE GetGridPointSize()

typedef WordFlags Days;
#define D_SUNDAY        0x0001
#define D_MONDAY        0x0002
#define D_TUESDAY       0x0004
#define D_WEDNESDAY  	0x0008
#define D_THURSDAY      0x0010
#define D_FRIDAY        0x0020
#define D_SATURDAY      0x0040
#define D_TODAY         0x0080
#define D_TOMORROW      0x0100
#define D_WEEKENDS      0x0200
#define D_WEEKDAYS      0x0400

typedef WordFlags HomeObjectOptions;
#define HOO_UNIT_MOVES_WITH_ROOM    0x0001
#define HOO_ALIGN_OBJECTS_TO_GRID	0x0002

typedef ByteEnum UnitStates;
#define HUS_OFF          0
#define HUS_DIM_1        1
#define HUS_DIM_2        2
#define HUS_DIM_3        3
#define HUS_DIM_4        4
#define HUS_DIM_5        5
#define HUS_DIM_6        6
#define HUS_DIM_7        7
#define HUS_DIM_8        8
#define HUS_DIM_9        9
#define HUS_DIM_10      10
#define HUS_DIM_11      11
#define HUS_DIM_12      12
#define HUS_DIM_13      13
#define HUS_DIM_14      14
#define HUS_DIM_15      15
#define HUS_DIM_16      16
#define HUS_DIM_17      17
#define HUS_DIM_18      18
#define HUS_DIM_19      19
#define HUS_DIM_20      20
#define HUS_DIM_21      21
#define HUS_DIM_22      22
#define HUS_ON          23
#define HUS_DIM         24
#define HUS_DIMMER      25
#define HUS_BRIGHTER    26

typedef ByteEnum UnitTypes;
#define HUT_LAMP        0
#define HUT_APPLIANCE    1

typedef enum {
   HOUSE_A,
   HOUSE_B,
   HOUSE_C,
   HOUSE_D,
   HOUSE_E,
   HOUSE_F,
   HOUSE_G,
   HOUSE_H,
   HOUSE_I,
   HOUSE_J,
   HOUSE_K,
   HOUSE_L,
   HOUSE_M,
   HOUSE_N,
   HOUSE_O,
   HOUSE_P
} HouseCodes;

typedef enum {
   UNIT_1,
   UNIT_2,
   UNIT_3,
   UNIT_4,
   UNIT_5,
   UNIT_6,
   UNIT_7,
   UNIT_8,
   UNIT_9,
   UNIT_10,
   UNIT_11,
   UNIT_12,
   UNIT_13,
   UNIT_14,
   UNIT_15,
   UNIT_16,
   UNIT_ALL,
   UNIT_ALL_LIGHTS
} UnitNumbers;

typedef enum {
   FUNCTION_ALL_UNITS_OFF,
   FUNCTION_ALL_LIGHTS_ON,
   FUNCTION_ON,
   FUNCTION_OFF,
   FUNCTION_DIMMER,
   FUNCTION_BRIGHTER,
   FUNCTION_ALL_LIGHTS_OFF,
   FUNCTION_DIM_TO_LEVEL
} FunctionCodes;

typedef struct {
	HomeObjectOptions HDO_objectOptions;
	VisTextCharAttr HDO_unitTextAttr;
	VisTextCharAttr HDO_roomTextAttr;
	word HDO_roomScaleFactor;
	word HDO_gridPointSize;
	word HDO_docWidth;
	word HDO_docHeight;
} HomeDocOptions;

typedef struct {
	word HMB_unitUserID;
	word HMB_roomUserID;
	word HMB_groupUserID;
	VMBlockHandle HMB_systemEventBlock[7];
	HomeDocOptions HMB_options;
} HomeMapBlock;

/*typedef struct {
	word HUB_userID;
	char HUB_name[33];
	word HUB_icon;
	Rectangle HUB_bounds;
	int HUB_textOff;
	int HUB_imageOff;
	HouseCodes HUB_houseCode;
	UnitNumbers HUB_unitNumber;
	word HUB_roomNumber;
	UnitTypes HUB_type;
	UnitStates HUB_state;
	UnitStates HUB_dimLevel;
	Boolean HUB_locked;
	Boolean HUB_textVisible;
} HomeUnitBlock;*/

/*typedef struct {
	word HRB_userID;
	char HRB_name[33];
	Rectangle HRB_bounds;
	word HRB_roomWidth;
	word HRB_roomHeight;
	UnitStates HRB_dimLevel;
	Boolean HRB_locked;
	Boolean HRB_textVisible;
} HomeRoomBlock;*/

typedef struct {
	word roomWidth;
	word roomHeight;
} HomeRoomBlock;

typedef struct {
	word icon;
	int textOff;
	int imageOff;
	HouseCodes houseCode;
	UnitNumbers unitNumber;
	word roomNumber;
	UnitTypes type;
	UnitStates state;
} HomeUnitBlock;

typedef struct {
	word members;
} HomeGroupBlock;

typedef struct {
	word HIB_userID;
	char HIB_name[33];
	Rectangle HIB_bounds;
	Boolean HIB_locked;
	Boolean HIB_textVisible;
	UnitStates HIB_dimLevel;
	union {
		HomeRoomBlock HRB;
		HomeUnitBlock HUB;
		HomeGroupBlock HGB;
	} HIB_fields;
	word HIB_extraData; /* used by groups--the start of the member list */
} HomeItemBlock;

typedef struct {
	LMemBlockHeader HEBH_standardHeader;
	ChunkHandle HEBH_firstEvent;
	word HEBH_numEvents;
	byte HEBH_refCount;
} HomeEventBlockHeader;

typedef struct {
	word HEB_ownerID;
	Days HEB_days;
   byte HEB_oneShot;
   byte HEB_hour;
   byte HEB_minute;
   byte HEB_plusMinus;
   FunctionCodes HEB_function;
   ChunkHandle HEB_nextEvent;
} HomeEventBlock;

typedef struct {
   HomeEventBlock HREB_origEvent;
   DayOfTheWeek HREB_randomDay;
   byte HREB_randomHour;
   byte HREB_randomMinute;
} HomeRandomEventBlock;

typedef struct {
   UnitStates unitState[256];
} statusBlockPtr;

typedef enum {
   BGCNLT_ALL_ITEMS,
   BGCNLT_UNITS,
   BGCNLT_ROOMS,
   BGCNLT_GROUPS
} BreadboxGCNListTypes;

/*******************************************************************************
* CLASS DEFINITIONS                                                            *
*******************************************************************************/

@class  HomeProcessClass, GenProcessClass;
   @message void MSG_PROCESS_TIMER_CLICK();
   @message (GEN_ITEM_GROUP_APPLY_MSG) MSG_PROCESS_CHANGE_DRIVER_PORT;
   @message void MSG_PROCESS_ADD_EVENT_TO_SYSTEM_LIST(word blockID, HomeEventBlock event);
   @message void MSG_PROCESS_SYSTEM_EVENT_CHANGED(word oldBlockID, HomeEventBlock oldEvent,
                                                  word newBlockID, HomeEventBlock newEvent);
   @message void MSG_PROCESS_DELETE_SYSTEM_EVENT(word blockID, HomeEventBlock eventToTrash);
	@message void MSG_PROCESS_EVENT_BLOCK_DELETED(word blockID);
   @message void MSG_PROCESS_LIST_EVENTS_BY_DAY();
   @message (GEN_VALUE_STATUS_MSG) MSG_PROCESS_SET_ITEM_DIM_LEVEL_DELAYED;
   @message void MSG_PROCESS_SET_ITEM_DIM_LEVEL();
@endc

@class HomeDocumentClass, GenDocumentClass;
	@message (GEN_DYNAMIC_LIST_QUERY_MSG) MSG_DOC_GET_GROUP_NAME;
	@message (GEN_ITEM_GROUP_APPLY_MSG) MSG_DOC_GROUP_SELECTED;
	@message void MSG_DOC_SELECT_ITEMS_FOR_GROUP(word groupID);
   @message (GEN_DYNAMIC_LIST_QUERY_MSG) MSG_DOC_GET_GROUP_MEMBER_NAME;
	@message void MSG_DOC_CREATE_NEW_GROUP();
	@message void MSG_DOC_EDIT_GROUP(word groupID);
	@message void MSG_DOC_EDIT_CREATE_GROUP_CANCELLED();
	@message void MSG_DOC_EDIT_CREATE_GROUP_COMPLETED();
	@message void MSG_DOC_GROUP_BOX_ITEM_SELECTED(word userID, char *itemName);
	@message void MSG_DOC_CREATE_NEW_UNIT();
	@message void MSG_DOC_CREATE_NEW_ROOM();
	@message void MSG_ALL_LIGHTS_ON();
	@message void MSG_ALL_LIGHTS_OFF();
	@message void MSG_ALL_UNITS_OFF();
	@message (GEN_BOOLEAN_GROUP_APPLY_MSG) MSG_DOC_OBJECT_OPTIONS_CHANGED;
	@message void MSG_DOC_OBJECT_TEXT_OPTIONS_CHANGED();
	@message void MSG_DOC_OBJECT_TEXT_STATUS_CHANGED();
	@message (GEN_VALUE_APPLY_MSG) MSG_DOC_ROOM_SCALE_FACTOR_CHANGED;
	@message (GEN_VALUE_APPLY_MSG) MSG_DOC_GRID_SIZE_CHANGED;
	@message void MSG_DOC_LIST_EVENTS_BY_ITEM();
   @message VMBlockHandle MSG_DOC_FIND_GROUP_BLOCK(word number);

	@vardata MemHandle TEMP_DOCUMENT_GROUP_LIST;
	@vardata word TEMP_DOCUMENT_GROUP_NUMBER;
   @vardata void TEMP_DOCUMENT_GROUP_IS_NEW;
@endc

@class IconClass, VisContentClass;
   @instance byte IC_scaleFactor = 0;
   @instance byte IC_status = 0;
   @instance ColorQuad IC_lineColor;
	@instance VMFileHandle IC_fileHandle;
   @instance VMFileHandle IC_exportFileHandle;
   @instance word IC_bitmapID;

   @message void MSG_ICON_VIEW_OPEN_ICON_DB();
   @message void MSG_ICON_VIEW_CLOSE_ICON_DB();
   @message void MSG_ICON_VIEW_SET_FILE_HANDLE(VMFileHandle file);
   @message VMFileHandle MSG_ICON_VIEW_GET_FILE_HANDLE();
   @message (GEN_DYNAMIC_LIST_QUERY_MSG) MSG_ICON_VIEW_QUERY_ICON_MONIKER;
   @message (GEN_DYNAMIC_LIST_QUERY_MSG) MSG_ICON_VIEW_QUERY_IMPORT_MONIKER;
	@message void MSG_ICON_VIEW_REPLACE_ICON_MONIKER(word icon, optr object);
	@message void MSG_ICON_VIEW_NEW_ICON();
	@message void MSG_ICON_VIEW_DELETE_ICON();
   @message void MSG_ICON_VIEW_EDIT_ICON();
   @message void MSG_ICON_VIEW_SHOW_ICON(word icon);
   @message void MSG_ICON_VIEW_SAVE_ICON();
   @message void MSG_ICON_VIEW_SAVE_AS_NEW_ICON();
	@message void MSG_ICON_VIEW_COPY_OTHER_ICON();
	@message void MSG_ICON_VIEW_UNDO_CHANGES();
	@message void MSG_ICON_VIEW_IMPORT_ICONS();
	@message void MSG_ICON_VIEW_OPEN_FILE_FOR_IMPORT();
	@message void MSG_ICON_VIEW_IMPORT_SELECTED_ICONS();
	@message void MSG_ICON_VIEW_EXPORT_ICONS();
	@message void MSG_ICON_VIEW_CANCEL_IMPORT_ICONS();
	@message void MSG_ICON_VIEW_SELECT_ICONS_FOR_EXPORT();
	@message void MSG_ICON_VIEW_EXPORT_SELECTED_ICONS();
	@message void MSG_ICON_VIEW_CANCEL_EXPORT_ICONS();
	@message (GEN_FILE_SELECTOR_NOTIFICATION_MSG) MSG_ICON_VIEW_ENTRY_SELECTED;
	@message void MSG_ICON_VIEW_UPDATE_BITMAP(ColorQuad color, sword xPos, sword yPos);
	@message (GEN_ITEM_GROUP_APPLY_MSG) MSG_ICON_VIEW_CHANGE_DISPLAYED_ICON;
@endc

@class HomeItemClass, VisClass;
   @instance word HI_userID;
   @instance char HI_name[33];
   @instance int HI_horizPos;
   @instance int HI_vertPos;
   @instance UnitStates HI_dimLevel;
   @instance Boolean HI_selected = FALSE;
   @instance Boolean HI_dragging = FALSE;
   @instance Boolean HI_locked = FALSE;
   @instance Boolean HI_textVisible = TRUE;

   @message void MSG_ITEM_DESTROY();
/*   @message (GEN_VALUE_STATUS_MSG) MSG_ITEM_SET_DIM_LEVEL;*/
   @message void MSG_ITEM_SET_DIM_LEVEL(byte value);
   @message (GEN_BOOLEAN_GROUP_APPLY_MSG) MSG_ITEM_LOCK;
   @message void MSG_ITEM_CLEAR_SELECTION();
   @message void MSG_ITEM_SET_ATTRS(word UserID);
   @message void MSG_ITEM_GET_ATTRS_FROM_FILE(word UserID);
   @message void MSG_ITEM_DO_FUNCTION(word userID, FunctionCodes function);
   @message void MSG_ITEM_CHANGE_NAME();
   @message void MSG_ITEM_CHANGE_SETTINGS();
   @message void MSG_ITEM_ADD_EVENT();
   @message void MSG_ITEM_EDIT_EVENT();
   @message void MSG_ITEM_DELETE_EVENT();
   @message void MSG_ITEM_DELETE_PASSED_EVENT(HomeEventBlock eventToTrash);
   @message (GEN_ITEM_GROUP_APPLY_MSG) MSG_ITEM_CHANGE_STATUS;
   @message void MSG_ITEM_DIM_OR_BRIGHTEN();
   @message (GEN_BOOLEAN_GROUP_APPLY_MSG) MSG_ITEM_CHANGE_TEXT_VISIBILITY;
	@message (GEN_DYNAMIC_LIST_QUERY_MSG) MSG_QUERY_EVENT_MONIKER;
	@message void MSG_ITEM_BUILD_EVENT_STRING(word item, char *string);
	@message void MSG_ITEM_GET_NAME(char *string);
   @message word MSG_ITEM_GET_NUM_EVENTS();
	@message void MSG_ITEM_ICON_CHANGED(word icon);
   @message void MSG_ITEM_ICON_DELETED(word icon);
   @message void MSG_ITEM_ALLOC_OR_ATTACH_EVENT_BLOCK(word BlockID);
   @message void MSG_ITEM_DEC_OR_DELETE_EVENT_BLOCK(word BlockID);
	@message VMBlockHandle MSG_ITEM_GET_EVENT_BLOCK();
   @message void MSG_ITEM_CHECK_POSITION_AND_DOC_SIZE();
   @message void MSG_ITEM_SWITCH_BY_ID(word ID, UnitStates Status);
@endc

@class HomeGroupClass, HomeItemClass;
	@instance word HG_numMembers = 0;

	@message void MSG_GROUP_SET_GROUP_SELECTED(word groupID);
   @message void MSG_GROUP_UPDATE_GROUP_PROPERTIES(word groupID);
   @message (GEN_DYNAMIC_LIST_QUERY_MSG) MSG_GROUP_GET_MEMBER_NAME;
   @message void MSG_GROUP_EDIT_MEMBER_LIST();
@endc

@class HomeUnitClass, HomeItemClass;
   @instance word HU_icon = 0;
   @instance int HU_textOff = 0;
   @instance int HU_imageOff = 0;
   @instance HouseCodes HU_houseCode;
   @instance UnitNumbers HU_unitNumber;
   @instance word HU_roomNumber;
   @instance UnitTypes HU_type;
   @instance UnitStates HU_state = HUS_ON;

   @message void MSG_UNIT_SWITCH(HouseCodes House, UnitNumbers Unit, UnitStates Status);
   @message void MSG_UNIT_SWITCH_IN_ROOM(word Room, UnitStates Status);
   @message void MSG_UNIT_IS_IN_ROOM(word ID, word Room);
   @message (GEN_ITEM_GROUP_APPLY_MSG) MSG_UNIT_CHANGE_HOUSE_CODE;
   @message (GEN_ITEM_GROUP_APPLY_MSG) MSG_UNIT_CHANGE_UNIT_NUMBER;
   @message (GEN_ITEM_GROUP_APPLY_MSG) MSG_UNIT_CHANGE_TYPE;
	@message void MSG_UNIT_CALC_SIZE(GStateHandle gstate);
   @message void MSG_UNIT_RECALC_SIZE();
   @message word MSG_UNIT_GET_NUMBER_AND_HOUSE();
   @message void MSG_UNIT_MOVE_EVENTS(word oldBlockID, word BlockID);
   @message void MSG_UNIT_EDIT_ICON();
   @message void MSG_UNIT_CHANGE_ICON();
   @message void MSG_UNIT_ARE_YOU_IN_ROOM(word roomID, Rectangle Bounds);
   @message void MSG_UNIT_ROOM_HAS_MOVED(word roomID, Rectangle oldBounds, Rectangle newBounds);
@endc

@class HomeRoomClass, HomeItemClass;
   @instance word HR_roomWidth;
   @instance word HR_roomHeight;

   @message void MSG_ROOM_IS_UNIT_INSIDE(word ID, Rectangle Bounds);
	@message void MSG_ROOM_UNIT_IS_IN_ROOM(word unitID, word roomID);
	@message (GEN_VALUE_APPLY_MSG) MSG_ROOM_CHANGE_HEIGHT;
	@message (GEN_VALUE_APPLY_MSG) MSG_ROOM_CHANGE_WIDTH;
	@message void MSG_ROOM_CHANGE_SCALE_FACTOR(word oldScale, word newScale);
   @message void MSG_ROOM_REDRAW();
@endc

@class HomeValueClass, GenValueClass;
@endc

@class HomeBooleanGroupClass, GenBooleanGroupClass;
   @message void MSG_SET_DAYS(Days daysToSet);
   @message (GEN_BOOLEAN_GROUP_STATUS_MSG) MSG_SET_RANDOM;
   @message (GEN_BOOLEAN_GROUP_STATUS_MSG) MSG_SET_ONCE;
   @message (GEN_BOOLEAN_GROUP_STATUS_MSG) MSG_CHECK_ONCE;
@endc


