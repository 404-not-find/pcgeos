@ifndef BLACKWHITE
@visMoniker MinEjectMoniker = {
	size = standard;
	style = icon;
	color = color4;
	aspectRatio = normal;
	cachedSize = 16, 12;
	gstring {
		GSDrawBitmapAtCP (106),
		Bitmap (16,12,BMC_PACKBITS,(BMT_MASK|BMF_4BIT)),
		0x01, 0x00, 0x00, 0xf9, 0xff, 
		0x01, 0x01, 0x00, 0xfe, 0xff, 0x00, 0xf0, 0xfd, 
		0xff, 
		
		0x01, 0x03, 0x80, 0xfe, 0xff, 0x01, 0x07, 0x8f, 
		0xfe, 
		0xff, 
		0x06, 0x07, 0xc0, 0xff, 0xff, 0xf0, 0x77, 0x78, 
		0xfe, 
		0xff, 
		0x09, 0x0f, 0xe0, 0xff, 0xff, 0x07, 0x77, 0x77, 
		0x8f, 
		0xff, 0xff, 
		0x03, 0x1f, 0xf0, 0xff, 0xf0, 0xfe, 0x77, 0x02, 
		0x78, 
		0xff, 0xff, 
		0x03, 0x3f, 0xf8, 0xff, 0x87, 0xfd, 0x77, 0x01, 
		0x8f, 
		0xff, 
		0x01, 0x3f, 0xf8, 0xf9, 0xff, 
		0x01, 0x00, 0x00, 0xf9, 0xff, 
		0x02, 0x3f, 0xf8, 0xff, 0xfc, 0x88, 0x01, 0x8f, 
		0xff,

		0x03, 0x3f, 0xf8, 0xff, 0x87, 0xfd, 0x77, 0x01,
		0x7f,
		0xff,
		0x01, 0x1f, 0xf8, 0xf9, 0xff,
		GSEndString()
	}
}
@endif

@ifdef BLACKWHITE
@visMoniker MinEjectMoniker = {
	size = standard;
	style = icon;
	color = gray1;
	aspectRatio = normal;
	cachedSize = 16, 12;
	gstring {
		GSFillBitmapAtCP (30),
		Bitmap (16,12,BMC_UNCOMPACTED,BMF_MONO),
		0x00, 0x00, 
		0x01, 0x00, 
		0x03, 0x80, 
		0x07, 0xc0, 
		0x0f, 0xe0, 
		0x1f, 0xf0, 
		0x3f, 0xf8, 
		0x00, 0x00, 
		0x00, 0x00, 
		0x3f, 0xf8, 
		0x3f, 0xf8, 
		0x00, 0x00, 
		GSEndString()
	}
}
@endif

@ifndef BLACKWHITE
@visMoniker MinStopMoniker = {
	size = standard;
	style = icon;
	color = color4;
	aspectRatio = normal;
	cachedSize = 16, 12;
	gstring {
		GSDrawBitmapAtCP (113),
		Bitmap (16,12,BMC_PACKBITS,(BMT_MASK|BMF_4BIT)),
		0x01, 0x00, 0x00, 0xf9, 0xff, 
		0x03, 0x1f, 0xf8, 0xff, 0xf0, 0xfd, 0x00, 0x01, 
		0x8f, 
		0xff,
		0x03, 0x1f, 0xf8, 0xff, 0xf0, 0xfd, 0x77, 0x01, 
		0xff, 
		0xff, 
		0x03, 0x1f, 0xf8, 0xff, 0xf0, 0xfd, 0x77, 0x01, 
		0xff, 
		0xff, 
		0x03, 0x1f, 0xf8, 0xff, 0xf0, 0xfd, 0x77, 0x01, 
		0xff, 
		0xff, 
		0x03, 0x1f, 0xf8, 0xff, 0xf0, 0xfd, 0x77, 0x01, 
		0xff, 
		0xff, 
		0x03, 0x1f, 0xf8, 0xff, 0xf0, 0xfd, 0x77, 0x01, 
		0xff, 
		0xff, 
		0x03, 0x1f, 0xf8, 0xff, 0xf0, 0xfd, 0x77, 0x01, 
		0xff, 
		0xff, 
		0x03, 0x1f, 0xf8, 0xff, 0xf0, 0xfd, 0x77, 0x01,
		0xff,
		0xff,
		0x03, 0x1f, 0xf8, 0xff, 0xf0, 0xfd, 0x77, 0x01,
		0xff,
		0xff,
		0x03, 0x1f, 0xf8, 0xff, 0xf8, 0xfb, 0xff,
		0x01, 0x00, 0x00, 0xf9, 0xff,
		GSEndString()
	}
}
@endif

@ifdef BLACKWHITE
@visMoniker MinStopMoniker = {
	size = standard;
	style = icon;
	color = gray1;
	aspectRatio = normal;
	cachedSize = 16, 12;
	gstring {
		GSFillBitmapAtCP (30),
		Bitmap (16,12,BMC_UNCOMPACTED,(BMF_MONO)),
		0x00, 0x00, 0x1f, 0xf8, 0x1f, 0xf8, 0x1f, 0xf8, 
		0x1f, 0xf8, 0x1f, 0xf8, 0x1f, 0xf8, 0x1f, 0xf8, 
		0x1f, 0xf8, 0x1f, 0xf8, 0x1f, 0xf8, 0x00, 0x00, 
		
		GSEndString()
	}
}
@endif

@ifndef BLACKWHITE
@visMoniker MinRewMoniker = {
	size = standard;
	style = icon;
	color = color4;
	aspectRatio = normal;
	cachedSize = 16, 12;
	gstring {
		GSDrawBitmapAtCP (132),
		Bitmap (16,12,BMC_PACKBITS,(BMT_MASK|BMF_4BIT)),
		0x01, 0x00, 0x00, 0xf9, 0xff,
		0x09, 0x60, 0x82, 0xf8, 0x8f, 0xff, 0xff, 0x0f,
		0xff,
		0xff, 0x0f,
		0x09, 0x71, 0xc7, 0xf8, 0x7f, 0xff, 0xf0, 0x7f,
		0xff,
		0xf0, 0x7f,
		0x09, 0x73, 0xcf, 0xf8, 0x7f, 0xff, 0x07, 0x7f,
		0xff, 
		0x07, 0x7f, 
		0x09, 0x77, 0xdf, 0xf8, 0x7f, 0xf0, 0x77, 0x7f, 
		0xf0, 
		0x77, 0x7f, 
		0x09, 0x7f, 0xff, 0xf8, 0x7f, 0x07, 0x77, 0x7f, 
		0x07, 
		0x77, 0x7f, 
		0x09, 0x7f, 0xff, 0xf8, 0x7f, 0x87, 0x77, 0x7f, 
		0x87, 
		0x77, 0x7f, 
		0x09, 0x7f, 0xff, 0xf8, 0x7f, 0x87, 0x77, 0x7f, 
		0x87, 
		0x77, 0x7f, 
		0x09, 0x77, 0xdf, 0xf8, 0x7f, 0xf8, 0x77, 0x7f,
		0xf8,
		0x77, 0x7f,
		0x09, 0x73, 0xcf, 0xf8, 0x7f, 0xff, 0x87, 0x7f,
		0xff,
		0x87, 0x7f,
		0x09, 0x71, 0xc7, 0xf8, 0x7f, 0xff, 0xf8, 0x7f,
		0xff,
		0xf8, 0x7f,
		0x09, 0x70, 0x82, 0xf8, 0x7f, 0xff, 0xff, 0x8f,
		0xff,
		0xff, 0x8f,
		GSEndString()
	}
}
@endif

@ifdef BLACKWHITE
@visMoniker MinRewMoniker = {
	size = standard;
	style = icon;
	color = gray1;
	aspectRatio = normal;
	cachedSize = 16, 12;
	gstring {
		GSFillBitmapAtCP (30),
		Bitmap (16,12,BMC_UNCOMPACTED,(BMF_MONO)),
		0x00, 0x00, 0x60, 0x82, 0x61, 0x86, 0x63, 0x8e, 
		0x67, 0x9e, 0x6f, 0xbe, 0x7f, 0xfe, 0x6f, 0xbe, 
		0x67, 0x9e, 0x63, 0x8e, 0x61, 0x86, 0x60, 0x82, 
		
		GSEndString()
	}
}
@endif

@ifndef BLACKWHITE
@visMoniker MinPlayMoniker = {
	size = standard;
	style = icon;
	color = color4;
	aspectRatio = normal;
	cachedSize = 16, 12;
	gstring {
		GSDrawBitmapAtCP (114),
		Bitmap (16,12,BMC_PACKBITS,(BMT_MASK|BMF_4BIT)),
		0x01, 0x00, 0x00, 0xf9, 0xff,
		0x04, 0x04, 0x00, 0xff, 0xff, 0xf8, 0xfc, 0xff,

		0x05, 0x06, 0x00, 0xff, 0xff, 0xf8, 0x8f, 0xfd,
		0xff,

		0x05, 0x07, 0x00, 0xff, 0xff, 0xf8, 0x78, 0xfd,
		0xff, 
		
		0x06, 0x07, 0x80, 0xff, 0xff, 0xf8, 0x77, 0x8f, 
		0xfe, 
		0xff, 
		0x06, 0x07, 0xc0, 0xff, 0xff, 0xf8, 0x77, 0x78, 
		0xfe, 
		0xff, 
		0x09, 0x07, 0xe0, 0xff, 0xff, 0xf8, 0x77, 0x77, 
		0x8f, 
		0xff, 0xff, 
		0x06, 0x07, 0xe0, 0xff, 0xff, 0xf8, 0x77, 0x77, 
		0xfe, 
		0xff, 
		0x06, 0x07, 0xc0, 0xff, 0xff, 0xf8, 0x77, 0x7f, 
		0xfe,
		0xff,
		0x05, 0x07, 0x80, 0xff, 0xff, 0xf8, 0x77, 0xfd,
		0xff,

		0x05, 0x07, 0x00, 0xff, 0xff, 0xf8, 0x7f, 0xfd,
		0xff,

		0x04, 0x06, 0x00, 0xff, 0xff, 0xf8, 0xfc, 0xff,

		GSEndString()
	}
}
@endif

@ifdef BLACKWHITE
@visMoniker MinPlayMoniker = {
	size = standard;
	style = icon;
	color = gray1;
	aspectRatio = normal;
	cachedSize = 16, 12;
	gstring {
		GSFillBitmapAtCP (30),
		Bitmap (16,12,BMC_UNCOMPACTED,(BMF_MONO)),
		0x00, 0x00, 0x04, 0x00, 0x06, 0x00, 0x07, 0x00, 
		0x07, 0x80, 0x07, 0xc0, 0x07, 0xe0, 0x07, 0xc0, 
		0x07, 0x80, 0x07, 0x00, 0x06, 0x00, 0x04, 0x00, 
		
		GSEndString()
	}
}
@endif

@ifndef BLACKWHITE
@visMoniker MinFwdMoniker = {
	size = standard;
	style = icon;
	color = color4;
	aspectRatio = normal;
	cachedSize = 16, 12;
	gstring {
		GSDrawBitmapAtCP (132),
		Bitmap (16,12,BMC_PACKBITS,(BMT_MASK|BMF_4BIT)),
		0x01, 0x00, 0x00, 0xf9, 0xff,
		0x09, 0x41, 0x06, 0xf8, 0xff, 0xff, 0xf8, 0xff,
		0xff,
		0xf8, 0x8f,
		0x09, 0x61, 0x87, 0xf8, 0x8f, 0xff, 0xf8, 0x8f,
		0xff,
		0xf8, 0x7f,
		0x09, 0x71, 0xc7, 0xf8, 0x78, 0xff, 0xf8, 0x78, 
		0xff, 
		0xf8, 0x7f, 
		0x09, 0x79, 0xe7, 0xf8, 0x77, 0x8f, 0xf8, 0x77, 
		0x8f, 
		0xf8, 0x7f, 
		0x09, 0x7d, 0xf7, 0xf8, 0x77, 0x78, 0xf8, 0x77, 
		0x78, 
		0xf8, 0x7f, 
		0x09, 0x7f, 0xff, 0xf8, 0x77, 0x77, 0x88, 0x77, 
		0x77, 
		0x88, 0x7f, 
		0x09, 0x7f, 0xff, 0xf8, 0x77, 0x77, 0xf8, 0x77, 
		0x77, 
		0xf8, 0x7f, 
		0x09, 0x7d, 0xf7, 0xf8, 0x77, 0x7f, 0xf8, 0x77,
		0x7f,
		0xf8, 0x7f,
		0x09, 0x79, 0xe7, 0xf8, 0x77, 0xff, 0xf8, 0x77,
		0xff,
		0xf8, 0x7f,
		0x09, 0x71, 0xc7, 0xf8, 0x7f, 0xff, 0xf8, 0x7f,
		0xff,
		0xf8, 0x7f,
		0x09, 0x61, 0x87, 0xf8, 0xff, 0xff, 0xf8, 0xff,
		0xff,
		0xf8, 0xff,
		GSEndString()
	}
}
@endif

@ifdef BLACKWHITE
@visMoniker MinFwdMoniker = {
	size = standard;
	style = icon;
	color = gray1;
	aspectRatio = normal;
	cachedSize = 16, 12;
	gstring {
		GSFillBitmapAtCP (30),
		Bitmap (16,12,BMC_UNCOMPACTED,(BMF_MONO)),
		0x00, 0x00, 0x41, 0x06, 0x61, 0x86, 0x71, 0xc6, 
		0x79, 0xe6, 0x7d, 0xf6, 0x7f, 0xfe, 0x7d, 0xf6, 
		0x79, 0xe6, 0x71, 0xc6, 0x61, 0x86, 0x41, 0x06, 
		
		GSEndString()
	}
}
@endif

@ifndef BLACKWHITE
@visMoniker MinPauseMoniker = {
	size = standard;
	style = icon;
	color = color4;
	aspectRatio = normal;
	cachedSize = 16, 12;
	gstring {
		GSDrawBitmapAtCP (125),
		Bitmap (16,12,BMC_PACKBITS,(BMT_MASK|BMF_4BIT)),
		0x01, 0x00, 0x00, 0xf9, 0xff,
		0x09, 0x1c, 0x70, 0xff, 0xf8, 0x88, 0xff, 0xf8,
		0x88,
		0xff, 0xff,
		0x09, 0x1e, 0x78, 0xff, 0xf8, 0x77, 0xff, 0xf8,
		0x77,
		0xff, 0xff,
		0x09, 0x1e, 0x78, 0xff, 0xf8, 0x77, 0xff, 0xf8, 
		0x77, 
		0xff, 0xff, 
		0x09, 0x1e, 0x78, 0xff, 0xf8, 0x77, 0xff, 0xf8, 
		0x77, 
		0xff, 0xff, 
		0x09, 0x1e, 0x78, 0xff, 0xf8, 0x77, 0xff, 0xf8, 
		0x77, 
		0xff, 0xff, 
		0x09, 0x1e, 0x78, 0xff, 0xf8, 0x77, 0xff, 0xf8, 
		0x77, 
		0xff, 0xff, 
		0x09, 0x1e, 0x78, 0xff, 0xf8, 0x77, 0xff, 0xf8, 
		0x77, 
		0xff, 0xff, 
		0x09, 0x1e, 0x78, 0xff, 0xf8, 0x77, 0xff, 0xf8,
		0x77,
		0xff, 0xff,
		0x09, 0x1e, 0x78, 0xff, 0xf8, 0x77, 0xff, 0xf8,
		0x77,
		0xff, 0xff,
		0x06, 0x1e, 0x78, 0xff, 0xf8, 0xff, 0xff, 0xf8,
		0xfe,
		0xff,
		0x01, 0x00, 0x00, 0xf9, 0xff,
		GSEndString()
	}
}
@endif

@ifdef BLACKWHITE
@visMoniker MinPauseMoniker = {
	size = standard;
	style = icon;
	color = gray1;
	aspectRatio = normal;
	cachedSize = 16, 12;
	gstring {
		GSFillBitmapAtCP (30),
		Bitmap (16,12,BMC_UNCOMPACTED,(BMF_MONO)),
		0x00, 0x00, 0x06, 0x30, 0x06, 0x30, 0x06, 0x30, 
		0x06, 0x30, 0x06, 0x30, 0x06, 0x30, 0x06, 0x30, 
		0x06, 0x30, 0x06, 0x30, 0x06, 0x30, 0x00, 0x00, 
		
		GSEndString()
	}
}
@endif

@ifndef BLACKWHITE
@visMoniker MinLoadMoniker = {
	size = standard;
	style = icon;
	color = color4;
	aspectRatio = normal;
	cachedSize = 16, 12;
	gstring {
		GSDrawBitmapAtCP (104),
		Bitmap (16,12,BMC_PACKBITS,(BMT_MASK|BMF_4BIT)),
		0x01, 0x00, 0x00, 0xf9, 0xff,
		0x02, 0x3f, 0xf8, 0xff, 0xfc, 0x00, 0x01, 0x0f,
		0xff,

		0x03, 0x1f, 0xf8, 0xff, 0xf8, 0xfd, 0x77, 0x01,
		0xff,
		0xff,
		0x09, 0x0f, 0xf0, 0xff, 0xff, 0x87, 0x77, 0x77, 
		0x7f, 
		0xff, 0xff, 
		0x06, 0x07, 0xe0, 0xff, 0xff, 0xf8, 0x77, 0x77, 
		0xfe, 
		0xff, 
		0x01, 0x03, 0xc0, 0xfe, 0xff, 0x01, 0x87, 0x7f, 
		0xfe, 
		0xff, 
		0x01, 0x01, 0x80, 0xfe, 0xff, 0x00, 0xf8, 0xfd, 
		0xff, 
		
		0x01, 0x00, 0x00, 0xf9, 0xff, 
		0x02, 0x3f, 0xf8, 0xff, 0xfc, 0x88, 0x01, 0x8f, 
		0xff, 

		0x03, 0x3f, 0xf8, 0xff, 0x07, 0xfd, 0x77, 0x01,
		0xff,
		0xff,
		0x01, 0x1f, 0xf8, 0xf9, 0xff,
		0x01, 0x00, 0x00, 0xf9, 0xff,
		GSEndString()
	}
}
@endif

@ifdef BLACKWHITE
@visMoniker MinLoadMoniker = {
	size = standard;
	style = icon;
	color = gray1;
	aspectRatio = normal;
	cachedSize = 16, 12;
	gstring {
		GSFillBitmapAtCP (30),
		Bitmap (16,12,BMC_UNCOMPACTED,(BMF_MONO)),
		0x00, 0x00, 0x3f, 0xf8, 0x1f, 0xf0, 0x0f, 0xe0, 
		0x07, 0xc0, 0x03, 0x80, 0x01, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x3f, 0xf8, 0x3f, 0xf8, 0x00, 0x00, 
		
		GSEndString()
	}
}
@endif
