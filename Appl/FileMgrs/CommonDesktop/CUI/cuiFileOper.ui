/*
 *
 * Project:	PC GEOS
 * Module:	desktop
 * File:	UI/uiFileOper.ui
 *
 * Author:	Brian Chin
 *
 *	This file contains the user Interface description for the
 * desktop.
 *
 *	$Id: cuiFileOper.ui,v 1.2 98/06/03 13:48:32 joon Exp $
 *
 */

start FileOperationUI, notDetachable;

/*-----------------------------------------------------------------------------
	Rename box
-----------------------------------------------------------------------------*/

RenameBox = FileOpAppActiveBox ignoreDirty {
	moniker = "Rename";
	children = RenameCurDir, RenameFromEntry, RenameToEntry,
#if !_DOS_LONG_NAME_SUPPORT
			RenameInstructions,
#endif
			RenameStatus, 
			RenameControl;
#ifdef GPC
	hints = {
		ATTR_GEN_HELP_CONTEXT { char "dRenFile",0 },
		ATTR_GEN_HELP_FILE { char "ui",0 }
	}
#endif
#if _GMGR
 #if _DOCMGR
	hints = {
		ATTR_GEN_HELP_CONTEXT { char "dRenFile",0 },
		ATTR_GEN_HELP_FILE { char "ui",0 }
	}
 #else
	hints = {
		ATTR_GEN_HELP_CONTEXT { char "dRenFile",0 }
	}
 #endif
#endif
}

/* rename current directory field */

RenameCurDir = PathnameStorage ignoreDirty {
#if _NEWDESKBA		/* Joon did this. */
	genStates = default -usable;
#endif
#if GPC_FILE_OP_DIALOG_PATHNAME
	moniker = "Location:";
#else
	moniker = "Current Folder is";
#endif
	textDisplayAttributes = DESK_SINGLE_LINE_DISPLAY_ATTRIBUTES;
	hints = {
		ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE,
#if GPC_FILE_OP_DIALOG_PATHNAME
		HINT_PLACE_MONIKER_ABOVE
#else
		HINT_IF_SYSTEM_ATTRS { SystemAttrs mask SA_HORIZONTALLY_TINY },
			HINT_PLACE_MONIKER_ABOVE,
		HINT_ELSE,
			HINT_PLACE_MONIKER_TO_LEFT,
		HINT_ENDIF, /*
		HINT_FIXED_SIZE {
			SpecWidth <SST_PIXELS, 216>
			SpecHeight <0, 0>
		}
		*/
#endif
	}
}

/* rename from field */

RenameFromEntry = FileOpFileList ignoreDirty {
	moniker = "Rename:";
	textDisplayAttributes = DESK_SINGLE_LINE_DISPLAY_ATTRIBUTES;
	hints = { 
		ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		/*
		HINT_INITIAL_SIZE {
			SpecWidth <SST_PIXELS, 216>
			SpecHeight <0, 0>
		}
		*/
	}
}

/* rename to field */

RenameToEntry = GenText ignoreDirty {
	moniker = 'T', "To:";
	textDisplayAttributes = DESK_SINGLE_LINE_EDIT_ATTRIBUTES;
#if _DOS_LONG_NAME_SUPPORT
	maxLength = "FILE_LONGNAME_LENGTH";
#else
	/* max length set per file */
#endif
	destination = process;
	hints = {
		ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE,
		ATTR_GEN_TEXT_LEGAL_FILENAMES,
		ATTR_GEN_TEXT_SET_OBJECT_ENABLED_WHEN_TEXT_EXISTS {
			optr	RenameCtrlRename
		},
		HINT_DEFAULT_FOCUS,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT
	}
}
	

#if !_DOS_LONG_NAME_SUPPORT
/* 8.3 name instructions */

RenameInstructions = GenText ignoreDirty {
	genAttributes = readOnly;
	hints = {
		ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE,
		HINT_EXPAND_HEIGHT_TO_FIT_PARENT
	}
}
#endif /* !_DOS_LONG_NAME_SUPPORT */


/* rename status group */

RenameStatus = GenText ignoreDirty {
	genAttributes = readOnly;
	textDisplayAttributes = DESK_SINGLE_LINE_DISPLAY_ATTRIBUTES;
	hints = { 
		ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		/*
		HINT_INITIAL_SIZE {
			SpecWidth <SST_PIXELS, 216>
			SpecHeight <0, 0>
		}
		*/
	}
}


/* rename control group */

/* RenameControl group needed for group enabling/disabling */
RenameControl = GenInteraction ignoreDirty {
	children = RenameCtrlRename, RenameCtrlNext, RenameCtrlCancel;
	hints = {
		HINT_ORIENT_CHILDREN_HORIZONTALLY
	}
}
RenameCtrlRename = GenTrigger ignoreDirty {
	moniker = 'R', "Rename";
	action = MSG_FM_END_RENAME, process;
	genStates = default -enabled;
	/* initiatesBusyState has no effect in modal box */
	/*genAttributes = default +initiatesBusyState;*/
	/* no signalInteractionComplete, done manually */
	hints = {
		HINT_DEFAULT_DEFAULT_ACTION,
		HINT_SEEK_REPLY_BAR
	}
}
RenameCtrlNext = GenTrigger ignoreDirty {
	moniker = 'N', "Next";
	action = MSG_RENAME_NEXT, process;
#if _DOCMGR || (_NEWDESK && defined(GPC_ONLY))
	genStates = default -usable;
#endif
	hints = {
		HINT_SEEK_REPLY_BAR
	}
}
RenameCtrlCancel = GenTrigger ignoreDirty {
#if GPC_FILE_OP_CANCEL_TRIGGERS || _DOCMGR
	moniker = "VMO_CANCEL", "Don't Rename";
#else
	/* specific UI provides moniker */
#endif
	action = MSG_CLEAR_FILE_LIST_VIA_PROCESS, RenameFromEntry;
	genAttributes = signalInteractionComplete;
	hints = {
		ATTR_GEN_TRIGGER_INTERACTION_COMMAND {word IC_DISMISS},
		HINT_SEEK_REPLY_BAR
	}
}


/*-----------------------------------------------------------------------------
	Create Directory box
-----------------------------------------------------------------------------*/

CreateDirBox = FileOperationBox ignoreDirty {
	moniker = "Create Folder";
	children =	CreateDirCurDir,
			CreateDirNameEntry,
			CreateDirStatus,
#if GPC_FILE_OP_CANCEL_TRIGGERS || _DOCMGR
			CreateDirCtrlCreate,
			CreateDirCtrlCancel;
#else
			CreateDirCtrlCreate;
#endif
	hints = {
		ATTR_GEN_HELP_CONTEXT { char "dCrFolder",0 }
	}
}

/* current directory field */

CreateDirCurDir = PathnameStorage ignoreDirty {
#if _NEWDESKBA		/* Joon did this. */
	genStates = default -usable;
#endif
#if GPC_FILE_OP_DIALOG_PATHNAME
	moniker = "Location:";
#else
	moniker = "Current Folder is";
#endif
	textDisplayAttributes = DESK_SINGLE_LINE_DISPLAY_ATTRIBUTES;
	hints = { 
		ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE,
#if GPC_FILE_OP_DIALOG_PATHNAME
		HINT_PLACE_MONIKER_ABOVE
#else
		/*
		HINT_FIXED_SIZE {
			SpecWidth <SST_PIXELS, 216>
			SpecHeight <0, 0>
		},
		*/
		HINT_IF_SYSTEM_ATTRS { SystemAttrs mask SA_HORIZONTALLY_TINY },
			HINT_PLACE_MONIKER_ABOVE,
		HINT_ELSE,
			HINT_PLACE_MONIKER_TO_LEFT,
		HINT_ENDIF
#endif
	}
}

/* create directory name field */

CreateDirNameEntry = GenText ignoreDirty {
	moniker = 'F', "New Folder Name:";
	textDisplayAttributes = DESK_SINGLE_LINE_EDIT_ATTRIBUTES;
	maxLength = "FILE_LONGNAME_LENGTH";
	hints = {
		ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE,
		ATTR_GEN_TEXT_LEGAL_FILENAMES,
		ATTR_GEN_TEXT_SET_OBJECT_ENABLED_WHEN_TEXT_EXISTS {
			optr	CreateDirCtrlCreate
		},
		HINT_IF_SYSTEM_ATTRS { SystemAttrs mask SA_HORIZONTALLY_TINY },
			HINT_PLACE_MONIKER_ABOVE,
		HINT_ELSE,
			HINT_PLACE_MONIKER_TO_LEFT,
		HINT_ENDIF,
		HINT_DEFAULT_FOCUS,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT
		/*ATTR_GEN_TEXT_ALLOW_SPACES*/
	}
}

/* status group */

CreateDirStatus = GenText ignoreDirty {
	genAttributes = readOnly;
	textDisplayAttributes = DESK_SINGLE_LINE_DISPLAY_ATTRIBUTES;
	hints = { 
		ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		/*
		HINT_INITIAL_SIZE {
			SpecWidth <SST_PIXELS, 216>
			SpecHeight <0, 0>
		}
		*/
	}
}

/* control group */

CreateDirCtrlCreate = GenTrigger ignoreDirty {
	moniker = 't', "Create";
	action = MSG_FM_END_CREATE_DIR, process;
	genStates = default -enabled;
	/* initiatesBusyState has no effect in modal box */
	/*genAttributes = default +initiatesBusyState;*/
	/* no signalInteractionComplete, done manually */
	hints = {
		HINT_DEFAULT_DEFAULT_ACTION,
		HINT_SEEK_REPLY_BAR
	}
}

#if GPC_FILE_OP_CANCEL_TRIGGERS || _DOCMGR
CreateDirCtrlCancel = GenTrigger ignoreDirty {
	moniker = "VMO_CANCEL", "Don't Create";
	hints = {
		HINT_SEEK_REPLY_BAR,
		ATTR_GEN_TRIGGER_INTERACTION_COMMAND {
			word IC_DISMISS
		}
	}
}
#endif
				   
/*-----------------------------------------------------------------------------
	Change Attributes box
-----------------------------------------------------------------------------*/

#ifndef GEOLAUNCHER		/* no Attributes item for GeoLauncher */

ChangeAttrBox = FileOpAppActiveBox ignoreDirty {
	moniker = "Change Attributes";
	children = ChangeAttrCurDir, ChangeAttrNameList,
			ChangeAttrLists,	
			ChangeFlagsToList,
			ChangeAttrStatus,
			ChangeAttrCtrlChange,
			ChangeAttrCtrlNext,
			/*ChangeAttrCtrlReset,*/
			ChangeAttrCtrlCancel;
#if _GMGR
	hints = {
		ATTR_GEN_HELP_CONTEXT { char "dChAttr",0 }
	}
#endif
}

/* change attributes current directory field */

ChangeAttrCurDir = PathnameStorage ignoreDirty {
#if _NEWDESKBA		/* Joon did this. */
	genStates = default -usable;
#endif
	moniker = "Current Folder is";
	textDisplayAttributes = DESK_SINGLE_LINE_DISPLAY_ATTRIBUTES;
	hints = { 
		ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE,
		/*
		HINT_FIXED_SIZE {
			SpecWidth <SST_PIXELS, 216>
			SpecHeight <0, 0>
		},
		*/
		HINT_IF_SYSTEM_ATTRS { SystemAttrs mask SA_HORIZONTALLY_TINY },
			HINT_PLACE_MONIKER_ABOVE,
		HINT_ELSE,
			HINT_PLACE_MONIKER_TO_LEFT,
		HINT_ENDIF
	}
}

/* change attributes name list */

ChangeAttrNameList = FileOpFileList ignoreDirty {
	moniker = "Change Attributes:";
	textDisplayAttributes = DESK_SINGLE_LINE_DISPLAY_ATTRIBUTES;
	hints = {
		ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		/*
		HINT_INITIAL_SIZE {
			SpecWidth <SST_PIXELS, 216>
			SpecHeight <0, 0>
		}
		*/
	}
}

/* attributes lists */

ChangeAttrLists = GenInteraction ignoreDirty {
	children = ChangeAttrToList;
	hints = {
		HINT_CENTER_CHILDREN_ON_MONIKERS
	}
}

/* change attributes destination buttons field */
	
ChangeAttrToList = GenBooleanGroup ignoreDirty {
	moniker = 'T', "To:";
	children = ChangeAttrToRO, ChangeAttrToArchive,
			ChangeAttrToHidden, ChangeAttrToSystem;
	hints = {
		HINT_ORIENT_CHILDREN_HORIZONTALLY,
		HINT_IF_SYSTEM_ATTRS { SystemAttrs mask SA_HORIZONTALLY_TINY },
			HINT_WRAP_AFTER_CHILD_COUNT {
				word	2
			},
		HINT_PLACE_MONIKER_TO_LEFT
	}
}
ChangeAttrToRO = GenBoolean ignoreDirty {
	moniker = 'R', "Read Only";
	identifier = "mask FA_RDONLY";
}
ChangeAttrToArchive = GenBoolean ignoreDirty {
	moniker = 'A', "Archive";
	identifier = "mask FA_ARCHIVE";
}
ChangeAttrToHidden = GenBoolean ignoreDirty {
	moniker = 'H', "Hidden";
	identifier = "mask FA_HIDDEN";
}
ChangeAttrToSystem = GenBoolean ignoreDirty {
	moniker = 'S', "System";
	identifier = "mask FA_SYSTEM";
}

/* Template check-box */

ChangeFlagsToList = GenBooleanGroup ignoreDirty {
	children = ChangeFlagsToTemplate;
	hints = {
		HINT_CENTER_CHILDREN_ON_MONIKERS
	}
}
ChangeFlagsToTemplate = GenBoolean vardataReloc ignoreDirty {
	moniker = 'e', "Template";
	identifier = "mask GFHF_TEMPLATE";
	hints = {
		HINT_ALIGN_LEFT_EDGE_WITH_OBJECT {
			I_OPTR ChangeAttrToRO
		}
	} 
}

/* change attributes status */

ChangeAttrStatus = GenText ignoreDirty {
	genAttributes = readOnly;
	textDisplayAttributes = DESK_SINGLE_LINE_DISPLAY_ATTRIBUTES;
	hints = { 
		ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		/*
		HINT_INITIAL_SIZE {
			SpecWidth <SST_PIXELS, 216>
			SpecHeight <0, 0>
		}
		*/
	}
}

/* change attributes control group */

ChangeAttrCtrlChange = GenTrigger ignoreDirty {
	moniker = 'C', "Change";
	action = MSG_FM_END_CHANGE_ATTR, process;
	/* initiatesBusyState has no effect in modal box */
	/*genAttributes = default +initiatesBusyState;*/
	/* no signalInteractionComplete, done manually */
	hints = {
		HINT_DEFAULT_DEFAULT_ACTION,
		HINT_SEEK_REPLY_BAR
	}
}
ChangeAttrCtrlNext = GenTrigger ignoreDirty {
	moniker = 'N', "Next";
	action = MSG_CHANGE_ATTR_NEXT, process;
	/* initiatesBusyState has no effect in modal box */
	/*genAttributes = default +initiatesBusyState;*/
	/* no signalInteractionComplete */
	hints = {
		HINT_SEEK_REPLY_BAR
	}
}
/*
ChangeAttrCtrlReset = GenTrigger ignoreDirty {
	* moniker set by specific UI *
	action = MSG_GEN_RESET, ChangeAttrToList;
	* no signalInteractionComplete *
	hints = {
		ATTR_GEN_TRIGGER_INTERACTION_COMMAND {word IC_RESET},
		HINT_SEEK_REPLY_BAR
	}
}
*/
ChangeAttrCtrlCancel = GenTrigger ignoreDirty {
#if GPC_FILE_OP_CANCEL_TRIGGERS || _DOCMGR
	moniker = "VMO_CANCEL", "Don't Change";
#else
	/* specific UI provides moniker */
#endif
	action = MSG_CLEAR_FILE_LIST_VIA_PROCESS, ChangeAttrNameList;
	genAttributes = signalInteractionComplete;
	hints = {
		ATTR_GEN_TRIGGER_INTERACTION_COMMAND {word IC_DISMISS},
		HINT_SEEK_REPLY_BAR
	}
}

#endif




/*-----------------------------------------------------------------------------
	Change Icon box
-----------------------------------------------------------------------------*/

#ifndef GEOLAUNCHER		/* no changing of icons for GeoLauncher */

ChangeIconBox = FileOpAppActiveBox ignoreDirty {
	moniker = "Change Icon";
	children = ChangeIconCurDir, ChangeIconNameList, 
		   ChangeIconCurrentIcon, ChangeIconList, 
		   ChangeIconStatus, ChangeIconCtrlChange, 
		   ChangeIconCtrlNext, ChangeIconCtrlCancel; 
}

/* change attributes current directory field */

ChangeIconCurDir = PathnameStorage ignoreDirty {
#if _NEWDESKBA		/* Joon did this. */
	genStates = default -usable;
#endif
	moniker = "Current Folder is";
	textDisplayAttributes = DESK_SINGLE_LINE_DISPLAY_ATTRIBUTES;
	hints = { 
		HINT_IF_SYSTEM_ATTRS { SystemAttrs mask SA_HORIZONTALLY_TINY },
			HINT_PLACE_MONIKER_ABOVE,
		HINT_ELSE,
			HINT_PLACE_MONIKER_TO_LEFT,
		HINT_ENDIF,
		ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE
	}
}

/* change attributes name list */

ChangeIconNameList = FileOpFileList ignoreDirty {
	moniker = "Change Icon of:";
	textDisplayAttributes = DESK_SINGLE_LINE_DISPLAY_ATTRIBUTES;
	hints = {
		ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT
	}
}

/* icon lists */

ChangeIconCurrentIcon = IconDisplay ignoreDirty {
}

ChangeIconList = IconList {
	hints = {
		HINT_ITEM_GROUP_SCROLLABLE,
		HINT_ORIENT_CHILDREN_HORIZONTALLY
	}
}

/* change attributes status */

ChangeIconStatus = GenText ignoreDirty {
	genAttributes = readOnly;
	textDisplayAttributes = DESK_SINGLE_LINE_DISPLAY_ATTRIBUTES;
	hints = { 
		ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT
	}
}

/* change attributes control group */

ChangeIconCtrlChange = GenTrigger ignoreDirty {
	moniker = 'C', "Change";
	action = MSG_APP_CHANGE_ICON_CHANGE_TOKEN, Desktop;
	/* initiatesBusyState has no effect in modal box */
	/* genAttributes = default +initiatesBusyState;  */
	/* no signalInteractionComplete, done manually */
	hints = {
		HINT_DEFAULT_DEFAULT_ACTION,
		HINT_SEEK_REPLY_BAR
	}
}
ChangeIconCtrlNext = GenTrigger ignoreDirty {
	moniker = 'N', "Next";
	action = MSG_CHANGE_TOKEN_NEXT, process;
	/* initiatesBusyState has no effect in modal box */
	/* genAttributes = default +initiatesBusyState;  */
	/* no signalInteractionComplete */
	hints = {
		HINT_SEEK_REPLY_BAR
	}
}

ChangeIconCtrlCancel = GenTrigger ignoreDirty {
#if GPC_FILE_OP_CANCEL_TRIGGERS || _DOCMGR
	moniker = "VMO_CANCEL", "Don't Change";
#else
	/* specific UI provides moniker */
#endif
	action = MSG_CLEAR_FILE_LIST_VIA_PROCESS, ChangeIconNameList;
	genAttributes = signalInteractionComplete;
	hints = {
		ATTR_GEN_TRIGGER_INTERACTION_COMMAND {word IC_DISMISS},
		HINT_SEEK_REPLY_BAR
	}
}

#endif

end FileOperationUI;



start MenuMoveUI, notDetachable;

/*-----------------------------------------------------------------------------
	Move box
-----------------------------------------------------------------------------*/

MoveBox = FileOperationBox ignoreDirty {
	moniker = "Move";
	children =	MoveText,
			MoveToEntry,
			MoveToCurrentDir,
#if GPC_FILE_OP_CANCEL_TRIGGERS || _DOCMGR
			MoveOK,
			MoveCancel;
#else
			MoveOK;
#endif
	attributes = default +initiatedViaUserDoDialog;
#if defined(GPC) || _DOCMGR
	hints = {
		ATTR_GEN_HELP_CONTEXT { char "dMvFile",0 },
		ATTR_GEN_HELP_FILE { char "ui",0 }
	}
#else
	hints = {
		ATTR_GEN_HELP_CONTEXT { char "dMvFile",0 } 
	}
#endif
}

MoveText = GenText {
	genAttributes = default +readOnly;
#if _DOCMGR || defined(GPC)
	text = "Select where you would like to move this file. Then, click \\\"Move\\\".";
#else
	text = "Where do you wish to move the original?  From this list, select a destination folder.  Then, click Move.";
#endif
	hints = {
		ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE
	}
}

/* move to field */
MoveToEntry = GenFileSelector {
#if _DOCMGR
	attributes = allowChangeDirs, showFilesDisabled,
			hasCloseDirButton, hasOpenDirButton,
			hasDocumentButton, hasChangeDriveList,
			/*hasFileList,*/ useVirtualRoot,
			showWritableDisksOnly;
	fileCriteria = default -dirs;
#else
	attributes = default +showFilesDisabled;
#endif
	action = MSG_FOB_MOVE_TO_ITEM_SELECTED, MoveBox;
	hints = {
#if _DOCMGR
		ATTR_GEN_FILE_SELECTOR_VIRTUAL_ROOT {
				word SP_DOCUMENT
				word 0
		},
#endif
#if _NEWDESKBA
		HINT_FILE_SELECTOR_USE_DESKTOP_HOME,
#endif
		HINT_FILE_SELECTOR_SINGLE_ACTION,
		HINT_PLACE_MONIKER_ABOVE
	}
}

MoveToCurrentDir = GenText {
	genAttributes = default +readOnly;
	text = "";
	textDisplayAttributes = DESK_SINGLE_LINE_DISPLAY_ATTRIBUTES;
	hints = {
		ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT
	}
}

/* move control group */

MoveOK = GenTrigger ignoreDirty {
	moniker = 'M', "Move";
	genAttributes = signalInteractionComplete;
	hints = {
		HINT_SEEK_REPLY_BAR,
					/* for UserDoDialog response */
		ATTR_GEN_TRIGGER_INTERACTION_COMMAND {word OKCANCEL_OK}
	}
}

#if GPC_FILE_OP_CANCEL_TRIGGERS || _DOCMGR
MoveCancel = GenTrigger ignoreDirty {
	moniker = "VMO_CANCEL", "Don't Move";
	hints = {
		HINT_SEEK_REPLY_BAR,
		ATTR_GEN_TRIGGER_INTERACTION_COMMAND {
			word IC_DISMISS
		}
	}
}
#endif

end MenuMoveUI;



start MenuCopyUI, notDetachable;

/*-----------------------------------------------------------------------------
	Copy box
-----------------------------------------------------------------------------*/

CopyBox = FileOperationBox ignoreDirty {
	moniker = "Copy";
	children =	CopyText,
			CopyToEntry,
			CopyToCurrentDir,
#if GPC_FILE_OP_CANCEL_TRIGGERS || _DOCMGR
			CopyOK,
			CopyCancel;
#else
			CopyOK;
#endif
	attributes = default +initiatedViaUserDoDialog;
#if defined(GPC) || _DOCMGR
	hints = {
		ATTR_GEN_HELP_CONTEXT { char "dCpFile",0 },
		ATTR_GEN_HELP_FILE { char "ui",0 }
	}
#else
	hints = {
		ATTR_GEN_HELP_CONTEXT { char "dCpFile",0 } 
	}
#endif
}

CopyText = GenText {
	genAttributes = default +readOnly;
#if _DOCMGR || defined(GPC)
	text = "Select where you would like to copy this file. Then, click \\\"Copy\\\".";
#else
	text = "Where do you wish to place the copy?  From this list, select a destination folder.  Then, click Copy.";
#endif
	hints = {
		ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE
	}
}

/* copy to field */

CopyToEntry = GenFileSelector {
#if _DOCMGR
	attributes = allowChangeDirs, showFilesDisabled,
			hasCloseDirButton, hasOpenDirButton,
			hasDocumentButton, hasChangeDriveList,
			/*hasFileList,*/ useVirtualRoot,
			showWritableDisksOnly;
	fileCriteria = default -dirs;
#else
	attributes = default 
		+showFilesDisabled;
#endif

	action = MSG_FOB_COPY_TO_ITEM_SELECTED, CopyBox;
	hints = {
#if _DOCMGR
		ATTR_GEN_FILE_SELECTOR_VIRTUAL_ROOT {
				word SP_DOCUMENT
				word 0
		},
#endif
#if _NEWDESKBA
		HINT_FILE_SELECTOR_USE_DESKTOP_HOME,
#endif
		HINT_FILE_SELECTOR_SINGLE_ACTION,
		HINT_PLACE_MONIKER_ABOVE
	}
}

CopyToCurrentDir = GenText {
	genAttributes = default +readOnly;
	text = "";
	textDisplayAttributes = DESK_SINGLE_LINE_DISPLAY_ATTRIBUTES;
	hints = {
		ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT
	}
}

/* copy control group */

CopyOK = GenTrigger ignoreDirty {
	moniker = 'C', "Copy";
	genAttributes = signalInteractionComplete;
	hints = {
		HINT_SEEK_REPLY_BAR,
		HINT_DEFAULT_DEFAULT_ACTION,
					/* for UserDoDialog response */
		ATTR_GEN_TRIGGER_INTERACTION_COMMAND {word OKCANCEL_OK}
	}
}

#if GPC_FILE_OP_CANCEL_TRIGGERS || _DOCMGR
CopyCancel = GenTrigger ignoreDirty {
	moniker = "VMO_CANCEL", "Don't Copy";
	hints = {
		HINT_SEEK_REPLY_BAR,
		ATTR_GEN_TRIGGER_INTERACTION_COMMAND {
			word IC_DISMISS
		}
	}
}
#endif

end MenuCopyUI;


start MenuRecoverUI, notDetachable;

/*-----------------------------------------------------------------------------
	Recover box
-----------------------------------------------------------------------------*/

RecoverBox = FileOperationBox ignoreDirty {
	moniker = "Recover";
#if GPC_CREATE_DESKTOP_LINK
	children =	RecoverLinkPrompt, RecoverToEntry,
			RecoverToCurrentDir,
# if GPC_FILE_OP_CANCEL_TRIGGERS || _DOCMGR
			RecoverOK,
			RecoverCancel;
# else
			RecoverOK;
# endif
#else
	children =	RecoverToEntry,
			RecoverToCurrentDir,
# if GPC_FILE_OP_CANCEL_TRIGGERS || _DOCMGR
			RecoverOK,
			RecoverCancel;
# else
			RecoverOK;
# endif
#endif
	attributes = default +initiatedViaUserDoDialog;
#if _GMGR
	hints = {
		ATTR_GEN_HELP_CONTEXT { char "dRcvrFile",0 }
	}
#endif
}

#if GPC_CREATE_DESKTOP_LINK
RecoverLinkPrompt = GenGlyph {
	moniker = "Recover link to Desktop?";
}
#endif

/* Recover to field */

RecoverToEntry = GenFileSelector {
	moniker = "Select Destination for Recovered Files";
#if _DOCMGR
	attributes = allowChangeDirs, showFilesDisabled,
			hasCloseDirButton, hasOpenDirButton,
			hasDocumentButton, hasChangeDriveList,
			/*hasFileList,*/ useVirtualRoot,
			showWritableDisksOnly;
	fileCriteria = default -dirs;
#else
	attributes = default +showFilesDisabled;
#endif
	action = MSG_FOB_RECOVER_TO_ITEM_SELECTED, CopyBox;
	hints = {
#if _DOCMGR
		ATTR_GEN_FILE_SELECTOR_VIRTUAL_ROOT {
				word SP_DOCUMENT
				word 0
		},
#endif
#if _NEWDESKBA
		HINT_FILE_SELECTOR_USE_DESKTOP_HOME,
#endif
		HINT_FILE_SELECTOR_SINGLE_ACTION,
		HINT_PLACE_MONIKER_ABOVE
	}
}

RecoverToCurrentDir = GenText {
	genAttributes = default +readOnly;
	text = "";
	textDisplayAttributes = DESK_SINGLE_LINE_DISPLAY_ATTRIBUTES;
	hints = {
		ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT
	}
}

/* Recover control group */

RecoverOK = GenTrigger ignoreDirty {
	moniker = 'R', "Recover";
	genAttributes = signalInteractionComplete;
	hints = {
		HINT_SEEK_REPLY_BAR,
					/* for UserDoDialog response */
		ATTR_GEN_TRIGGER_INTERACTION_COMMAND {word OKCANCEL_OK}
	}
}

#if GPC_FILE_OP_CANCEL_TRIGGERS || _DOCMGR
RecoverCancel = GenTrigger ignoreDirty {
	moniker = "VMO_CANCEL", "Don't Recover";
	hints = {
		HINT_SEEK_REPLY_BAR,
		ATTR_GEN_TRIGGER_INTERACTION_COMMAND {
			word IC_DISMISS
		}
	}
}
#endif


/*-----------------------------------------------------------------------*/

RecoverSrcBox = FileOperationBox ignoreDirty {
	moniker = "Recover From Wastebasket";
	children =	RecoverSrc,
#if GPC_FILE_OP_CANCEL_TRIGGERS || _DOCMGR
			RecoverSrcOK,
			RecoverSrcCancel;
#else
			RecoverSrcOK;
#endif
	attributes = modal, initiatedViaUserDoDialog;
#if _GMGR
	hints = {
		ATTR_GEN_HELP_CONTEXT { char "dRecover",0 }
	}
#endif
}

/* Recover to field */

RecoverSrc = GenFileSelector {
	moniker = "File To Recover:";
	attributes = default -hasDocumentButton, -hasChangeDriveList,
			     +useVirtualRoot;
	hints = {
		HINT_FILE_SELECTOR_SINGLE_ACTION,
		HINT_PLACE_MONIKER_ABOVE,
		ATTR_GEN_FILE_SELECTOR_VIRTUAL_ROOT {
			word SP_WASTE_BASKET
			char 0
		}
	}
}

/* Recover control group */

RecoverSrcOK = GenTrigger ignoreDirty {
	moniker = 'R', "Recover This File";
	genAttributes = signalInteractionComplete;
	hints = {
		HINT_DEFAULT_DEFAULT_ACTION,
		HINT_SEEK_REPLY_BAR,
					/* for UserDoDialog response */
		ATTR_GEN_TRIGGER_INTERACTION_COMMAND {word OKCANCEL_OK}
	}
}

#if GPC_FILE_OP_CANCEL_TRIGGERS || _DOCMGR
RecoverSrcCancel = GenTrigger ignoreDirty {
	moniker = "VMO_CANCEL", "Don't Recover";
	hints = {
		HINT_SEEK_REPLY_BAR,
		ATTR_GEN_TRIGGER_INTERACTION_COMMAND {
			word IC_DISMISS
		}
	}
}
#endif

end MenuRecoverUI;





start FileOperationUI;

/*-----------------------------------------------------------------------------
	Duplicate box
-----------------------------------------------------------------------------*/

DuplicateBox = FileOpAppActiveBox ignoreDirty {
	moniker = "Duplicate";
	children = DuplicateCurDir, DuplicateFromEntry, DuplicateToEntry,
#if !_DOS_LONG_NAME_SUPPORT
			DuplicateInstructions,
#endif
			DuplicateStatus, DuplicateControl;
#if _GMGR
	hints = {
		ATTR_GEN_HELP_CONTEXT { char "dDupFile",0 }
	}
#endif
}

/* duplicate current directory field */

DuplicateCurDir = PathnameStorage ignoreDirty {
#if _NEWDESKBA		/* Joon did this. */
	genStates = default -usable;
#endif
	moniker = "Current Folder is";
	textDisplayAttributes = DESK_SINGLE_LINE_DISPLAY_ATTRIBUTES;
	hints = {
		ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE,
		HINT_IF_SYSTEM_ATTRS { SystemAttrs mask SA_HORIZONTALLY_TINY },
			HINT_PLACE_MONIKER_ABOVE,
		HINT_ELSE,
			HINT_PLACE_MONIKER_TO_LEFT,
		HINT_ENDIF,
		/*
		HINT_FIXED_SIZE {
			SpecWidth <SST_PIXELS, 216>
			SpecHeight <0, 0>
		}
		*/
	}
}

/* duplicate from field */

DuplicateFromEntry = FileOpFileList ignoreDirty {
	moniker = "Duplicate:";
	textDisplayAttributes = DESK_SINGLE_LINE_DISPLAY_ATTRIBUTES;
	hints = { 
		ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		/*
		HINT_INITIAL_SIZE {
			SpecWidth <SST_PIXELS, 216>
			SpecHeight <0, 0>
		}
		*/
	}
}

/* duplicate to field */

DuplicateToEntry = GenText ignoreDirty {
	moniker = 'T', "To:";
	textDisplayAttributes = DESK_SINGLE_LINE_EDIT_ATTRIBUTES;
#if _DOS_LONG_NAME_SUPPORT
	maxLength = "FILE_LONGNAME_LENGTH";
#else
	/* max length set per file */
#endif
	hints = {
		ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE,
		HINT_DEFAULT_FOCUS,
		ATTR_GEN_TEXT_LEGAL_FILENAMES,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT
	}
}

#if !_DOS_LONG_NAME_SUPPORT
/* 8.3 name instructions */

DuplicateInstructions = GenText ignoreDirty {
	genAttributes = readOnly;
	hints = {
		ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE,
		HINT_EXPAND_HEIGHT_TO_FIT_PARENT
	}
}
#endif /* !_DOS_LONG_NAME_SUPPORT */

/* duplicate status group */

DuplicateStatus = GenText ignoreDirty {
	genAttributes = readOnly;
	textDisplayAttributes = DESK_SINGLE_LINE_DISPLAY_ATTRIBUTES;
	hints = { 
		ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		/*
		HINT_INITIAL_SIZE {
			SpecWidth <SST_PIXELS, 216>
			SpecHeight <0, 0>
		}
		*/
	}
}

/* duplicate control group */

/* DuplicateControl group needed for group enabling/disabling */
DuplicateControl = GenInteraction ignoreDirty {
	children = DuplicateCtrlDuplicate, DuplicateCtrlNext,
			DuplicateCtrlCancel;
}
DuplicateCtrlDuplicate = GenTrigger ignoreDirty {
	moniker = 'u', "Duplicate";
	action = MSG_FM_END_DUPLICATE, process;
	/* initiatesBusyState has no effect in modal box */
	/*genAttributes = default +initiatesBusyState;*/
	/* no signalInteractionComplete, done manually */
	hints = {
		HINT_DEFAULT_DEFAULT_ACTION,
		HINT_SEEK_REPLY_BAR
	}
}
DuplicateCtrlNext = GenTrigger ignoreDirty {
	moniker = 'N', "Next";
	action = MSG_DUPLICATE_NEXT, process;
	/* initiatesBusyState has no effect in modal box */
	/*genAttributes = default +initiatesBusyState;*/
	/* no signalInteractionComplete */
	hints = {
		HINT_SEEK_REPLY_BAR
	}
}
DuplicateCtrlCancel = GenTrigger ignoreDirty {
#if GPC_FILE_OP_CANCEL_TRIGGERS || _DOCMGR
	moniker = "VMO_CANCEL", "Don't Duplicate";
#else
	/* specific UI provides moniker */
#endif
	action = MSG_CLEAR_FILE_LIST_VIA_PROCESS, DuplicateFromEntry;
	genAttributes = signalInteractionComplete;
	hints = {
		ATTR_GEN_TRIGGER_INTERACTION_COMMAND {word IC_DISMISS},
		HINT_SEEK_REPLY_BAR
	}
}

end FileOperationUI;


#ifdef CREATE_LINKS
start MenuCreateLinkUI, notDetachable;

/*-----------------------------------------------------------------------------
	CreateLink box
-----------------------------------------------------------------------------*/

CreateLinkBox = GenInteraction ignoreDirty {
	visibility = dialog;
#if GPC_CREATE_DESKTOP_LINK
	moniker = "Create Desktop Link";
	children =	CreateLinkPrompt,
			CreateLinkToEntry,
			CreateLinkToCurrentDir,
			CreateLinkOK,
			CreateLinkCancel;
#else
	moniker = "Create Link";
	children =	CreateLinkToEntry,
			CreateLinkToCurrentDir,
			CreateLinkOK,
			CreateLinkCancel;
#endif
	attributes = modal, initiatedViaUserDoDialog;
}

#if GPC_CREATE_DESKTOP_LINK
CreateLinkPrompt = GenGlyph {
	moniker = "Create link on Desktop?";
}
#endif

CreateLinkToEntry = GenFileSelector {
	moniker = "Select destination for link";
	attributes = default + showFilesDisabled;
	action = MSG_FOB_LINK_TO_ITEM_SELECTED, CopyBox;
	hints = {
#if _NEWDESKBA
		HINT_FILE_SELECTOR_USE_DESKTOP_HOME,
#endif
		HINT_FILE_SELECTOR_SINGLE_ACTION,
		HINT_PLACE_MONIKER_ABOVE
	}
}

CreateLinkToCurrentDir = GenText {
	genAttributes = default +readOnly;
	text = "";
	textDisplayAttributes = default +singleLineText;
	hints = {
		ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT
	}
}

CreateLinkOK = GenTrigger ignoreDirty {
	moniker = 'C', "Create";
	genAttributes = signalInteractionComplete;
	hints = {
		HINT_SEEK_REPLY_BAR,	/* for UserDoDialog response */
		ATTR_GEN_TRIGGER_INTERACTION_COMMAND {word OKCANCEL_OK}
	}
}

CreateLinkCancel = GenTrigger ignoreDirty {
#if GPC_FILE_OP_CANCEL_TRIGGERS || _DOCMGR
	moniker = "VMO_CANCEL", "Don't Create";
#else
	moniker = "VMO_CANCEL", "Cancel";
#endif
	genAttributes = signalInteractionComplete;
	hints = {
		HINT_SEEK_REPLY_BAR,	/* for UserDoDialog response */
		ATTR_GEN_TRIGGER_INTERACTION_COMMAND {word OKCANCEL_CANCEL}
	}
}

end MenuCreateLinkUI;

#endif		/* #ifdef CREATE_LINKS */
