COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1989 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		File
FILE:		fileVariable.def

AUTHOR:		Dennis Chow, December 12, 1989

	
REVISION HISTORY:
	Name		Date		Description
	----		----		-----------
	dc      	12/12/89        Initial revision.
	hirayama	3/30/94		Abort download enhancement.

DESCRIPTION:
	Variables local to this module.
		
	$Id: fileVariable.def,v 1.1 97/04/04 16:56:12 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@
	
;-----------------------------------------------------------------------------
;		TermClassStructures
;-----------------------------------------------------------------------------
TermClassStructures	segment	resource
	
RSP<	TextSendFileOpenControlClass					>
	
TermClassStructures	ends
	
;-----------------------------------------------------------------------------
;		udata
;-----------------------------------------------------------------------------
udata	segment

if DBCS_PCGEOS
errorBuf	wchar DISP_BUF_SIZE dup (?);read error buffer
timeoutBuf	wchar DISP_BUF_SIZE dup (?);read timeout buffer
packetNumBuf	wchar DISP_BUF_SIZE dup (?);receive packet buffer
else
errorBuf	db DISP_BUF_SIZE dup (?);read error buffer
timeoutBuf	db DISP_BUF_SIZE dup (?);read timeout buffer
packetNumBuf	db DISP_BUF_SIZE dup (?);receive packet buffer
endif

tranState	TransferMode		;current state of the transfer
maxTimeouts	db	(?)		;maximum # of timeouts
numTimeouts	db	(?)		;number of timeouts
numPacketErr	db	(?)		;number of packet errors
packetNum	db	(?)		;expected packet
prevPacket	db	(?)		;previous packet
useChecksum	db	(?)		;true if checksum used with packets
recvText	db	(?)		;true if receiving a text file
sendACK		db	(?)		;if duplicate packet, ACK should be sent
numCRCrequest	db	(?)		;number times try to request CRC
fileDone	db	(?)		;flag for last packet
numEOTsent	db	(?)		;number of EOTs sent
stripLF		db	(?)		;flag if we convert CR/LF to CR
checkCRLF	db	(?)		;flag if check that lines end in CR/LF
softFlowCtrl	db	(?)		;flag if software flow control used

numPacketRecv	dw	(?)		;number of packets received
numPacketSent	dw	(?)		;number of packets sent
checksumCRC	dw	(?)		;packet checksum/CRC
packetSize	dw	(?)		;size of packets
expChars	dw	(?)		;num of chars expected
NCCT<	fileHandle	dw	(?)		;handle of file to write to>
checkCrc	dw	(?)		;packet CRC
timerHandle	dw	(?)		;handle of timer 
timerInterval	dw	(?)		;length of timer
if not (_TELNET)
fileSendHandle	dw	(?)		;handle to the buffer
endif
packetHandle	dw	(?)		;packet handle
packetHead	dw	(?)		;ptr into packet

fileSize	dd	(?)		;size of file
	

if	not _TELNET
saveSerialFormat	SerialFormat	(?)	; save serial format before
						;	changing for file
						;	transfer
endif	; !_TELNET

;
; flag set if file transfer is cancelled (i.e. send only).
;
fileTransferCancelled	byte

if not (_TELNET)
fileSendAbortCalled	byte
endif

;
; variables to deal with sending out an ASCII packet at a rate that the
; host can deal with
;
inMiddleOfPacket	byte
middleOfPacketSize	word
middleOfPacketOffset	word

DBCS <echoPacketCP		DosCodePage				>

;
; ASCII capture variables
;
DBCS <numAsciiRecvUnconvertedBytes	word				>
DBCS <asciiRecvUnconvertedBytesBuf	wchar 10 dup (?)		>
DBCS <checkLFNextTime	BooleanByte					>

;
; Record to keep track of recieve state.   -mkh 3/30/94
;
currentFileFlags	FileFlags

udata	ends

;-----------------------------------------------------------------------------
; 		idata
;-----------------------------------------------------------------------------
idata	segment

if	_CAPTURE_CLEAN_TEXT
fileHandle	word	BOGUS_VAL	; make it bogus first
endif	; _CAPTURE_CLEAN_TEXT

if _TELNET
fileSendAbortCalled	byte	TRUE
fileSendHandle		dw	BOGUS_VAL
endif

idata	ends
	

