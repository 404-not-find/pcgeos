COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1989 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		FSM
FILE:		fsmVariable.def

AUTHOR:		Dennis Chow, September 8, 1989

	
REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	dc       9/ 8/89        Initial revision.


DESCRIPTION:
	Variables local to this module.
		
	$Id: fsmVariable.def,v 1.1 97/04/04 16:56:33 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

udata	segment

if EXTRA_EC	;=============================================================
crapBuf	byte	AUX_BUF_SIZE dup (?)
crapPtr	word	(?)
funcBuf	word	100 dup (?)
funcPtr	word	(?)
endif	;=====================================================================

curToken	db	(?)			;current token
initAD		db	(?)			;true if the current action descriptor 
secondState	db	(?)			;flag for HandleDecParm
inNumFlag	db	(?)			;flag if in internal function
fileHead	dw	(?)			;beginning 
fileEnd		dw	(?)			;end of file
maxACsize	dw	(?)			;whats the max size of our action chunk
curACoffset	dw	(?)			;offset into the action chunk
						;used in paramter routines
argIndex	dw	(?)			;where do we stuff the argument	
fsmLocked	dw	(?)			;flag if fsm block locked
;
; Paramter variables
;
argArray	byte	MAX_EMULATION_ARG dup (?); store passed paramters
argNum		dw	(?)			;number of stored arguments 

addToken	db	(?)			;should add token to table?
reuseAD		db	(?)			;should we reuse action desc
unParseStart	dw	(?)			;beginning of unparsed chars
unParseNum	dw	(?)			;number of unparsed chars to store
inParse		db	(?)			;are we in a parse sequence
unParseBuf	db	AUX_BUF_SIZE dup (?)
unParseBufHead	dw	(?)			;ptr where to store input
unParseBufNum	dw	(?)
numParseChars	dw	(?)

if DBCS_PCGEOS
numFSMUnconvertedBytes	dw	(?)	;number of characters from incomplete
					;	BBS->GEOS buffer conversion
fsmUnconvertedBytesBuf	wchar 10 dup (?)
endif

argumentDesc	ArgDescStruct		; empty descriptor struct
	
if ERROR_CHECK
fsmStackDataID	dw	(?)		;this count-up value is passed on
					;the stack with MSG_SCR_DATA
					;to verify that the methods arrive
					;in the right order.
endif

udata	ends

