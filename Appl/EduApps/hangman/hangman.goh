/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) Breadbox Computer Company LLC 2001 -- All Rights Reserved

PROJECT:	Educational Applications
MODULE:	HangMan application
FILE:		hangman.goh

AUTHOR:		John Howard 11/1/01

***********************************************************************/

/***********************************************************************
 *		Include files
 ***********************************************************************/
@include <stdapp.goh>
#include <Ansi/string.h>
#include <initfile.h>
#include <wmlib.h>
#include <math.h>

/***********************************************************************
 *		Definitions
 ***********************************************************************/
#define SOUND_ON 1
#define SOUND_OFF 0

#define BOARD_HEIGHT	340
#define BOARD_WIDTH	290

#define LTR_BOX_SIZE	18
#define LTR_BOX_SPACE	3
#define LTR_BOX_INCREMENT	(LTR_BOX_SIZE + LTR_BOX_SPACE)

#define WORD_ROW_Y	(BOARD_HEIGHT - (3 * LTR_BOX_INCREMENT)- 5)

#define LTR_ROW_ONE_Y	(BOARD_HEIGHT - (2 * LTR_BOX_INCREMENT))
#define LTR_ROW_TWO_Y	(BOARD_HEIGHT - LTR_BOX_INCREMENT)
#define LTR_COL_ONE_X	10

#define NO_PARTS 0
#define LIMBS 6
#define APPENDAGES 10

#define MAX_LETTERS 10

#define GAME_NOT_STARTED 0
#define GAME_IN_PROGRESS 1
#define GAME_WON 2
#define GAME_LOST 3

#define LTR_NOT_SEL 0
#define LTR_SEL_NOT_IN_WORD 1
#define LTR_SEL_IN_WORD 2

#define OPENING_TEXT 0
#define WINNING_TEXT 1
#define LOSING_TEXT 2

#define CUSTOM_LIST        1
#define WORD_MIN_SIZE		4
#define WORD_MAX_SIZE		10
#define MARKER_SIZE			13
#define WORD_ELEMENT_SIZE     WORD_MAX_SIZE+1
#define WORD_LIST_MAX_SIZE		250

/***********************************************************************
 *		Globals
 ***********************************************************************/
extern char		g_letterStr[26];
extern byte		g_letterStatus[26];
extern byte		g_whichPart;
extern byte		g_gameStatus;
extern char		g_wordStr[MAX_LETTERS+1];
extern byte		g_wordStatus[MAX_LETTERS+1];
extern byte		g_numFound;
extern word		g_numParts;
extern Boolean	g_sound;

/* and for the word grabbing stuff */
extern WMParamsStruct      g_wordParams;    /* from wmlib.h */

/* and for the custom word list */
extern Boolean			g_customList;
extern MemHandle		g_cListMemHan;
extern ChunkHandle   g_cListChunkHan;

/***********************************************************************
 *		Function Prototypes
 ***********************************************************************/

/* drawing routines */
void HMDrawBoard (GStateHandle gstate);
void HMDrawLetter (GStateHandle gstate, byte whichLetter);
void HMDrawBody (GStateHandle gstate);
void HMDrawWordBoxes (GStateHandle gstate);
void HMDrawWordLetter (GStateHandle gstate, byte whichLetter);
void HMDrawTextInBox(GStateHandle gstate, byte whichText);

/* main action routine */
void HMDoLetterSelect (GStateHandle gstate, byte whichLetter);

/* word grabbing routines */
void HMGrabARandomWord(void);
word HMCountWords(void);
word HMGetRandomNum(word min, word max);

/* and for the custom word list */
void NotifyDBox (char* string1, optr notifyMsg);
void HMGrabACustomWord(void);

/***********************************************************************
 *		Class and Message Definitions
 ***********************************************************************/

@class	HangManProcessClass, GenProcessClass;
	@message void MSG_HANGMAN_NEW_GAME();
	@message (GEN_ITEM_GROUP_APPLY_MSG) MSG_HANGMAN_DIFFICULTY_APPLY;
	@message (GEN_ITEM_GROUP_APPLY_MSG) MSG_HANGMAN_SOUND_APPLY;
	@message (GEN_FILE_SELECTOR_NOTIFICATION_MSG) MSG_HM_IMPORT_SELECTOR_ACTION;
	@message void MSG_HM_IMPORT_WORD_LIST();
	@message (GEN_BOOLEAN_GROUP_APPLY_MSG) MSG_HM_CUSTOM_LIST_GROUP_APPLY;
	@message void MSG_HM_CANCEL_IMPORT_WORD_LIST();
@endc

@class	HangManViewClass, GenViewClass;
@endc


