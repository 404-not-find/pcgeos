/***********************************************************************
 *
 *
 * PROJECT: Breadbox Outliner
 * FILE:        proc.goc
 * AUTHOR:  John F. Howard,   05/03
 *
 * DESCRIPTION:
 *  This file has the process class code for the application.
 *
 *
 ***********************************************************************/


/* ----------------------------------------------------------------------------
	Include files
-----------------------------------------------------------------------------*/
@include "oliner.goh"

@classdecl  OLProcessClass, neverSaved;

FileHandle g_curDocHan = 0;
VMBlockHandle g_topDBHan = 0;
VMBlockHandle g_curDBHan = 0;
VMBlockHandle g_selDBHan = 0;
word g_curLevel = 0;

/* doc class methods in tree.goc */
@extern method OLProcessClass, MSG_OLINER_PROC_CARD_DLIST_DRAW_FIELD;
@extern method OLProcessClass, MSG_OLINER_PROC_CARD_DLIST_INFO_FIELD;
@extern method OLProcessClass, MSG_OLINER_PROC_CARD_DLIST_NODE_ATTACH;
@extern method OLProcessClass, MSG_OLINER_PROC_CARD_DLIST_NODE_DETACH;
@extern method OLProcessClass, MSG_OLINER_PROC_CARD_DLIST_APPLY;

/* ----------------------------------------------------------------------------
	OLProcessClass Code
-----------------------------------------------------------------------------*/

/***********************************************************************
 *
 * MESSAGE: MSG_GEN_PROCESS_OPEN_APPLICATION for OLProcessClass
 *
 * DESCRIPTION:  do some opening stuff
 *
 *
 ***********************************************************************/
@method OLProcessClass, MSG_GEN_PROCESS_OPEN_APPLICATION
{
/* Boolean			initError;
 word				size;
 char				fontName[20];


	/* get the font info for the main window metrics */
/*	initError = InitFileReadInteger("ui", "fontsize", &g_sysPointSize);
	if (initError) g_sysPointSize = 12;
	initError = InitFileReadStringBuffer("ui", "fontid", fontName, 20, &size);
	if (initError) g_fontID = FID_BERKELEY;
	else if (!strcmp(fontName, "Esquire")) g_fontID = FID_ESQUIRE;
	else g_fontID = FID_BERKELEY;
	g_height = g_sysPointSize + 8;
	/* set the ellipsis width based on font size */
/*	switch (g_sysPointSize) {
		case 9: g_eWidth = 7; break;
		case 10: g_eWidth = 8; break;
		case 12: g_eWidth = 10; break;
		case 14: g_eWidth = 12; break;
		case 18: g_eWidth = 16; break;
		default: g_eWidth = 10;
		}
	if (g_fontID == FID_ESQUIRE) g_vSep = g_sysPointSize * 7;
	else g_vSep = g_sysPointSize * 8;
*/

	@callsuper();

	/* needed to install app tiny token in newUI */
//	@call application::MSG_GEN_APPLICATION_INSTALL_TOKEN();

	/* needed to install doc token */
//	@call process::MSG_GEN_PROCESS_INSTALL_TOKEN();


}

/***********************************************************************
 *
 * MESSAGE: MSG_GEN_PROCESS_CLOSE_APPLICATION for OLProcessClass
 *
 * DESCRIPTION:  do some closing stuff
 *
 *
 ***********************************************************************/
@method OLProcessClass, MSG_GEN_PROCESS_CLOSE_APPLICATION
{


	 @callsuper();

	 return NULL;

}


/***********************************************************************
 *
 * MESSAGE: MSG_GEN_PROCESS_INSTALL_TOKEN for OLProcessClass
 *
 * DESCRIPTION: Associates token with docs
 *
 *              needs token.h include
 ***********************************************************************/

/*@method OLProcessClass, MSG_GEN_PROCESS_INSTALL_TOKEN
{
 dword   tokenChars;
 TokenFlags  tokenFlags;

	@callsuper();

	tokenChars = TOKEN_CHARS('O', 'L', (dword) 'd', (dword) '0');
	/* it won't work w/o the two casts */
/*	if (!TokenGetTokenInfo(tokenChars, 16431, &tokenFlags))
		TokenDefineToken(tokenChars, 16431, @OLDocIconMonikerList, 0);

}
*/

