/*
 *	Copyright (c) GeoWorks 1994 -- All Rights Reserved
 *
 * Project:	Jedi
 * Module:	startup app
 * File:	jstartup.ui
 *
 * Author:	Steve Yegge, Jul 15, 1993
 *
 * Revision History:
 *	Name	Date		Description
 *	----	----		-----------
 *	stevey	7/15/93		Initial revision
 *
 * Description:
 *	
 *	This screen is full of ugly hacks to make it work at the
 *	last minute.
 *
 *	$Id: jstartup.ui,v 1.1 97/04/04 16:53:13 newdeal Exp $
 *
 */

#include	<generic.uih>
#include 	<Objects/gadgets.uih>
#include	"jstartup.uih"		/* our local class definitions */

/*-----------------------------------------------------------------------------
		UI trees
-----------------------------------------------------------------------------*/

start AppResource;

JSApp = JSApplication {

	children = MyJSPrimary;

	gcnList(MANUFACTURER_ID_GEOWORKS, GAGCNLT_WINDOWS) = 
		MyJSPrimary;

	moniker = list {		
		JSTextMoniker
	}
}

visMoniker JSTextMoniker = "System Startup";


end AppResource;

start	Interface;		/* this resource is for misc UI objects */

MyJSPrimary = JSPrimary vardataReloc {
	visibility = dialog;
	attributes = default +notUserInitiatable;
	children = JSMainScreen;
	type = organizational;
	hints = {
		ATTR_GEN_WINDOW_CUSTOM_WINDOW,
		HINT_WINDOW_NO_TITLE_BAR,
		ATTR_GEN_HELP_FILE { char "help", 0 },
		HINT_SIZE_WINDOW_AS_RATIO_OF_FIELD {
	     		SpecWinSizePair < mask SWSS_RATIO or PCT_100, \
					  mask SWSS_RATIO or PCT_100>
		},
	}

}

JSMainScreen = GenInteraction {
	children = 	TopSpacer,
			JSInfoTextGroup,
			MiddleSpacer,
			JSInfoAreaGroup, 
			Foo2Spacer,
			JSCustomInfoArea,
#if _CITY_LIST
			JLocalCityInteraction, 
#endif
			OKSpacer,
			OKTriggerGroup;
	genStates = default -usable;
	hints = {
		HINT_ORIENT_CHILDREN_VERTICALLY,
		HINT_CENTER_CHILDREN_HORIZONTALLY,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		HINT_FULL_JUSTIFY_CHILDREN_HORIZONTALLY,
		HINT_INCLUDE_ENDS_IN_CHILD_SPACING,
		HINT_WINDOW_NO_TITLE_BAR,
		HINT_SIZE_WINDOW_AS_RATIO_OF_PARENT {
			SpecWinSizePair <mask SWSS_RATIO or PCT_100, \
					 mask SWSS_RATIO or PCT_100>
		},

  	}
}

/* Used to put a top margin above the explanatory text */

TopSpacer = GenGlyph {
	moniker = {
	    cachedSize = 14, 4;
	    gstring {
		GSBeginString |
		GSEndString
	    }
	}
}

/* Used to put space between explanatory text & owner info gadget */

Foo2Spacer = GenGlyph {
	moniker = {
	    cachedSize = 1, 5;
	    gstring {
		GSBeginString |
		GSEndString
	    }
	}
}



JSInfoTextGroup = GenInteraction {
	children = JSInfoTextSpacer, JSInfoText;
	hints = {
		HINT_ORIENT_CHILDREN_HORIZONTALLY,
	}
}

JSInfoTextSpacer = GenGlyph {
	moniker = "     ";
}

JSInfoText = GenText {
	genAttributes = readOnly;
	text = "Welcome!  Please enter the following\\\rinformation.  When you have finished\\\rtap 'Done' or press 'Alt-n' to continue.";
	hints = {
		ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE,
	}
}

MiddleSpacer = GenGlyph {
	moniker = {
	    cachedSize = 14, 3;
	    gstring {
		GSBeginString |
		GSEndString
	    }
	}
}

JSInfoAreaGroup = GenInteraction {
	children = JSInfoAreaSpacer,JSInfoArea;
	hints = {
		HINT_ORIENT_CHILDREN_HORIZONTALLY,
	}
}

/* Used to put a small left margin next to owner-info gadget, which 
   does not seem to want to center correctly. */

JSInfoAreaSpacer = GenGlyph {
	moniker = {
	    cachedSize = 1, 7;
	    gstring {
		GSBeginString |
		GSEndString
	    }
	}
}

JSInfoArea = GenInteraction {
	/* duplicated screens go here as children */
	hints = {
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
	}
}

JSCustomInfoArea = GenInteraction {
	children = FooSpacer, TimeDateGroup;
	hints = {
		HINT_ORIENT_CHILDREN_HORIZONTALLY,
	}
}

#define DATE_TIME_LEFT_MARGIN 48

FooSpacer = GenGlyph {
	moniker = {
	    cachedSize = 45, 5;
	    gstring {
		GSBeginString |
		GSEndString
	    }
	}
}

TimeDateGroup = GenInteraction {
	children = DateGadget, Foo3Spacer, TimeGadget;
	hints = {
		HINT_ORIENT_CHILDREN_VERTICALLY,
	}
}

#define	GADGET_WIDTH 135

DateGadget = DateInput {
	moniker = 'D', "Date today is (mm/dd/yy):";
	actionMsg = MSG_JSP_SET_DATE;
	output = process;
	hints = {
		HINT_PLACE_MONIKER_ABOVE,
		HINT_PLACE_MONIKER_TO_LEFT,
		HINT_FIXED_SIZE {
			SpecWidth <SST_PIXELS, GADGET_WIDTH>
			SpecHeight <>
		},
	}
}

/* Used to put extra space between Date & Time input gadgets */

Foo3Spacer = GenGlyph {
	moniker = {
	    cachedSize = 10, 5;
	    gstring {
		GSBeginString |
		GSEndString
	    }
	}
}

TimeGadget = TimeInput {
	moniker = 'T', "Time now is (hh:mm):";
	actionMsg = MSG_JSP_SET_TIME;
	output	= process;
	hints = {
		HINT_PLACE_MONIKER_ABOVE,
		HINT_PLACE_MONIKER_TO_LEFT,
		HINT_FIXED_SIZE {
			SpecWidth <SST_PIXELS, GADGET_WIDTH>
			SpecHeight <>
		},
	}
}

#if _CITY_LIST
JLocalCityInteraction = GenInteraction {
	children = JCityListHeader,
			JCityList;
	hints = {
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		HINT_EXPAND_HEIGHT_TO_FIT_PARENT,
		}
}

JCityListHeader = GenInteraction {
	children = JCurrentCityInteraction,
		JCurrentCityGlyph;
	hints = {
		HINT_CENTER_CHILDREN_VERTICALLY,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		HINT_EXPAND_HEIGHT_TO_FIT_PARENT,
		HINT_ORIENT_CHILDREN_HORIZONTALLY,
		}
}

JCurrentCityInteraction = MnemonicInteraction {
	moniker = 'L',"Local city: ";
	mnemonicFocus = JCityList;
	hints = {
		HINT_PLACE_MONIKER_TO_LEFT,
	}
}

JCurrentCityGlyph = GenGlyph {
	moniker = "";
	hints = {
		HINT_MAXIMUM_SIZE {
			SpecWidth <SST_AVG_CHAR_WIDTHS, 32>
			SpecHeight <>
		}
	}
}

JCityList = JSCityList {
       	numItems = 0;
       	queryMsg = MSG_JSP_QUERY_CITY_MONIKER;
       	applyMsg = MSG_JSP_CITY_APPLY;
       	destination = process;
       	hints = {
        	HINT_FIXED_SIZE {
                       SpecWidth <>
                       SpecHeight <SST_LINES_OF_TEXT, 4>
                       word 4
               	},
               	HINT_ITEM_GROUP_SCROLLABLE,
               	HINT_EXPAND_WIDTH_TO_FIT_PARENT,
               	HINT_ORIENT_CHILDREN_VERTICALLY,
		ATTR_GEN_SEND_APPLY_MSG_ON_APPLY_EVEN_IF_NOT_MODIFIED,
	}
}
#endif

/* Used to put space between Time gadget and Done trigger. */

OKSpacer = GenGlyph {
	moniker = {
	    cachedSize = 14, 7;
	    gstring {
		GSBeginString |
		GSEndString
	    }
	}
}

OKTriggerGroup = GenInteraction {
	type = organizational;
	children = OKTrigger;
	hints = {
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		HINT_CENTER_CHILDREN_HORIZONTALLY,
	}
}

OKTrigger = GenTrigger {
	moniker = 'n', "Done";
	action = 0, MyJSPrimary;            /* action msg set at runtime */
	hints = {
		HINT_ENSURE_TEMPORARY_DEFAULT,
	}
}


end	Interface;

start	Strings, data;

end	Strings;


