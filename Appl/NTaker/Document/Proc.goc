/*COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1992 -- All Rights Reserved

PROJECT:	NTaker
MODULE:		Document
FILE:		documentMisc.asm

AUTHOR:		Andrew Wilson, Feb 12, 1992

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	atw	2/12/92		Initial revision
	jfh   5/1/03		port to GOC

DESCRIPTION:
	This file contains misc utility routines and method handlers for
	minor objects.	

	$Id: documentMisc.asm,v 1.1 97/04/04 16:17:12 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

/*------------------------------------------------------------------------------
;		Code for NTakerProcessClass
;-----------------------------------------------------------------------------*/

@include "ntaker.goh"

@extern object ViewTypeList;
@extern object OptionsList;
@extern object NTakerDocumentGroup;
@extern object NTakerDispGroup;

@classdecl	NTakerProcessClass, neverSaved;

/*COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		NTakerInstallToken
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

SYNOPSIS:	Install tokens
CALLED BY:	MSG_GEN_PROCESS_INSTALL_TOKEN

PASS:		none
RETURN:		none
DESTROYED:	ax, cx, dx, si, di

PSEUDO CODE/STRATEGY:
KNOWN BUGS/SIDE EFFECTS/IDEAS:
REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	eca	2/19/90		Initial version

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/
/*
NTakerInstallToken	method NTakerProcessClass, MSG_GEN_PROCESS_INSTALL_TOKEN
	;
	; Call our superclass to get the ball rolling...
	;
	mov	di, offset NTakerProcessClass
	call	ObjCallSuperNoLock

	; install datafile token

	mov	ax, ('n') or ('t' shl 8)	; ax:bx:si = token used for
	mov	bx, ('k') or ('r' shl 8)	;	datafile
	mov	si, MANUFACTURER_ID_GEOWORKS
	call	TokenGetTokenInfo		; is it there yet?
	jnc	done				; yes, do nothing

	mov	cx, handle DatafileMonikerList	; cx:dx = OD of moniker list
	mov	dx, offset DatafileMonikerList
	clr	bp				; list in data resource, so
						;  no relocation
	call	TokenDefineToken		; add icon to token database
done:
	ret
NTakerInstallToken	endm
@method TGenProcessClass, MSG_GEN_PROCESS_INSTALL_TOKEN
{
 dword   TATokenChars;
 TokenFlags  TATokenFlags;

	@callsuper();

	TATokenChars = TOKEN_CHARS('T', 'G', (dword) 'd', (dword) '1');
	/* it won't work w/o the two casts */
/*	if (!TokenGetTokenInfo(TATokenChars, 16431, &TATokenFlags))
		TokenDefineToken(TATokenChars, 16431, @TGDocIconMonikerList, 0);

 }

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		SetStartupViewMode
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

SYNOPSIS:	Sets the current view mode when we are just starting up.

CALLED BY:	MSG_GEN_PROCESS_OPEN_APPLICATION
PASS:		nada
RETURN:		nada

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	atw	10/29/92		Initial version
	jfh	5/5/03		port to GOC

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/
/*void SetStartupViewMode	(void)
{
 Boolean			initError;
 word				type;


	initError = InitFileReadInteger("notetaker", "viewOnStartup", &type);
	if (initError) type = VT_CARD;

	@send ViewTypeList::MSG_GEN_ITEM_GROUP_SET_SINGLE_SELECTION(type, FALSE);

}

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
SYNOPSIS:
		Message handler for MSG_GEN_PROCESS_OPEN_APPLICATION
CALLED BY:	GLOBAL
PASS:		(AppAttachFlags	attachFlags,
			  MemHandle		launchBlock,
			  MemHandle 		extraState)

RETURN:		nothing

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	JT	4/22/92   	Initial version
	jfh	5/5/03	port to GOC

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/
@method NTakerProcessClass, MSG_GEN_PROCESS_OPEN_APPLICATION
{
 Boolean			initError;
 word				type;



	/* don't re-set the ui stuff if we're restoring from state */
	if (!(attachFlags & AAF_RESTORING_FROM_STATE))  {
//		SetStartupViewMode();
		initError = InitFileReadInteger("notetaker", "viewOnStartup", &type);
		if (initError) type = VT_CARD;
		@send ViewTypeList::MSG_GEN_ITEM_GROUP_SET_SINGLE_SELECTION(type, FALSE);
		/* and date UI stuff */
		initError = InitFileReadInteger("notetaker", "displayDates", &type);
		if (initError) type = 0;
		@send OptionsList::MSG_GEN_BOOLEAN_GROUP_SET_BOOLEAN_STATE(
															NTO_DISPLAY_DATES, (Boolean)type);
		}

	@callsuper();

}

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
SYNOPSIS:
		Message handler for MSG_GEN_PROCESS_CLOSE_APPLICATION

RETURN:		cx	= 0 (no extra data block for state file)

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	JT	4/22/92   	Initial version
	jfh	5/5/03	port to GOC

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/
@method NTakerProcessClass, MSG_GEN_PROCESS_CLOSE_APPLICATION
{

	@callsuper();

	return (0);
}

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		NTakerMetaClipboardNotifyNormalTransferItemChanged
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

SYNOPSIS:	
		Message handler for MSG_META_CLIPBOARD_NOTIFY_NORMAL_TRANSFER_
		ITEM_CHANGED
CALLED BY:	GLOBAL
PASS:		*ds:si	= NTakerProcessClass object
		ds:di	= NTakerProcessClass instance data
		ds:bx	= NTakerProcessClass object (same as *ds:si)
		es 	= dgroup
		ax	= message #
RETURN:	
DESTROYED:	nothing

PSEUDO CODE/STRATEGY:

KNOWN BUGS/SIDE EFFECTS/IDEAS:

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	JT	4/22/92   	Initial version

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@
NTakerMetaClipboardNotifyNormalTransferItemChanged	method dynamic \
NTakerProcessClass, MSG_META_CLIPBOARD_NOTIFY_NORMAL_TRANSFER_ITEM_CHANGED
	uses	ax, cx, dx, bp
	.enter

	clr	bp
	call	ClipboardQueryItem
	push	ax, bx
	tst	bp
	jz	noTransfer

;	ClipboardTestItemFormat:
;	PASS:
;	bx:ax = transfer item header (returned by ClipboardQueryItem)
;	cx:dx - format manufacturer:format type
;	RETURN:
;	C clear if format supported
;	C set if format not supported

	mov	cx, MANUFACTURER_ID_GEOWORKS
	mov	dx, CIF_GRAPHICS_STRING
	call	ClipboardTestItemFormat
	mov	ax, MSG_GEN_SET_NOT_ENABLED
	jc	noTransfer
	mov	ax, MSG_GEN_SET_ENABLED

noTransfer:
	;disable the NTakerBackgroundPasteTrigger
	mov	dl, VUM_NOW
	GetResourceHandleNS NTakerBackgroundPasteTrigger, bx
	mov	si, offset NTakerBackgroundPasteTrigger
	mov	di, mask MF_CALL or mask MF_FIXUP_DS
	call	ObjMessage

	pop	ax, bx
	call	ClipboardDoneWithItem

	.leave
	ret
NTakerMetaClipboardNotifyNormalTransferItemChanged	endm


/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		NTakerSetViewType
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

SYNOPSIS:	Sets the view type
					(GEN_ITEM_GROUP_APPLY_MSG)
PASS:		  (word selection, numSelections, flags)
RETURN:		nada

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	atw	10/29/92		Initial version
	jfh	5/6/03		Port to GOC

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/
@method	NTakerProcessClass, MSG_NTAKER_SET_VIEW_TYPE
{
 EventHandle		setViewMsg;


	/* encapsulate a message telling docs to change view type */
	setViewMsg = @record NTakerDocumentClass::
	                                   MSG_NTAKER_DOC_SET_VIEW_TYPE(selection);
	@send NTakerDocumentGroup::MSG_GEN_SEND_TO_CHILDREN(setViewMsg);

	/* change the .ini */
	InitFileWriteInteger("notetaker", "viewOnStartup", selection);
   InitFileCommit();

}

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		MSG_NTAKER_CHANGE_OPTIONS
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

SYNOPSIS:	Changes UI options based on passed options.

CALLED BY:	GLOBAL
PASS:		( word	selectedBooleans,
        word	indeterminateBooleans,
		  word	modifiedBooleans)

RETURN:		nada

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	atw	10/29/92		Initial version
	jfh	5/7/03		Port to GOC

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/
@method	NTakerProcessClass, MSG_NTAKER_CHANGE_OPTIONS
{
 EventHandle		setViewMsg;


	/* encapsulate a message telling displays to change date opt */
	setViewMsg = @record NTakerDisplayClass::
								  MSG_NTAKER_DISPLAY_CHANGE_OPTIONS(selectedBooleans);
	@send NTakerDispGroup::MSG_GEN_SEND_TO_CHILDREN(setViewMsg);

	/* change the .ini */
	InitFileWriteInteger("notetaker", "displayDates", selectedBooleans);
   InitFileCommit();

/*	mov	ax, MSG_NTAKER_DISPLAY_CHANGE_OPTIONS
	FALL_THRU	SendMessageToAllDisplays

SendMessageToAllDisplays	proc	far
	mov	bx, es
	mov	si, offset NTakerDisplayClass	;BX:SI <- ptr to class of dest
						; object
	mov	di, mask MF_RECORD
	call	ObjMessage
	mov	cx, di				;CX <- ClassedEvent

	mov	ax, MSG_GEN_SEND_TO_CHILDREN
	GetResourceHandleNS	NTakerDispGroup, bx
	mov	si, offset NTakerDispGroup
	clr	di
	GOTO	ObjMessage
SendMessageToAllDisplays	endp


*/
}

