/***********************************************************************
 *
 *	Copyright (c) GeoWorks 1992 -- All Rights Reserved
 *
 * PROJECT:	  PC GEOS
 * MODULE:	  ResEdit/UI
 * FILE:	  uiDisplay.ui
 *
 * AUTHOR:  	  Cassie Hartzog, Sep 23, 1992
 *
 * REVISION HISTORY:
 *	Name	  Date	    Description
 *	----	  ----	    -----------
 *	CH	9/23/92	  Initial version
 *
 * DESCRIPTION:
 *	This file contains the user interface description for the display
 *	duplicated by the document.
 *
 * 	$Id: uiDisplay.ui,v 1.1 97/04/04 17:13:34 newdeal Exp $
 *
 ***********************************************************************/

start DisplayTemplate;

MainDisplay = ResEditDisplay {
	/*
	 * The display will start not usable since it is not in the
	 * generic tree.  It will be set usable after being added to the
	 * display control.
	 */
	genStates = default -usable;
	children = DisplayViewGroup;
	hints = {
		ATTR_GEN_DISPLAY_NOT_MINIMIZABLE,
	        HINT_SIZE_WINDOW_AS_RATIO_OF_PARENT {
                 	dw   mask SWSS_RATIO or PCT_80
                 	dw   mask SWSS_RATIO or PCT_80
            	}
	}
}


DisplayViewGroup = GenInteraction {
	type = organizational;
	children = 
		TopGroup,
		MiddleGroup,
		BottomGroup;
	hints = {
		HINT_ORIENT_CHILDREN_VERTICALLY,
		HINT_MINIMIZE_CHILD_SPACING,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		HINT_EXPAND_HEIGHT_TO_FIT_PARENT,
		HINT_MINIMUM_SIZE {
			SpecWidth <>
			SpecHeight <>
			word	3
		}
 	}
}


/*---------------------------------------------------------------------------
   		Top Group Interaction
----------------------------------------------------------------------------*/

TopGroup = GenInteraction {
	children = TopLeftGroup,
		   ShortcutGroup,
		   TopRightGroup;
	hints = {
		HINT_FULL_JUSTIFY_CHILDREN_HORIZONTALLY,
		HINT_ORIENT_CHILDREN_HORIZONTALLY,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT
	}
}

TopLeftGroup = GenInteraction {
	children = ResourceList,
		   ChunkList;
	hints = {
		HINT_ORIENT_CHILDREN_VERTICALLY,
		HINT_CENTER_CHILDREN_ON_MONIKERS
	}
}

ShortcutGroup = GenInteraction vardataReloc {
	moniker	= 'S', "Shortcut";
	genStates = default -enabled;
	children = 
		ShortcutText, 
		ShortcutModifiers,
		ShortcutItemGroup;
	type = properties;
	visibility = dialog;
	hints	= {
		HINT_ORIENT_CHILDREN_VERTICALLY,
		ATTR_GEN_DESTINATION_CLASS { UN_DD ResEditDocumentClass }
	}
}	

TopRightGroup = GenInteraction {
	children = ChunkTypeText,
		   MnemonicInteraction;
	hints = {
		HINT_ORIENT_CHILDREN_VERTICALLY
	}
}


/*---------------------------------------------------------------------------
   		Top Left Group
----------------------------------------------------------------------------*/

ResourceList = GenDynamicList vardataReloc {
	moniker = "Resources";
	behaviorType = exclusive;
	selection = 0;
	numSelections = 1;
	queryMsg = MSG_RESEDIT_DOCUMENT_GET_RESOURCE_NAME;
	applyMsg = MSG_RESEDIT_DOCUMENT_CHANGE_RESOURCE_LIST; 
 	destination = "TO_APP_MODEL";
	hints = {
		HINT_ALLOW_CHILDREN_TO_WRAP,
		HINT_WRAP_AFTER_CHILD_COUNT {
				word	25
		},
		HINT_ITEM_GROUP_MINIMIZE_SIZE, 
		HINT_ITEM_GROUP_DISPLAY_CURRENT_SELECTION, 
		HINT_PLACE_MONIKER_TO_LEFT,
		HINT_FIXED_SIZE {
			SpecWidth  <SST_AVG_CHAR_WIDTHS, 35>
			SpecHeight <SST_LINES_OF_TEXT, 1>
		},
		ATTR_GEN_DESTINATION_CLASS { UN_DD ResEditDocumentClass }

	}
}

ChunkList = GenDynamicList vardataReloc {
	moniker = "Chunks"; 
	behaviorType = exclusive;
	selection = 0;
	numSelections = 1;
	queryMsg = MSG_RESEDIT_DOCUMENT_GET_CHUNK_NAME;
	applyMsg = MSG_RESEDIT_DOCUMENT_CHANGE_CHUNK; 
 	destination = "TO_APP_MODEL";
	hints = {
		HINT_ALLOW_CHILDREN_TO_WRAP,
		HINT_WRAP_AFTER_CHILD_COUNT {
				word	25
		},
		HINT_ITEM_GROUP_MINIMIZE_SIZE, 
		HINT_ITEM_GROUP_DISPLAY_CURRENT_SELECTION, 
		HINT_PLACE_MONIKER_TO_LEFT,
		HINT_FIXED_SIZE {
			SpecWidth <SST_AVG_CHAR_WIDTHS, 35>
			SpecHeight <SST_LINES_OF_TEXT, 1>
		},
		ATTR_GEN_DESTINATION_CLASS { UN_DD ResEditDocumentClass }
	}
}

/*---------------------------------------------------------------------------
   		Top Right Group
----------------------------------------------------------------------------*/

ChunkTypeText = GenText {
	moniker = " Type:";
	genAttributes = default +readOnly;
	textDisplayAttributes = default +allowTextOffEnd, +singleLineText;
	text = " ";
	hints = {
		  HINT_FIXED_SIZE {
			SpecWidth <SST_AVG_CHAR_WIDTHS, 20>
			SpecHeight <SST_LINES_OF_TEXT, 1>
		  }
	}
}

MnemonicInteraction = GenInteraction {
	children = MnemonicText, MnemonicList;
	hints = {
		HINT_ORIENT_CHILDREN_HORIZONTALLY,
		HINT_LEFT_JUSTIFY_CHILDREN
	}
}

class ResEditView = GenView {
}

MnemonicList = ResEditValue {
	genStates = default -enabled;
	hints = {
		HINT_VALUE_NOT_DIGITALLY_EDITABLE,
		HINT_VALUE_NO_DIGITAL_DISPLAY
	}
}

MnemonicText = ResEditMnemonicText vardataReloc {
	genStates = default -enabled;
	maxLength = 3;
	moniker = " Mnemonic:";
	text = "NIL";
	destination = "TO_APP_MODEL";
	hints = {
		HINT_FIXED_SIZE {
			SpecWidth <SST_AVG_CHAR_WIDTHS, 4>
			SpecHeight <SST_LINES_OF_TEXT, 1>
		},
		ATTR_GEN_DESTINATION_CLASS { UN_DD ResEditDocumentClass }
	}
}


/*---------------------------------------------------------------------------
   		Top Middle Group
----------------------------------------------------------------------------*/

ShortcutText = GenText vardataReloc {
	moniker = " Shortcut character:";
	textDisplayAttributes = default +singleLineText;
	maxLength = SHORTCUT_TEXT_LENGTH;
	text = " ";
	applyMsg = MSG_RESEDIT_DOCUMENT_APPLY_NEW_SHORTCUT;
	destination = "TO_APP_MODEL";
	hints = {
		  HINT_FIXED_SIZE {
			SpecWidth <SST_AVG_CHAR_WIDTHS, 2>
			SpecHeight <SST_LINES_OF_TEXT, 1>
		  },
		  ATTR_GEN_SEND_APPLY_MSG_ON_APPLY_EVEN_IF_NOT_MODIFIED,
		  ATTR_GEN_DESTINATION_CLASS { UN_DD ResEditDocumentClass }
	}
}

ShortcutModifiers = GenBooleanGroup vardataReloc {
	children = 
		ModifierAlt, 
		ModifierCtrl, 
		ModifierShift,
		ModifierPhysical;
	hints = {
		HINT_MINIMIZE_CHILD_SPACING,
		HINT_ORIENT_CHILDREN_VERTICALLY,
		ATTR_GEN_DESTINATION_CLASS { UN_DD ResEditDocumentClass }
	}
}

ModifierAlt = GenBoolean {
	moniker = "Alt";
	identifier = "mask KS_ALT";
}

ModifierCtrl = GenBoolean {
	moniker = "Ctrl";
	identifier = "mask KS_CTRL";
}

ModifierShift = GenBoolean {
	moniker = "Shift";
	identifier = "mask KS_SHIFT";
}

ModifierPhysical = GenBoolean {
	moniker = "Physical (match key, not character)";
	identifier = "mask KS_PHYSICAL";
}

ShortcutItemGroup = GenItemGroup vardataReloc {
	children = NoShortcutItem;
	behaviorType = exclusiveNone;
	destination = "TO_APP_MODEL";
	hints = {
		ATTR_GEN_ITEM_GROUP_STATUS_MSG { 
			word MSG_RESEDIT_DOCUMENT_TOGGLE_SHORTCUT 
		},
		ATTR_GEN_DESTINATION_CLASS { UN_DD ResEditDocumentClass }
	}
}

NoShortcutItem = GenItem {
	moniker = 'N', "No Shortcut";
	identifier = 0;
}

/*---------------------------------------------------------------------------
   		Middle Group Interaction
----------------------------------------------------------------------------*/

MiddleGroup = GenInteraction {
	children =
		MiddleLeftGroup,
		MiddleRightGroup;
	hints = {
		HINT_ORIENT_CHILDREN_HORIZONTALLY,
		HINT_MINIMIZE_CHILD_SPACING,
		HINT_DIVIDE_WIDTH_EQUALLY,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		HINT_EXPAND_HEIGHT_TO_FIT_PARENT
	}
}

MiddleLeftGroup = GenInteraction {
	children =
		LeftGlyph,
		LeftView;
	hints = {
		HINT_ORIENT_CHILDREN_VERTICALLY,
		HINT_MINIMIZE_CHILD_SPACING,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		HINT_EXPAND_HEIGHT_TO_FIT_PARENT
	}
}

LeftGlyph = GenGlyph {
	moniker = "Source File";
}

LeftView = ResEditView {
	horizLink = RightView;
	vertAttributes = scrollable;
	docRight = "72*17/2";	/* 8 1/2 inches */
	docBottom = "11*72";	/* 11 inches    */
}


MiddleRightGroup = GenInteraction {
	children =
		RightGlyph,
		RightView;
	hints = {
		HINT_ORIENT_CHILDREN_VERTICALLY,
		HINT_MINIMIZE_CHILD_SPACING,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		HINT_EXPAND_HEIGHT_TO_FIT_PARENT
	}
}

RightGlyph = GenGlyph {
	moniker = "Translation File";
}

RightView = ResEditView {
	horizLink = LeftView;
	vertAttributes = scrollable;
	docRight = "72*17/2";	/* 8 1/2 inches */
	docBottom = "11*72";	/* 11 inches    */
	hints = {
		HINT_DEFAULT_TARGET,
		HINT_DEFAULT_FOCUS
	}
}


/*---------------------------------------------------------------------------
   	Bottom Display Interaction
----------------------------------------------------------------------------*/

BottomGroup = GenInteraction {
	children = InstructionText, MinText, MaxText;
	hints = {
		HINT_ORIENT_CHILDREN_VERTICALLY,
		HINT_NO_TALLER_THAN_CHILDREN_REQUIRE,
		HINT_MINIMIZE_CHILD_SPACING,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT, 
		HINT_LEFT_JUSTIFY_CHILDREN
	}
}
		
InstructionText = GenText {
	moniker = "Instructions:";
	genAttributes = default +readOnly;
	hints = {
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		HINT_FIXED_SIZE {
			SpecWidth  <>
			SpecHeight <SST_LINES_OF_TEXT, 4>
		}
	}
}

MinText = GenText {
	moniker = "Minimum Length:";
	genAttributes = default +readOnly;
	hints = {
		HINT_FIXED_SIZE {
			SpecWidth <SST_AVG_CHAR_WIDTHS, 4>
			SpecHeight <SST_LINES_OF_TEXT, 1>
		}
	}
}

MaxText = GenText {
	moniker = "Maximum Length:";
	genAttributes = default +readOnly;
	hints = {
		HINT_FIXED_SIZE {
			SpecWidth <SST_AVG_CHAR_WIDTHS, 4>
			SpecHeight <SST_LINES_OF_TEXT, 1>
		}
	}
}

end 	DisplayTemplate;


/*---------------------------------------------------------------------------
   	Template for objects attached to the document & display
----------------------------------------------------------------------------*/

start 	ContentTemplate;

/* 
 * OrigContent is used to display the original data from the translation 
 * file in the LeftView. 
 */
OrigContent = ResEditContent {
	contentAttrs = sameWidthAsSubview;
	children = OrigText, OrigDrawText; 
	visCompGeoAttrs	= customManageChildren;
}

/* 
 * OrigDrawText is used only to draw the text chunks in the OrigContent. 
 */
OrigDrawText = ResEditText {
	text = "DrawText";
	optFlags = default -geometryInvalid, -updatePath;
 	states = default -selectable, -targetable, -editable;
	storage = default -defaultCharAttr, +multipleCharAttr;
	charAttrRuns = OrigDrawTextCharAttrRuns; 
	type = RETT_DRAW;
}

chunk OrigDrawTextCharAttrRuns = data {
    RUN_ARRAY_HEADER(2, ResEditTextCharAttrs)
    TextRunArrayElement TRAE_ALL(CHAR_ATTR_NORMAL), TRAE_END
}

/* 
 * OrigText is used to draw the original text in the source view. 
 * Make it selectable and targetable so that text can be copied from it.
 */
OrigText = ResEditText {
	text = "OrigText";
	optFlags = default -geometryInvalid, -updatePath;
 	states = default +selectable, +targetable, -editable;
	storage = default -defaultCharAttr, +multipleCharAttr;
	charAttrRuns = OrigTextCharAttrRuns; 
	type = RETT_ORIGINAL;
}

chunk OrigTextCharAttrRuns = data {
    RUN_ARRAY_HEADER(2, ResEditTextCharAttrs)
    TextRunArrayElement TRAE_ALL(CHAR_ATTR_NORMAL), TRAE_END
}

/*
 * This text object is used only for editing the current chunk, while
 * the other two above are used for recalculating chunk positions and 
 * drawing text in the source and translation views.
 */
EditText = ResEditText {
	text = "EditText";
	states = default +targetable, +editable, +selectable;
	optFlags = default -geometryInvalid, - updatePath;
	storage = default -defaultCharAttr, +multipleCharAttr;
	charAttrRuns = EditTextCharAttrRuns; 
	type = RETT_EDIT;
	hints = {
		ATTR_VIS_TEXT_EXTENDED_FILTER { byte VTEFT_REPLACE_PARAMS }
	}
}	

chunk EditTextCharAttrRuns = data {
    RUN_ARRAY_HEADER(2, ResEditTextCharAttrs)
    TextRunArrayElement TRAE_ALL(CHAR_ATTR_NORMAL), TRAE_END
}

#ifdef DO_PIZZA

chunk ResEditTextCharAttrs = data {
    CHAR_ATTR_ELEMENT_ARRAY_HEADER(1)

CHAR_ATTR_NORMAL = 0
    CHAR_ATTR_FONT_SIZE_STYLE(FID_PIZZA_KANJI, 16, 0)
}
#else

chunk ResEditTextCharAttrs = data {
    CHAR_ATTR_ELEMENT_ARRAY_HEADER(1)

CHAR_ATTR_NORMAL = 0
    CHAR_ATTR_FONT_SIZE_STYLE(FID_BERKELEY, VIS_TEXT_DEFAULT_POINT_SIZE, 0)
}
#endif

/* 
 * TransDrawText is used to draw the changed text in the translation view. 
 * It is not editable or selectable, since EditText will handle all that
 * for the current chunk.
 */
TransDrawText = ResEditText {
	text = "DrawText";
	optFlags = default -geometryInvalid, -updatePath;
 	states = default -selectable, -targetable, -editable;
	storage = default -defaultCharAttr, +multipleCharAttr;
	charAttrRuns = TransDrawTextCharAttrRuns; 
	type = RETT_DRAW;
}

chunk TransDrawTextCharAttrRuns = data {
    RUN_ARRAY_HEADER(2, ResEditTextCharAttrs)
    TextRunArrayElement TRAE_ALL(CHAR_ATTR_NORMAL), TRAE_END
}


end	ContentTemplate;

