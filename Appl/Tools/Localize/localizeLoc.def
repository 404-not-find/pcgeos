COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1992 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		
FILE:		localizeLoc.def

AUTHOR:		Cassie Hartzong, Nov 19, 1992

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	cassie	11/19/92	Initial revision


DESCRIPTION:
	Constants and structures used in localization files.

	When a geode is compiled, a localization file (<geode>.vm) is 
	created.  This file is a DB file whose map block is a NameArray
	of resources which contain editable chunks, and for each
	such resource, there is a NameArray of those chunks.

	Adam modified Esp to create the .vm file.  What follows was
	written by him.

	The syntax of the Esp-supported localization instructions is:

	localize [<chunk>, ] <instructions> [, <max> [, <min> [, <type>]]]
	localize not

	If no <chunk> is given, the most-recently defined one will be used.
	<instructions> is a double-quoted string (can be single-quoted if 
	you want to be 	weird).

	<max> can be any constant Esp expression. If only <max> is given, 
	<min> is left at 0.  If you want to specify only a minimum, you 
	must give a <max> of 0.

	<min> can be any constant Esp expression.

	<type> indicates the type of data in the chunk (can also be an 
	Esp constant expression, if we were to define this enum someplace):
	[see ChunkDataType below.  -cassie]

		0	raw data
		1	vis moniker
		2	gstring
		3	text


	Esp will automatically put out a text localization record 
	with no instructions, min, or max, for any chunk defined as 
	"char" or as an array of chars (either explicitly or as 
	'chunk.char "random string", 0'; now I think about it, it
	probably doesn't cope with typedefs to arrays of chars, though). 
	If you've a chunk with text in it that should *not* be localized, 
	use the "localize not" form immediately after defining the chunk.

	You cannot give instructions for a chunk that has no name. E.g.

		chunk.char	"help me spock", 0
		localize	"foo"

	will generate an error.

	$Id: localizeLoc.def,v 1.1 97/04/04 17:13:47 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@


;-----------------------------------------------------------------------------
;                           Constants
;-----------------------------------------------------------------------------
LOC_TOKEN_1_2	equ ('L') or ('O' shl 8)
LOC_TOKEN_3_4	equ ('C') or ('L' shl 8)

LOCALIZE_PROTOCOL_MAJOR	= 1
LOCALIZE_PROTOCOL_MINOR	= 0

;
; these constants are output by goc, esp to the vm file
; and must change here if they change there
;
ChunkDataType	etype	word
    CDT_rawData		enum	ChunkDataType       	; /* 0 */
    CDT_visMoniker	enum	ChunkDataType    	; /* 1 */
    CDT_GString		enum	ChunkDataType	       	; /* 2 */
    CDT_text		enum	ChunkDataType          	; /* 3 */

;-----------------------------------------------------------------------------
;                           Records
;-----------------------------------------------------------------------------

;-----------------------------------------------------------------------------
; 	                    Structures
;-----------------------------------------------------------------------------

; The extra map block NameArray header info for localization files.
;
LocMapHeader		struct
    LMH_meta		NameArrayHeader
    LMH_protocol	ProtocolNumber
SBCS <    LMH_geodeName	char	FILE_LONGNAME_BUFFER_SIZE dup (?)	>
DBCS <    LMH_geodeName	wchar	FILE_LONGNAME_BUFFER_SIZE dup (?)	>
LocMapHeader		ends

; The data that goes in the NameArrayElement for each resource.
;
LocMapData		struct
    LMD_item		word			; item # of NameArray of chunks
    LMD_group		word			; resource group
    LMD_number		word			; resource number
SBCS <    LMD_name		label	char		; resource name	>
DBCS <    LMD_name		label	wchar		; resource name	>
LocMapData		ends

; The structure of the element.
;
LocMapElement		struct
    LME_meta		NameArrayElement
    LME_data		LocMapData
LocMapElement		ends


; The header for the resource NameArray of chunks
;
LocArrayHeader		struct
    LAH_meta		NameArrayHeader
LocArrayHeader		ends

; The data that goes in the NameArrayElement for each chunk
;
LocArrayData		struct
    LAD_number		word			; chunk number
    LAD_instItem	word			; instruction item #
SBCS <    LAD_chunkType	word			; chunk type		>
DBCS <    LAD_chunkType	ChunkDataType		; chunk type		>
    LAD_minSize		word			; min string length
    LAD_maxSize		word			; max string length
    LAD_flags		word			; user supplied flags
SBCS <    LAD_name		label	char		; chunk name	>
DBCS <    LAD_name		label	wchar		; chunk name	>
LocArrayData 		ends

; The structure of the element.
;
LocArrayElement		struct
    LAE_meta		NameArrayElement
    LAE_data		LocArrayData
LocArrayElement		ends




