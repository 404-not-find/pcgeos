/*
 *	Copyright (c) Geoworks 1992-1994 -- All Rights Reserved
 *
 * Project:	Studio
 * File:	Document/documentData.ui
 *
 * Author:	Tony Requist
 *
 *	This file contains the user interface description for various
 * data blocks to duplicate.
 *
 *	$Id: documentData.ui,v 1.1 97/04/04 14:38:33 newdeal Exp $
 *
 */

/* ----------------------------------------------------------------------------
	Strings resource
-----------------------------------------------------------------------------*/

start StringsUI, data;

chunk MainArticleName = "Main Article";

chunk TitlePageSectionName = "Title Page";

/*
chunk InsertPageString = "Insert a page before the current page?";
chunk AppendPageString = "Append a page after the current page?";
chunk DeletePageString = "Delete the current page?";
*/

chunk MasterPageString = "Master Page for ";
chunk LeftMasterPageString = "Left Master Page for ";
chunk RightMasterPageString = "Right Master Page for ";

chunk CreateTitlePageString =
	"This will create a new section called \\\"Title Page\\\" at the"
	" beginning of the document. Are you sure you want to"
	" add this section?";

chunk DeleteTitlePageString =
	"Are you sure you want to delete the title page?";

chunk GraphicsWarnString =
	"Basic graphics tools will now appear along the"
	" left edge of the window. To move and resize graphics, use"
	" the pointer tool (the arrow). To return"
	" to editing text, use the text tool (the tool"
	" above the arrow). You may hide this tool bar"
	" with commands on the Options menu.";

chunk PlatformEmulationWarnString =
	"Changing emulation modes may flow text onto other pages."
	"  New pages may be created without page names.  Existing"
	" pages may lose their names.  Continue?";

chunk CrossSectionReplaceAbortedString =
	"Text cannot be deleted across sections."
	" Select the relevant parts of each"
	" section and delete them individually."
	"\\\r\\\rError Code: BN-01";

chunk NoHeaderErrorString =
	"There is no header to edit because the top margin is too small.";

chunk NoFooterErrorString =
	"There is no footer to edit because the bottom margin is too small.";

/*
 * Book file not found query
 */
chunk BookFileNotFoundString =
	"The file for this book could not be found."
	" Do you wish to create a new book file?";
visMoniker NewBookMoniker = 'N', "New Book";
visMoniker ResetBookMoniker = 'R', "Reset";


/*
 * Edit master page query
 */

chunk EditWhichMasterPageString = "This section has right- and left-facing"
				  " master pages. Which do you want to"
				  " edit?";

visMoniker EditLeftMasterPageMoniker = 'L', "Edit Left Master";
visMoniker EditRightMasterPageMoniker = 'R', "Edit Right Master";
visMoniker CancelMoniker = 'C', "Cancel";

/*
 * Edit Header - Title Page Query
 */

chunk EditHeaderTitlePageString =
	"Do you want to edit the header for the title page or for the main"
	" section of the document?";
visMoniker TitlePageMoniker = 'T', "Title Page";
visMoniker MainSectionMoniker = 'M', "Main Section";

/*
 * Edit Footer - Title Page Query
 */
chunk EditFooterTitlePageString =
	"Do you want to edit the footer for the title page or for the main"
	" section of the document?";

/*
 * Page Setup - Title Page Query
 */

chunk PageSetupTitlePageString =
	"Do you want to change the page setup for the title page"
	" or for the main section of the document?";


/*
 * Errors
 */

chunk SectionSameNameString =
	"A section with this name already exists."
	"\\\r\\\rError Code: BN-02";

chunk CannotDeleteLastFlowRegionString =
	"Cannot delete this flow region. Your master page must have at"
	" least one region into which it can flow text."
	"\\\r\\\rError Code: BN-03";

chunk CannotDeleteLastArticleRegionString =
	"Cannot delete this flow region. Your page must have at"
	" least one region into which it can flow text."
	"\\\r\\\rError Code: BN-04";

chunk NoMergeDataMessage =
	"No data was found to merge. Data you wish to merge must be placed"
	" on the clipboard. Use the Copy or Export command in the"
	" application where data is stored."
	"\\\r\\\rError Code: BN-05";

chunk NoFieldsMessage =
	"There are no fields to be found on the clipboard. The"
	" data on the clipboard may not be the right type"
	" for merging. Be sure you are correctly using the Copy"
	" or Export command in the application where the data"
	" is stored."
	"\\\r\\\rError Code: BN-06";

chunk ExpectedFieldMessage =
	"A merge field specified in your document was not found"
	" in the merge data. The field names must match exactly."
	" Check to see that all field names are correctly spelled and" 
	" that the merge data is correct also."
	"\\\r\\\rError Code: BN-07";

chunk GeneralMergeError =
	"An error was encountered while merging."
	" The operation could not be completed."
	"\\\r\\\rError Code: BN-08";

chunk ColumnTooNarrowString =
	"The page setup values that you entered will result in columns"
	" that are too narrow. Try reducing the number of columns or"
	" the column spacing or the page margin settings or increasing"
	" the page width."
	"\\\r\\\rError Code: BN-09";

chunk ColumnTooShortString =
	"The page setup values that you entered will result in columns"
	" that are too short. Try reducing the page margin settings or"
	" increasing the page height."
	"\\\r\\\rError Code: BN-24";

chunk PageSizeColumnTooNarrowString =
	"The page size values that you entered will result in columns"
	" that are too narrow. Try increasing the page width."
	"\\\r\\\rError Code: BN-25";

chunk PageSizeColumnTooShortString =
	"The page size values that you entered will result in columns"
	" that are too short. Try increasing the page height."
	"\\\r\\\rError Code: BN-26";

chunk MergeUndoString =
	"Undo Mail-Merge Changes";

/*
 * Must allow space for 12 characters at the end, as required 
 * by UtilHex32ToAscii
 */
chunk MergeFeedbackString =
	"Documents Left to Merge: 123456789012";

chunk MergeReplacePrefixString = data {
#ifdef DO_DBCS
	wchar	C_OPENING_DOUBLE_ANGLE_BRACKET, 0
#else
	byte	C_GUILLEDBLLEFT, 0
#endif
	}
localize "prefix character for mail merge variable", 1;

chunk MergeReplaceSuffixString = data {
#ifdef DO_DBCS
	wchar	C_CLOSING_DOUBLE_ANGLE_BRACKET, 0
#else
	byte	C_GUILLEDBLRIGHT, 0
#endif
	}
localize "suffix character for mail merge variable", 1;

chunk HelpNamesTooLongString =
	"Some of the names for help are too long.  Would you like"
	" them to be truncated?";

chunk NameCannotTruncateString =
	"The name \\\"\\1\\\" could not be truncated."
	"\\\r\\\rError Code: BN-10";

chunk NoCompressLibraryString =
      "Could not find the help compression library."
      " You may need to re-install your software.\\\r\\\rError Code BN-11";

chunk CompressMemoryErrorString =
	"Could not allocate enough memory to process the help file."
	" Try closing some applications.\\\r\\\rError Code BN-12";

chunk BadDecompressErrorString =
	"Encountered a compaction error while processing the help file."
	"\\\r\\\rError Code BN-13";

chunk ResetOptionsQueryString =
	"Are you sure you want to reset the configuration?";

chunk ErrorCreatingBookFileString =
	"File creation error.  Could not create the Book file."
	"\\\r\\\rError Code BN-14";

chunk BadBookPathString =
	"You must select a valid path for the Content files."
	"\\\r\\\rError Code BN-15";

chunk NoMainFileWarningString =
	"Warning: You have not selected the Content file to be loaded"
	" when the Book is first opened.\\\r\\\rError Code BN-16";

chunk FirstFileNotInFileListString =
	"The first file to be opened for this Book is"
	" not in the Book's list of Content files."
	"\\\r\\\rError Code BN-17";

chunk FirstPageEmptyWarningString =
	"Warning: You have not specified the name of the page to be" 
	" displayed when the Book is first opened."
	"\\\r\\\rError Code BN-18";

chunk FileAlreadyInListString =
	"That file is already in the list of Content files.";

chunk NoContentFilesErrorString =
	"There are no Content files in this Book."
	"\\\r\\\rError Code BN-20";

chunk ErrorCreatingHelpFileString =
	"File creation error.  Could not generate the content file."
	" Perhaps it is still open in Book Reader."
	"\\\r\\\rError Code BN-21";

chunk WarningNoTOCPageString =
	"This document does not have a page named TOC.";

chunk QueryReplaceBookFile =
	"A book of that name already exists.  Do you wish to overwrite it?";

chunk NameInUseString =
	"A file of that name already exists. Please use a different name.";

chunk PageNameAlreadyUsedErrorString =
	"The name \\\"\\\01\\\" is already assigned to a page. To use it"
	" here, first clear it from that page.";

chunk ErrorCanNotDefineInteterminateStyle =
        "Error defining style. The selected text has an indeterminate style."
        " Try selecting text with a single style."
	"\\\r\\\rError Code BN-22";

chunk ErrorCanNotDefineStyleWithBoxedCharAttr =
        "Error defining style. The selected text contains a hyperlink"
   	" shown in the Boxed style, which is reserved for hyperlinks."
   	" Turn off the Show All Hyperlinks option in the Hyperlink"
        " menu and try defining the style again."
        "\\\r\\\rError Code BN-23";

chunk StringUsedForTestingForIndeterminateStyle =
        "<<";
localize "This string must match the start of the string used by the Styles library to describe an indeterminate style.";

chunk TooManyNamesOnPageWarningString =
	"You have added text containing the page name \\\"\\\01\\\" to"
	" an already named page.  Locate the page with two names by turning"
	" on Show Invisibles from the Options menu under Other Settings,"
	" then use the Page menu to clear the page name and rename the page.";

chunk PageNameAlreadyUsedWarningString =
	"You have added a page with the name \\\"\\\01\\\", which is already"
	" assigned to another page.  Use the Page menu to clear the name"
	" from one of the pages and then rename that page.";

chunk TooManyOnPageAndAlreadyUsedWarningString =
	"You have added text containing the page name \\\"\\\01\\\" to"
	" an already named page.  Locate the page with two names by turning"
	" on Show Invisibles from the Options menu under Other Settings,"
	" then use the Page menu to clear the page name and rename the page."
	" Note that \\\"\\\01\\\" is already assigned to another page."
	" Each name should belong to at most one page.";

end StringsUI;

/* ----------------------------------------------------------------------------
	Template to duplicate to create character attribute element array
-----------------------------------------------------------------------------*/

start CharAttrElementTemp, data;

chunk CharAttrElements = data {
    CHAR_ATTR_ELEMENT_ARRAY_HEADER(1)

CHAR_ATTR_NORMAL = 0
    CHAR_ATTR_SS_FONT_SIZE_STYLE_COLOR(TEXT_STYLE_NORMAL, 2, \
			       FID_DTC_URW_ROMAN, 12, 0, C_BLACK)

}


end CharAttrElementTemp;

/* ----------------------------------------------------------------------------
	Template to duplicate to create paragraph attribute element array
-----------------------------------------------------------------------------*/

/* U.S. template */

start ParaAttrElementUSTemp, data;

/* Non-redwood systems */
chunk ParaAttrElements = data {
PAE_base	label	byte
	; Header
    PARA_ATTR_ELEMENT_ARRAY_HEADER(1)

	; Offsets
    word PAE_0-PAE_base

	; Data

PARA_ATTR_NORMAL = 0
PAE_0	label	byte
    PARA_ATTR_SS_JUST_LEFT_RIGHT_PARA_TABS(TEXT_STYLE_NORMAL, 2, \
		   J_LEFT, 0, 0, 0, PIXELS_PER_INCH/2*8, 0)

}

end ParaAttrElementUSTemp;

/* Metric template */

start ParaAttrElementMetricTemp, data;

chunk MParaAttrElements = data {
MPAE_base	label	byte
	; Header
    PARA_ATTR_ELEMENT_ARRAY_HEADER(1)

	; Offsets
    word MPAE_0-MPAE_base

	; Data

PARA_ATTR_NORMAL = 0
MPAE_0	label	byte
    PARA_ATTR_SS_JUST_LEFT_RIGHT_PARA_TABS(TEXT_STYLE_NORMAL, 2, \
		   J_LEFT, 0, 0, 0, DISTANCE_1_CM, 0)

}

end ParaAttrElementMetricTemp;

/* ----------------------------------------------------------------------------
	Template to duplicate to create text style array
-----------------------------------------------------------------------------*/

/*
 * STYLES:
 *
 * Basic letter/report/meno styles:
 *
 * Normal - Plain vanilla basic style
 *
 * Styles used automatically (not in popup list):
 *
 * (Header) - Style for headers
 * (Footer) - Style for footers
 */

start TextStyleTemp, data;

chunk TextStyleArray = data {

TS_LABEL	macro	tscount
TS_&tscount	label	byte
endm

TS_ELEMENT	macro	sconst, sname, sbase, sflags, tflags
TS_LABEL	%tscount
TEXT_STYLE_&sconst = tscount
tscount = tscount+1
ifidn <sbase>, <CA_NULL_ELEMENT>
    StyleElementHeader <<<<1, 0>>>, sbase, sflags, <>, tflags>
else
    StyleElementHeader <<<<1, 0>>>, TEXT_STYLE_&sbase, sflags, <>, tflags>
endif
    word CHAR_ATTR_&sconst, PARA_ATTR_&sconst
    lptr	sname
endm

TS_OFFSET	macro	tscount
	word	TS_&tscount - TS_base
endm

TS_base	label	byte
tscount = 0
	; Header
 NameArrayHeader <<<1, 0, 0, size NameArrayHeader>, EA_FREE_LIST_TERMINATOR>,
		(size TextStyleElementHeader)-(size NameArrayElement)>

	; Offsets
TS_OFFSET	%tscount

tscount = 0


	; Data

 TS_ELEMENT	NORMAL, NormalTextStyleName, CA_NULL_ELEMENT, \
		<mask SEF_DISPLAY_IN_TOOLBOX or mask SEF_PROTECTED>, 0

}

chunk NormalTextStyleName = "Normal";
	localize "The name of the default text style", 256;

end TextStyleTemp;

/* ----------------------------------------------------------------------------
	Template to duplicate to create graphic element array
-----------------------------------------------------------------------------*/

start GraphicElementTemp, data;

chunk GraphicElements = data {
    GRAPHIC_ELEMENT_ARRAY_HEADER(0)
}

end GraphicElementTemp;

/* ----------------------------------------------------------------------------
	Template to duplicate to create type element array
-----------------------------------------------------------------------------*/

start TypeElementTemp, data;

chunk TypeElements = data {
    TYPE_ELEMENT_ARRAY_HEADER(1)
TYPE_ATTR_NORMAL = 0
    TYPE_ELEMENT_NONE
}

end TypeElementTemp;

/* ----------------------------------------------------------------------------
	Template to duplicate to create name element array
-----------------------------------------------------------------------------*/

start NameElementTemp, data;

chunk NameElements = data {
    NAME_ARRAY_HEADER(0)
}

end NameElementTemp;

/* ----------------------------------------------------------------------------
	Template to duplicate to create grobj body, attr manager and rulers
-----------------------------------------------------------------------------*/

start BodyRulerTempUI, notDetachable;

MainBody = StudioGrObjBody vardataReloc {

	/* Have GrObjBody automatically grab the target and focus */
	/* when it gets a MSG_VIS_OPEN */

	bodyFlags = default +hasActionNotification;

	/* Set the GrObjAttributeManager and Ruler */

	oam = AttributeManager; 
	ruler = MainHorizontalRuler;

	boundsLeft = 0;
	boundsTop = 0;
	boundsRight = 0;
	boundsBottom = 0;

	hints = {
		ATTR_GB_ACTION_NOTIFICATION {
			word	0
			I_OPTR MainBody
		}
	}
}

/*
 * It is the GrObjAttributeManager which defines maintains all the
 * attribute and style arrays for a grobj document as well as the
 * default attributes.
 */

AttributeManager = StudioGrObjAttributeManager {
	bodyList = GOAMBodyList;
}

chunk	GOAMBodyList = data {
	GOAM_BODY_LIST_CHUNK_ARRAY_HEADER (1)
	I_OPTR MainBody
}

/*
 * It is the Ruler that runs horizontally across the top of the GrObjBody.
 * It maintains grids, guidelines, units and performs snap to and constrains.
 * It is the master ruler, maintain data necessary for its slave, the
 * row ruler.
 */

MainHorizontalRuler = TextRuler {
	tabControl = "0x103c003a";
	rulerAttrs = default +horizontal, +isMaster, -showGrid;

	constrainStrategy = verticalGuidelines, horizontalGuidelines,
			    snapX, snapY, relativeX, relativeY;

	gridX = "0, 0";
	gridY = "0, 0";

	right = 8192;
	attr = default -managed;
	optFlags = default -geometryInvalid, -updatePath;

	slaveRuler = MainVerticalRuler;
}

/*
 * It is the Ruler that runs vertically down the left side of the GrObjBody.
 * It is the slave ruler, so all its data is maintained by the ColumnRuler
 */

MainVerticalRuler = VisRuler {
	constrainStrategy = verticalGuidelines, horizontalGuidelines,
			    snapX, snapY, relativeX, relativeY;
	right = "VIS_RULER_HEIGHT";
	bottom = 8192;
	attr = default -managed;
	optFlags = default -geometryInvalid, -updatePath;
	rulerAttrs = default -horizontal, -isMaster;
}

end BodyRulerTempUI;

/* ----------------------------------------------------------------------------
	Template to duplicate to create article block
-----------------------------------------------------------------------------*/

start ArticleTempUI, notDetachable;

ArticleText = StudioArticle {
	features = default +allowUndo, +allowSmartQuotes, +dontShowSoftPageBreaks;
	states = editable, selectable, targetable;

	regionArray = ArticleRegionArray;
	displayMode = page;
	regionSpacing = "DISPLAY_MODE_REGION_SPACING";
	draftRegionWidth = "DRAFT_REGION_WIDTH";
	draftRegionHeight = "DRAFT_REGION_HEIGHT";

	hints = {
	    ATTR_VIS_TEXT_NOTIFY_CONTENT,
	    ATTR_VIS_TEXT_DOES_NOT_ACCEPT_INK,
	    ATTR_VIS_TEXT_EXTENDED_FILTER {byte VTEFT_REPLACE_PARAMS}
	}
}

chunk ArticleRegionArray = data {
    ChunkArrayHeader <
	0,
	size ArticleRegionArrayElement,
	0,
	size ChunkArrayHeader
    >
}

end ArticleTempUI;

/* ----------------------------------------------------------------------------
	Template to duplicate to create grobj body, attr manager and rulers
-----------------------------------------------------------------------------*/

start MasterPageTempUI, notDetachable;

/*
 * NOTE: This block has a larger header (MasterPageBlockHeader) but there is
 * no way to define it in uic, so the extra data is defined in
 * documentManager.asm after the rdef file is included.
 */

MasterPageBody = StudioMasterPageGrObjBody vardataReloc {

	/* Have GrObjBody automatically grab the target and focus */
	/* when it gets a MSG_VIS_OPEN */

	bodyFlags = default +hasActionNotification;

	/* Set the Ruler */

	oam = AttributeManager; 
	ruler = MPHorizontalRuler;

	boundsLeft = 0;
	boundsTop = 0;
	boundsRight = 0;
	boundsBottom = 0;

	hints = {
		ATTR_GB_ACTION_NOTIFICATION {
			word	0
			I_OPTR MasterPageBody
		}
	}
}

/*
 * It is the Ruler that runs horizontally across the top of the GrObjBody.
 * It maintains grids, guidelines, units and performs snap to and constrains.
 * It is the master ruler, maintain data necessary for its slave, the
 * row ruler.
 */

MPHorizontalRuler = TextRuler {
	tabControl = "0x103c003a";
	rulerAttrs = default +horizontal, -showGrid;

	constrainStrategy = verticalGuidelines, horizontalGuidelines,
			    snapX, snapY, relativeX, relativeY;

	gridX = "0, 0";
	gridY = "0, 0";

	right = 8192;
	attr = default -managed;
	optFlags = default -geometryInvalid, -updatePath;

	slaveRuler = MPVerticalRuler;
}

/*
 * It is the Ruler that runs vertically down the left side of the GrObjBody.
 * It is the slave ruler, so all its data is maintained by the ColumnRuler
 */

MPVerticalRuler = VisRuler {
	constrainStrategy = verticalGuidelines, horizontalGuidelines,
			    snapX, snapY, relativeX, relativeY;
	right = "VIS_RULER_HEIGHT";
	bottom = 8192;
	attr = default -managed;
	optFlags = default -geometryInvalid, -updatePath;
	rulerAttrs = default -horizontal;
}

/*
 * This is the flow region array for the master page
 */

chunk FlowRegionArray = data {
	ChunkArrayHeader <0, size FlowRegionArrayElement,
						0, size ChunkArrayHeader>
}

end MasterPageTempUI;
