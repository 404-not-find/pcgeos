/**********************************************************************
 *
 *	Copyright (c) Designs in Light 2002 -- All Rights Reserved
 *
 * PROJECT:	Mail
 * MODULE:		
 * FILE:	mail.goh
 * 
 ****************************************************************************/

@include	<stdapp.goh>
@include        <ui.goh>
@include        <Ansi/string.h>
@include        <Ansi/stdio.h>
@include        <bbxmlib.goh>
@include        <config.goh>
@include        <Objects/Text/tCtrlC.goh>
@include        <spool.goh>
@include        <Objects/vLTextC.goh>
@include        <iapp.h>
@include        <initfile.h>
@include        <vm.h>
@include        <product.goh>
@include        <parentc.goh>
@include        <Objects/gSysC.goh>

/***************************************************************************
 *			Product & Feature Macros 
 ***************************************************************************/

/*
 * @define MULTIPLE_MESSAGE_SELECTION
 * TRUE: allow multiple messages to be selected
 * FALSE: only allow single messages to be selected
 *
 * @define SHOW_NUM_MESSAGES_IN_FOLDERS
 * TRUE: display the number of messages in each folder after the name
 * FALSE: display only for Drafts
 *
 * @define SHOW_FULL_ATTACHMENT_PATH
 * TRUE: attachment lists show the full path to the attachment
 * FALSE: attachment lists show just the filename
 *
 * @define MAIL_ALIAS_SUPPORT
 * TRUE: mail aliases automatically expanded
 * FALSE: mail aliases not supported
 *
 * @define MAIL_STYLES_SUPPORT
 * TRUE: mail styles are supported
 * FALSE: mail styles are stripped from the text
 *
 * @define CUSTOM_FOLDER_ICONS
 * TRUE: folders have custom icons
 * FALSE: all folders have the same icon
 *
 * @define PRETTY_MAIL_HEADERS
 * TRUE: include tabs and margins so To:, From:, etc. line up
 * FALSE: left-justify headers
 *
 * @define PARSE_URLS
 * TRUE: search for URLs (http://) in plain text
 *       note: requires MAIL_STYLES_SUPPORT
 * FALSE: URLs in plain text ignored
 *
 * @define SPELL_CHECK
 * TRUE: include spell checking
 * FALSE: no spell checking included in mail composer
 *
 * @define APP_START_OPTIONS
 * TRUE: include options for minimize, quit on starting another application
 * FALSE: don't include the options
 *
 * @define BCC_SUPPORT
 * TRUE: include support for Bcc: (blind carbon copy)
 * FALSE: don't include Bcc: support
 *
 * @define SHOW_RAW_MESSAGE
 * TRUE: include option to show raw message data
 * FALSE: don't
 *
 * @define SIGNATURE_IN_OPTIONS
 * TRUE: put the signature settings under Advanced Options
 * FALSE: put them under Email Accounts
 *
 * @define AUTO_SIGNATURE_OPTION
 * TRUE: include option to automatically append signature in new messages
 * FALSE: don't
 *
 * @define SORT_BY_COLUMNS
 * TRUE: include buttons to sort by columns of the mail list
 * FALSE: include "Mailbox: X messages"
 *
 * @define INCLUDE_PRINT_TOOL
 * TRUE: include tool for printing in read message window
 * FALSE: don't
 *
 * @define PRINT_HEADER
 * TRUE: print a header on the top of each printed page
 * FALSE: just print data
 *
 * @define: COMPOSE_SEND_NOW
 * TRUE: Send Now button in mail compose window will give option of sending
 *       current email, or all in outbox
 * FALSE: Send Now button will Send all in outbox
 * NOTE: in both cases, receive will follow
 *
 * @define: MANUAL_RECOVER
 * TRUE: user selects folder to recover to, speeds up delete slightly
 *       as X-dir:header doesn't need to be added to deleted message
 * FALSE: use X-dir: header, auto recover to original directory
 *



 * @define MULTIPLE_ACCOUNT_SUPPORT
 * TRUE: supports multiple e-mail accounts
 * FALSE: single e-mail account only
 *
 * @define LEAVE_MAIL_ON_SERVER
 * TRUE: include option to leave mail on the server
 * FALSE: don't
 *
 */

@define MULTIPLE_MESSAGE_SELECTION
@define SHOW_NUM_MESSAGES_IN_FOLDERS
@define MAIL_ALIAS_SUPPORT
@define MAIL_STYLES_SUPPORT
@define CUSTOM_FOLDER_ICONS
@define PRETTY_MAIL_HEADERS
@define PARSE_URLS
@define SPELL_CHECK
@define PRINT_HEADERS
@define COMPOSE_SEND_NOW
@define MANUAL_RECOVER
@define APP_START_OPTIONS
@define BCC_SUPPORT
@define SHOW_RAW_MESSAGE
@define SIGNATURE_IN_OPTIONS
@define AUTO_SIGNATURE_OPTION
@define SORT_BY_COLUMNS
@define INCLUDE_PRINT_TOOL

@define MULTIPLE_ACCOUNT_SUPPORT
@define LEAVE_MAIL_ON_SERVER 


/***************************************************************************
 *			Fatal errors
 ***************************************************************************/

typedef enum {
        MAIL_FROM_FIELD_UNEXPECTEDLY_EMPTY,
	MAIL_BUFFER_OVERFLOW,
	MAIL_COMPOSER_FILE_NAME_BUT_NO_DIRECTORY,
	MAIL_SEARCH_INFO_MISSING,
	MAIL_ILLEGAL_FOLDER_ID,
	MAIL_TOKEN_PARSE_ERROR,
	MAIL_UNABLE_TO_OPEN_MESSAGE_FILE,
	MAIL_IMPORT_ERROR
} FatalErrors;

typedef enum {
        MAIL_UIDL_NOT_SUPPORTED,
	MAIL_MESSAGE_DELETED_AFTER_CRASH,
	MAIL_UNABLE_TO_SET_UIDL_FLAG,
	MAIL_UNREFERENCED_UIDL
} Warnings;

/***************************************************************************
 *			  constants, structures, etc.
 ***************************************************************************/

extern FileHandle g_logHan;

/* for the mail account tab updating */
#define UT_BUILD	0
#define UT_DELETE	1
#define UT_ADD		2

#define SMTP_AUTH 1

typedef word OptionGroupID;
#define OGID_MESSAGES        0
#define OGID_START_EXIT      1
#define OGID_SIGNATURE       2

typedef  word  ShowMessageType;
#define  SMT_ALL             0
#define  SMT_UNREAD_ONLY     1

typedef  word  SortMessageByType;
#define  SMBT_DATE           0
#define  SMBT_SUBJECT        1
#define  SMBT_SENDER         2
#define  SMBT_DATE_REV       3
#define  SMBT_SUBJECT_REV    4
#define  SMBT_SENDER_REV     5

typedef  word  MailFolderID;
#define  MFID_LEAVE_SELECTION -2
#define  MFID_DRAFTS          0
#define  MFID_INBOX           1
#define  MFID_OUTBOX          2
#define  MFID_SENT            3
#define  MFID_TRASH           4
#define  MFID_FIRST_USER_FOLDER 5

#define  MFID_DEFAULT  MFID_INBOX

#define  NUM_BUILT_IN_FOLDERS    5

#define  MAX_FOLDER_NAME_LENGTH   FILE_LONGNAME_LENGTH
#define  MAX_ACCT_NAME_LENGTH     FILE_LONGNAME_LENGTH

#define  MAX_FOLDER_CONTENTS_STRING  128+FILE_LONGNAME_BUFFER_SIZE
#define  MAX_SUBJECT_BUF_LEN    128
#define  MAX_HEADER_LENGTH      2048   /* for attachments */

typedef  word MailSendOption;
#define  MSO_SEND_TO_QUEUE    0
#define  MSO_SEND_IMMEDIATELY 1


typedef word MailReadOptions;
#define MRO_NORMAL_HEADERS 1
#define MRO_BRIEF_HEADERS  2
#define MRO_RAW_MESSAGE    3

typedef WordFlags ShowToolbarOptions;
#define STO_MAIN_TOOLBAR    0x8000
#define STO_READ_TOOLBAR    0x4000
#define STO_COMPOSE_TOOLBAR 0x2000
#define STO_ACCOUNT_LIST    0x1000

typedef word MailComposeType;
#define MCT_REPLY     0
#define MCT_REPLY_ALL 1

typedef ByteFlags MailFieldTextFlags;
#define MFTF_EXPAND_ALIASES 0x01
#define MFTF_UPDATE_SUBJECT 0x02

#define MESSAGE_BUF_LEN   4095/sizeof(TCHAR)

/* Max number of entries that FileEnum should return at a time
 * when used for enumerating messages or folders.
 */
#define MAX_FOLDER_ENUM 100

#define MAX_ADDRESS_EMAIL_LENGTH  64
#define MAX_ADDRESS_NAME_LENGTH   64
#define MAX_ADDRESS_ALIAS_LENGTH  64

#define MAX_LIST_SUBJECT_LENGTH  40
#define MAX_LIST_ADDRESS_LENGTH  30

typedef TCHAR MailSubject[MAX_SUBJECT_BUF_LEN+1];
typedef TCHAR MailListSubject[MAX_LIST_SUBJECT_LENGTH+1];
typedef TCHAR MailAddress[MAX_ADDRESS_EMAIL_LENGTH+MAX_ADDRESS_NAME_LENGTH+1];
typedef TCHAR MailListAddress[MAX_LIST_ADDRESS_LENGTH+1];

typedef struct {
    TimerDateAndTime MT_time;
    sword            MT_timezone;
} MailTime;

/*
 * change in stylesStyles.def, too
 */
typedef byte FilterState;
#define FS_IN_BODY   0
#define FS_IN_TAG    1
#define FS_TAG_START 2
#define FS_ADDED_CR  3
#define FS_CHAR_START 4
#define FS_IN_CHAR    5
#define FS_IN_URL     6
#define FS_AT_LINE_START 7  /* used for importing */
#define FS_IN_FROM    8     /* used for importing */
#define FS_FOUND_HTML 9
#define FS_IN_STYLE_SHEET 10

typedef ByteFlags FilterMode;
#define FM_FOUND_HTML     0x01
#define FM_IN_STYLE_SHEET 0x02

typedef byte MailStyleType;
#define MST_NONE     0
#define MST_RICH     1
#define MST_HTML     2

#define PRINT_HEADER_HEIGHT   20
#define PRINT_HEADER_FONT  FID_DTC_URW_SANS
#define PRINT_HEADER_SIZE  10
#define PRINT_HEADER_STYLE TS_ITALIC

typedef WordFlags MessageFlags;
#define MF_HAS_ATTACHMENTS 0x4000    /* message has attachments */
#define MF_OUTBOUND        0x2000    /* outbound message */
#define MF_READ            0x1000    /* message has been read */

typedef struct {
    PathName     AFP_full;
    FileLongName AFP_file;
} AttachFilePath;

#define ME_FIRST_CHUNK    ConstructOptr(mh, sizeof(LMemBlockHeader))

typedef struct {
    word DM_err;
} DMStruct;



#define MLA_MINOR 0
#define MLA_MAJOR 1

typedef struct {
    VMBlockHandle     MLA_array;
    VMBlockHandle     MLA_indexHandle;
    ChunkHandle       MLA_indexChunk;
    SortMessageByType MLA_sortType;
    dword             MLA_version;
} MessageListArray;

typedef struct {
    DosDotFileName     MLS_filename;
    MailListAddress    MLS_mail;
    MailListSubject    MLS_subject;
    MailTime           MLS_time;
    MessageFlags       MLS_flags;
    Color              MLS_color;
    byte               MLS_label;
} MessageListStruct;

typedef struct {
    word MIS_index;
    MessageFlags MIS_flags;
} MessageIndexStruct;

/* Struct used for the Scan Headers callback
 */
typedef struct {
    word LSH_folderNum;
    word LSH_arrayHandle;
    word LSH_arrayChunk;
    word LSH_index;
} LSHStruct;

typedef struct {
    MailFolderID FLS_ID;
    FileLongName FLS_name;
} FolderListStruct;

typedef byte GMFAction;
#define GMFA_OPEN    0
#define GMFA_CREATE  1
#define GMFA_MOVE    2

/***************************************************************************
 *			  folder list crud
 ***************************************************************************/

#define FOLDER_ICON_OFFSET_X      1
@ifdef CUSTOM_FOLDER_ICONS
#define FOLDER_ICON_WIDTH         20
#define FOLDER_ICON_HEIGHT        18
@else
#define FOLDER_ICON_WIDTH         16
#define FOLDER_ICON_HEIGHT        12
@endif
#define GAP_BETWEEN_ICON_AND_NAME 2
#define FOLDER_NAME_OFFSET_Y      1

#define MESSAGE_ICON_OFFSET_X     1
#define MESSAGE_ICON_WIDTH        25
#define MESSAGE_ICON_HEIGHT       12

#define WRAP_TEXT_LENGTH          75

#define ATTACH_LIST_ICON_WIDTH    15
#define ATTACH_LIST_ICON_HEIGHT   15
#define ATTACH_LIST_ITEM_WIDTH    (ATTACH_LIST_ICON_WIDTH+2)
#define ATTACH_LIST_ITEM_HEIGHT   (ATTACH_LIST_ICON_HEIGHT+2)

#define ATTACH_LIST_ICON_DISPLAY_TYPE ((DC_COLOR_8<<DT_DISP_CLASS_OFFSET)|(DAR_NORMAL<<DT_DISP_ASPECT_RATIO_OFFSET)|(DS_TINY<<DT_DISP_SIZE_OFFSET))

#define ATTACH_LIST_ICON_SEARCH_FLAGS (VMSF_GSTRING|(VMS_TOOL << VMSF_STYLE_OFFSET))

#define MESSAGE_OFFSET_X  MESSAGE_ICON_OFFSET_X + MESSAGE_ICON_WIDTH + GAP_BETWEEN_ICON_AND_NAME
#define MESSAGE_OFFSET_Y 1
#define LIST_HACK_SIZE   10

/***************************************************************************
 *		lists of objects for table-driving
 ***************************************************************************/

#define lengthof(l,s)    sizeof(l)/sizeof(s)

#define VUM_DLYD    VUM_DELAYED_VIA_UI_QUEUE

/***************************************************************************
 *			  mail on server shme
 ***************************************************************************/

typedef ByteFlags MailOnServerStatus;
#define MOSS_ON_SERVER             0x01
#define MOSS_DELETE_FROM_SERVER    0x02
