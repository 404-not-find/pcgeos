COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1989 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		Calendar - macro definitions
FILE:		calendarMacro.def

AUTHOR:		Don Reeves, July 12, 1989

MACROS:
	Name			Description
	----			-----------
	VerifyDGroupDS

	VerifyDGroupES

	TODO

	RDE

	VAW

	RSP			Include a line of instruction for Responder

	NRSP			Do not include a line of instruction for
				Responder 

	RespCheckDB		call this right after you modify a DB item

	Assert_eventID		Assert the unique event ID to lie within
				valid range

	Assert_eventIDFromDB	Assert that an event ID is the same as the
				one in event in DB database 

	Assert_CalendarEventError
				Assert an expr is a valid CalendarEventError

	Assert_CalendarEventErrorAndFlags
				Assert the expression is a CalendarEventError
				and carry flag is set if expr is not
				CEE_NORMAL 

	IsEventRepeatEvent	Check if DB Group is in repeat event group

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	Don	7/12/89		Initial Revision
	Don	1/09/91		Removed unused macros from file
	SS	4/4/95		Added To Do list macro

DESCRIPTION:
	Macro definitions for the Calendar application

	$Id: calendarMacro.def,v 1.1 97/04/04 14:49:53 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

ifdef	ERROR_CHECK
; Macros to verify either DS or ES contains Dgroup
;
VerifyDGroupDS	macro
	cmp	ds:[calendarDGroup], DGROUP_CHECK_VALUE
	ERROR_NE	CALENDAR_DS_NOT_DGROUP
endm

VerifyDGroupES	macro
	cmp	es:[calendarDGroup], DGROUP_CHECK_VALUE
	ERROR_NE	CALENDAR_ES_NOT_DGROUP
endm
endif


TODO	macro	line
if	_TODO
	line
endif
endm


RDE	macro	line
if	_REPEAT_DATE_EXCEPTIONS
	line
endif
endm

VAW	macro	line
	if	_VERBOSE_ALARM_WARNING
line
	endif
endm

COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                movm
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

SYNOPSIS:       Moves one memory-based word variable to another, using a trash
                register.

PASS:           dest, src, trash_reg

PSEUDO CODE/STRATEGY:

KNOWN BUGS/SIDE EFFECTS/IDEAS:

REVISION HISTORY:
        Name    Date            Description
        ----    ----            -----------
        CK      5/16/94         Initial version

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@
movm            macro   dest, src, reg
		ErrMessage "MOVM used in non-responder product"
endm



COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		cmpm
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

SYNOPSIS:	Compare two memory locations

PASS:		arg1	= 1st argument passed "cmp" instruction
		arg2	= 2nd argument passed "cmp" instruction
		trashReg= trash register
RETURN:		flags	= same as "cmp" instruction
DESTROYED:	nothing

PSEUDO CODE/STRATEGY:

KNOWN BUGS/SIDE EFFECTS/IDEAS:

REVISION HISTORY:
	Name		Date		Description
	----		----		-----------
	simon   	3/ 9/97   	Initial version

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@
cmpm		macro	arg1, arg2, trashReg
if (.TYPE trashReg) AND 10h
                mov     trashReg, arg2
                cmp     arg1, trashReg
else
                ErrMessage "CMPM must have a trash register"
endif
endm

COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		RSP
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

SYNOPSIS:	Include a line of instruction for Responder

PASS:		line	= line of instructure
RETURN:		nothing
DESTROYED:	nothing

PSEUDO CODE/STRATEGY:

KNOWN BUGS/SIDE EFFECTS/IDEAS:

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	simon	1/22/97   	Initial version

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@
RSP	macro	line
endm


COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		NRSP
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

SYNOPSIS:	Do not include a line of instruction for Responder

PASS:		line	= a line of instruction
RETURN:		nothing
DESTROYED:	nothing

PSEUDO CODE/STRATEGY:

KNOWN BUGS/SIDE EFFECTS/IDEAS:

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	simon	1/22/97   	Initial version

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@
NRSP	macro	line
	line
endm

COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		RespCheckDB
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

SYNOPSIS:	call this right after you modify a DB item

ASSUMPTION:	es = current DB item block

PSEUDO CODE/STRATEGY:
		For responder only

REVISION HISTORY:
	Name		Date		Description
	----		----		-----------
	jang    	2/13/97   	Initial version
	
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@
RespCheckDB		macro
		endm

if	UNIQUE_EVENT_ID


COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		Assert_eventID
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

SYNOPSIS:	Assert the unique event ID to lie within valid range

PASS:		expr	= ID to check
RETURN:		nothing
DESTROYED:	nothing (flags preserved)

PSEUDO CODE/STRATEGY:

KNOWN BUGS/SIDE EFFECTS/IDEAS:

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	simon   2/ 2/97   	Initial version
	simon	2/16/97		Use error defined in calendarConstant.def.
				Preserve flags

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@
Assert_eventID		macro	expr
		pushf
		PreserveDWordAndGetIntoRegs	ax,bx,expr,Assert_eventID
		cmpdw	axbx, FIRST_EVENT_ID
		ERROR_B CALENDAR_ILLEGAL_EVENT_ID
		RestoreDWord			ax,bx,expr,Assert_eventID
		popf
endm


COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		Assert_eventIDFromDB
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

SYNOPSIS:	Assert that an event ID is the same as the one in event in
		DB database

PASS:		id	= event ID to check (dword)
		group	= event group
		item	= event item to check
RETURN:		nothing
DESTROYED:	nothing (flags preserved)

PSEUDO CODE/STRATEGY:

KNOWN BUGS/SIDE EFFECTS/IDEAS:

REVISION HISTORY:
	Name		Date		Description
	----		----		-----------
	simon   	2/16/97   	Initial version

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@
Assert_eventIDFromDB	macro	id, group, item
		PreserveDWordAndGetIntoRegs	cx,dx,id,Assert_eventIDFromDB
		PreserveAndGetIntoReg	ax, group
		PreserveAndGetIntoReg	di, item

		call	ECValidateEventIDFromDB	; flags preserved
		
		RestoreReg		di, item
		RestoreReg		ax, group
		RestoreDWord			cx,dx,id,Assert_eventIDFromDB
endm

endif	; UNIQUE_EVENT_ID



COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		Assert_CalendarEventError
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

SYNOPSIS:	Assert an expr is a valid CalendarEventError

PASS:		expr	= expression to check
RETURN:		nothing
DESTROYED:	nothing (flags preserved)

PSEUDO CODE/STRATEGY:

KNOWN BUGS/SIDE EFFECTS/IDEAS:

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	simon   2/ 4/97   	Initial version
	simon	2/24/97		Fixed order of parameters passed to
				Assert_etype 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@
Assert_CalendarEventError	macro	expr
		pushf
		Assert_etype	expr, CalendarEventError
		popf
endm


COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		Assert_CalendarEventErrorAndFlags
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

SYNOPSIS:	Assert the expression is a CalendarEventError and 
		carry flag is set if expr is not CEE_NORMAL

PASS:		expr	= expression to check
RETURN:		nothing
DESTROYED:	nothing (flags preserved)

PSEUDO CODE/STRATEGY:

KNOWN BUGS/SIDE EFFECTS/IDEAS:

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	simon   2/ 4/97   	Initial version

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@
CALENDAR_EVENT_ERROR_NORMAL_WITH_CARRY_SET	enum	FatalErrors
; CalendarEventError is CEE_NORMAL, but carry is set where it should be
; clear. 

CALENDAR_EVENT_ERROR_NON_NORMAL_WITH_CARRY_CLEAR enum	FatalErrors
; CalendarEventError is *NOT* CEE_NORMAL, but carry is clear where it should
; be set.

Assert_CalendarEventErrorAndFlags		macro	expr
	local	checkCarrySet, done
		pushf
		jc	checkCarrySet
		cmp	expr, CEE_NORMAL
		ERROR_NE CALENDAR_EVENT_ERROR_NON_NORMAL_WITH_CARRY_CLEAR
		jmp	done

checkCarrySet:
		cmp	expr, CEE_NORMAL
		ERROR_E CALENDAR_EVENT_ERROR_NORMAL_WITH_CARRY_SET
		Assert	etype	expr, CalendarEventError

done:
		popf
endm


COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		IsEventRepeatEvent
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

SYNOPSIS:	Check if DB Group is in repeat event group

PASS:		eventGr		= DB group of event
		dgroupReg	= segment register pointing to dgroup
				(optional) 
RETURN:		ZF set if repeat event
DESTROYED:	nothing

PSEUDO CODE/STRATEGY:
	Compare the DB group against the repeat event group since all repeat
	events are located in the same DB group.

KNOWN BUGS/SIDE EFFECTS/IDEAS:

REVISION HISTORY:
	Name		Date		Description
	----		----		-----------
	simon   	2/24/97   	Initial version

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@
IsEventRepeatEvent	macro	eventGr, dgroupReg

		PreserveAndGetIntoReg	ax, eventGr

ifnb <dgroupReg>
		cmp	dgroupReg:[repeatMapGroup], ax
else
		push	ds
		GetResourceSegmentNS	dgroup, ds
		cmp	ds:[repeatMapGroup], ax
		pop	ds
endif

		RestoreReg		ax, eventGr

endm


COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		GetDgroup
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

SYNOPSIS:	Puts dgroup in ds or es

PASS:		

PSEUDO CODE/STRATEGY:

KNOWN BUGS/SIDE EFFECTS/IDEAS:

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	SJ	11/24/94   	Initial version

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@
GetDgroup	macro	seg, trash
if _FXIP
ifdif <trash>, <bx>
		mov_tr	trash, bx
endif
		mov	bx, handle dgroup
ifdif <seg>, <ds>
ifdif <seg>, <es>
		PrintMessage <You may put dgroup only in ds or es>
else
		call	MemDerefES
endif
else
		call	MemDerefDS
endif	
ifdif <trash>, <bx>
		mov_tr	bx, trash
endif		
else
		segmov	seg, dgroup, trash
endif
endm

