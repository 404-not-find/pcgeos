/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) Geoworks 1996 -- All Rights Reserved

PROJECT:	GEOS
MODULE:		Irlmp Library
FILE:		ttpcMain.goc

AUTHOR:		Andy Chiu, May  7, 1996

ROUTINES:
	Name			Description
	----			-----------

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	AC	5/ 7/96   	Initial version.

DESCRIPTION:
	Ttp Client test application for Irlmp Library	

	$Id: ttpcMain.goc,v 1.1 97/04/04 16:41:09 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

@include "ttpc.goh"

@classdecl TtpCProcessClass, neverSaved;

dword	irlapAddr;
hptr	hugeLMemHandle;
word	clientHandle;

extern IrlmpCallbackType TtpCIrlmpDiscoveryCallback;
extern IrlmpCallbackType TtpCTtpCallback;

IrlmpCallbackType *discoveryCallback = &TtpCIrlmpDiscoveryCallback;
IrlmpCallbackType *ttpcCallback = &TtpCTtpCallback;


/***********************************************************************
 *		MSG_GEN_PROCESS_OPEN_APPLICATION for TtpCProcessClass
 ***********************************************************************
 * SYNOPSIS:	Where it all starts    
 * PARAMETERS:	AppAttachFlags attachFlags = cx
 *       	MemHandle launchBlock = dx
 *		MemHandle extraState = bp
 *
 * STRATEGY:
 *
 * REVISION HISTORY:
 *	Name	Date		Description
 *	----	----		-----------
 *	AC	5/ 7/96   	Initial Revision
 *
 ***********************************************************************/
@method TtpCProcessClass, MSG_GEN_PROCESS_OPEN_APPLICATION
{
	@callsuper();
	hugeLMemHandle = HugeLMemCreate(0,          /* default value */
				        100,        /* min size      */
				        4000);      /* max size      */
}	/* End of MSG_GEN_PROCESS_OPEN_APPLICATION.	*/


/***********************************************************************
 *		MSG_TP_DISCOVER_REQUEST for TtpCProcessClass
 ***********************************************************************
 * SYNOPSIS:	Do the whole discovery bit.    
 * PARAMETERS:	nothing    
 * SIDE EFFECTS:    
 *
 * STRATEGY:
 *
 * REVISION HISTORY:
 *	Name	Date		Description
 *	----	----		-----------
 *	AC	5/ 7/96   	Initial Revision
 *
 ***********************************************************************/
@method TtpCProcessClass, MSG_TP_DISCOVER_REQUEST
{
	IrlmpError retVal;
	IrlmpLsapSel localLsap;

	/*
	 * Register with IrLMP Library for discovery.
	 */
	localLsap = IRLMP_ANY_LSAP_SEL;
	retVal = IrlmpRegister(&localLsap, GeodeGetCodeProcessHandle(),
			       discoveryCallback, &clientHandle);
	if(retVal) {
	    EC_WARNING(-1);
	    return;
	}

	/* Show which lsap we are on */
	TUSetLocalLsap(localLsap);

	/* Do the discovery */
    	IrlmpDiscoverDevicesRequest(clientHandle, IUTS_6_SLOT);

}	/* End of MSG_TP_DISCOVER_REQUEST.	*/


/***********************************************************************
 *		MSG_TP_CONNECT_REQUEST for TtpCProcessClass
 ***********************************************************************
 * SYNOPSIS:	Initiate a connection to the remote LSAP-ID    
 * PARAMETERS:	nothing
 * SIDE EFFECTS:    
 *
 * STRATEGY:
 *
 * REVISION HISTORY:
 *	Name	Date		Description
 *	----	----		-----------
 *	AC	5/ 7/96   	Initial Revision
 *
 ***********************************************************************/
@method TtpCProcessClass, MSG_TP_CONNECT_REQUEST
{
    IrlmpError       retVal;
    IrlmpLsapSel     localLsap;
    IrlmpConnectArgs connectArgs;

    localLsap = TUGetLocalLsap();
    retVal = TTPRegister(&localLsap, GeodeGetCodeProcessHandle(),
			 ttpcCallback, &clientHandle);

    if (retVal)	{
	EC_WARNING_IF(retVal, -1);
	return;
    }

    TUSetLocalLsap(localLsap);

    connectArgs.ICA_lsapID.ILI_irlapAddr = irlapAddr;
    connectArgs.ICA_lsapID.ILI_lsapSel   = TUGetRemoteLsap();

    /* Since the begining of IrlmpConnectArgs is the same as   */
    /* IrlmpDataArgs, we're goint to pass the IrlmpConnectArgs */
    /* as IrlmpDataArgs                                        */
    /* ------------------------------------------------------- */
    TUGetSendText((IrlmpDataArgs *)&connectArgs);

    TUClearSendText();

    /* Use default QOS */
    /* --------------- */
    connectArgs.ICA_QoS.QOS_flags = QOSF_DEFAULT_PARAMS;

    retVal = TTPConnectRequest(clientHandle, &connectArgs);
    
    EC_WARNING_IF(retVal, -1);

}	/* End of MSG_TP_CONNECT_REQUEST.	*/


/***********************************************************************
 *		MSG_TP_DATA_REQUEST for TtpCProcessClass
 ***********************************************************************
 * SYNOPSIS:	    Transmit data    
 * PARAMETERS:	    nothing
 * SIDE EFFECTS:    
 *
 * STRATEGY:
 *
 * REVISION HISTORY:
 *	Name	Date		Description
 *	----	----		-----------
 *	AC	5/ 7/96   	Initial Revision
 *
 ***********************************************************************/
@method TtpCProcessClass, MSG_TP_DATA_REQUEST
{
    IrlmpDataArgs dataArgs;

    if (!clientHandle) return;

    TUGetSendText(&dataArgs);
    TUClearSendText();

    TTPDataRequest(clientHandle, &dataArgs);

}	/* End of MSG_TP_DATA_REQUEST.	*/


/***********************************************************************
 *		MSG_TP_DISCONNECT_REQUEST for TtpCProcessClass
 ***********************************************************************
 * SYNOPSIS:	    DisconnectRequest
 * PARAMETERS:	    nothing
 * SIDE EFFECTS:    
 *
 * STRATEGY:
 *
 * REVISION HISTORY:
 *	Name	Date		Description
 *	----	----		-----------
 *	AC	5/ 7/96   	Initial Revision
 *
 ***********************************************************************/
@method TtpCProcessClass, MSG_TP_DISCONNECT_REQUEST
{
    IrlmpDataArgs dataArgs;

    if (!clientHandle) return;

    TUGetSendText(&dataArgs);
    TUClearSendText();

    TTPDisconnectRequest(clientHandle, &dataArgs);
    TTPUnregister(clientHandle);
    clientHandle = 0;

    /* Enable connect trigger */
    @send GeodeGetCodeOptrNS(@TtpCConnectTrigger)::
	    	MSG_GEN_SET_ENABLED(VUM_DELAYED_VIA_UI_QUEUE);

    /* disable data, status, disconnect getvalue triggers */
    @send GeodeGetCodeOptrNS(@TtpCDataTrigger)::
    	    	MSG_GEN_SET_NOT_ENABLED(VUM_DELAYED_VIA_UI_QUEUE);
    @send GeodeGetCodeOptrNS(@TtpCStatusTrigger)::
	    	MSG_GEN_SET_NOT_ENABLED(VUM_DELAYED_VIA_UI_QUEUE);
    @send GeodeGetCodeOptrNS(@TtpCGetValueTrigger)::
	    	MSG_GEN_SET_NOT_ENABLED(VUM_DELAYED_VIA_UI_QUEUE);
    @send GeodeGetCodeOptrNS(@TtpCDisconnectTrigger)::
	    	MSG_GEN_SET_NOT_ENABLED(VUM_DELAYED_VIA_UI_QUEUE);

}	/* End of MSG_TP_DISCONNECT_REQUEST.	*/


/***********************************************************************
 *		MSG_TP_STATUS_REQUEST for TtpCProcessClass
 ***********************************************************************
 * SYNOPSIS:	    LM_Status.request
 * PARAMETERS:	    nothing
 * SIDE EFFECTS:    
 *
 * STRATEGY:
 *
 * REVISION HISTORY:
 *	Name	Date		Description
 *	----	----		-----------
 *	AC	5/ 7/96   	Initial Revision
 *
 ***********************************************************************/
@method TtpCProcessClass, MSG_TP_STATUS_REQUEST
{

    if (!clientHandle) return;
    IrlmpStatusRequest(clientHandle);

}	/* End of MSG_TP_STATUS_REQUEST.	*/


/***********************************************************************
 *		MSG_TP_GET_VALUE_REQUEST for TtpCProcessClass
 ***********************************************************************
 * SYNOPSIS:	    LM_GetValueByClass.request
 * PARAMETERS:	    nothing
 * SIDE EFFECTS:    
 *
 * STRATEGY:
 *
 * REVISION HISTORY:
 *	Name	Date		Description
 *	----	----		-----------
 *	AC	5/ 7/96   	Initial Revision
 *
 ***********************************************************************/
@method TtpCProcessClass, MSG_TP_GET_VALUE_REQUEST
{
    IrlmpGetValueByClassRequestArgs valueArgs;
    IrlmpError                      retVal;
    IrlmpLsapSel                    localLsap;

    if (!clientHandle) return;

    MemLock(HandleOf(@myClassNameStr));

    valueArgs.IGVBCRA_irlapAddr = irlapAddr;
    valueArgs.IGVBCRA_className = LMemDeref(@myClassNameStr);
    valueArgs.IGVBCRA_attributeName = LMemDeref(@myAttributeStr);

    localLsap = IRLMP_ANY_LSAP_SEL;

    retVal = IrlmpRegister(&localLsap, GeodeGetCodeProcessHandle(),
			   ttpcCallback, &clientHandle);

    if(retVal) {
	EC_WARNING(-1);
	return;
    }

    retVal = IrlmpGetValueByClassRequest(clientHandle, &valueArgs);
    
    EC_WARNING_IF(retVal, -1);

    MemUnlock(HandleOf(@myClassNameStr));

}	/* End of MSG_TP_GET_VALUE_REQUEST.	*/





