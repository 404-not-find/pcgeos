/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) Geoworks 1993 -- All Rights Reserved

PROJECT:	GEOS SDK Sample Application	
MODULE:		Benoit (Mandelbrot Set Sample Application)
FILE:		bDocC.goh

AUTHOR:		Tom Lester, Aug 10, 1993

ROUTINES:
	Name			Description
	----			-----------

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	TL	8/10/93   	Initial version.

DESCRIPTION:
	This file contains the definition for the BDocumentClass.

	$Id: bDocC.goh,v 1.1 97/04/04 16:39:46 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

/* we are subclassing the GenDocumentClass */
@include <Objects/gDocC.goh>


/* 
 * When they're created, the blocks of a VM file are in no particular 
 * order. You will need some way to keep track of VM block handles so 
 * you can find each block when you need it. The usual way to do this 
 * is with a map block.
 * 
 * A map block is just like any other VM block. Like other blocks, 
 * it can be a standard block, an LMem heap, etc. It is different in 
 * only one way: the VM manager keeps track of its handle. 
 *
 * Note that the structure of the VM map block is entirely the concern
 * of the creating geode. The VM manager neither requires nor specifies 
 * any internal structure or information content.
 *
 * 
 * The map block for the VM files for the Benoit documents is really
 * simple. It just has a VMBlockHandle to the MSetParameters block.
 * The MSetParameters block is maintained by the MSet object and
 * contains handles to any other VM blocks that are needed.
 *
 */
typedef	struct {
    VMBlockHandle	BDMB_dataBlock;	/* handle to MSetParameters */
} BDocMapBlock;



/*
 * BDocument class is our subclass of GenDocument that we use to add
 * behavior to the GenDocument
 */

@class	BDocumentClass, GenDocumentClass ;
/* 
 * each of the documents in the Benoit application is going to have
 * an associated MSet object that will be created when the document
 * is loaded and destroyed when the document is closed. 
 * 
 * This field contains the optr to the MSet object under the document.
 */
@instance optr BDI_mset; 

@endc
