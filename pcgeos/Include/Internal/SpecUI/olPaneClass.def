COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1994 -- All Rights Reserved

PROJECT:	SPUI
MODULE:		
FILE:		olPaneClass.def

AUTHOR:		David Litwin, Oct  6, 1994

MACROS:
	Name			Description
	----			-----------

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	dlitwin	10/ 6/94		Initial revision


DESCRIPTION:
	Definition of OLPaneClass.
		
	$Id: olPaneClass.def,v 1.1 97/04/04 14:11:41 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

	;
	;	For documentation of the OLPaneClass see:
	;	/staff/pcgeos/Spec/olPaneClass.doc
	; 

OLPaneClass	class	OLCtrlClass
	uses	GenViewClass
		
		
global	textKbdBindings:word
	
	
					
MSG_SPEC_VIEW_PAN			message
;
; This method is sent up from the pane window to pan the window.
;
;	Pass: 	cx -- x amount to scroll
;	    	dx -- y amount to scroll
;	Return:	nothing
;		ax, cx, dx, bp - destroyed
;
	
MSG_SPEC_VIEW_INIT_ORIGIN		message
;
; This method is sent up from the pane window to initialize the window's
; origin.   Also sent to the scrollbar to clear out its origin.  The functions
; are not quite analagous, and maybe I'll clean it up someday.
;
;	Pass:	nothing
;	Return:	nothing
;		ax, cx, dx, bp - destroyed


; Internal scroll flags, passed to OLPaneScroll.
;
OLPaneScrollFlags record 
	OLPSF_DONT_SEND_TO_SCROLLBARS:1, 
;		This is set if the pane shouldn't pass the
;		message on to the scrollbars.  This is currently used by the
;		scrollbar when a user presses on the object, so it doesn't get
;		the scroll twice.
		
	OLPSF_DONT_REDRAW_SCROLLBARS:1,
;		This is set if the scrollbars should update their instance data
;		but refrain from updating their image.  Necessary for when
;		setting the document size causes the document offset to change.
		
	OLPSF_ALWAYS_SEND_NORMALIZE:1,
;		Always send off the normalize, even if it appears to be 
;		scrolling to the same position.
;
	OLPSF_DONT_NORMALIZE:1
;		Sent when we don't want the pane to go through a normalize
;		cycle.  (Used by the NormalizeComplete code)
;
	OLPSF_ALWAYS_UPDATE_SCROLLBARS:1
;		There's a case where we really want to have the scrollbars
;		updated regardless of whether there's something to redraw.
;		Sigh.
;		
	OLPSF_DONT_SEND_TO_LINKS:1,
;		Set if we shouldn't propagate the message to the linked
;		views.  Set by the MSG_GEN_VIEW_SCROLL_LOW handler.
	:2,
;
;	These must match ScrollFlags in view.  They are passed in normalizes.
;	Normalize stuff is affected by the position of these flags.
;
	OLPSF_VERTICAL:1, 
;		Direction of scroll.  Invalid for SA_SCROLL_INTO, SA_SCROLL,
;		SA_INITIAL_POS.
	OLPSF_ABSOLUTE:1, 
;		Whether the scroll is to an absolute position.  Set for 
;		SA_TO_BEGINNING, SA_TO_END, SA_INITIAL_POS, SA_SCROLL_INTO,
;		SA_DRAGGING, and some SA_SCROLLs.
	OLPSF_DOC_SIZE_CHANGE:1,
;		This scroll is happening as an adjustment for a document
;		size change.  The specific UI uses this to finish changing 
;		the document size after the normalize is complete.
	:1,
	OLPSF_SCROLL_ACTION	ScrollAction:4
;		4 bits for ScrollAction, so we can send appropriate info
;		on normalizes.  Must be in low bits. May need more bits if
;		ScrollAction expand much further.
end

 CheckHack <(offset OLPSF_VERTICAL) eq (offset SF_VERTICAL)>
 CheckHack <(offset OLPSF_ABSOLUTE) eq (offset SF_ABSOLUTE)>
 CheckHack <(offset OLPSF_DOC_SIZE_CHANGE) eq (offset SF_DOC_SIZE_CHANGE)>
		
MSG_SPEC_VIEW_DRAG_SCROLL		message
;
; A specialized form of MSG_SPEC_SCROLL, with a different flag so normalizes
; can tell what is happening.
;
;	Pass: 	cx -- x amount to scroll
;	    	dx -- y amount to scroll
;	Return:	nothing
;		ax, cx, dx, bp - destroyed
;

MSG_SPEC_VIEW_GET_WIN_BOUNDS		message
;
; Returns position of the pane window.
;
; 	Pass:	nothing
;	Return:	ax, bp, cx, dx -- bounds of pane window.
;

MSG_SPEC_VIEW_SET_PANE_FLAGS		message
;
; Sets pane attributes.
;
;	Pass:	cl -- OLPaneFlags to set
;		ch -- OLPaneFlags to clear
;	Return:	nothing
;		ax, cx, dx, bp -- destroyed
;

MSG_SPEC_VIEW_FORCE_INITIATE_DRAG_SCROLL	message
;
; Like MSG_GEN_VIEW_INITIATE_DRAG_SCROLL, except it forces on the view grab
; flag so a drag scroll can happen without a MSG_META_START_SELECT ever
; reaching the view.  The mouse still has to be down, though.  Used by
; the popup scrolling list to do its thing.
;
;	Pass:	nothing
;	Return:	nothing
;		ax, cx, dx, bp -- destroyed

MSG_SPEC_VIEW_UNSUSPEND_OPENED_WIN		message
;
; Unsuspends the opened view window.  If it's still around, that is.
;
;	Pass: 	cx -- Window ID of desired window
;	Return:	nothing
;		ax, cx, dx, bp -- destroyed
;

if FLOATING_SCROLLERS
MSG_SPEC_VIEW_UPDATE_FLOATING_SCROLLERS		message
;
; Open/close floating scrollers as needed.
;
;	Pass:	cx	= TRUE/FALSE - close all windows before updating
;	Return:	nothing
;		ax, cx, dx, bp -- destroyed
;
endif ; FLOATING_SCROLLERS

;-----------------------------------------------------------------------
;	Hints
;-----------------------------------------------------------------------


if DRAW_STYLES
ATTR_OL_PANE_SCROLLING_TEXT	vardata		lptr
;
; indicates that this view is for a scrolling text
;
endif


;-----------------------------------------------------------------------
;	Constants & Structures
;-----------------------------------------------------------------------

	     
; The flags & structures defined below are used for both PaneClass &
; SimplePaneClass.

OLPaneAttrs	record
	OLPA_SPECIAL_BORDER:1
		; Set if color is same as background, so pane will know
		; to draw a special border.  In open look, this means a 
		; chiseled border; in motif, it's an inset rect.
	OLPA_WHITE_BORDER:1
		; In some cases, we'll use a white border.
	OLPA_NON_SCROLLING:1
		; Set if the view never actually scrolls its window.
	OLPA_APP_TARGET:1
		; Set if view is app target window
	OLPA_APP_FOCUS:1
		; Set if view is app focus window
	OLPA_SYS_TARGET:1
		; Set if view is sys target window
	OLPA_SYS_FOCUS:1
		; Set if view is sys focus window
	OLPA_REMOVE_SCROLLBARS_WHEN_NOT_SCROLLABLE:1
		;One or both scrollbars go away when the view is not
		;scrollable.
end
	
OLPaneFlags	record
	OLPF_SUSPENDED_FOR_SCALING:1,	
	; Set if the view has suspended updates to the window because of a
	; scale function being started.  The window will be unsuspended in
	; the notify-geometry-valid handler if this flag is set.
	
	OLPF_SUSPENDED_FOR_SIZE_CHANGE:1,
	; Set if the view has suspended updates to the window because of a
	; change in the view window size.  (Not for just a view window move.)
	; The window is suspended in OLPaneNotifyGeometryValid and unsuspended
	; in OLPaneMoveResizeWin.
	
	OLPF_AT_RIGHT_EDGE:1,		;set if scrolled to the right
	OLPF_AT_BOTTOM_EDGE:1,		;set if scrolled to the bottom
	
	OLPF_LEAVE_ROOM_FOR_VERT_SCROLLER:1,
	OLPF_LEAVE_ROOM_FOR_HORIZ_SCROLLER:1,
	; This flags are used to leave room for scrollbars, even if they're
	; not being used.  They can be turned on by the splitter mechanism,
	; or set manually via HINT_LEAVE_ROOM_FOR_VERTICAL/HORIZONTAL_SCROLLER.
	; (currently not used)
	
	OLPF_MAKE_DEFAULT_FOCUS:1,
	; Set if we're trying to make this object the default focus.

	OLPF_DONT_TAKE_FOCUS_FROM_TEXT_OBJECTS:1
		; Set if we shouldn't take the focus from text objects. 
		; Currently only set from scrolling lists.

OLPaneFlags	end

		
OLPaneOptFlags	record
	OLPOF_PRESS_GRAB:1
	; Set if mouse was pressed inside of the view AND grabs have been
	; requested for this case.
	; Mouse will be grabbed while this is set.
	; Requires GADGET_EXCL while set.
	; Cleared when all buttons come up, or on a LOST_GADGET_EXCL.

	OLPOF_PANNING_GRAB:1
	; If set, user pressed "Pan" option over window.
	; Requires OLPOF_PRESS_GRAB while set.
	; Cleared when all buttons come up, or on a LOST_GADGET_EXCL.

	OLPOF_DRAG_SCROLLING:1
	; If set, user is holding down the mouse and dragging out of the
	; bounds of the window.  We will scroll the window on
	; MSG_META_WIN_UPDATE_COMPLETE's if this flag is set.
	; Requires OLPOF_PRESS_GRAB while set.
	; Cleared on on buttons coming up, or on a LOST_GADGET_EXCL.

	OLPOF_DRAG_SCROLL_ON_ANY_BUTTON:1
	; Causes "Select" scrolling to occur while the current mouse button is
	; still down.  Allows programs to enable drag-scrolling for non-SELECT
	; mouse buttons temporarily, as in Draw's control points w/DIRECT_
	; ACTION button.
	; Requires OLPOF_PRESS_GRAB while set.
	; Cleared when all buttons come up, or on a LOST_GADGET_EXCL.

	OLPOF_WANDERING_GRAB:1
	; Set if the current PRESS_GRAB is a result of the mouse wandering
	; into the view with a button down, i.e. such as a quick-transfer
	; coming to this view.  Set also if ALLOW_GLOBAL_TRANSFER is called
	; on the view.  If set, the gadget exclusive will be forced off the
	; view if the mouse leaves the view window, thereby terminating the
	; PRESS_GRAB, & allowing the mouse to continue wandering.

	OLPOF_PTR_IN_RAW_UNIV:1
	; Set if ptr is in the raw universe of this pane window

	OLPOF_DRAG_SCROLL_PENDING:1
	OLPOF_TIMER_EXPIRED_PENDING:1
	; When we do a select-scroll, we set both of these flags, expecting a 
	; MSG_META_WIN_UPDATE_COMPLETE and a MSG_TIMER_EXPIRED.
	; The pane window won't initiate another event until both of these
	; flags are cleared.
	
	OLPOF_LIMIT_DRAG_SCROLLING:1
	; Limits drag scrolling to the drag bounds.  Set if a non-zero drag
	; bounds comes in, cleared if a zeroed bounds comes in.
	;

	OLPOF_CONSTRAIN:1
	; Last reported value of the "CONSTRAIN" bit passed in ptr & button
	; messages.

	OLPOF_ENTERED:1
	; Set if we've sent out a MSG_META_CONTENT_ENTER, but not yet a
	; MSG_META_CONTENT_LEAVE.

	OLPOF_COULDNT_SUSPEND:1
	; Set if the view was unable to suspend itself.  Keeps it from 
	; unsuspending later.

	OLPOF_KBD_CHAR_SCROLL:1
	; Set if when a kbd event that causes a scroll happens, so the view
	; can know on the scroll that it was the result of a keyboard event.
	; Currently the kbd-char information is used merely so it can be
	; passed along in MSG_META_CONTENT_TRACK_SCROLLING.

	:3

OLPaneWinOptFlags	end

if HOLISTIC_SCROLLBAR_POSITIONING

HolisticScrollbarFlags	record
	HSF_HAS_QUERIED_FOR_FLAGS:1		; Object has vis_vup_quer'ied
	:11					;  for flags.
	HSF_BOTTOM:1				; set if b/r/t/l
	HSF_RIGHT:1				;   scrollbars  are to be
	HSF_TOP:1				;   positioned holisticlly
	HSF_LEFT:1
HolisticScrollbarFlags	end

CheckHack <offset HSF_LEFT eq offset SPQF_LEFT>
CheckHack <offset HSF_RIGHT eq offset SPQF_RIGHT>
CheckHack <offset HSF_TOP eq offset SPQF_TOP>
CheckHack <offset HSF_BOTTOM eq offset SPQF_BOTTOM>

endif ; HOLISTIC_SCROLLBAR_POSITIONING

DONT_SCROLL	=  8000h		 ;passed to OLPortScrollAbsolute
		
;-----------------------------------------------------------------------
;	Instance data
;-----------------------------------------------------------------------

    OLPI_horizScrollbar		lptr 	 ;handle of child scrollbar
    OLPI_vertScrollbar		lptr     ;handle of child scrollbar
    OLPI_normalizeCount		sword	 ;keeps track of normalizes pending
    OLPI_pageWidth		sword	 ;subview width in doc coords
    OLPI_pageHeight		sword	
    OLPI_flags			OLPaneFlags  ;see cviewSimplePane.asm
    OLPI_targetInfo		ViewTargetInfo
    OLPI_ptrImage		optr.PointerDef	;pointer image
    OLPI_attrs			OLPaneAttrs
    
    ;
    ; Previously, OLPaneWindow instance data:
    ;
    OLPI_window			hptr.Window	;window handle
    OLPI_windowID		word		;unique ID for window
    OLPI_optFlags		OLPaneOptFlags
    OLPI_mouseX			sword		;previous mouse position
    OLPI_mouseY			sword
    OLPI_winWidth		sword		;dimensions of pane window
    OLPI_winHeight		sword		;  (not including win frame)
    
    OLPI_leftObj		lptr		;where children are located,
    OLPI_topObj			lptr		;  for doing geometry
    OLPI_rightObj		lptr
    OLPI_bottomObj		lptr
    
    OLPI_horizScrArea		sword		;offset to area variable where
						;  horiz scroller is found
    OLPI_vertScrArea		sword		;offset to area variable where 
						;  vert scroller is found
    OLPI_dragBounds		RectDWord	;draggable bounds, set by
    						;  content when different
						;  objects get the focus, zeroed
						;  if no constrain requested
if HOLISTIC_SCROLLBAR_POSITIONING
    OLPI_holisticFlags		HolisticScrollbarFlags
						; which scrollbars are holistic
endif

if FLOATING_SCROLLERS
    OLPI_upScroller		lptr		; up scroller
    OLPI_downScroller		lptr		; down scroller
    OLPI_leftScroller		lptr		; left scroller
    OLPI_rightScroller		lptr		; right scroller
endif

if DRAW_STYLES
    OLPI_drawStyle		DrawStyle	; draw style for pane
endif

OLPaneClass	endc
