COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) Geoworks 1996 -- All Rights Reserved

PROJECT:	DOVE
MODULE:		DOVE
FILE:		nec.def

AUTHOR:		Greg Grisco, Oct 17, 1996

MACROS:
	Name			Description
	----			-----------

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	grisco	10/17/96   	Initial revision


DESCRIPTION:
	Definitions exclusively for use on Dove.
		
	$Id: nec.def,v 1.1 97/04/04 14:14:39 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

;
; ManufacturerID for NEC Telecom Systems, Ltd. in Japan
;
MANUFACTURER_ID_NEC 	equ	16467

;----------------------------------------------------------------------
;
; NEC System GCN Lists
;

NECGCNStandardListType	etype	word, 0, 2		; must inc by 2

	NECGCNSLT_NOTIFY_SECRET_MODE_CHANGE	enum	NECGCNStandardListType
	;
	;	A list for objects which care to know when the "secret
	;	mode" status has changed.
	;
	;	Notification types:	NECNT_SECRET_MODE_CHANGE
	;


;----------------------------------------------------------------------
;
; Dove Notification types, sent via MSG_META_NOTIFY and
; MSG_META_NOTIFY_WITH_DATA_BLOCK
;

NECNotificationType	etype	word, 0, 1

	NECNT_SECRET_MODE_CHANGE		enum	NECNotificationType
	;
	;	Sent to the GCN list NECGCNLT_NOTIFY_SECRET_MODE_CHANGE
	;	whenever the "secret mode" status changes.
	;
	;	Pass: bp = TRUE/FALSE (on/off)
	;

	NECNT_FLOATING_KBD_STATE_CHANGE		enum	NECNotificationType
	;
	;	Sent to the GCN list NECGAGCNLT_FLOATING_KBD_STATE_CHANGE
	;	when the floating kbd state for this application changes.
	;
	;	Pass: bp = FloatingKbdFlags
	;

	NECNT_TEXT_INK_MODE_CHANGE		enum	NECNotificationType
	;
	;	Sent to the GCN list NECGCNALT_TEXT_INK_MODE_CHANGE
	;	whenever the MemoDocumentClass object changes mode and
	;	when it gains or loses the focus.
	;
	;	Pass: bp = TextInkMode
	;

;
; Notification to transfer DialInfo block between two objects.  It is
; currently used by Telephone and MemoFax to retrieve dialing
; information from Addressbook.
;

	NECNT_DIAL_INFO_REQUEST			enum	NECNotificationType
	;
	;	The sender of this message requires a DialInfo block,
	;	so the receiver of this message should respond with an
	;	NECNT_DIAL_INFO_REPLY notification.
	;
	;	Besure that the block containing DialInfoRequest
	;	is "sharable" and initialized with MemInitRefCount.
	;	Read description of MSG_META_NOTIFY_WITH_DATA_BLOCK
	;	for further details (metaC.def).
	;
	;	Pass: ^hbp = DialInfoRequest
	;

	NECNT_DIAL_INFO_REPLY			enum	NECNotificationType
	;
	;	Sent as a response to NECNT_DIAL_INFO_REQUEST.  The
	;	destiantion should be the optr passed in
	;	DialInfoRequestParams.
	;
	;	Besure that the block containing DialInfoReply
	;	is "sharable" and initialized with MemInitRefCount.
	;	Read description of MSG_META_NOTIFY_WITH_DATA_BLOCK
	;	for further details (metaC.def).
	;
	;	Pass: ^hbp = DialInfoReply
	;


;
; Constants and types for DialInfo transfer.
;

MAX_DIAL_INFO_NAME_LEN		equ	20
	;
	; Length of the name, returned in DialInfoReply block.  
	;
MAX_DIAL_INFO_COMPANY_LEN	equ	60
	;
	; Length of the company name, returned in DialInfoReply block.
	;
MAX_DIAL_INFO_TELNUM_LEN	equ	24
	;
	; Length of telephone number.  The numbers are returned as a
	; string.
	;

VoiceNumberType		etype	byte, 0
;
;	Designates the voice number to retrieve.
;
	VNT_NONE		enum	VoiceNumberType
	VNT_HOME		enum	VoiceNumberType
	VNT_WORK_ONE		enum	VoiceNumberType
	VNT_WORK_TWO		enum	VoiceNumberType
	VNT_CELLULAR		enum	VoiceNumberType

DialNumberFlags	record
	DNF_DATA:1
		;
		; Set if want to retrieve the data number (fax).
		;
	DNF_VOICE VoiceNumberType:7
		;
		; Designate the voice number to retrieve.
		;
DialNumberFlags	end

;
; Structure sent along with NECNT_DIAL_INFO_REQUEST notification.
;
DialInfoRequest	struct
	DIR_recvToken		GeodeToken
	;
	;	Token of application which the reply should be sent
	;	to.  This way, the calling application could be awoken
	;	if necessary.
	;
	DIR_requestFlags	DialNumberFlags
	;
	;	Designate which number to retrieve.  This should
	;	determine the value in DIR_number.
	;
	DIR_recvOD		optr
	;
	;	Object to receive the DialInfoReply block sent via
	;	NECNT_SEND_DIAL_REPLY.
	;
DialInfoRequest	ends

;
; Structure sent along with NECNT_DIAL_INFO_REPLY notification.
;
DialInfoReply	struct
	DIR_replyFlags	DialNumberFlags
	;
	;	Designate whether the DIR_data field is filled and
	;	which number is stored in DIR_voice.
	;
	DIR_name 	TCHAR	MAX_DIAL_INFO_NAME_LEN+1	dup(?)
	;
	;	This is always filled with the requested person's
	;	name.
	;
	DIR_company	TCHAR	MAX_DIAL_INFO_COMPANY_LEN+1	dup(?)
	;
	;	This is always filled with the company name of the
	;	requested person.
	;
	DIR_data	TCHAR	MAX_DIAL_INFO_TELNUM_LEN+1	dup(?)
	;
	;	Data-number string, usually fax.
	;
	DIR_voice 	TCHAR	MAX_DIAL_INFO_TELNUM_LEN+1	dup(?)
	;
	;	Voice-number string.
	;
DialInfoReply	ends



;----------------------------------------------------------------------
;
; NEC GenApplication GCN Lists
;

NECGAGCNListType	etype	word, 0, 2		; must inc by 2

	NECGAGCNLT_FLOATING_KBD_STATE_CHANGE	enum	NECGAGCNListType
	;
	;	A list for objects which make and remove space for the
	;	floating keyboard.
	;
	;	Notification types:	NECNT_FLOATING_KBD_STATE_CHANGE
	;

	NECGACNLT_TEXT_INK_MODE_CHANGE		enum	NECGAGCNListType
	;
	;	A list for objects which care to know when a
	;	MemoDocumentClass object changes mode.
	;
	;	Notification types:	NECNT_TEXT_INK_MODE_CHANGE
	;
