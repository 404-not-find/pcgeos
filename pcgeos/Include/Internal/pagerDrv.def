COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1992 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		Pager Driver
FILE:		pagerDrv.def

AUTHOR:		Jennifer Wu, Apr 14, 1993

	
REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	jwu	4/14/93		Initial revision


DESCRIPTION:
	This contains all the definitions necessary to use and/or create 
	a pager driver.
		
	$Id: pagerDrv.def,v 1.1 97/04/04 14:16:32 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

SetDef __PAGERDR

include driver.def
include Internal/streamDr.def


StartDriver	pager

PAGER_PROTO_MAJOR	equ	DRIVER_PROTO_MAJOR+1
PAGER_PROTO_MINOR	equ	DRIVER_PROTO_MINOR+0

PagerDriverFunction	etype word, DriverExtendedFunction, 2

;	These are the first six functions that must be supported
; DR_INIT		0
; DR_EXIT		2
; DR_SUSPEND		4
; DR_UNSUSPEND		6
; DRE_TEST_DEVICE	8
; DRE_SET_DEVICE	10

;---------------------------------------------------------------------------
;   Driver Routine Notes
;
;   Any routine which calls a driver function can assume that all 
;	registers have been saved, unless the specific header below
;	states that it can be destroyed.
;
;---------------------------------------------------------------------------

;--------------------------------------------------------------------------
;	General Driver Routines for Watcher/Driver Stream Interaction
;--------------------------------------------------------------------------

DRE_GET_DRIVER_STREAM_DATA_SIZE			enum	PagerDriverFunction
;	DESCRIPTION:	This command queries the driver for the amount
;		of space it requires for data storage in the stream used
; 		to transfer data to the watcher.
;	PASS:	
;		nothing
;	RETURN:
;		ax	<- # of bytes needed
;	DESTROY:
;		nothing

DRE_STORE_DRIVER_DATA_IN_STREAM			enum	PagerDriverFunction
;	DESCRIPTION:	The driver must be called with this routine after 
;		a stream has been created by the watcher to allow the driver
;		to store its data in the stream.  This is the driver's chance
;		to associate the stream with the appropriate device.
;	PASS:	
;		bx	-> stream token
;	RETURN:
;		nothing
;	DESTROY:
;		di

DRE_SET_UP_WRITE_NOTIFICATION_FOR_STREAM	enum 	PagerDriverFunction
DRE_SET_UP_NOTIFICATION_FOR_STREAM		enum	PagerDriverFunction, \
					DRE_SET_UP_WRITE_NOTIFICATION_FOR_STREAM
;	DESCRIPTION:	The driver must be called with this routine after
;		a stream has been created by the watcher to allow the driver
;		to set up write notification for the stream. Driver should take
;		this opportunity to set up error notification for the stream
;		also.
;	PASS:
;		bx	-> stream token
;	RETURN:	
;		nothing
;	DESTROY:
;		nothing

;-----------------------------------------------------------------------
; 	Driver polling entry point.
;-----------------------------------------------------------------------
DRE_DRIVER_CHECK_FOR_MESSAGES			enum	PagerDriverFunction
;	DESCRIPTION:	This routine is called to poll the driver for 
; 		new messages received in the pager.
;	PASS:	
;		bx	-> stream token
;	RETURN:
;		nothing
;	DESTROY:
;		nothing

;------------------------------------------------------------------------
;	Maintaining communication with device.
;------------------------------------------------------------------------
DRE_OPEN_COMMUNICATION_WITH_DEVICE		enum 	PagerDriverFunction
;	DESCRIPTION:	This routine is called to allow the driver to
;		set up communication channels with the pager.  The 
;		watcher/driver stream should already have been created
;		as the driver looks in the stream for information about
;		the device.
;	PASS:
;		bx	-> stream token
;	RETURN:
;		carry set if unsuccessful
;		carry clear if connection established
;	DESTROY:
;		nothing

DRE_CLOSE_COMMUNICATION_WITH_DEVICE		enum 	PagerDriverFunction
;	DESCRIPTION:	This routine is called to tell the driver to 
;		close communication channels with the pager.  This routine
;		must be called before the watcher/driver stream is destroyed.
;	PASS:
;		bx	-> stream token
;	RETURN: 
;		nothing
;	DESTROY:
;		nothing

;----------------------------------------------------------------------
;		Pager Driver Errors
;----------------------------------------------------------------------
PagerDriverError	etype	word, STREAM_FIRST_DEV_ERROR
PDE_PROCESSING_MESSAGE			enum	PagerDriverError
PDE_INVALID_DEVICE			enum 	PagerDriverError
PDE_COMMUNICATION_NOT_CLOSED_YET	enum	PagerDriverError

;------------------------------------------------------------------------------
;		Fatal Errors
;------------------------------------------------------------------------------


CANNOT_EXIT_DRIVER_WHILE_IN_USE				enum FatalErrors
	; Attempting to exit the driver while a device is still using
	; it.  Are you sure all communication channels have been closed
	; and all devices unset?

TIMER_NOT_FOUND						enum FatalErrors
	; Couldn't find the timer that is set in case the pager does
	; not respond to commands.

EndDriver	pager

