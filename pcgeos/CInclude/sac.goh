/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) Geoworks 1995 -- All Rights Reserved

PROJECT:	GEOS
MODULE:		Socket
FILE:		sac.goh

AUTHOR:		Jennifer Wu, Apr  4, 1995

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	jwu	4/ 4/95   	Initial version.

DESCRIPTION:
      	SocketAddressControlClass definition.
	

	$Id: sac.goh,v 1.1 97/04/04 16:00:03 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

#ifndef _SAC_GOH_
#define _SAC_GOH_

@deflib	netutils

@include <medium.h> 	/* for MediumType */

@class	SocketAddressControlClass, GenControlClass;

/*
 * Inform the subclass of the type of medium selected by the user
 * so it can customize its appearance appropriately, should the controller
 * handle media that have different ways of addressing.
 */
@message void MSG_SOCKET_ADDRESS_CONTROL_SET_MEDIUM
    	    	    	(MediumType mediumType = cx:dx);

/* 
 * Build the block of data that holds the addresses selected by the user
 * to pass to the transport driver.  If OK, returns ChunkArray of SACAddress
 * structures in same block as controller.  Else, returns 0.
 */
@message word MSG_SOCKET_ADDRESS_CONTROL_GET_ADDRESSES() = ax;

/* SACAddress */
typedef struct {
    word    	    	SACA_opaqueSize;
 /* label byte	    	SACA_opaque;	*/
} SACAddress;

/*
 * Sets the current user-editable address to the passed address.
 */
@message void MSG_SOCKET_ADDRESS_CONTROL_SET_ADDRESSES(optr addr = cx:dx);

/* 
 * Inform the controller of the message and target it should use to 
 * notify the invoker that a valid address exists.
 */
@message void MSG_SOCKET_ADDRESS_CONTROL_SET_ACTION 
    	    	    	    	(optr dest = cx:dx, 
				 word actionMsg = bp);

/* 
 * Let the containing dialog know whether the address we've got is a 
 * valid one, so it can decide whether to allow the user to send the 
 * message.
 */
@message void MSG_SOCKET_ADDRESS_CONTROL_SET_VALID_STATE(Boolean valid = cx);

        @instance word 	    SACI_actionMsg = 0;
        @instance word	    SACI_geode	= 0;

@endc   /* SocketAddressControlClass */



@endlib
#endif	/* _SAC_GOH_ */
