/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) Geoworks 1996.  All rights reserved.
	GEOWORKS CONFIDENTIAL

PROJECT:	DOVE
MODULE:		Ark
FILE:		ark.goh

AUTHOR:		Brian Chin, Nov 13, 1996

ROUTINES:
	Name			Description
	----			-----------

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	brianc	11/13/96   	Initial version.

DESCRIPTION:

	Definition for Ark library

	$Id: ark.goh,v 1.1 97/04/04 15:59:52 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/
@optimize
@deflib ark

#include <Internal/nec.h>

/* ---------------------------------------------------------------------------
 *	    	Types
 * ---------------------------------------------------------------------------
 */

typedef ByteEnum SecretMode;
#define SM_OFF	0
#define SM_ON	1

typedef WordFlags FloatingKeyboardType;
#define FKT_DEFAULT 	    0x8000
#define FKT_TYPEWRITER	    0x4000
#define FKT_HANDWRITE	    0x2000
#define FKT_HIRAGANA	    0x1000
#define FKT_NUMBER	    0x0800
#define FKT_JIS		    0x0400
#define FKT_FIXED_STRING    0x0200
#define FKT_SYMBOL	    0x0100
#define FKT_SET_BUTTON	    0x0080

typedef WordFlags FloatingKeyboardEntryMode;
#define FKEM_DEFAULT	    0x8000
#define FKEM_1BYTE	    0x4000
#define FKEM_2BYTE	    0x2000
#define FKEM_ALPHABET	    0x1000
#define FKEM_HIRAGANA	    0x0800
#define FKEM_KATAKANA	    0x0400
#define FKEM_CAPITAL_CHAR   0x0200
#define FKEM_SMALL_CHAR	    0x0100

typedef WordFlags FloatingKbdFlags;
#define FKF_ON	    	0x8000
#define FKF_NEEDS_SPACE	0x4000

/* ---------------------------------------------------------------------------
 *	    	Classes
 * ---------------------------------------------------------------------------
 */

@class FloatingKbdAppClass, GenApplicationClass;

@message void MSG_FLOATING_KBD_APP_SET_TYPE(word displayType = cx,
					    word disallowType = dx,
					    word entryMode = bp);
@message void MSG_FLOATING_KBD_APP_OPEN(word layerID = cx);
@message void MSG_FLOATING_KBD_APP_CLOSE();
@message void MSG_FLOATING_KBD_APP_SET_WIN_PRIORITY(word priority = cx);

    @default GAI_states = (@default & ~AS_FOCUSABLE & ~AS_MODELABLE |
			    	    	    	AS_NOT_USER_INTERACTABLE);

@endc

@class FloatingKbdSpaceClass, GenInteractionClass;

    @default GI_states = (@default & ~GS_USABLE);

@endc

@class FloatingKbdWindowClass, GenInteractionClass;

@message void MSG_FLOATING_KBD_WINDOW_SET_LAYER(word layerID = cx);
@message void MSG_FLOATING_KBD_WINDOW_SET_PRIORITY(word priority = cx);

@endc

@class SecretModeToggleButtonClass, GenTriggerClass;

@protominor MoreSecretModeSupport

@message void MSG_SECRET_MODE_TOGGLE_BUTTON(SecretMode newSecretMode = cl);

@protoreset

@endc

/* ---------------------------------------------------------------------------
 *	    	Library routines
 * ---------------------------------------------------------------------------
 */

extern void
    _pascal SecretModeSetState(SecretMode mode);

extern SecretMode
    _pascal SecretModeGetState(void);

extern SecretMode
    _pascal SecretModeGetFileSecret(FileHandle fileHan);

extern Boolean
    _pascal SecretModeSetFileSecret(FileHandle fileHan, SecretMode mode);

extern void
    _pascal FloatingKbdSetState(FloatingKbdFlags flags, word layerID);

extern void
    _pascal FloatingKbdSetType(word displayType,
			       word disallowType,
			       word entryMode);


#ifdef __HIGHC__
pragma Alias(SecretModeSetState, "SECRETMODESETSTATE");
pragma Alias(SecretModeGetState, "SECRETMODEGETSTATE");
pragma Alias(SecretModeGetFileSecret, "SECRETMODEGETFILESECRET");
pragma Alias(SecretModeSetFileSecret, "SECRETMODESETFILESECRET");
pragma Alias(FloatingKbdSetState, "FLOATINGKBDSETSTATE");
pragma Alias(FloatingKbdSetType, "FLOATINGKBDSETTYPE");
#endif

@endlib
