/***********************************************************************
 *
 *	Copyright (c) GeoWorks 1991 -- All Rights Reserved
 *
 * PROJECT:	PC GEOS
 * FILE:	vCntC.goh
 * AUTHOR:	Chris Hawley: 8/19/91
 *
 * DECLARER:	UI
 *
 * DESCRIPTION:
 *	This file defines VisContentClass
 *
 *	$Id: vCntC.goh,v 1.1 97/04/04 15:52:14 newdeal Exp $
 *
 ***********************************************************************/
@optimize
@deflib ui

@include <Objects/uiInputC.goh>
@include <Objects/vCompC.goh>
@include <Objects/visC.goh>

@class VisContentClass, VisCompClass;

@message SizeAsDWord MSG_VIS_CONTENT_GET_WIN_SIZE() = dx.cx;	/*XXX*/

typedef ByteFlags VisContentAttrs;
#define	VCNA_SAME_WIDTH_AS_VIEW			0x80
#define VCNA_SAME_HEIGHT_AS_VIEW			0x40
#define	VCNA_LARGE_DOCUMENT_MODEL			0x20
#define VCNA_WINDOW_COORDINATE_MOUSE_EVENTS		0x10
#define VCNA_ACTIVE_MOUSE_GRAB_REQUIRES_LARGE_EVENTS	0x08
#define VCNA_VIEW_DOC_BOUNDS_SET_MANUALLY		0x04
#define VCNA_VIEW_DOES_NOT_WIN_SCROLL			0x02

@message void MSG_VIS_CONTENT_SET_ATTRS(VisContentAttrs attrsToSet = cl, 
					VisContentAttrs attrsToClear = ch); /*XXX*/
@message VisContentAttrs MSG_VIS_CONTENT_GET_ATTRS() = cl;  /*XXX*/

@message SizeAsDWord MSG_VIS_CONTENT_RECALC_SIZE_BASED_ON_VIEW() = dx.cx;
    	    	    	    	    	    	    	      /*XXX*/
@message void MSG_VIS_CONTENT_HOLD_UP_INPUT_FLOW();  /*XXX*/
@message void MSG_VIS_CONTENT_RESUME_INPUT_FLOW();  /*XXX*/
@message void MSG_VIS_CONTENT_DISABLE_HOLD_UP();  /*XXX*/
@message void MSG_VIS_CONTENT_ENABLE_HOLD_UP();  /*XXX*/
@message Boolean MSG_VIS_CONTENT_TEST_IF_ACTIVE_OR_IMPLIED_WIN(WinHandle window =  bp) = carry;  /*XXX*/
@message void MSG_VIS_CONTENT_UNWANTED_MOUSE_EVENT(VisMouseGrab *mouseGrab = cx:dx, word inputState = bp);  /*XXX*/
@message void MSG_VIS_CONTENT_UNWANTED_KBD_EVENT(word character = cx, word flags = dx, word state = bp);  /*XXX*/
@message void MSG_VIS_CONTENT_REMOTE_OBJ_MESSAGE_VIA_HOLD_UP_QUEUE();  /* Can't be accessed in C */
@message void MSG_VIS_CONTENT_SET_DOC_BOUNDS(@stack sdword bottom, 
				sdword right, sdword top, sdword left);  /*XXX*/
@message void MSG_VIS_CONTENT_NOTIFY_ACTIVE_MOUSE_GRAB_WIN_CHANGED();


typedef struct {
    optr			VMG_object;
    WindowHandle		VMG_gWin;
    PointDWord			VMG_translation;
    VisInputFlowGrabFlags	VMG_flags;
    byte			VMG_unused;
} VisMouseGrab;

	@default VI_typeFlags = VTF_IS_COMPOSITE | VTF_IS_WINDOW |
				VTF_IS_CONTENT | VTF_IS_WIN_GROUP |
				VTF_IS_INPUT_NODE;

	@instance optr VCNI_view;
	@instance WindowHandle VCNI_window = 0;
	@instance word VCNI_viewHeight = 0;
	@instance word VCNI_viewWidth = 0;
	@instance VisContentAttrs VCNI_attrs = 0;

	@instance PointDWord VCNI_docOrigin = {0, 0};
	@instance PointWWFixed VCNI_scaleFactor = {{0, 1}, {0, 1}};
	@instance ChunkHandle VCNI_prePassiveMouseGrabList = 0;
	@instance VisMouseGrab VCNI_impliedMouseGrab = 
	    {0, 0, {0, 0}, (VIFGF_MOUSE | VIFGF_PTR), 0};
	@instance VisMouseGrab VCNI_activeMouseGrab = 
	    {0, 0, {0, 0}, 0, 0};
	@instance ChunkHandle VCNI_postPassiveMouseGrabList = 0;
	@instance KbdGrab VCNI_kbdGrab = {0, 0};
	@instance FTVMCGrab VCNI_focusExcl = {0, MAEF_FOCUS};
	@instance FTVMCGrab VCNI_targetExcl = {0, MAEF_TARGET};
	@instance Handle VCNI_holdUpInputQueue = 0;
	@instance word VCNI_holdUpInputCount = 0;
	@instance HoldUpInputFlags VCNI_holdUpInputFlags = 0;

@endc

@endlib
