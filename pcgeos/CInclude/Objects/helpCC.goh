/***********************************************************************
 *
 *	Copyright (c) GeoWorks 1992 -- All Rights Reserved
 *
 * PROJECT:	  PC/GEOS
 * FILE:	  helpCC.goh
 *
 * AUTHOR:  	  Gene Anderson: Dec  8, 1992
 *
 * REVISION HISTORY:
 *	Name	  Date	    Description
 *	----	  ----	    -----------
 *	gene	  12/ 8/92  Initial version
 *
 * DESCRIPTION:
 *	
 *
 *
 * 	$Id: helpCC.goh,v 1.1 97/04/04 15:51:55 newdeal Exp $
 *
 ***********************************************************************/

@optimize
@deflib ui

#include <file.h>
#include <Objects/helpCC.h>

/******************************************************************************
 *	Utility routines exported by library
 *****************************************************************************/

extern void _far _pascal HelpSendHelpNotification(word HelpType, const char *contextname, const char *filename);

/******************************************************************************
 *	HelpControlClass
 *****************************************************************************/

@class HelpControlClass, GenControlClass;

typedef struct {
    word    	    	PI_unused;
    MouseReturnFlags	PI_mouseFlags;
    /*
     * PI_pointerImage is valid only
     * when PI_mouseFlags == MRF_SET_POINTER_IMAGE.
     */
    optr    	    	PI_pointerImage;
} PointerImage;

/*
 * Messages
 */
@message void MSG_HELP_CONTROL_FOLLOW_LINK(word nameToken = cx,
    	    	    	    	    	   word fileToken = dx);

@message void MSG_HELP_CONTROL_GET_POINTER_IMAGE(
    	    	    	    	PointerImage *retValue = bpaxdxcx,
    	    	    	    	word notLinkFlag = cx);


/*
 * Internal messages
 */
@message void MSG_HC_GO_BACK();
@message void MSG_HC_FIRST_AID_GO_BACK();
@message void MSG_HC_GET_HISTORY_LIST_MONIKER();/* NEEDS PROTOTYPE */
@message void MSG_HC_GOTO_HISTORY();	    	/* NEEDS PROTOTYPE */
@message void MSG_HC_BRING_UP_TOC();
@message void MSG_HC_CHOOSE_FIRST_AID(VisTextContextType fatype = cx);
@message void MSG_HC_BRING_UP_HELP();

@protominor UINewFor21

typedef struct {
    word	    GLNP_linkToken;
    word	    GLNP_fileToken;
    ContextName	    GLNP_linkName;
    FileLongName    GLNP_fileName;
} GetLinkNameParams;


@message void MSG_HC_GET_LINK_NAME(GetLinkNameParams *params);

@protoreset

@protominor UINewForResponder

@message void MSG_HELP_CONTROL_SET_HELP_TYPE(HelpType helpType = cx);

typedef struct {
    ContextName	    GCCP_contextName;
    FileLongName    GCCP_fileName;
} GetCurrentContextParams;

@message void MSG_HELP_CONTROL_GET_CURRENT_CONTEXT(GetCurrrentContextParams *params cx:dx);

@message optr MSG_HELP_CONTROL_GET_CURRENT_TITLE(MemHandle allocHan = cx) = cx:dx;

@protoreset

@protominor UINewForGPC

@message void MSG_HC_JUMP_TO_VERSION_INFO();
@message void MSG_HC_DISPLAY_CONTEXT_INFO();

@protoreset

/*
 *	attrs & hints
 */

    @vardata	void ATTR_HELP_SUPPRESS_INITIATE;
    @vardata	char[] ATTR_HELP_INITIAL_HELP;
    @vardata	optr ATTR_HELP_CUSTOM_POINTER_IMAGE;

    @vardata	CompSizeHintArgs HINT_HELP_TEXT_FIXED_SIZE;
    @vardata	void HINT_HELP_NOT_RESIZABLE;


    @vardata	char[] ATTR_HELP_INITIAL_HELP_FILE;

/*
 *	Internal vardata
 */
    @vardata	TCHAR[] TEMP_HELP_ERROR_FILENAME;
    @vardata	TCHAR[] TEMP_HELP_TOC_FILENAME;
    @vardata	void TEMP_HELP_DETACH_RECEIVED;
    @vardata	optr TEMP_HELP_HEAPSPACE_TOKEN;

/*
 *	Instance Data
 */
    @instance	HelpType    HCI_helpType;
    @instance	MemHandle   HCI_curFile;
    @instance   MemHandle   HCI_historyBuf;
    @instance	word	    HCI_nameArrayVM;
    @instance	GeodeHandle HCI_compressLib;

    @default GII_attrs = (@default | GIA_NOT_USER_INITIATABLE);
    @default GII_visibility = GIV_DIALOG;

@endc

@endlib
