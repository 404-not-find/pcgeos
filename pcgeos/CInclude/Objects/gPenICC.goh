/***********************************************************************
 *
 *	Copyright (c) GeoWorks 1991 -- All Rights Reserved
 *
 * PROJECT:	PC GEOS
 * FILE:	Text/tCtrlC.goh
 * AUTHOR:	Tony Requist: February 12, 1991
 *
 * DECLARER:	UI / Text library
 *
 * DESCRIPTION:
 *	This file defines GenPenInputControlClass
 *
 *	$Id: gPenICC.goh,v 1.1 97/04/04 15:51:35 newdeal Exp $
 *
 ***********************************************************************/


@optimize

/* @include <Objects/pen.goh> */
@include <Objects/vTextC.goh>
#include <hwr.h>
@deflib ui

@class GenPenInputControlClass, GenControlClass;

@message void MSG_GEN_PEN_INPUT_CONTROL_SET_DISPLAY(PenInputDisplayType dispType = cx);

@message PenInputDisplayType MSG_GEN_PEN_INPUT_CONTROL_GET_DISPLAY() = cx;

@message int MSG_GEN_PEN_INPUT_CONTROL_SET_TO_DEFAULT_POSITION(word fieldWidth = cx);

/* in assembly this returns carry set if there is no main view but also	*/
/* a null optr, because in C we aren't able to return both the carry	*/
/* and the optr, so C has to check for a null optr.			*/
@message optr MSG_GEN_PEN_INPUT_CONTROL_GET_MAIN_VIEW() = cx:dx;

@message void MSG_GEN_PEN_INPUT_CONTROL_RESET_CONSTRAIN();
typedef enum { /* word */
    PIDT_KEYBOARD,
    PIDT_CHAR_TABLE,
    PIDT_CHAR_TABLE_SYMBOLS,
    PIDT_CHAR_TABLE_INTERNATIONAL,
    PIDT_CHAR_TABLE_MATH,
    PIDT_CHAR_TABLE_CUSTOM,
    PIDT_HWR_ENTRY_AREA,
    PIDT_BIG_KEYS,
    PIDT_NUMBERS,
    PIDT_PUNCTUATION
} PenInputDisplayType;


typedef WordFlags GPICFeatures;
#define GPICF_KEYBOARD		    	0x0040
#define GPICF_CHAR_TABLE	    	0x0020
#define GPICF_CHAR_TABLE_SYMBOLS	0x0010
#define GPICF_CHAR_TABLE_INTERNATIONAL	0x0008
#define GPICF_CHAR_TABLE_MATH		0x0004
#define GPICF_CHAR_TABLE_CUSTOM		0x0002
#define GPICF_HWR_ENTRY_AREA	    	0x0001

typedef WordFlags GPICToolboxFeatures;
#define GPICTF_INITIATE	    	0x0001






#define GPIC_DEFAULT_FEATURES   (GPICF_KEYBOARD | GPICF_CHAR_TABLE \
			 | GPICF_HWR_ENTRY_AREA | GPICF_CHAR_TABLE_SYMBOLS \
			 | GPICF_CHAR_TABLE_INTERNATIONAL \
			 | GPICF_CHAR_TABLE_MATH)

#define GPIC_DEFAULT_TOOLBOX_FEATURES   GPICTF_INITIATE

typedef struct {
	optr CTD_line1;
	optr CTD_line2;
	optr CTD_line3;
	optr CTD_line4;
	optr CTD_line5;
} CharTableData;

typedef struct {
    VisTextRange    RWHWRD_range;
    HWRContext	    RWHWRD_context;
} ReplaceWithHWRData;

@vardata	CharTableData	ATTR_GEN_PEN_INPUT_CONTROL_CUSTOM_CHAR_TABLE_DATA;
#define CHAR_TABLE_SPACE_FILLER_CHAR	C_CTRL_A
@vardata    	optr	ATTR_GEN_PEN_INPUT_CONTROL_CUSTOM_CHAR_TABLE_MONIKER;
@reloc ATTR_GEN_PEN_INPUT_CONTROL_CUSTOM_CHAR_TABLE_MONIKER, 0, optr;
@reloc ATTR_GEN_PEN_INPUT_CONTROL_CUSTOM_CHAR_TABLE_DATA, (1,CharTableData), optr;

@vardata	PenInputDisplayType ATTR_GEN_PEN_INPUT_CONTROL_STARTUP_DISPLAY_TYPE;
@vardata    	void	ATTR_GEN_PEN_INPUT_CONTROL_IS_FLOATING_KEYBOARD;
@vardata    	void	ATTR_GEN_PEN_INPUT_CONTROL_MAKE_VISIBLE_ON_ALL_SYSTEMS;
@vardata	void	ATTR_GEN_PEN_INPUT_CONTROL_INITIATE_WHEN_ENABLED;

typedef struct {
    Boolean NFWKS_needsFloatingKbd;
    Point   NFWKS_kbdPosition;
    optr    NFWKS_focusWindow;
    Boolean NFWKS_sysModal;
} NotifyFocusWindowKbdStatus;
    @default GCI_output = (TO_APP_FOCUS);

@endc

@endlib
