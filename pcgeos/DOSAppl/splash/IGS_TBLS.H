/*----------------------------------------------------------------------
  Copyright (C) 1997, IGS Technologies, Inc.

  Permission is hereby granted to use, copy and modify this software
  only for the purpose of developing IGS Technology related products.

  This software may not be distributed to any party which is not covered
  by IGS Technology Non-Disclosure Agreement (NDA).

  This software is provided "as is" without warranty of any kind,
  either expressed or implied, including but not limited to the implied
  warranties of merchantability and/or fitness for a particular purpose.
  ----------------------------------------------------------------------*/

typedef unsigned char BYTE_;
typedef unsigned int  WORD_;
typedef unsigned long DWORD_;

#define   ON		 1
#define   OFF		 0

#define   NTSC		 1
#define   PAL		 0

#define   NO_CRT       -1
#define   COLOR_CRT    0
#define   MONO_CRT     1

#define   NO_TV 	-1
#define   S_VIDEO	 0
#define   COMPOSITE	 1
#define   S_VIDEO_COMPOSITE 2	/*both s-video and composite TV sets are connected*/

#define   OVERSCAN	 1
#define   UNDERSCAN	 0


#define   PORT46E8     0x46E8
#define   PORT102      0x102
#define   MISCREAD     0x3CC
#define   MISCWRITE    0x3C2
#define   SEQINDEX     0x3C4
#define   SEQDATA      0x3C5
#define   CRTINDEX     0x3D4
#define   CRTDATA      0x3D5
#define   ATTRRESET    0x3DA
#define   ATTRINDEX    0x3C0
#define   ATTRDATAW    0x3C0  /* write data port */
#define   ATTRDATAR    0x3C1  /* read data port */
#define   GRAINDEX     0x3CE
#define   GRADATA      0x3CF
#define   EXTINDEX     0x3CE
#define   EXTDATA      0x3CF
#define   RAMDACMASK   0x3C6  /* Mask register */
#define   RAMDACINDEXR 0x3C7  /* read  index port */
#define   RAMDACINDEXW 0x3C8  /* write index port */
#define   RAMDACDATA   0x3C9


#define   SEQCOUNT  0x04
#define   MISCCOUNT 0x01
#define   CRTCOUNT  0x19
#define   ATTRCOUNT 0x14
#define   GRACOUNT  0x9
#define   SREGCOUNT SEQCOUNT+MISCCOUNT+CRTCOUNT+ATTRCOUNT+GRACOUNT
#define   EXTPARTIALCOUNT 8  /* define 8 extended regs for color depth change */

#if 0

/*-----------------------------------------------------------------
   640x480x60 8/16/24 bpp table
  -----------------------------------------------------------------*/
 BYTE_ S640x480x60[SREGCOUNT] = {
	     0x01, 0x0F, 0x00, 0x0E,			     /*Seq Reg<1-4>*/
	     0xEF,					     /*Misc Reg */
	     0x5F, 0x4F, 0x4F, 0x81, 0x52, 0x9E, 0x0B, 0x3E,
	     0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	     0xE9, 0x8B, 0xDF, 0x50, 0x00, 0xE6, 0x04, 0xC3,
	     0xFF,					     /*Crtc Reg<0-18>*/
	     0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
	     0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
	     0x01, 0x00, 0x0F, 0x00,			     /*Attr Reg<0-13>*/
	     0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x05, 0x0F,
	     0xFF					     /*Gra  Reg<0-8>*/
	   };


 BYTE_ E640x480x8x60[] = {	 /*8bpp*/
	     0x50,					     /*Crtc Reg_13*/
	     0xB0, 0xD2,
	     0xB1, 0xD3,
	     0xBA, 0x00,	/*Pixel clock overflow register*/
	     0x11, 0x00,				     /*ExtRegs*/
	     0x14, 0x51,
	     0x15, 0x00,
	     0x56, 0x00,
	     0x77, 0x01
	   };

 BYTE_ E640x480x16x60[] = {	 /*16bpp*/
	     0xA0,
	     0xB0, 0xD2,
	     0xB1, 0xD3,
	     0xBA, 0x00,
	     0x11, 0x00,
	     0x14, 0xA1,
	     0x15, 0x00,
	     0x56, 0x00,
	     0x77, 0x02
	   };

 BYTE_ E640x480x24x60[] = {	 /*24bpp*/
	     0xF0,
	     0xB0, 0xD2,
	     0xB1, 0xD3,
	     0xBA, 0x00,
	     0x11, 0x00,
	     0x14, 0xF1,
	     0x15, 0x00,
	     0x56, 0x00,
	     0x77, 0x04
	   };


/*-----------------------------------------------------------------
   640x480x60 TV Underscan 8/16/24 bpp table
  -----------------------------------------------------------------*/
 BYTE_ S640x480x60_U[SREGCOUNT] = {
	     0x01, 0x0F, 0x00, 0x0E,
	     0xEF,
	     0x67, 0x4F, 0x4E, 0x8A, 0x55, 0x9E, 0x3B, 0x3E,
	     0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	     0xFF, 0x8B, 0xDF, 0x50, 0x00, 0xDF, 0x0B, 0xC3,
	     0xFF,
	     0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
	     0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
	     0x01, 0x00, 0x0F, 0x00,
	     0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x05, 0x0F,
	     0xFF
	   };

 BYTE_ E640x480x8x60_U[] = {
	     0x50,
	     0xB0, 0x67,
	     0xB1, 0xC2,
	     0xBA, 0x1C,
	     0x11, 0x00,
	     0x14, 0x51,
	     0x15, 0x00,
	     0x56, 0x00,
	     0x77, 0x01
	   };

 BYTE_ E640x480x16x60_U[] = {
	     0xA0,
	     0xB0, 0x67,
	     0xB1, 0xC2,
	     0xBA, 0x1C,
	     0x11, 0x00,
	     0x14, 0xA1,
	     0x15, 0x00,
	     0x56, 0x00,
	     0x77, 0x02
	   };

 BYTE_ E640x480x24x60_U[] = {
	     0xF0,
	     0xB0, 0x67,
	     0xB1, 0xC2,
	     0xBA, 0x1C,
	     0x11, 0x00,
	     0x14, 0xF1,
	     0x15, 0x00,
	     0x56, 0x00,
	     0x77, 0x04
	   };


/*-----------------------------------------------------------------
   640x480x50 8/16/24 bpp table (Spacial for PAL mode)
  -----------------------------------------------------------------*/
 BYTE_ S640x480x50[SREGCOUNT] = {
	     0x01, 0x0F, 0x00, 0x0E,
	     0xEF,
	     0x6A, 0x4F, 0x4F, 0x8D, 0x57, 0x9E, 0x6F, 0xBA,
	     0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	     0x1A, 0x8B, 0xDF, 0x50, 0x00, 0xE6, 0x6F, 0xC3,
	     0xFF,
	     0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
	     0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
	     0x01, 0x00, 0x0F, 0x00,
	     0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x05, 0x0F,
	     0xFF
	   };

 BYTE_ E640x480x8x50[] = {
	     0x50,
	     0xB0, 0xC4,
	     0xB1, 0xC8,
	     0xBA, 0x1C,
	     0x11, 0x00,
	     0x14, 0x51,
	     0x15, 0x00,
	     0x56, 0x00,
	     0x77, 0x01
	   };

 BYTE_ E640x480x16x50[] = {
	     0xA0,
	     0xB0, 0xC4,
	     0xB1, 0xC8,
	     0xBA, 0x1C,
	     0x11, 0x00,
	     0x14, 0xA1,
	     0x15, 0x00,
	     0x56, 0x00,
	     0x77, 0x02
	   };

 BYTE_ E640x480x24x50[] = {
	     0xF0,
	     0xB0, 0xC4,
	     0xB1, 0xC8,
	     0xBA, 0x1C,
	     0x11, 0x00,
	     0x14, 0xF1,
	     0x15, 0x00,
	     0x56, 0x00,
	     0x77, 0x04
	   };


/*-----------------------------------------------------------------
   720x540x50 8/16/24 bpp table (Special for PAL mode)
  -----------------------------------------------------------------*/
 BYTE_ S720x540x50[SREGCOUNT] = {
	     0x01, 0x0F, 0x00, 0x0E,
	     0xEF,
	     0x77, 0x59, 0x59, 0x19, 0x65, 0x90, 0x6F, 0xF0,
	     0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	     0x2F, 0x86, 0x1B, 0x5A, 0x00, 0x1C, 0x6F, 0xE3,
	     0xFF,
	     0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
	     0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
	     0x01, 0x00, 0x0F, 0x00,
	     0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x05, 0x0F,
	     0xFF
	   };


 BYTE_ E720x540x8x50[] = {
	     0x5A,
	     0xB0, 0x60,
	     0xB1, 0xC9,
	     0xBA, 0x1D,
	     0x11, 0x00,
	     0x14, 0x5B,
	     0x15, 0x00,
	     0x56, 0x00,
	     0x77, 0x01
	   };

 BYTE_ E720x540x16x50[] = {
	     0xB4,
	     0xB0, 0x60,
	     0xB1, 0xC9,
	     0xBA, 0x1D,
	     0x11, 0x00,
	     0x14, 0xB5,
	     0x15, 0x00,
	     0x56, 0x00,
	     0x77, 0x02
	   };

 BYTE_ E720x540x24x50[] = {
	     0x0E,
	     0xB0, 0x60,
	     0xB1, 0xC9,
	     0xBA, 0x1D,
	     0x11, 0x00,
	     0x14, 0x5B,
	     0x15, 0x11,
	     0x56, 0x00,
	     0x77, 0x04
	   };


/*-----------------------------------------------------------------
   800x600x50 8/16/24 bpp table (Special for PAL mode)
  -----------------------------------------------------------------*/
 BYTE_ S800x600x50[SREGCOUNT] = {
	     0x01, 0x0F, 0x00, 0x0E,
	     0xEF,
	     0x7B, 0x63, 0x64, 0x1C, 0x67, 0x90, 0x6F, 0xF0,
	     0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	     0x5C, 0x81, 0x57, 0x64, 0x00, 0x58, 0x6F, 0xE3,
	     0xFF,
	     0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
	     0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
	     0x01, 0x00, 0x0F, 0x00,
	     0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x05, 0x0F,
	     0xFF
	   };

 BYTE_ E800x600x8x50[] = {
	     0x64,
	     0xB0, 0x7F,
	     0xB1, 0xC8,
	     0xBA, 0x1D,
	     0x11, 0x00,
	     0x14, 0x65,
	     0x15, 0x00,
	     0x56, 0x00,
	     0x77, 0x01
	   };

 BYTE_ E800x600x16x50[] = {
	     0xC8,
	     0xB0, 0x7F,
	     0xB1, 0xC8,
	     0xBA, 0x1D,
	     0x11, 0x00,
	     0x14, 0xC9,
	     0x15, 0x00,
	     0x56, 0x00,
	     0x77, 0x02
	   };

 BYTE_ E800x600x24x50[] = {
	     0x2C,
	     0xB0, 0x7F,
	     0xB1, 0xC8,
	     0xBA, 0x1D,
	     0x11, 0x00,
	     0x14, 0x2D,
	     0x15, 0x11,
	     0x56, 0x00,
	     0x77, 0x04
	   };



/*-----------------------------------------------------------------
   800x600x75 8/16/24 bpp table
  -----------------------------------------------------------------*/
 BYTE_ S800x600x75[SREGCOUNT] = {
	     0x01, 0x0F, 0x00, 0x0E,
	     0xEF,
	     0x7F, 0x63, 0x63, 0x01, 0x67, 0x11, 0x6F, 0xF0,
	     0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	     0x59, 0x8C, 0x57, 0x64, 0x00, 0x58, 0x6F, 0xE3,
	     0xFF,
	     0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
	     0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
	     0x01, 0x00, 0x0F, 0x00,
	     0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x05, 0x0F,
	     0xFF
	   };

 BYTE_ E800x600x8x75[] = {
	     0x64,
	     0xB0, 0x52,
	     0xB1, 0x85,
	     0xBA, 0x00,
	     0x11, 0x00,
	     0x14, 0x65,
	     0x15, 0x00,
	     0x56, 0x00,
	     0x77, 0x01
	   };

 BYTE_ E800x600x16x75[] = {
	     0xC8,
	     0xB0, 0x52,
	     0xB1, 0x85,
	     0xBA, 0x00,
	     0x11, 0x00,
	     0x14, 0xC9,
	     0x15, 0x00,
	     0x56, 0x00,
	     0x77, 0x02
	   };

 BYTE_ E800x600x24x75[] = {
	     0x2C,
	     0xB0, 0x52,
	     0xB1, 0x85,
	     0xBA, 0x00,
	     0x11, 0x00,
	     0x14, 0x2D,
	     0x15, 0x11,
	     0x56, 0x00,
	     0x77, 0x04
	   };


/*-----------------------------------------------------------------
   1024x768x60 8/16/24 bpp table
  -----------------------------------------------------------------*/
 BYTE_ S1024x768x60[SREGCOUNT] = {
	     0x01, 0x0F, 0x00, 0x0E,
	     0xEF,
	     0xA3, 0x7F, 0x7F, 0x85, 0x84, 0x95, 0x24, 0xFD,
	     0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	     0x03, 0x89, 0xFF, 0x80, 0x0F, 0x00, 0x24, 0xE3,
	     0xFF,
	     0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
	     0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
	     0x01, 0x00, 0x0F, 0x00,
	     0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x05, 0x0F,
	     0xFF
	   };

 BYTE_ E1024x768x8x60[] = {
	     0x80,
	     0xB0, 0xE2,
	     0xB1, 0x58,
	     0xBA, 0x00,
	     0x11, 0x00,
	     0x14, 0x81,
	     0x15, 0x00,
	     0x56, 0x00,
	     0x77, 0x01
	   };

 BYTE_ E1024x768x16x60[] = {
	     0x00,
	     0xB0, 0xE2,
	     0xB1, 0x58,
	     0xBA, 0x00,
	     0x11, 0x00,
	     0x14, 0x01,
	     0x15, 0x11,
	     0x56, 0x00,
	     0x77, 0x02
	   };

 BYTE_ E1024x768x24x60[] = {
	     0x80,
	     0xB0, 0xE2,
	     0xB1, 0x58,
	     0xBA, 0x00,
	     0x11, 0x00,
	     0x14, 0x81,
	     0x15, 0x11,
	     0x56, 0x00,
	     0x77, 0x04
	   };


/*-----------------------------------------------------------------
   640x440x60 Overscan 8/16/24 bpp table
  -----------------------------------------------------------------*/
 BYTE_ S640x440x60[SREGCOUNT] = {
	     0x01, 0x0F, 0x00, 0x0E,
	     0xEF,
	     0x5F, 0x4F, 0x4F, 0x81, 0x52, 0x9D, 0x0B, 0x3E,
	     0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	     0xD5, 0x8B, 0xB7, 0x50, 0x00, 0xB8, 0x0B, 0xC3,
	     0xFF,
	     0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
	     0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
	     0x01, 0x00, 0x0F, 0x00,
	     0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x05, 0x0F,
	     0xFF
	   };

 BYTE_ E640x440x8x60[] = {
	     0x50,
	     0xB0, 0xD2,
	     0xB1, 0xD3,
	     0xBA, 0x00,
	     0x11, 0x00,
	     0x14, 0x51,
	     0x15, 0x00,
	     0x56, 0x00,
	     0x77, 0x01
	   };

 BYTE_ E640x440x16x60[] = {
	     0xA0,
	     0xB0, 0xD2,
	     0xB1, 0xD3,
	     0xBA, 0x00,
	     0x11, 0x00,
	     0x14, 0xA1,
	     0x15, 0x00,
	     0x56, 0x00,
	     0x77, 0x02
	   };

 BYTE_ E640x440x24x60[] = {
	     0xF0,
	     0xB0, 0xD2,
	     0xB1, 0xD3,
	     0xBA, 0x00,
	     0x11, 0x00,
	     0x14, 0xF1,
	     0x15, 0x00,
	     0x56, 0x00,
	     0x77, 0x04
	   };


/*-----------------------------------------------------------------
   640x440x60 Underscan 8/16/24 bpp table
  -----------------------------------------------------------------*/
 BYTE_ S640x440x60_U[SREGCOUNT] = {
	     0x01, 0x0F, 0x00, 0x0E,
	     0xEF,
	     0x67, 0x4F, 0x4E, 0x8A, 0x55, 0x9D, 0x0B, 0x3E,
	     0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	     0xD5, 0x8B, 0xB7, 0x50, 0x00, 0xB8, 0x0B, 0xC3,
	     0xFF,
	     0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
	     0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
	     0x01, 0x00, 0x0F, 0x00,
	     0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x05, 0x0F,
	     0xFF
	   };

 BYTE_ E640x440x8x60_U[] = {
	     0x50,
	     0xB0, 0x67,
	     0xB1, 0xC2,
	     0xBA, 0x1C,
	     0x11, 0x00,
	     0x14, 0x51,
	     0x15, 0x00,
	     0x56, 0x00,
	     0x77, 0x01
	   };

 BYTE_ E640x440x16x60_U[] = {
	     0xA0,
	     0xB0, 0x67,
	     0xB1, 0xC2,
	     0xBA, 0x1C,
	     0x11, 0x00,
	     0x14, 0xA1,
	     0x15, 0x00,
	     0x56, 0x00,
	     0x77, 0x02
	   };

 BYTE_ E640x440x24x60_U[] = {
	     0xF0,
	     0xB0, 0x67,
	     0xB1, 0xC2,
	     0xBA, 0x1C,
	     0x11, 0x00,
	     0x14, 0xF1,
	     0x15, 0x00,
	     0x56, 0x00,
	     0x77, 0x04
	   };


/*-----------------------------------------------------------------
   640x480x60 4 bpp table (16 colors, packed mode)
  -----------------------------------------------------------------*/
 BYTE_ S640x480x4x60[SREGCOUNT] = {
	     0x01, 0x0F, 0x00, 0x0E,			     /*Seq Reg<1-4>*/
	     0xEF,					     /*Misc Reg */
	     0x5F, 0x4F, 0x50, 0x80, 0x52, 0x9D, 0x0B, 0x3E,
	     0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	     0xE9, 0x8B, 0xDF, 0x28, 0x00, 0xE6, 0x04, 0xC3,
	     0xFF,					     /*Crtc Reg<0-18>*/
	     0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x14, 0x07,
	     0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,
	     0x01, 0x00, 0x0F, 0x00,			     /*Attr Reg<0-13>*/
	     0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x05, 0x0F,
	     0xFF					     /*Gra  Reg<0-8>*/
	   };


 BYTE_ E640x480x4x60[] = {	 /*8bpp*/
	     0x28,					     /*Crtc Reg_13*/
	     0xB0, 0xD2,
	     0xB1, 0xD3,
	     0xBA, 0x00,
	     0x11, 0x00,				     /*ExtRegs*/
	     0x14, 0x29,
	     0x15, 0x00,
	     0x56, 0x00,
	     0x77, 0x00
	   };



/*-----------------------------------------------------------------
   640x480x60 interpolation
  -----------------------------------------------------------------*/
/*REG 3CE*/
 BYTE_ I640x480x60_3CE[] = {
	     0xAE, 0x01,
	     0x5E, 0x32,
/*	     0x5D, 0xD4, */
	     0xA6, 0x08,
	     0xAB, 0x20,
	     0xF1, 0x80,
	     0xDD, 0x02
	   };

/*REG 3D4*/
 BYTE_ I640x480x8x60_3D4[] = {
	     0x40, 0xC0, /* 0x3C0 = 960  = x_ext * (3d4_44<7..4>+1) / 4       */
	     0x41, 0x03,
	     0x42, 0x00,
	     0x43, 0x51, /* 0x51 = 81  = x_ext * bpp / ( (3ce_72<2>==1) ? 8 : 4) + 1*/
/*	     0x44, 0x59,     = 5,9: skip the 6th line of every 10 lines.      */
	     0x45, 0x97, /*  = interpolation on 			      */
	     0x46, 0x40, /* 0x640 = 1600 = x_ext * (3d4_44<3..0>+1) / 4       */
	     0x47, 0x06
	   };

 BYTE_ I640x480x16x60_3D4[] = {
	     0x40, 0x80,
	     0x41, 0x07,
	     0x42, 0x00,
	     0x43, 0xA1,
/*	     0x44, 0x59, */
	     0x45, 0x97,
	     0x46, 0x80,
	     0x47, 0x0C
	   };

/* -------------------------------------------------------------
   TV registers' data
   -------------------------------------------------------------*/

/* This table is for NTSC 640x480 @60Hz overscan mode */
 WORD_ TV640x480x60[] = {
	     0xE430, 0x0000,
	     0xE434, 0x0000,
	     0xE438, 0x3000,
	     0xE43C, 0x020C,
	     0xE440, 0x0029,
	     0xE444, 0x020C,
	     0xE448, 0x0029,
	     0xE44C, 0x7038,
	     0xE450, 0x7878,
	     0xE454, 0x8009,
	     0xE458, 0xDE00,
	     0xE45C, 0x0000,
	     0xE460, 0x003A,
	     0xE464, 0x0000,
	     0xE468, 0x000C,
	     0xE46C, 0x001B,
	     0xE470, 0x0041,
	     0xE474, 0x0061,
	     0xE478, 0x030C,
	     0xE47C, 0x0076,
	     0xE480, 0x020A,
	     0xE484, 0x0011,
	     0xE488, 0x020A,
	     0xE48C, 0x0011,
	     0xE490, 0x0005,
	     0xE494, 0x000B,
	     0xE498, 0x0005,
	     0xE49C, 0x000B,
	     0xE4A0, 0x2D04,
	     0xE4A4, 0x48CC,
	     0xE4A8, 0x0052,
	     0xE4AC, 0x1020,
	     0xE4B0, 0x0000,
	     0xE4B4, 0x0000,
	     0xE4B8, 0x003B,
	     0xE4BC, 0x0001,
	     0xE4C0, 0x02AA,
	     0xE4C4, 0x0001,
	     0xE4C8, 0x8700,
	     0xE4CC, 0x8787,
	     0xE4D0, 0x8787,
	     0xE4D4, 0x8787,
	     0xE4D8, 0x8787,
	     0xE4DC, 0x8787,
	     0xE4E0, 0x8787,
	     0xE4E4, 0x8787,
	     0xE4E8, 0x0000,
	     0xE4EC, 0x0000,
	     0xE4F0, 0x0000,
	     0xE4F4, 0x0000,
	     0xE4F8, 0x0000,
	     0xE4FC, 0x0000,
	     0xE500, 0x0000,
	     0xE504, 0x0000,
	     0xE508, 0x0000,
	     0xE50C, 0x0000,
	     0xE510, 0x0000,
	     0xE514, 0x0000,
	     0xE518, 0x0000,
	     0xE51C, 0x0000,
	     0xE520, 0x0000,
	     0xE524, 0x0001,
	     0xE528, 0x000E,
	     0xE52C, 0x000D
	   };


/* This table is for NTSC 640x480 @60Hz underscan mode */
 WORD_ TV640x480x60_U[] = {
	     0xE430, 0x0000,
	     0xE434, 0x0000,
	     0xE438, 0x3000,
	     0xE43C, 0x020C,
	     0xE440, 0x0029,
	     0xE444, 0x020C,
	     0xE448, 0x0029,
	     0xE44C, 0x7038,
	     0xE450, 0x7878,
	     0xE454, 0x8009,
	     0xE458, 0xDE00,
	     0xE45C, 0x0000,
	     0xE460, 0x003E,
	     0xE464, 0x0011,
	     0xE468, 0x0018,
	     0xE46C, 0x0027,
	     0xE470, 0x0045,
	     0xE474, 0x0067,
	     0xE478, 0x0328,
	     0xE47C, 0x007D,
	     0xE480, 0x020A,
	     0xE484, 0x0011,
	     0xE488, 0x020A,
	     0xE48C, 0x0011,
	     0xE490, 0x0005,
	     0xE494, 0x000B,
	     0xE498, 0x0005,
	     0xE49C, 0x000B,
	     0xE4A0, 0x92EC,
	     0xE4A4, 0x4367,
	     0xE4A8, 0x0052,
	     0xE4AC, 0x1020,
	     0xE4B0, 0x0000,
	     0xE4B4, 0x0000,
	     0xE4B8, 0x003F,
	     0xE4BC, 0x0001,
	     0xE4C0, 0x02D5,
	     0xE4C4, 0x0001,
	     0xE4C8, 0x8700,
	     0xE4CC, 0x8787,
	     0xE4D0, 0x8787,
	     0xE4D4, 0x8787,
	     0xE4D8, 0x8787,
	     0xE4DC, 0x8787,
	     0xE4E0, 0x8787,
	     0xE4E4, 0x8787,
	     0xE4E8, 0x0000,
	     0xE4EC, 0x0000,
	     0xE4F0, 0x0000,
	     0xE4F4, 0x0000,
	     0xE4F8, 0x0000,
	     0xE4FC, 0x0000,
	     0xE500, 0x0000,
	     0xE504, 0x0000,
	     0xE508, 0x0000,
	     0xE50C, 0x0000,
	     0xE510, 0x0000,
	     0xE514, 0x0000,
	     0xE518, 0x0000,
	     0xE51C, 0x0000,
	     0xE520, 0x0000,
	     0xE524, 0x0012,
	     0xE528, 0x0012,
	     0xE52C, 0x0011
	   };


/* This table is for PAL 640x480 @50Hz mode */
 WORD_ TV640x480x50[] = {
	     0xE430, 0x0000,
	     0xE434, 0x0000,
	     0xE438, 0x2000,
	     0xE43C, 0x0269,
	     0xE440, 0x002A,
	     0xE444, 0x0269,
	     0xE448, 0x002A,
	     0xE44C, 0x703A,
	     0xE450, 0x8888,
	     0xE454, 0x8000,
	     0xE458, 0xE719,
	     0xE45C, 0x0000,
	     0xE460, 0x0040,
	     0xE464, 0x005B,
	     0xE468, 0x0042,
	     0xE46C, 0x0036,
	     0xE470, 0x004B,
	     0xE474, 0x006B,
	     0xE478, 0x0200,	/*final working value is 0x0341, see code*/
	     0xE47C, 0x0100,	/*final working value is 0x00C0, see code*/
	     0xE480, 0x026F,
	     0xE484, 0x000E,
	     0xE488, 0x0270,
	     0xE48C, 0x000E,
	     0xE490, 0x0004,
	     0xE494, 0x0009,
	     0xE498, 0x0004,
	     0xE49C, 0x0009,
	     0xE4A0, 0x611D,
	     0xE4A4, 0x51CD,	 /*This value can be adjusted (color <-> mono)*/
	     0xE4A8, 0x0000,
	     0xE4AC, 0x1020,
	     0xE4B0, 0x0000,
	     0xE4B4, 0x0000,
	     0xE4B8, 0x0042,
	     0xE4BC, 0x0001,
	     0xE4C0, 0x02F7,
	     0xE4C4, 0x0001,
	     0xE4C8, 0x8700,
	     0xE4CC, 0x8787,
	     0xE4D0, 0x8787,
	     0xE4D4, 0x8787,
	     0xE4D8, 0x8787,
	     0xE4DC, 0x8787,
	     0xE4E0, 0x8787,
	     0xE4E4, 0x8787,
	     0xE4E8, 0x0000,
	     0xE4EC, 0x0000,
	     0xE4F0, 0x0000,
	     0xE4F4, 0x0000,
	     0xE4F8, 0x0000,
	     0xE4FC, 0x0000,
	     0xE500, 0x0000,
	     0xE504, 0x0000,
	     0xE508, 0x0000,
	     0xE50C, 0x0000,
	     0xE510, 0x0000,
	     0xE514, 0x0000,
	     0xE518, 0x0000,
	     0xE51C, 0x0000,
	     0xE520, 0x0000,
	     0xE524, 0x005C,
	     0xE528, 0x0077,
	     0xE52C, 0x0041
	   };


/* This table is for PAL 720x540 */
  WORD_ TV720x540x50[] = {
	     0xE430, 0x0000,
	     0xE434, 0x0000,
	     0xE438, 0x2000,
	     0xE43C, 0x0270,
	     0xE440, 0x0031,
	     0xE444, 0x0270,
	     0xE448, 0x0031,
	     0xE44C, 0x703A,
	     0xE450, 0x8888,
	     0xE454, 0x8000,
	     0xE458, 0xE719,
	     0xE45C, 0x0000,
	     0xE460, 0x0048,
	     0xE464, 0x005B,
	     0xE468, 0x0042,
	     0xE46C, 0x0036,
	     0xE470, 0x0055,
	     0xE474, 0x0078,
	     0xE478, 0x0200,	/*final working value is 0x030C, see code*/
	     0xE47C, 0x0100,	/*final working value is 0x0076, see code*/
	     0xE480, 0x026F,
	     0xE484, 0x000E,
	     0xE488, 0x0270,
	     0xE48C, 0x000E,
	     0xE490, 0x0004,
	     0xE494, 0x0009,
	     0xE498, 0x0004,
	     0xE49C, 0x0009,
	     0xE4A0, 0x7D46,
	     0xE4A4, 0x4939,
	     0xE4A8, 0x0000,
	     0xE4AC, 0x1020,
	     0xE4B0, 0x0000,
	     0xE4B4, 0x0000,
	     0xE4B8, 0x004A,
	     0xE4BC, 0x0001,
	     0xE4C0, 0x034E,
	     0xE4C4, 0x0001,
	     0xE4C8, 0x8700,
	     0xE4CC, 0x8787,
	     0xE4D0, 0x8787,
	     0xE4D4, 0x8787,
	     0xE4D8, 0x8787,
	     0xE4DC, 0x8787,
	     0xE4E0, 0x8787,
	     0xE4E4, 0x8787,
	     0xE4E8, 0x0000,
	     0xE4EC, 0x0000,
	     0xE4F0, 0x0000,
	     0xE4F4, 0x0000,
	     0xE4F8, 0x0000,
	     0xE4FC, 0x0000,
	     0xE500, 0x0000,
	     0xE504, 0x0000,
	     0xE508, 0x0000,
	     0xE50C, 0x0000,
	     0xE510, 0x0000,
	     0xE514, 0x0000,
	     0xE518, 0x0000,
	     0xE51C, 0x0000,
	     0xE520, 0x0000,
	     0xE524, 0x005C,
	     0xE528, 0x0096,
	     0xE52C, 0x005E
	   };


/* This table is for PAL 800x600 */
  WORD_ TV800x600x50[] = {
	     0xE430, 0x0000,
	     0xE434, 0x0000,
	     0xE438, 0x2000,
	     0xE43C, 0x0270,
	     0xE440, 0x0031,
	     0xE444, 0x0270,
	     0xE448, 0x0031,
	     0xE44C, 0x703A,
	     0xE450, 0x8888,
	     0xE454, 0x8000,
	     0xE458, 0xE719,
	     0xE45C, 0x0000,
	     0xE460, 0x004A,
	     0xE464, 0x005B,
	     0xE468, 0x0042,
	     0xE46C, 0x0036,
	     0xE470, 0x0057,
	     0xE474, 0x007B,
	     0xE478, 0x0200,	/*final working value is 0x038D, see code*/
	     0xE47C, 0x0100,	/*final working value is 0x00C1, see code*/
	     0xE480, 0x026F,
	     0xE484, 0x000E,
	     0xE488, 0x0270,
	     0xE48C, 0x000E,
	     0xE490, 0x0004,
	     0xE494, 0x0009,
	     0xE498, 0x0004,
	     0xE49C, 0x0009,
	     0xE4A0, 0x4EA5,
	     0xE4A4, 0x46F0,	/*This value can be adjusted (color <-> mono)*/
	     0xE4A8, 0x0000,
	     0xE4AC, 0x1020,
	     0xE4B0, 0x0000,
	     0xE4B4, 0x0000,
	     0xE4B8, 0x004D,
	     0xE4BC, 0x0001,
	     0xE4C0, 0x036A,
	     0xE4C4, 0x0001,
	     0xE4C8, 0x8700,
	     0xE4CC, 0x8787,
	     0xE4D0, 0x8787,
	     0xE4D4, 0x8787,
	     0xE4D8, 0x8787,
	     0xE4DC, 0x8787,
	     0xE4E0, 0x8787,
	     0xE4E4, 0x8787,
	     0xE4E8, 0x0000,
	     0xE4EC, 0x0000,
	     0xE4F0, 0x0000,
	     0xE4F4, 0x0000,
	     0xE4F8, 0x0000,
	     0xE4FC, 0x0000,
	     0xE500, 0x0000,
	     0xE504, 0x0000,
	     0xE508, 0x0000,
	     0xE50C, 0x0000,
	     0xE510, 0x0000,
	     0xE514, 0x0000,
	     0xE518, 0x0000,
	     0xE51C, 0x0000,
	     0xE520, 0x0000,
	     0xE524, 0x005C,
	     0xE528, 0x0077,
	     0xE52C, 0x0041
	   };



/*------------------------------------------------------------
   This extended register table will initialize the chip into:
     1) 2 MB Video Memory.
     2) 75 Mhz Video Memory Clock.
     3) 640x480x8 @ 60Hz.
  ------------------------------------------------------------*/
  BYTE_ ExtRegData[] = {
	 /*   index   data   */
	      0x10,   0x10,
	      0x11,   0x00,
	      0x12,   0x00,
	      0x14,   0x51,
	      0x15,   0x00,
	      0x16,   0x00,
	      0x30,   0x01,  /*0x3CE_30<1,0> = 0x3CE_72<1,0>, Memory size related*/
	      0x31,   0x00,
	      0x32,   0x00,
	      0x3C,   0x00,
	      0x3E,   0x00,
	      0x3F,   0x00,
	      0x50,   0x00,
	      0x51,   0x00,
	      0x52,   0x00,
	      0x53,   0x00,
	      0x54,   0x00,
	      0x55,   0x00,
	      0x56,   0x00,
	      0x57,   0x01,
	      0x58,   0x00,
	      0x59,   0x00,
	      0x5A,   0x00,
	      0x5C,   0x00,
	      0x5D,   0x00,
	      0x5E,   0x00,
	      0x5F,   0x00,
	      0x70,   0x0B,
	      0x71,   0x03,
  /* reg_72 value will be auto-determined in DetectVideoMemory() */
#if PCI_BUS
	      0x72,   0x05,	    /*2 MB, 64 bits*/
#else /*Non-PCI, such as VL, Motorola, SH3, AMD Elan, etc.*/
	      0x72,   0x01,	    /*2 MB, 32 bits*/
#endif
	      0x73,   0x30,
	      0x74,   0x10,
	      0x75,   0x10,
	      0x76,   0x00,
	      0x77,   0x01,	    /*8Bpp*/
	      0x78,   0x00,
	      0x79,   0x33,	    /*!!! if Memory Clock < 75 Mhz, 0x79=0x30*/
	      0x7A,   0xC8,
	      0x90,   0x03,
	      0xB0,   0xD2,	    /*Pixel Clock = 25.175 MHz*/
	      0xB1,   0xD3,
	      0xB2,   0xDB,	    /*Memory Clock = 75MHz*/
	      0xB3,   0x54,
	      0xB5,   0x00,
	      0xBA,   0x00,
	      0xBB,   0x00,
	      0xBF,   0x00,
	      0xF8,   0x04
	    };


/*------------------------------------------------------------
   The look up table below will only be needed for 256 color mode
   For 16/24/32 bpp modes, a bypass mode can not enabled (see
   code example)

   Note: value 0x00 is lowest intensity.
	 value 0xFF is highest intensity.
  ------------------------------------------------------------*/
  BYTE_ RamDacData[] = {
	 /*   Red   Green  Blue  */
	      0x00,  0x00,  0x00,
	      0x00,  0x00,  0x2A,
	      0x00,  0x2A,  0x00,
	      0x00,  0x2A,  0x2A,
	      0x2A,  0x00,  0x00,
	      0x2A,  0x00,  0x2A,
	      0x2A,  0x15,  0x00,
	      0x2A,  0x2A,  0x2A,
	      0x15,  0x15,  0x15,
	      0x15,  0x15,  0x3F,
	      0x15,  0x3F,  0x15,
	      0x15,  0x3F,  0x3F,
	      0x3F,  0x15,  0x15,
	      0x3F,  0x15,  0x3F,
	      0x3F,  0x3F,  0x15,
	      0x3F,  0x3F,  0x3F,
	      0x00,  0x00,  0x00,
	      0x05,  0x05,  0x05,
	      0x08,  0x08,  0x08,
	      0x0B,  0x0B,  0x0B,
	      0x0E,  0x0E,  0x0E,
	      0x11,  0x11,  0x11,
	      0x14,  0x14,  0x14,
	      0x18,  0x18,  0x18,
	      0x1C,  0x1C,  0x1C,
	      0x20,  0x20,  0x20,
	      0x24,  0x24,  0x24,
	      0x28,  0x28,  0x28,
	      0x2D,  0x2D,  0x2D,
	      0x32,  0x32,  0x32,
	      0x38,  0x38,  0x38,
	      0x3F,  0x3F,  0x3F,
	      0x00,  0x00,  0x3F,
	      0x10,  0x00,  0x3F,
	      0x1F,  0x00,  0x3F,
	      0x2F,  0x00,  0x3F,
	      0x3F,  0x00,  0x3F,
	      0x3F,  0x00,  0x2F,
	      0x3F,  0x00,  0x1F,
	      0x3F,  0x00,  0x10,
	      0x3F,  0x00,  0x00,
	      0x3F,  0x10,  0x00,
	      0x3F,  0x1F,  0x00,
	      0x3F,  0x2F,  0x00,
	      0x3F,  0x3F,  0x00,
	      0x2F,  0x3F,  0x00,
	      0x1F,  0x3F,  0x00,
	      0x10,  0x3F,  0x00,
	      0x00,  0x3F,  0x00,
	      0x00,  0x3F,  0x10,
	      0x00,  0x3F,  0x1F,
	      0x00,  0x3F,  0x2F,
	      0x00,  0x3F,  0x3F,
	      0x00,  0x2F,  0x3F,
	      0x00,  0x1F,  0x3F,
	      0x00,  0x10,  0x3F,
	      0x1F,  0x1F,  0x3F,
	      0x27,  0x1F,  0x3F,
	      0x2F,  0x1F,  0x3F,
	      0x37,  0x1F,  0x3F,
	      0x3F,  0x1F,  0x3F,
	      0x3F,  0x1F,  0x37,
	      0x3F,  0x1F,  0x2F,
	      0x3F,  0x1F,  0x27,
	      0x3F,  0x1F,  0x1F,
	      0x3F,  0x27,  0x1F,
	      0x3F,  0x2F,  0x1F,
	      0x3F,  0x37,  0x1F,
	      0x3F,  0x3F,  0x1F,
	      0x37,  0x3F,  0x1F,
	      0x2F,  0x3F,  0x1F,
	      0x27,  0x3F,  0x1F,
	      0x1F,  0x3F,  0x1F,
	      0x1F,  0x3F,  0x27,
	      0x1F,  0x3F,  0x2F,
	      0x1F,  0x3F,  0x37,
	      0x1F,  0x3F,  0x3F,
	      0x1F,  0x37,  0x3F,
	      0x1F,  0x2F,  0x3F,
	      0x1F,  0x27,  0x3F,
	      0x2D,  0x2D,  0x3F,
	      0x31,  0x2D,  0x3F,
	      0x36,  0x2D,  0x3F,
	      0x3A,  0x2D,  0x3F,
	      0x3F,  0x2D,  0x3F,
	      0x3F,  0x2D,  0x3A,
	      0x3F,  0x2D,  0x36,
	      0x3F,  0x2D,  0x31,
	      0x3F,  0x2D,  0x2D,
	      0x3F,  0x31,  0x2D,
	      0x3F,  0x36,  0x2D,
	      0x3F,  0x3A,  0x2D,
	      0x3F,  0x3F,  0x2D,
	      0x3A,  0x3F,  0x2D,
	      0x36,  0x3F,  0x2D,
	      0x31,  0x3F,  0x2D,
	      0x2D,  0x3F,  0x2D,
	      0x2D,  0x3F,  0x31,
	      0x2D,  0x3F,  0x36,
	      0x2D,  0x3F,  0x3A,
	      0x2D,  0x3F,  0x3F,
	      0x2D,  0x3A,  0x3F,
	      0x2D,  0x36,  0x3F,
	      0x2D,  0x31,  0x3F,
	      0x00,  0x00,  0x1C,
	      0x07,  0x00,  0x1C,
	      0x0E,  0x00,  0x1C,
	      0x15,  0x00,  0x1C,
	      0x1C,  0x00,  0x1C,
	      0x1C,  0x00,  0x15,
	      0x1C,  0x00,  0x0E,
	      0x1C,  0x00,  0x07,
	      0x1C,  0x00,  0x00,
	      0x1C,  0x07,  0x00,
	      0x1C,  0x0E,  0x00,
	      0x1C,  0x15,  0x00,
	      0x1C,  0x1C,  0x00,
	      0x15,  0x1C,  0x00,
	      0x0E,  0x1C,  0x00,
	      0x07,  0x1C,  0x00,
	      0x00,  0x1C,  0x00,
	      0x00,  0x1C,  0x07,
	      0x00,  0x1C,  0x0E,
	      0x00,  0x1C,  0x15,
	      0x00,  0x1C,  0x1C,
	      0x00,  0x15,  0x1C,
	      0x00,  0x0E,  0x1C,
	      0x00,  0x07,  0x1C,
	      0x0E,  0x0E,  0x1C,
	      0x11,  0x0E,  0x1C,
	      0x15,  0x0E,  0x1C,
	      0x18,  0x0E,  0x1C,
	      0x1C,  0x0E,  0x1C,
	      0x1C,  0x0E,  0x18,
	      0x1C,  0x0E,  0x15,
	      0x1C,  0x0E,  0x11,
	      0x1C,  0x0E,  0x0E,
	      0x1C,  0x11,  0x0E,
	      0x1C,  0x15,  0x0E,
	      0x1C,  0x18,  0x0E,
	      0x1C,  0x1C,  0x0E,
	      0x18,  0x1C,  0x0E,
	      0x15,  0x1C,  0x0E,
	      0x11,  0x1C,  0x0E,
	      0x0E,  0x1C,  0x0E,
	      0x0E,  0x1C,  0x11,
	      0x0E,  0x1C,  0x15,
	      0x0E,  0x1C,  0x18,
	      0x0E,  0x1C,  0x1C,
	      0x0E,  0x18,  0x1C,
	      0x0E,  0x15,  0x1C,
	      0x0E,  0x11,  0x1C,
	      0x14,  0x14,  0x1C,
	      0x16,  0x14,  0x1C,
	      0x18,  0x14,  0x1C,
	      0x1A,  0x14,  0x1C,
	      0x1C,  0x14,  0x1C,
	      0x1C,  0x14,  0x1A,
	      0x1C,  0x14,  0x18,
	      0x1C,  0x14,  0x16,
	      0x1C,  0x14,  0x14,
	      0x1C,  0x16,  0x14,
	      0x1C,  0x18,  0x14,
	      0x1C,  0x1A,  0x14,
	      0x1C,  0x1C,  0x14,
	      0x1A,  0x1C,  0x14,
	      0x18,  0x1C,  0x14,
	      0x16,  0x1C,  0x14,
	      0x14,  0x1C,  0x14,
	      0x14,  0x1C,  0x16,
	      0x14,  0x1C,  0x18,
	      0x14,  0x1C,  0x1A,
	      0x14,  0x1C,  0x1C,
	      0x14,  0x1A,  0x1C,
	      0x14,  0x18,  0x1C,
	      0x14,  0x16,  0x1C,
	      0x00,  0x00,  0x10,
	      0x04,  0x00,  0x10,
	      0x08,  0x00,  0x10,
	      0x0C,  0x00,  0x10,
	      0x10,  0x00,  0x10,
	      0x10,  0x00,  0x0C,
	      0x10,  0x00,  0x08,
	      0x10,  0x00,  0x04,
	      0x10,  0x00,  0x00,
	      0x10,  0x04,  0x00,
	      0x10,  0x08,  0x00,
	      0x10,  0x0C,  0x00,
	      0x10,  0x10,  0x00,
	      0x0C,  0x10,  0x00,
	      0x08,  0x10,  0x00,
	      0x04,  0x10,  0x00,
	      0x00,  0x10,  0x00,
	      0x00,  0x10,  0x04,
	      0x00,  0x10,  0x08,
	      0x00,  0x10,  0x0C,
	      0x00,  0x10,  0x10,
	      0x00,  0x0C,  0x10,
	      0x00,  0x08,  0x10,
	      0x00,  0x04,  0x10,
	      0x08,  0x08,  0x10,
	      0x0A,  0x08,  0x10,
	      0x0C,  0x08,  0x10,
	      0x0E,  0x08,  0x10,
	      0x10,  0x08,  0x10,
	      0x10,  0x08,  0x0E,
	      0x10,  0x08,  0x0C,
	      0x10,  0x08,  0x0A,
	      0x10,  0x08,  0x08,
	      0x10,  0x0A,  0x08,
	      0x10,  0x0C,  0x08,
	      0x10,  0x0E,  0x08,
	      0x10,  0x10,  0x08,
	      0x0E,  0x10,  0x08,
	      0x0C,  0x10,  0x08,
	      0x0A,  0x10,  0x08,
	      0x08,  0x10,  0x08,
	      0x08,  0x10,  0x0A,
	      0x08,  0x10,  0x0C,
	      0x08,  0x10,  0x0E,
	      0x08,  0x10,  0x10,
	      0x08,  0x0E,  0x10,
	      0x08,  0x0C,  0x10,
	      0x08,  0x0A,  0x10,
	      0x0B,  0x0B,  0x10,
	      0x0C,  0x0B,  0x10,
	      0x0D,  0x0B,  0x10,
	      0x0F,  0x0B,  0x10,
	      0x10,  0x0B,  0x10,
	      0x10,  0x0B,  0x0F,
	      0x10,  0x0B,  0x0D,
	      0x10,  0x0B,  0x0C,
	      0x10,  0x0B,  0x0B,
	      0x10,  0x0C,  0x0B,
	      0x10,  0x0D,  0x0B,
	      0x10,  0x0F,  0x0B,
	      0x10,  0x10,  0x0B,
	      0x0F,  0x10,  0x0B,
	      0x0D,  0x10,  0x0B,
	      0x0C,  0x10,  0x0B,
	      0x0B,  0x10,  0x0B,
	      0x0B,  0x10,  0x0C,
	      0x0B,  0x10,  0x0D,
	      0x0B,  0x10,  0x0F,
	      0x0B,  0x10,  0x10,
	      0x0B,  0x0F,  0x10,
	      0x0B,  0x0D,  0x10,
	      0x0B,  0x0C,  0x10,
	      0x00,  0x00,  0x00,
	      0x00,  0x00,  0x00,
	      0x00,  0x00,  0x00,
	      0x00,  0x00,  0x00,
	      0x00,  0x00,  0x00,
	      0x00,  0x00,  0x00,
	      0x00,  0x00,  0x00,
	      0x00,  0x00,  0x00
	    };

#endif	/* if 0 */
