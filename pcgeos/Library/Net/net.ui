/*
 *	Copyright (c) GeoWorks 1992 -- All Rights Reserved
 *
 * Project:	PC/GEOS
 * Module:	Network Library
 * File:	net.ui
 *
 * Author:	Eric E. Del Sesto
 *
 *	This file contains the user Interface description for this
 * application. This file is written in a language called ESPIRE, which is
 * compiled by the UIC compiler. See Spec/User/uic.doc for info.
 *
 * RCS STAMP:
 *	$Id: net.ui,v 1.1 97/04/05 01:24:50 newdeal Exp $
 *
 */

/* ----------------------------------------------------------------------------
	Include files
-----------------------------------------------------------------------------*/

/* first, read pre-defined class definitions. See the file
 * /staff/pcgeos/Include/generic.uih. */

#include "generic.uih"

/* ----------------------------------------------------------------------------
	Class Definitions
-----------------------------------------------------------------------------*/
/* We have to subclass the GenApplication object, so that we can be a
 * member of the GeneralChangeNotification list. */

/*******
class NetApplication = GenApplication {
}
*******/

/* ----------------------------------------------------------------------------
	Application Object
-----------------------------------------------------------------------------*/
/* The very top-level generic object of an application MUST be a GenApplication
 * object. The viewer.gp file contains "appobj" statement which indicates
 * that this "ViewerApp" object is in fact the top-level UI object.
 * This object should be in its own resource so that GeoManager can load it
 * quickly to grab the icon for this application. GeoManager will store this
 * icon in its "Token Database", so that the icon image can be reused quickly.*/

start	NetAppResource;

NetApp = GenApplication {
	/* The geoManager uses this token information to store this
	 * application's icon in a database. */

	moniker = list {
		NetTextMoniker
	}

	children = 	/* NetSummons, */
			NetAlertSummons;

	/*active = ;	*/		/* nothing appears initially */

	appState = default +notUserInteractable;
}

visMoniker NetTextMoniker = "PC/GEOS Net Library";

end	NetAppResource;


/* ----------------------------------------------------------------------------
				 NetSummons
-----------------------------------------------------------------------------*/
/* Every application has at least one GenPrimary object. This object serves
 * as the main window of the application. Inside this window, various UI
 * components, such as menus or lists, can be placed. */

start	NetSummonsResource;	/* this resource is for misc UI objects */

/* 2.0: make this a GenInteraction */

#if 0
NetSummons = GenSummons {
	moniker = "Network Control Panel";
	children = 	PanelTitleInteraction,
			PrinterInteraction,
			JobInteraction,
			PanelReplyBar;		
	output	= process;
	attributes = default +sysModal, -appModal;
	summonsAttributes = responseType customSummons;
}

PanelTitleInteraction	= GenInteraction {
	children = 	PanelTitleText,
			PanelTitleSpace;
	attributes = notIndependentlyDisplayable;
	hints = {
		HINT_CENTER_CHILDREN_HORIZONTALLY,
		HINT_ORIENT_CHILDREN_VERTICALLY,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT
	}

}

PanelTitleText = GenGlyphDisplay {
	moniker = "Network Control Panel";
}
PanelTitleSpace = GenGlyphDisplay {
	moniker = "";
}

PrinterInteraction = GenInteraction {
	children = 	PrinterTextInteraction;
	attributes = notIndependentlyDisplayable;

}

PrinterTextInteraction = GenInteraction {
	children = PrinterTextDisplay,
			NextPrinterTrigger;
	attributes = notIndependentlyDisplayable;
	hints = {
		HINT_ORIENT_CHILDREN_HORIZONTALLY,
		HINT_CENTER_CHILDREN_VERTICALLY
	}
}

PrinterTextDisplay = GenTextDisplay {
	moniker = "Printer:";
	text = printerText;
	textDisplayAttributes = default +singleLineText;
}

chunk printerText = "";

NextPrinterTrigger = GenTrigger {
	moniker = "Other Printer(s)";
	/*action = MSG_SPOOL_PANEL_NEXT_PRINTER,process;*/
}

JobInteraction = GenInteraction {
	children = 	JobList,
			JobButtons;
	attributes = notIndependentlyDisplayable;
	hints = {
		HINT_ORIENT_CHILDREN_VERTICALLY
	}

}

JobList = GenList {
	moniker = "Documents Currently Printing or Waiting to Print:";
	attributes = type exclusive, listMethodIsData, listMethod;
	gadgetAttrs = default +sendUserChanges, +delayed;
	/*action = MSG_SPOOL_PANEL_JOB_LIST, process;*/
	hints = {
		HINT_PLACE_MONIKER_ABOVE,
		HINT_SCROLL_LIST,
		HINT_SET_DESIRED_SIZE {
						; number of entries in a line
			dw SpecSizeSpec <SST_COUNT, 3>
						; desired entry height
			dw SpecSizeSpec <SST_NUMBER_OF_TEXT_LINES, 1>
						; desired list width 
			dw SpecSizeSpec <SST_NUMBER_OF_AVG_WIDTH_CHARS, 60>
		}
	}
}

JobButtons = GenInteraction {
	children = CancelJobTrigger;
	attributes = notIndependentlyDisplayable;
	hints = {
		HINT_CENTER_CHILDREN_HORIZONTALLY,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT
	}
}


CancelJobTrigger = GenTrigger {
	moniker = "Cancel Document";
	/*action = MSG_SPOOL_PANEL_CANCEL_QUEUED_JOB, process;*/
}

PanelReplyBar = GenInteraction {
	children = CloseTrigger;
	attributes = notIndependentlyDisplayable;
	hints = {
		HINT_MAKE_REPLY_BAR
	}
}

CloseTrigger = GenTrigger {
	CLOSE_TRIGGER_VALUES
	genAttributes = completesInteraction;
	/* action = MSG_SPOOL_PANEL_CLOSE,process; */
}
#endif

end	NetSummonsResource;


/* ----------------------------------------------------------------------------
				 NetAlertSummons
-----------------------------------------------------------------------------*/

start	NetAlertSummonsResource;

NetAlertSummons = GenInteraction {
	moniker = "Message from the Network Administrator:";
	type = notification;
	visibility = dialog;
	attributes = default +sysModal, -modal;

	children = 	/* AlertTitleInteraction, */
			AlertMessage;
			/* AlertReplyBar; */

	/* output = process;*/
}

#if 0
AlertTitleInteraction	= GenInteraction {
	/*****
	children = 	AlertTitleText,
			AlertTitleSpace;
			****/
	hints = {
		HINT_CENTER_CHILDREN_HORIZONTALLY,
		HINT_ORIENT_CHILDREN_VERTICALLY,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT
	}

}
#endif

#if 0
AlertTitleText = GenGlyphDisplay {
	moniker = SysopMessageMoniker;
}

visMoniker SysopMessageMoniker = "Message from the Network Administrator:";

/* visMoniker PersonalMessageMoniker = "A Personal Message Has Arrived:"; */

AlertTitleSpace = GenGlyphDisplay {
	moniker = "";
}
#endif

AlertMessage = GenText {
	/* desiredWidth = "(size NetWareMessage) or mask GTDW_CHARS";*/

	/*****
	states = default -editable +selectable;
	*****/

	text = "";
	textDisplayAttributes = default +tailOriented;

	maxLength = "(size NetWareMessage)*60";
					/* DO NOT get bigger than this. */
	hints = {
		HINT_DRAW_IN_BOX,
		HINT_TEXT_FRAME
	}
}

/*******
AlertReplyBar = GenInteraction {
	children = AlertCloseTrigger;
	hints = {
		HINT_MAKE_REPLY_BAR
	}
}
*******/

/*********
AlertCloseTrigger = GenTrigger {
	moniker = "VMO_CANCEL", "Ok";
	action = MSG_NET_ALERT_CLOSE_SUMMONS, process;
}
**********/

end NetAlertSummonsResource;
