;----------------------------------------------------------------------------
; FILE:  IIMPGIF.DEF
;----------------------------------------------------------------------------
;
; Description:
;    Structure definitions for ImpGIF (Importing GIFs)
;
; History:
;    When:     Who:  Comment:
;    --------  ----  -----------
;    08/04/98  LES   Created
;
;----------------------------------------------------------------------------

;----------------------------------------------------------------------------
; CONSTANTS
;----------------------------------------------------------------------------

INBUFFER_SIZE = 2048         ; Size of input buffer, must be power of 2
FILEBUFFER_SIZE = 512        ; Size of buffer for ImpGIFProcessFile
GIF_INTRODUCER_CHARACTER = 0x21  ; Leading byte for each introducer
LOCAL_IMAGE_SEPERATOR = 0x2C     ; Prefix to LocalImageDescriptor
GIF_TRAILER = 0x3B               ; Final trialer required in all GIFs
MAX_SIZE_DICTIONARY = 4097       ; Number of ImpGIFDictionaryEntries
MAX_SIZE_UNCOMPRESS_PATTERN = 2048          ; Size of pattern buffer
MAX_NUM_CODE_BITS = 12           ; Number of bits per code max

;----------------------------------------------------------------------------
; STRUCTURES
;----------------------------------------------------------------------------

MimeStatusFlags	record
    MIME_STATUS_ABORT:1
	:15
MimeStatusFlags end

MimeStatus struct
	MS_mimeFlags		MimeStatusFlags
MimeStatus ends

GIFSubType   etype  byte
GST_87A      enum GIFSubType
GST_89A      enum GIFSubType

GIFInfoBits record
    GIB_GLOBAL_COLOR_TABLE:1,
    GIB_COLOR_RESOLUTION:3,
    GIB_COLOR_TABLE_SORT:1,
    GIB_SIZE_GLOBAL_COLOR_TABLE:3
GIFInfoBits end

GIFHeader struct
    GH_sign          byte   3 dup (?)
    GH_version       byte   3 dup (?)
    GH_srcWidth      word
    GH_srcHeight     word
    GH_info          GIFInfoBits
    GH_backColor     byte
    GH_aspectRatio   byte
GIFHeader ends

GIFLocalInfoBits record
     GLIB_LOCAL_COLOR_TABLE:1
     GLIB_INTERLACE:1,
     GLIB_COLOR_TABLE_SORT:1,
     :2,
     GLIB_SIZE_LOCAL_COLOR_TABLE:3,
GIFLocalInfoBits end

GIFLocalImageDesc struct
    GLID_seperator   byte
    GLID_x           word
    GLID_y           word
    GLID_width       word
    GLID_height      word
    GLID_info        GIFLocalInfoBits
GIFLocalImageDesc ends

GIFExtensionHeader struct
    GEH_introducer   byte
    GEH_label        byte
    GEH_blockSize    byte
GIFExtensionHeader ends

GIF_EXTENSION_PLAIN_TEXT                    = 0x01
GIF_EXTENSION_GRAPHICS_CONTROL              = 0xF9
GIF_EXTENSION_COMMENT                       = 0xFE
GIF_EXTENSION_APPLICATION                   = 0xFF

GIFImageInfoBits record
    :3,
        ; See GIFDisposalMethod
    GIIB_DISPOSAL_METHOD:3,

        ; If set, wants the user to click to continue
    GIIB_USER_INPUT_DESIRED:1,

        ; Tells if there is a transparent color
    GIIB_TRANSPARENT:1
GIFImageInfoBits end

GIFDisposalMethod etype byte
GDM_NOT_SPECIFIED                              enum GIFDisposalMethod
GDM_DO_NOT_DISPOSE                             enum GIFDisposalMethod
GDM_OVERWRITE_BACKGROUND_WITH_BACKGROUND_COLOR enum GIFDisposalMethod
GDM_OVERWRITE_PREVIOUS_GRAPHIC                 enum GIFDisposalMethod

; The compression dictionary is stored as groups of 3 byte triples
; containing an offset to the prefix pattern and a suffix
ImpGIFDictionaryEntry struct
    IGDE_suffix         byte       ; Byte to add to pattern
    IGDE_prefix         word       ; Offset to next entry, NOT index
                                   ; 0 if end of pattern (base character)
ImpGIFDictionaryEntry ends

ImpGIFStruct struct
        ; Block of data to handle incoming data
    IGS_inBuffer                   byte   INBUFFER_SIZE dup (?)

        ; Current position in incoming data buffer
    IGS_inBufPos                   word

        ; End position in incoming data buffer
    IGS_inBufEnd                   word

        ; Number of bytes remaining in data buffer
    IGS_inBufCount                 word

        ; 0 if not hit the last block of data, non-zero if hit
    IGS_hitLast                    byte

        ; Output file and block to contain the imported .GIF
    IGS_vmFile                     hptr.VMFileHandle        (?)
    IGS_vmBlock                    hptr.VMBlockHandle       (?)

        ; Status watcher
    IGS_statusObject               optr                     (?)

        ; Size and type of picture
    IGS_width                      word                     (?)
    IGS_height                     word                     (?)
    IGS_format                     BMType                   (?)
    IGS_gifInfo                    GIFInfoBits              (?)
    IGS_backColor                  byte                     (?)

        ; x position at which output clipping occurs
    IGS_xClip                      word                     (?)

        ; Number of y rasters filled
    IGS_yCount                     word

        ; Which raster pass we are going through (4 passes for interlaced)
    IGS_rasterPass                 byte

        ; Current x position in picture
    IGS_xPos                       word

        ; Current y raster position
    IGS_yPos                       word

        ; Number of bytes needed for next state to start
    IGS_bytesNeeded                word

        ; Current offset to near function to call for current state
    IGS_stateFunction              word

        ; Subtype of GIF
    IGS_subType                    GIFSubType

        ; Current palette
    IGS_palette                    RGBValue          256 dup (?)
        ; and number of colors in this palette
    IGS_colorMapSize               word
        ; necessary for all those wonderful calculations
    IGS_bitsPerPixel               byte
        ; remap palette table (if used, check IGS_useSystemPalette)
    IGS_remapColors                byte              256 dup (?)
        ; Do we want to use the system palette?  0=no, 1=yes
        ; passed in flag
    IGS_wantSystemPalette          byte
        ; 0 = system pal IS not being used.
        ; 1 = use system palette is being used.
    IGS_useSystemPalette           byte

        ; Global palette
    IGS_globalPalette              RGBValue          256 dup (?)
        ; Global Color map size
    IGS_globalColorMapSize         word
        ; Bits per pixel (globally)
    IGS_globalBitsPerPixel         byte
        ; Bits per color resolution
    IGS_globalColorBitResolution   byte

        ; Graphics Control information for next image
    IGS_frameInfo                  GIFImageInfoBits
    IGS_delayTime                  word             ; In hundreds of a sec
    IGS_transparentColor           byte

        ; What is the state of the next local image?
    IGS_localImage                 GIFLocalImageDesc

        ; 1 if inverted, else 0
    IGS_inverted                   byte

        ; Raster info
    IGS_rasterSegment              word
    IGS_rasterOffset               word

        ; Output registers for handling pixel data
    IGS_outputPixelMask            byte       ; e.g. [ XXXX 0000 ]
    IGS_outputPixelMaskOffset      byte       ;             <- 4 bits
    IGS_outputPixelPos             word       ; Current byte position
    IGS_outputPixelPosStart        word       ; First byte position
    IGS_outputPixelByte            byte       ; Temporary holding place

        ; Output registers for handling output mask
    IGS_outputMask                 byte       ; bit mask (always one bit)
    IGS_outputMaskPos              word       ; Byte position in mask
    IGS_outputMaskByte             byte       ; byte containing current mask

        ; Output functions
    IGS_outputResetLineFunction    word
    IGS_outputPixelFunction        word
    IGS_outputFlushLineFunction    word
    IGS_outputTransparentFunction  word

        ; Variables for uncompression
    IGS_uncompressCount            byte       ; Number of bytes available
    IGS_dictionaryHandle           word
    IGS_dictionarySegment          word

        ; Pattern from uncompression (a character string)
    IGS_patternHandle              word
    IGS_patternSegment             word

        ; Various code signals when uncompressing
    IGS_codeSize                   byte       ; Number of bits per code
    IGS_codeClear                  word       ; Code to clear dictionary
    IGS_codeEOF                    word       ; Code saying end of file
    IGS_codeFirstFree              word       ; Initial first free code
    IGS_codeFree                   word       ; current free code
    IGS_initCodeSize               byte
    IGS_codeMax                    word       ; Max code before expanding
    IGS_codeMask                   word       ; Mask used for getting code
    IGS_codeBuffer                 word       ; two byte code buffer
    IGS_codeBufferBits             byte       ; Number bits in buffer
    IGS_codeCurrent                word
    IGS_codeOld                    word
    IGS_charFin                    byte       ; Last character

        ; Code saying if this is the first code after a clear list
    IGS_isFirstCode                byte       ; 0=first

        ; Keep track of the amount of memory used
    IGS_memoryUsed                 dword
        ; Allocation watcher
    IGS_allocWatcher               hptr.MemHandle

        ; Last status returned from ImpGIFProcess.
        ; Used to determine if we should clear out for a new graphic
    IGS_lastStatus                 word

        ; Number of times this animated GIF should loop
        ; Default value of 1 time.
    IGS_loopCount                  word

		; Pointer to a boolean that is set to TRUE when an abort is requested
	IGS_mimeStatus					fptr.MimeStatus
ImpGIFStruct ends

ImpGIFInfo struct
    IGI_fieldWidth                 word       ; Work area width
    IGI_fieldHeight                word       ; Height of field to use
    IGI_bitmapWidth                word       ; Size of frame's bitmap width
    IGI_bitmapHeight               word       ;                        height
    IGI_bitmapX                    word       ; X position in field
    IGI_bitmapY                    word       ; Y position in field
    IGI_delay                      word       ; Delay time of 1/100 seconds
    IGI_bitmap                     hptr.VMBlockHandle  ; Handle to frame bitmap
    IGI_format                     BMType     ; Format of image
    IGI_removeMethod               byte       ; Format used to remove image
    IGI_backgroundColor            byte       ; Field background color
    IGI_memoryUsed                 dword      ; Amount of memory used
    IGI_loopCount                  word       ; Num times to loop, 0=forever
    IGI_palette                    RGBValue   256 dup (?)
    IGI_globalPalette              RGBValue   256 dup (?)
ImpGIFInfo ends

if PROGRESS_DISPLAY
ImpGIFProgressInfo struct
    IGPI_fieldWidth               word       ; Work area width
    IGPI_fieldHeight              word       ; Height of field to use
    IGPI_bitmap                   hptr.VMBlockHandle  ; Handle to frame bitmap
    IGPI_yPos			  word	      ; current Y position
ImpGIFProgressInfo ends
endif

ImpGIFStatus etype word
IG_STATUS_OK                 enum ImpGIFStatus ; Still working, but OK
IG_STATUS_GIF_DONE           enum ImpGIFStatus ; Gif picture successful done
IG_STATUS_NEED_DATA          enum ImpGIFStatus ; Needs more data to continue
IG_STATUS_END_DATA           enum ImpGIFStatus ; No more data found
IG_STATUS_ERROR_NOT_GIF      enum ImpGIFStatus ; This is NOT a GIF
IG_STATUS_ERROR              enum ImpGIFStatus ; Some unknown error
IG_STATUS_FOUND_END_OF_GIF   enum ImpGIFStatus ; End of GIF found, stop please
IG_STATUS_COULD_NOT_CREATE   enum ImpGIFStatus ; could not create bitmap
IG_STATUS_NO_GRAPHIC         enum ImpGIFStatus ; No graphic found
IG_STATUS_ABORTED            enum ImpGIFStatus ; User requested stop

ImpBmpParamsAsm struct
    IBP_source       hptr.FileHandle
    IBP_dest         hptr.FileHandle
    IBP_status       optr
    IBP_bitmap       hptr.VMBlockHandle
    IBP_width        word
    IBP_height       word
    IBP_format       byte
    IBP_impForm      byte    31 dup (?)
if PROGRESS_DISPLAY
    IBP_animDest     hptr.FileHandle    ; dest for animated GIFs
    IBP_importProgressDataP  fptr.byte  ; placeholder only
endif
	IBP_mimeStatus	 fptr.MimeStatus
ImpBmpParamsAsm ends

ImpBmpStatus etype word
IBS_NO_ERROR            enum ImpBmpStatus
IBS_UNKNOWN_FORMAT      enum ImpBmpStatus
IBS_FORMAT_OK           enum ImpBmpStatus
IBS_WRONG_FORMAT        enum ImpBmpStatus
IBS_SYS_ERROR           enum ImpBmpStatus
IBS_WRONG_FILE          enum ImpBmpStatus
IBS_NO_MEMORY           enum ImpBmpStatus
IBS_IMPORT_STOPPED      enum ImpBmpStatus

;----------------------------------------------------------------------------
; END OF FILE:  IIMPGIF.DEF
;----------------------------------------------------------------------------
