/******************* OUTPUT TEXT OBJECT *******************/

@include <stdapp.goh>
#include "text.h"
#include "warnings.h"
#include "global.h"
#include <Ansi/string.h>

dword   TextCurPos;   /* insertion position in output text object */

optr    Text;

void TextInit(optr obj)
    {
    Text = obj;

    /* Assert that the text object is empty. */
    @call Text::MSG_VIS_TEXT_DELETE_ALL();
    TextCurPos = @call Text::MSG_VIS_TEXT_GET_TEXT_SIZE();
    if (TextCurPos != 0)
        {
        EC_WARNING(RTF_WARNING_TEXT_OBJECT_NOT_EMPTY_YET);
        @call Text::MSG_VIS_TEXT_DELETE_ALL();
        TextCurPos = 0;
        }

    /* Set default attributes. */
    @call Text::MSG_VIS_TEXT_SET_PARA_ATTR (&DefaultParaAttrs, 0, 0);
    @call Text::MSG_VIS_TEXT_SET_CHAR_ATTR (&DefaultCharAttrs, 0, 0);
    }

void TextAppendText(char *pText)
    {
    @call Text::MSG_VIS_TEXT_APPEND_PTR (pText, 0);
    TextCurPos += strlen(pText);
    }

void TextAppendCharAttrs(VisTextCharAttr *pAttrs)
    {
    @call Text::MSG_VIS_TEXT_SET_CHAR_ATTR (pAttrs, TextCurPos, TextCurPos);
    }

void TextAppendParaAttrs(VisTextParaAttr *pAttrs)
    {
    /* Check for bad values. */
    if ((int)pAttrs->VTPA_leftMargin < 0)
        pAttrs->VTPA_leftMargin = 0;
    if ((int)pAttrs->VTPA_rightMargin < 0)
        pAttrs->VTPA_rightMargin = 0;
    if ((int)pAttrs->VTPA_paraMargin < 0)
        pAttrs->VTPA_paraMargin = 0;

    @call Text::MSG_VIS_TEXT_SET_PARA_ATTR (pAttrs, TextCurPos, TextCurPos);
    }
