/*
 * Moniker generated from PCX/gpaper.pcx with pixel 13 masked out
 */
start AppSCMonikerResource, data;
visMoniker PrintSCMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color4;
	cachedSize = 48, 30;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 629
		Bitmap <48,30,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0x05, 0x00, 0x01, 0xff, 0xff, 0xf8, 0x00
	db	0xfa, 0xdd, 0x00, 0xd0, 0xf7, 0x00, 0x00, 0x0d, 
		0xfc, 0xdd
	db	0x05, 0x00, 0x03, 0xff, 0xff, 0xfc, 0x00
	db	0xfa, 0xdd, 0x00, 0x0f, 0xf8, 0xff, 0x01, 0xf0, 
		0x80, 0xfc, 0xdd
	db	0x00, 0x3f, 0xfe, 0xff, 0x01, 0xfc, 0x00
	db	0x00, 0xdd, 0xf6, 0x00, 0xfc, 0xff, 0x01, 0x07, 
		0x70, 0xfc, 0xdd
	db	0x00, 0x3f, 0xfe, 0xff, 0x01, 0xfe, 0x00
	db	0x01, 0xdd, 0x0f, 0xf8, 0xff, 0x00, 0xf0, 0xfd, 
		0xff, 0x03, 0xf0, 0x77, 0x77, 0x0d, 0xfd, 0xdd
	db	0x00, 0x3f, 0xfe, 0xff, 0x01, 0xfe, 0x00
	db	0x01, 0xdd, 0x0f, 0xf8, 0xff, 0x00, 0xf0, 0xfd, 
		0xff, 0x03, 0x07, 0x77, 0x77, 0x0d, 0xfd, 0xdd
	db	0x00, 0x1f, 0xfe, 0xff, 0x01, 0xfe, 0x00
	db	0x01, 0xdd, 0xd0, 0xf7, 0xf7, 0x00, 0x0f, 0xfe, 
		0xff, 0x03, 0x07, 0x7f, 0xff, 0x0d, 0xfd, 0xdd
	db	0x00, 0x0f, 0xfe, 0xff, 0x01, 0xfe, 0x00
	db	0x02, 0xdd, 0xdd, 0x00, 0xf8, 0x77, 0x07, 0x70, 
		0xff, 0xff, 0xf0, 0x77, 0xff, 0xff, 0x0d, 0xfd, 
		0xdd
	db	0x00, 0x03, 0xfe, 0xff, 0x01, 0xfe, 0x00
	db	0xfe, 0xdd, 0x00, 0x00, 0xf8, 0x77, 0x06, 0x0f, 
		0xff, 0x07, 0x7f, 0xff, 0xf7, 0x0d, 0xfd, 0xdd
	db	0x00, 0x00, 0xfe, 0xff, 0x01, 0xfe, 0x00
	db	0xfd, 0xdd, 0xf6, 0x00, 0x04, 0x77, 0xff, 0xff, 
		0xf0, 0x0d, 0xfd, 0xdd
	db	0x01, 0x00, 0x00, 0xfe, 0xff, 0x00, 0xf8
	db	0xf9, 0xdd, 0x00, 0x07, 0xfb, 0x77, 0x03, 0x7f, 
		0xff, 0xff, 0x70, 0xfe, 0x00, 0x01, 0x0d, 0xdd
	db	0x01, 0x00, 0x01, 0xfe, 0xff, 0x00, 0xfc
	db	0xfa, 0xdd, 0x00, 0xd0, 0xfb, 0x77, 0x04, 0x7f, 
		0xff, 0xff, 0xf7, 0x00, 0xfe, 0x33, 0x01, 0x30, 
		0xdd
	db	0x01, 0x00, 0x7f, 0xfe, 0xff, 0x00, 0xfe
	db	0xfd, 0xdd, 0x00, 0xd0, 0xf2, 0x00, 0x03, 0x03, 
		0x33, 0x00, 0x0d
	db	0x00, 0x00, 0xfc, 0xff
	db	0xfd, 0xdd, 0x02, 0x0b, 0xfb, 0xfb, 0xf6, 0x7b, 
		0x05, 0xfb, 0xf0, 0x03, 0x30, 0x03, 0x08
	db	0x00, 0x01, 0xfc, 0xff
	db	0xfe, 0xdd, 0x02, 0xd0, 0xbf, 0xbf, 0xf6, 0xb7, 
		0x06, 0xbf, 0xbf, 0x0f, 0x03, 0x00, 0x38, 0x08
	db	0x00, 0x03, 0xfc, 0xff
	db	0xfe, 0xdd, 0x02, 0x0b, 0xfb, 0xfb, 0xf6, 0x7b, 
		0x06, 0xfb, 0xf0, 0xfb, 0x00, 0x03, 0x83, 0x08
	db	0x00, 0x03, 0xfc, 0xff
	db	0xfe, 0xdd, 0x00, 0x0f, 0xf3, 0xb7, 0x05, 0xb0, 
		0xb1, 0x10, 0x38, 0x38, 0x08
	db	0x00, 0x07, 0xfc, 0xff
	db	0x03, 0xdd, 0xdd, 0xd0, 0xfb, 0xf3, 0x7b, 0x05, 
		0x0f, 0x1b, 0x80, 0x03, 0x83, 0x08
	db	0x00, 0x07, 0xfc, 0xff
	db	0x02, 0xdd, 0xdd, 0xd0, 0xf2, 0x00, 0x05, 0x01, 
		0xb3, 0x00, 0x08, 0x38, 0x08
	db	0x00, 0x0f, 0xfc, 0xff
	db	0x02, 0xdd, 0xdd, 0x0f, 0xf3, 0x33, 0x06, 0x30, 
		0x81, 0xb8, 0x00, 0x03, 0x83, 0x08
	db	0x00, 0x1f, 0xfc, 0xff
	db	0x02, 0xdd, 0xd0, 0xb3, 0xf3, 0x33, 0x06, 0x08, 
		0x31, 0xb8, 0x00, 0x08, 0x30, 0x08
	db	0x00, 0x3f, 0xfc, 0xff
	db	0x01, 0xdd, 0x0b, 0xf3, 0xbb, 0x07, 0xb0, 0x83, 
		0x81, 0xb8, 0x00, 0x03, 0x00, 0x08
	db	0x00, 0x3f, 0xfc, 0xff
	db	0x01, 0xdd, 0x0b, 0xfa, 0x33, 0x0e, 0xaa, 0xa3, 
		0x3c, 0xcc, 0x33, 0xcc, 0xc3, 0x30, 0x38, 0x31, 
		0x33, 0x80, 0x80, 0x00, 0x08
	db	0x00, 0x3f, 0xfc, 0xff
	db	0x01, 0xdd, 0x0b, 0xfa, 0x33, 0x0e, 0xaa, 0xa3, 
		0x3c, 0xcc, 0x33, 0xcc, 0xc3, 0x30, 0x83, 0x83, 
		0x11, 0x18, 0x08, 0x00, 0x08
	db	0x00, 0x3f, 0xfd, 0xff, 0x00, 0xfe
	db	0x01, 0xdd, 0x0b, 0xf3, 0x33, 0x00, 0x30, 0xfe, 
		0x38, 0x03, 0x30, 0x88, 0x88, 0x8d
	db	0x00, 0x3f, 0xfd, 0xff, 0x00, 0xe0
	db	0x00, 0xdd, 0xf4, 0x00, 0x02, 0x08, 0x00, 0x00, 
		0xfe, 0x83, 0x03, 0x08, 0x8d, 0xdd, 0xdd
	db	0x00, 0x3f, 0xfd, 0xff, 0x00, 0xc0
	db	0x04, 0xdd, 0x0b, 0xbb, 0xbb, 0x8b, 0xf8, 0xbb, 
		0x06, 0x8b, 0xbb, 0xb0, 0x38, 0x38, 0x30, 0x88, 
		0xfe, 0xdd
	db	0x00, 0x3f, 0xfd, 0xff, 0x00, 0x80
	db	0x04, 0xdd, 0x0b, 0x33, 0x33, 0x8b, 0xf8, 0x33, 
		0x06, 0x8b, 0x33, 0x30, 0x83, 0x83, 0x08, 0x8d, 
		0xfe, 0xdd
	db	0x00, 0x3f, 0xfd, 0xff, 0x00, 0x00
	db	0x04, 0xdd, 0x0b, 0x33, 0x33, 0x8b, 0xf8, 0x33, 
		0x05, 0x8b, 0x33, 0x33, 0x08, 0x30, 0x88, 0xfd, 
		0xdd
	db	0x00, 0x3f, 0xfe, 0xff, 0x01, 0xfe, 0x00
	db	0x00, 0xdd, 0xfe, 0x00, 0x00, 0x80, 0xf8, 0x00, 
		0x00, 0x80, 0xfd, 0x00, 0x00, 0x8d, 0xfd, 0xdd
	db	0x00, 0x1f, 0xfe, 0xff, 0x01, 0xfc, 0x00
	db	0x03, 0xdd, 0xd0, 0x00, 0x00, 0xf5, 0x88, 0x02, 
		0x80, 0x00, 0x08, 0xfc, 0xdd
		GSEndString
	}
}
end AppSCMonikerResource;
/*
 * Moniker generated from PCX/gpaper.pcx with pixel 13 masked out
 */
start AppSMMonikerResource, data;
visMoniker PrintSMMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 48, 30;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 186
		Bitmap <48,30,0,BMF_MONO>
	db	0x00, 0x01, 0xff, 0xff, 0xf8, 0x00
	db	0x00, 0x02, 0x00, 0x00, 0x1c, 0x00
	db	0x3f, 0xff, 0xff, 0x00, 0x34, 0x00
	db	0x20, 0x00, 0x01, 0x00, 0x6a, 0x00
	db	0x20, 0x00, 0x01, 0x00, 0xd6, 0x00
	db	0x10, 0x00, 0x00, 0x80, 0xa2, 0x00
	db	0x0d, 0x55, 0x55, 0x41, 0x42, 0x00
	db	0x03, 0xaa, 0xaa, 0xa2, 0x82, 0x00
	db	0x00, 0xff, 0xff, 0xfd, 0x06, 0x00
	db	0x00, 0x00, 0xaa, 0xaa, 0x07, 0xf8
	db	0x00, 0x01, 0x55, 0x50, 0x0c, 0x04
	db	0x00, 0x7f, 0xff, 0xff, 0xff, 0x8e
	db	0x00, 0x80, 0x00, 0x00, 0x01, 0x9f
	db	0x01, 0x15, 0x55, 0x55, 0x52, 0xbb
	db	0x02, 0x2a, 0xaa, 0xaa, 0xa4, 0xf7
	db	0x02, 0x55, 0x55, 0x55, 0x45, 0xeb
	db	0x04, 0x00, 0x00, 0x00, 0x0a, 0x77
	db	0x07, 0xff, 0xff, 0xff, 0xfc, 0xeb
	db	0x09, 0x55, 0x55, 0x55, 0x5d, 0xf7
	db	0x12, 0xaa, 0xaa, 0xaa, 0xbd, 0xef
	db	0x20, 0x00, 0x00, 0x00, 0x75, 0xfb
	db	0x2a, 0xaa, 0xbb, 0xee, 0xec, 0xdf
	db	0x25, 0x55, 0x7d, 0xdf, 0x57, 0xbf
	db	0x2a, 0xaa, 0xaa, 0xaa, 0xea, 0xf0
	db	0x3f, 0xff, 0xff, 0xff, 0xd5, 0xe0
	db	0x20, 0x80, 0x00, 0x08, 0x6b, 0xc0
	db	0x25, 0x95, 0x55, 0x59, 0x57, 0x80
	db	0x2a, 0xaa, 0xaa, 0xaa, 0xee, 0x00
	db	0x35, 0xff, 0xff, 0xfd, 0x7c, 0x00
	db	0x1f, 0x7f, 0xff, 0xf7, 0xf8, 0x00
		GSEndString
	}
}
end AppSMMonikerResource;
/*
 * Moniker generated from PCX/gpaper.pcx with pixel 13 masked out
 */
start AppSCGAMonikerResource, data;
visMoniker PrintSCGAMoniker = {
	size = tiny;
	style = icon;
	aspectRatio = verySquished;
	color = gray1;
	cachedSize = 48, 14;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 90
		Bitmap <48,14,0,BMF_MONO>
	db	0x00, 0x00, 0xff, 0xff, 0xe0, 0x00
	db	0x01, 0xff, 0xff, 0xc1, 0xd0, 0x00
	db	0x01, 0xaa, 0xaa, 0xce, 0x10, 0x00
	db	0x00, 0xff, 0xff, 0xf0, 0x3f, 0xf8
	db	0x00, 0x03, 0x00, 0x00, 0x60, 0x34
	db	0x00, 0xff, 0xff, 0xff, 0xf8, 0xc4
	db	0x01, 0x00, 0x00, 0x00, 0x3f, 0x04
	db	0x02, 0xaa, 0xaa, 0xaa, 0xcc, 0x04
	db	0x0f, 0xff, 0xff, 0xff, 0x96, 0x18
	db	0x10, 0x00, 0x00, 0x01, 0x1a, 0x7c
	db	0x1a, 0xa2, 0xab, 0xaa, 0x0d, 0x80
	db	0x15, 0x55, 0x55, 0x77, 0x0e, 0x00
	db	0x1f, 0xff, 0xff, 0xff, 0xb0, 0x00
	db	0x0f, 0xc0, 0x00, 0x0f, 0xc0, 0x00
		GSEndString
	}
}
end AppSCGAMonikerResource;
