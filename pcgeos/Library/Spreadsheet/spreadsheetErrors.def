COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1992 -- All Rights Reserved

PROJECT:	PC/GEOS
MODULE:		GeoCalc
FILE:		spreadsheetErrors.def

AUTHOR:		Gene Anderson, Jul 13, 1992

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	eca	7/13/92		Initial revision

DESCRIPTION:
	FatalErrors for the Spreadsheet library.

	$Id: spreadsheetErrors.def,v 1.1 97/04/07 11:14:50 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

;-----------------------------------------------------------------------------
;		ruler
;-----------------------------------------------------------------------------

if	ERROR_CHECK

RULER_BAD_COLUMN					enum FatalErrors
RULER_BAD_ROW						enum FatalErrors
RULER_ORIGIN_TOO_LARGE					enum FatalErrors
; The ruler origin specified was > 16K, which was unexpected.

endif

;-----------------------------------------------------------------------------
;		controller / UI fatal errors
;-----------------------------------------------------------------------------

if	ERROR_CHECK

CONTROLLER_UTILITY_ROUTINE_MUST_BE_CALLED_FROM_SAME_SEGMENT	enum FatalErrors
; A utility routine was called from a different segment, but it relies on cs
; being useful data and hence can only be called from the same segment.
CONTROLLER_NO_UI_FOR_CONTROLLER					enum FatalErrors
; A controller was called for UPDATE_UI but had no UI to update.

endif

;-----------------------------------------------------------------------------
;		spreadsheet object fatal errors
;-----------------------------------------------------------------------------

if	ERROR_CHECK

STYLE_TOKEN_ARRAY_OVERFLOW				enum FatalErrors
STYLE_TOKEN_ARRAY_BAD_TOKEN				enum FatalErrors
ILLEGAL_CELL_TYPE					enum FatalErrors
; A routine got a cell type it wasn't expecting (ie. something outside
; the CellType enum or something it couldn't / shouldn't handle

ROW_ARRAY_BAD_ROW					enum FatalErrors
ROW_ARRAY_CORRUPTED					enum FatalErrors
; The row or column array has become corrupted.
ILLEGAL_ROW						enum FatalErrors
ILLEGAL_COLUMN						enum FatalErrors
VISIBLE_POSITION_TOO_LARGE				enum FatalErrors
SCROLL_AMOUNT_TOO_LARGE					enum FatalErrors
VALUE_NOT_16_BIT					enum FatalErrors
CELL_NOT_SELECTED					enum FatalErrors
BAD_SELECTION_ROW					enum FatalErrors
BAD_SELECTION_COLUMN					enum FatalErrors
UNORDERED_COORDINATES					enum FatalErrors

CUT_COPY_BAD_DATA_CHAIN_RECORD				enum FatalErrors
CUT_COPY_BAD_DATA_BLOCK					enum FatalErrors
CUT_COPY_BAD_DATA_BLOCK_ENTRY				enum FatalErrors
CUT_COPY_ALREADY_HAVE_A_DATA_BLOCK_LOCKED		enum FatalErrors
CUT_COPY_NO_DATA_BLOCK_TO_UNLOCK			enum FatalErrors
PASTE_TRANS_TBL_CANT_ADD_FORMAT				enum FatalErrors
PASTE_TRANS_TBL_CANT_LOCATE_FORMAT			enum FatalErrors
PASTE_TRANS_TBL_CANT_LOCATE_ENTRY			enum FatalErrors

UNABLE_TO_CREATE_CELL					enum FatalErrors
CELL_SHOULD_NOT_BE_A_NAME_CELL				enum FatalErrors
TEXT_CF_INDEX_RGB_VALUE_MUST_BE_ZERO			enum FatalErrors
BAD_CALLBACK_FOR_EMPTY_CELL				enum FatalErrors
; A callback routine was called with an empty cell, which it was not
; expecting.  Calls to RangeEnum() can either callback for every cell,
; or only for cells with data, and some callbacks specifically handle
; only data cells.

BAD_GS_REF_COUNT					enum FatalErrors

;***

CUT_COPY_BAD_BLOCK_LINKAGE				enum FatalErrors
CUT_COPY_BAD_BLOCK					enum FatalErrors
CUT_COPY_NO_CURRENT_BLOCK				enum FatalErrors
CUT_COPY_BAD_FLAGS					enum FatalErrors
CUT_COPY_CELL_TYPE_UNKNOWN				enum FatalErrors
DATA_CHAIN_HAS_TOO_MANY_ENTRIES				enum FatalErrors
HEADER_BLK_CURRENT					enum FatalErrors

PASTE_ENTRY_COUNT_UNDERFLOW				enum FatalErrors
PASTE_CANT_GET_TOKEN					enum FatalErrors
ROUTINE_USING_BAD_PARAMS				enum FatalErrors

TRANSLATION_TOO_LARGE_JOHN				enum FatalErrors
RANGE_ENUM_ORDER_CHANGED				enum FatalErrors
START_CELL_NOT_ACTIVE_CELL				enum FatalErrors

TOO_MANY_SSCFLAGS_PASSED				enum FatalErrors
DS_SI_NOT_POINTING_TO_SPREADSHEET			enum FatalErrors
RULER_NOT_IN_SAME_BLOCK					enum FatalErrors
UNUSED_STYLE_BITS_NON_ZERO				enum FatalErrors

NO_PARENT_FOR_NON_NAME					enum FatalErrors
DATASIZE_IS_LARGER_THAN_BLOCK_SIZE			enum FatalErrors
PASSED_SEGMENT_HAS_NO_HANDLE				enum FatalErrors
PASSED_SEGMENT_IN_UNLOCKED_BLOCK			enum FatalErrors
PASSED_OFFSET_PAST_END_OF_BLOCK				enum FatalErrors
FUNCTION_MUST_EXIST					enum FatalErrors

NAME_PARAMS_MUST_BE_ON_STACK				enum FatalErrors
; This error occurs when dx!=ss, to make sure that parameters
; are being passed on the stack in the correct manner.

CANNOT_DELETE_CELL_WITH_NON_DEFAULT_STYLES		enum FatalErrors
; A cell with non-default styles was being deleted.  If this is to happen,
; reference count of the style must be decremented first.

CELL_DATA_TOO_LARGE					enum FatalErrors
; AllocCellCommon() was called with data larger than CELL_TEXT_MAX.

ILLEGAL_CELL_TYPE_FOR_ALLOC				enum FatalErrors
; AllocCellCommon() was called with a value outside the CellType enum.

BAD_CELL_ATTRS						enum FatalErrors
; Bad cell attributes were passed to GetCellAttrs().  Either 0 must be
; passed, indicating use the current value or default, or they must be
; passed with:
;	ss:bx - ptr to CellAttrs

BAD_CELL_ATTR_DATA					enum FatalErrors
; A CellAttrs structure that was stored (or about to be stored) in the
; style array has bad data.  Either bad data was passed, or the style
; array has become corrupted, perhaps by memory-trashing.

EMPTY_CELL_ATTR_DATA					enum FatalErrors
; The CellAttrs structure being referred to is empty.  The EC kernel
; fills empty ElementArray entries with 0xcc.  The spreadsheet shouldn't
; ever be pointing to one of these.  It may be the caller has an out-of-date
; style token, or a style token from a different file.

CELL_ATTR_REF_COUNT_ABOVE_10000				enum FatalErrors
; The reference count for a cell attribute is above 10000.  While this
; is entirely possible, it is not very common, so there may be a problem.

MESSAGE_NOT_HANDLED_IN_ENGINE_MODE			enum FatalErrors
; If the spreadsheet is in engine mode, the application or subclass is
; expected to handle mouse and keyboard events.

ACTIVE_CELL_OUTSIDE_SELECTION				enum FatalErrors
; The active cell specified was outside the selection specified.  It must
; be within the bounds of the selection, as it is part of the selection.

TOO_MANY_SSHEET_ROWS					enum FatalErrors
; More rows than the Cell library can handle were passed to
; SpreadsheetInitFile().  It can currently handle up to 16384 rows.

TOO_MANY_SSHEET_COLUMNS					enum FatalErrors
; More columns than the Cell library can handle were passed to
; SpreadsheetInitFile().  It can currently handle up to 256 columns.

ATTEMPTING_TO_ADD_A_NAME_THAT_ALREADY_EXISTS	enum	FatalErrors
REQUESTED_ENTRY_LARGER_THAN_NAME_COUNT		enum	FatalErrors
HOW_ON_EARTH_DID_WE_GET_HERE			enum	FatalErrors
NAMES_ARE_NOT_ALLOWED_IN_A_CELL_RANGE_EDIT	enum	FatalErrors
NAME_DOES_NOT_EXIST				enum	FatalErrors
NAME_IS_TOO_LONG				enum	FatalErrors
DEFINITION_IS_TOO_LONG				enum	FatalErrors
NO_NAME_WAS_FOUND_FOR_THE_TOKEN			enum	FatalErrors
NAME_SHOULD_NOT_ALREADY_EXIST			enum	FatalErrors
NAME_SHOULD_BE_UNDEFINED			enum	FatalErrors
;
; The spreadsheet code expected a name to be undefined and it wasn't.
; This usually indicates an error in the spreadsheet logic, but it could
; also be the result of the name-list being trashed.
;
NAME_SHOULD_BE_DEFINED				enum	FatalErrors
;
; The spreadsheet code expected a name to be defined. Instead it
; was in the name-list but was marked as not having a definition.
; This almost always indicates an error in the spreadsheet code
; or a scribbling bug that has trashed the name-list. Regardless
; it is a bad thing.
;

REQUESTED_ENTRY_IS_TOO_LARGE			enum	FatalErrors
USER_DEFINED_FUNCTIONS_ARE_NOT_HANDLED		enum	FatalErrors
ECT_CELL_BUT_NO_DEPENDENCIES_DOES_NOT_MAKE_SENSE enum	FatalErrors
BAD_CALLBACK_TYPE				enum	FatalErrors
CELL_DOES_NOT_EXIST				enum	FatalErrors
CELL_EXISTS					enum	FatalErrors
CELL_SHOULD_BE_A_FORMULA			enum	FatalErrors
BAD_CELL_TYPE					enum	FatalErrors
; A routine was expecting a specific type of cell, and didn't get it.
; Legal cell types are:
;	CT_TEXT - text string
;	CT_CONSTANT - numeric constant
;	CT_FORMULA - formula
;	CT_NAME - name definition
;	CT_CHART - chart definition
;	CT_EMPTY - dependencies/format only
;	CT_DISPLAY_FORMULA - formula for display only

WE_ONLY_HANDLE_NUMERIC_RESULTS_RIGHT_NOW	enum	FatalErrors
SERIOUS_HORRIBLE_ERROR				enum	FatalErrors
SHOULD_BE_A_FORMULA_CELL			enum	FatalErrors
PARSER_ERROR_NOT_FOUND				enum	FatalErrors
ILLEGAL_RETURN_TYPE				enum	FatalErrors
NO_NULL_BYTE_FOUND_IN_TEXT_CELL			enum	FatalErrors
UNABLE_TO_PARSE_EMPTY_DEFINITION		enum	FatalErrors
NOTE_SHOULD_NOT_BE_ZERO_SIZED			enum	FatalErrors
POINTER_SEGMENT_NOT_SAME_AS_STACK_FRAME		enum	FatalErrors

FORMAT_BAD_ENTRY_SIGNATURE			enum	FatalErrors
FORMAT_BAD_PRE_DEF_TOKEN			enum	FatalErrors
FORMAT_BAD_USER_DEF_TOKEN			enum	FatalErrors
FORMAT_BAD_FORMAT_ARRAY				enum	FatalErrors
FORMAT_BAD_FORMAT_ENTRY				enum	FatalErrors
FORMAT_BAD_FORMAT_LIST				enum	FatalErrors
FORMAT_ASSERTION_FAILED				enum	FatalErrors
HOW_DID_WE_DEFINE_TOO_MANY_NAMES		enum	FatalErrors
APPLICATION_MUST_HANDLE_THIS_FUNCTION		enum	FatalErrors
SPREADSHEET_IS_NOT_THE_FOCUS			enum	FatalErrors
SPREADSHEET_IS_ALREADY_THE_FOCUS		enum	FatalErrors
SPREADSHEET_ROUTINE_USING_BAD_PARAMS		enum	FatalErrors

GRAPHICS_ILLEGAL_JUSTIFICATION				enum FatalErrors

SPREADSHEET_ALREADY_HAS_MOUSE_GRAB				enum FatalErrors
; The spreadsheet object attempted to grab the mouse, but it already has it

SPREADSHEET_DOESNT_HAVE_MOUSE_GRAB				enum FatalErrors
; The spreadsheet attempted to release the mouse, but it doesn't have it grabbed

SPREADSHEET_ILLEGAL_RECALC_FLAGS_IN_CELL			enum FatalErrors
; While recalculating a cell, bad flags were found in the cell data.  The
; most likely cause is that the cell was not initialized correctly.

SPREADSHEET_BAD_PARAMS_TO_FILL_SERIES				enum FatalErrors
; Bad parameters were passed to MSG_SPREADSHEET_FILL_SERIES.

SPREADSHEET_CHART_TOO_LARGE					enum FatalErrors
; The spreadsheet tries to make the chart about 1/4 the screen size.
; Current calculations suggest it should be larger than 65536 points,
; which seems a bad thing.

SPREADSHEET_SCROLL_OFFSET_OFF_DOCUMENT				enum FatalErrors
; The scroll offset for the document has been calculated and is now off
; the document.  This is probably a problem in the track scrolling handler.

SPREADSHEET_NO_CHART_BODY					enum FatalErrors
; MSG_SPREADSHEET_CHART_RANGE was called, but the spreadsheet had never been
; setup up to have a chart body, which is required for charting.

SPREADSHEET_TOO_MANY_CHARS_FOR_TEXT_SCRAP			enum FatalErrors
; The number of characters passed to a routine for generating text transfer
; items from the spreadsheet was passed a value that was too large.

endif

UNABLE_TO_REMOVE_DEPENDENCIES			enum	FatalErrors
UNABLE_TO_ADD_DEPENDENCIES			enum	FatalErrors
UNABLE_TO_CREATE_PRECEDENTS_LIST		enum	FatalErrors
NAME_MUST_EXIST					enum	FatalErrors
;
; The spreadsheet code expected a name to exist, but it was not found
; in the name-list. This almost always indicates a flaw in the logic
; of the spreadsheet code, but it might also indicate that the name-list
; has been trashed unexpectedly.
;
UNEXPECTED_CELL_DATA_TYPE			enum	FatalErrors

PASTE_BAD_TRANS_TABLE				enum	FatalErrors
PASTE_BAD_TRANS_TABLE_ENTRY			enum	FatalErrors

SSHEET_PASTE_ENTRY_TOO_LARGE			enum	FatalErrors
;
; The spreadsheet was retrieving an entry from the clipboard and found
; that the entry was larger than its internal buffer. This means that
; data would be lost from this entry, and that clearly isn't acceptable.
;
; At this point:
;	ds:si	= Pointer to the entry
;	cx	= Size of the entry
;	ss:bp	= SSMetaStruc
;

if ERROR_CHECK

CELL_NAME_BUFFER_ODDSIZED					enum FatalErrors
; The DBCS buffer size for a cell format is an odd size.  Although this
; isn't harmful, it does mean the caller allocated the buffer incorrectly.

CELL_DATA_STRING_ODDSIZE					enum FatalErrors
; RV_TEXT for a cell is odd-sized.  Either the cell is corrupt, or
; a previous string write to the cell didn't store the string/size
; correctly. (DBCS only)

NAME_STRING_ODDSIZE						enum FatalErrors
; While processing MSG_SPREADSHEET_GET_NAME_INFO, a DBCS string turned
; out to be odd-sized, which is bad.  The formula (CF_formulaSize)
; may be at fault.

endif

BAD_WEEKDAY_IN_FILL_BY_WEEKDAY					enum FatalErrors
; A bad weekday was encountered when filling by weekday, ie. a valid date
; let to an invalid weekday.

CELL_ATTR_REF_COUNT_ABOVE_50000				enum Warnings
; The reference count for a cell attribute is above 50000.  While this
; is entirely possible, it is not very common, so there may be a problem.

SPREADSHEET_ORIGIN_NOT_FOUND			enum FatalErrors
; The TEMP_SPREADSHEET_DOC_ORIGIN variable data isn't available, even
; though the flag is set that says it should be.


SPREADSHEET_SCROLL_RETURNING_BAD_OFFSET				enum Warnings
; A track scrolling handler is about to return a non-intregal offset.

