COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1991 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		GeoCalc
FILE:		spreadsheetConstant.def

AUTHOR:		Gene Anderson, Mar  3, 1991

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	eca	3/ 3/91		Initial revision

DESCRIPTION:
	Constants and structures for Spreadsheet object
		
	$Id: spreadsheetConstant.def,v 1.1 97/04/07 11:13:51 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

;-----------------------------------------------------------------------------
;		Global constants
;-----------------------------------------------------------------------------
MAX_CELL_ERROR_STRING_LENGTH	=	16

COLUMN_WIDTH_DEFAULT =	64		; point width measure


ROW_HEIGHT_DEFAULT =	15


ROW_BASELINE_DEFAULT =	11


if PZ_PCGEOS
SPREADSHEET_DEFAULT_FONT	equ	FID_BITSTREAM_KANJI_SQUARE_GOTHIC
else
SPREADSHEET_DEFAULT_FONT	equ	FID_DTC_URW_SANS
endif

SPREADSHEET_DEFAULT_POINTSIZE		equ	12

SBCS<SPREADSHEET_SCRAP_MAX_LENGTH	= 2 * MAX_CELL_TEXT_SIZE	>
DBCS<SPREADSHEET_SCRAP_MAX_LENGTH	= 2 * MAX_CELL_TEXT_SIZE/(size wchar)	>
.assert (SPREADSHEET_SCRAP_MAX_LENGTH-(size CellText)-(size SSMetaEntry)-(size CellCommon) gt MAX_NAME_LENGTH)

CELL_INSET	= 2

;
; Constants for note/header/footer tabs
;
NOTE_TAB_SIZE		= 5
NOTE_TAB_COLOR		= C_RED
HEADER_TAB_COLOR	= C_BLUE
FOOTER_TAB_COLOR	= C_GREEN

DEFAULT_CHART_WIDTH	= 200
DEFAULT_CHART_HEIGHT	= 150
CHART_MARGIN	=	10
; distance of chart from bottom corner of screen

;-----------------------------------------------------------------------------
;		misc constants
;-----------------------------------------------------------------------------

SpreadsheetRowFlags	record
	:15
	SRF_HAS_OVERLAP:1		;TRUE: row has overlaps
SpreadsheetRowFlags	end

;-----------------------------------------------------------------------------
;		Notification Flags
;-----------------------------------------------------------------------------

SpreadsheetNotifyFlags	record
    :2
    ;
    ; These notifications are *not* sent automatically, and are generated
    ; by the application by sending MSG_META_UI_FORCE_CONTROLLER_UPDATE
    ;
    SNF_DATA_RANGE:1		;range of cells with data
    ;
    ; These notifications are sent out automatically by the spreadsheet
    ; when needed
    ;
    ; The format notifications must remain in this order so that the 
    ; list is not initialized (set to indeterminate state) after a 
    ; format is made the current selection. --cah 3/93
    ;
    SNF_FORMAT_CHANGE:1		;number format
    SNF_FORMAT_INIT:1		;number format
    SNF_NAME_CHANGE:1		;names
    SNF_CELL_NOTES:1		;cell notes
    SNF_CELL_ATTRS:1		;cell borders, etc.
    SNF_DOC_ATTRS:1		;header / footer and SpreadsheetDrawFlags
    SNF_CELL_WIDTH_HEIGHT:1	;column width / row height
    SNF_ACTIVE_CELL:1		;active cell (description)
    SNF_SELECTION:1		;selection change
    SNF_EDIT_BAR:1		;edit bar changes
    SNF_JUSTIFICATION:1		;send justification (only paragraph attr)
    SNF_CHAR_ATTR:1		;send character attributes
    SNF_EDIT_ENABLE:1		;enable "Edit" controller
SpreadsheetNotifyFlags	end

;
; The attributes of the selection have changed, but the selection hasn't
;
SNFLAGS_SELECTION_ATTRIBUTES_CHANGE equ \
	mask SNF_CHAR_ATTR or \
	mask SNF_CELL_ATTRS or \
	mask SNF_JUSTIFICATION or \
	mask SNF_CELL_WIDTH_HEIGHT or \
	mask SNF_FORMAT_CHANGE

;
; Format list is being added to or deleted from
;
SNFLAGS_FORMAT_LIST_CHANGE equ \
	mask SNF_FORMAT_INIT or \
	mask SNF_FORMAT_CHANGE

;
; Selection is being extended, but the active cell isn't moving
;
SNFLAGS_SELECTION_ADD equ \
	SNFLAGS_SELECTION_ATTRIBUTES_CHANGE or \
	mask SNF_SELECTION

;
; The active cell's data has changed
;
SNFLAGS_ACTIVE_CELL_DATA_CHANGE equ \
	mask SNF_EDIT_BAR or \
	mask SNF_CELL_NOTES

;
; The active cell is moving within the current selection
;
SNFLAGS_ACTIVE_CELL_MOVE equ \
	SNFLAGS_ACTIVE_CELL_DATA_CHANGE or \
	mask SNF_ACTIVE_CELL

;
; Active cell is moving and the selection is changing
;
SNFLAGS_SELECTION_CHANGE equ \
	SNFLAGS_ACTIVE_CELL_MOVE or \
	SNFLAGS_SELECTION_ADD

;
; The following flags require a SpreadsheetStyleChange block to be
; generated by cycling through the selection
;
SNFLAGS_REQUIRE_SPREADSHEET_NOTIFY_BLOCK equ \
	mask SNF_CHAR_ATTR or \
	mask SNF_JUSTIFICATION or \
	mask SNF_CELL_WIDTH_HEIGHT or \
	mask SNF_CELL_ATTRS or \
	mask SNF_FORMAT_CHANGE

;
; The target document has changed
;
SNFLAGS_DOCUMENT_CHANGED equ \
	mask SpreadsheetNotifyFlags and \
	not (mask SNF_DATA_RANGE)

;-----------------------------------------------------------------------------
;		Structures
;-----------------------------------------------------------------------------

;
; Cell attribute information is collected in this block by running
; through the selection.  It is then used to generate various
; notifications.
;
SpreadsheetStyleChange	struct
	SSC_attrs			CellAttrs
	SSC_styleIndeterminates		TextStyle
	SSC_cellFlags			SpreadsheetCellFlags
	SSC_borderIndeterminates	CellBorderInfo
	SSC_textFlags			VisTextCharAttrFlags
	SSC_rowHeight			word
	SSC_columnWidth			word
	SSC_formatListEntry		word
SpreadsheetStyleChange	ends

;
; Common local variables for cell routines
;
CellLocals	struct
	;
	; Following fields are passed:
	;
	CL_params	RangeEnumParams	;paramters for RangeEnum()
	CL_gstate	hptr.GState	;GState to draw with
	CL_instanceData	fptr		;pointer to Spreadsheet instance
	CL_data1	word		;data for callback
	CL_data2	word		;data for callback
	CL_data3	word		;data for callback
	CL_drawFlags	SpreadsheetDrawFlags
	CL_printFlags	SpreadsheetPrintFlags
	CL_origin	CellReference	;origin for drawing
	CL_columnScale	dword		;amount to scale columns positions by
	;
	; Following fields are used internally:
	;
	CL_styleToken	word		;token ID of cell attrs
	CL_cellAttrs	CellAttrs	;cell attributes
	CL_bounds	Rectangle	;bounds of current cell
	CL_docBounds	RectDWord	;32-bit bounds of range or cell
SBCS<	CL_buffer	char  (MAX_CELL_TEXT_LENGTH+1) dup(?)		>
DBCS<	CL_buffer	wchar (MAX_CELL_TEXT_LENGTH+1) dup(?)		>
	CL_scratch1	FloatNum
	CL_scratch2	FloatNum
	;
	; Used for CellDrawInt() and calculating overlap
	;
	CL_justParams	JustifyTextParams
	CL_justGeneral	Justification
	CL_returnType	ReturnType
CellLocals	ends

;
; The size of the buffer that we parse into and the buffer we use as scratch
; space for the evaluator.
;
SBCS< PARSE_TEXT_BUFFER_SIZE	=	1024				>
DBCS< PARSE_TEXT_BUFFER_SIZE	=	512*(size wchar)		>

VariousParameters	union
    VP_parser		ParserParameters <>
    VP_eval		EvalParameters <>
    VP_format		FormatParameters <>
    VP_depend		DependencyParameters <>
VariousParameters	ends


;
; Structures for use in creating/modifying the cell lists.
;
CellListHeader	struct
    CLH_blockSize	word			; Size of block as allocated
    CLH_endOfData	word			; Size of data in the block
    CLH_prev		hptr.CellListHeader	; Handle of previous block
    CLH_next		hptr.CellListHeader	; Handle of next block
CellListHeader	ends

CellListEntryFlags	record
    ;
    ; This is the general purpose flag that identifies an entry as being part
    ; of a circularity (and therefore needing to be marked with #!CIRC).
    ;
    CLEF_PART_CIRCULARITY:1		; Part of a circularity
    ;
    ; The marker indicates the end of a set of children. It is only useful
    ; in the context of the child list.
    ;
    CLEF_MARKER:1			; This entry is a marker
    :6
CellListEntryFlags	end

CellListEntry	struct
    CLE_row	word			; Row
    CLE_column	byte			; Column
    CLE_flags	CellListEntryFlags	; Flags
CellListEntry	ends

;
; Max size for a cell list block
;
MAX_CELL_LIST_BLOCK_SIZE = size CellListHeader + (100 * size CellListEntry)

;
; Amount to adjust size by when expanding the cell list.
;
CELL_LIST_INCREMENT	=	(300 * size CellListEntry)

RecalcLoopFlags	record
    RLF_CHANGED:1		; Set if computed cell changed.
    RLF_DIVERGED:1		; Set if computed cell differed from it's
				;    old amount by more than SSI_converge.
    RLF_FIRST_CELL:1		; Set if the cell being computed is the first
    :5
RecalcLoopFlags	end

PCT_vars	struct
    ;
    ; A union of all the different parameter structures of the parser library.
    ; Since this structure is used to call all of them, this seemed like a
    ; good idea.
    ;
    PCTV_params		VariousParameters <>
    
    ;
    ; Sometimes this is redundant information (since CP_row/column) may contain
    ; similar information, but in the case of parsing names, this contains
    ; the row/column of the name while CP_row/column contain the context in
    ; which the name should be evaluated.
    ;
    PCTV_row		word
    PCTV_column		word
    
    ;
    ; Flags used in RecalcDependents()
    ;
    PCTV_flags		RecalcLoopFlags
    
    ;
    ; Place to store a flag that gets passed through UpdateNameDependents()
    ; to CellAddRemoveDeps() by AddRemoveCellDependencies().
    ;
    PCTV_addRem		word
    
    ;
    ; Place to store a callback for redrawing a cell.  Used in
    ; RecalcDependents().
    ;
    PCTV_redrawCallback	fptr

    ;
    ; Buffers to parse and evaluate into.
    ;
    PCTV_parseBuffer    byte PARSE_TEXT_BUFFER_SIZE dup (?)
    PCTV_evalBuffer	byte PARSE_TEXT_BUFFER_SIZE dup (?)

    ;
    ; Place to store the C callback and C DSeg for 
    ; SpreadsheetCellAddRemoveDeps() and SpreadsheetRecalcDependents().
    ;
    PCTV_CCallBack	fptr
    PCTV_CCallBack_ds	word

    align	word
PCT_vars	ends

;
; The maximum scale for a spreadsheet being printed.
;
MAX_SPREADSHEET_SCALE	=	LARGEST_POSITIVE_COORDINATE / SS_COLUMN_WIDTH_MAX


;-----------------------------------------------------------------------------
; Local variables for spreadsheet charting		
;-----------------------------------------------------------------------------
 
SpreadsheetChartLocals	struct
		SCL_enum	RangeEnumParams

		SCL_cell	word			
		; cell number of cell to contain chart formula

		SCL_block		hptr.ChartData

		SCL_blockSize	word		
		; Size of the block

		SCL_nextCellPtr	word		
		; Offset to next cellSize entry

		SCL_nextCellData	word		
		; Offset to next cell's data

CHART<		SCL_type	ChartType				>
CHART<		SCL_variation	ChartVariation				>
NOCHART<	SCL_type	byte					>
NOCHART<	SCL_variation	byte					>

		SCL_buffer		char MAX_CELL_TEXT_SIZE dup (?)

SpreadsheetChartLocals	ends

