/***********************************************************************
 *
 *	Copyright (c) GeoWorks 1992 -- All Rights Reserved
 *
 * PROJECT:	PCGEOS
 * MODULE:	uiEditBar.ui
 * FILE:	uiEditBar.ui
 *
 * AUTHOR:  	Gene Anderson: May 11, 1992
 *
 * REVISION HISTORY:
 *	Date	  Name	    Description
 *	----	  ----	    -----------
 *	5/11/92	  gene	    Initial version
 *	11/12/93  witt      DBCS-ized lengths
 *
 * DESCRIPTION:
 *	
 *
 * 	$Id: uiEditBar.ui,v 1.1 97/04/07 11:12:15 newdeal Exp $
 *
 ***********************************************************************/

class EBCEditBar = GenText {
     static byteComp : 0;			/* EBCI_flags */
}


start	EditBarControlUI, notDetachable;

/****************************************************************************
 *	Go to cell DB
 ***************************************************************************/

GotoDB = GenInteraction {
	genStates = default -usable;
	visibility = dialog;
	type = command;
	moniker = 'G', "Go to Cell";
	children =
		GotoDBCellEdit,
		GotoDBCellTrigger;
	hints = {
		ATTR_GEN_HELP_CONTEXT {
			char "dbGotoCell", 0
		}
	}
}


GotoDBCellEdit = GenText {
	moniker = "Cell:";
	textDisplayAttributes =
		singleLineText,
		useTabForNavigation;
	hints = {
		HINT_DEFAULT_FOCUS,
		HINT_TEXT_SELECT_TEXT,
		HINT_FIXED_SIZE {
		    SpecWidth <SST_AVG_CHAR_WIDTHS, MAX_CELL_GOTO_TEXT_LENGTH>
		}
	}
}

GotoDBCellTrigger = GenTrigger {
	moniker = 'G', "Go To";
	action = MSG_SSEBC_GOTO_CELL_DB, "TO_OBJ_BLOCK_OUTPUT";
	hints = {
		HINT_DEFAULT_DEFAULT_ACTION,
		HINT_SEEK_REPLY_BAR
	}
}

end	EditBarControlUI;

start EditBarControlToolUI, notDetachable;

/****************************************************************************
 *	Artwork
 ***************************************************************************/

#include "Art/mkrBackspace.ui"
#include "Art/mkrNumeric.ui"
#include "Art/mkrAlphabetic.ui"

/****************************************************************************
 *	current cell display
 ***************************************************************************/


GotoCellEdit = GenText ignoreDirty {
	genStates = default -usable;
	textDisplayAttributes =
		singleLineText,
		useTabForNavigation;
	hints = {
		HINT_TEXT_SELECT_TEXT,
		HINT_FIXED_SIZE {
		    SpecWidth <SST_AVG_CHAR_WIDTHS, MAX_CELL_GOTO_TEXT_LENGTH>
		}
	}
	applyMsg = MSG_SSEBC_GOTO_CELL;
	destination = "TO_OBJ_BLOCK_OUTPUT";
}

/****************************************************************************
 *	goto cell button
 ***************************************************************************/

GotoCellButton	= GenTrigger {
	moniker = "A1";
	action 	= MSG_SSEBC_INITIATE_GOTO_CELL_DB, "TO_OBJ_BLOCK_OUTPUT";
	genStates = default -usable;
	hints = {
		HINT_FIXED_SIZE {
		    SpecWidth <SST_AVG_CHAR_WIDTHS, MAX_CELL_GOTO_TEXT_LENGTH>
		}
	}
}

/****************************************************************************
 *	edit icons
 ***************************************************************************/

EditIcons = GenInteraction {
	genStates = default -usable;
	children =
		CancelIcon,
		EnterIcon;
	hints = {
		HINT_ORIENT_CHILDREN_HORIZONTALLY,
		HINT_CUSTOM_CHILD_SPACING {
			SpecSizeSpec <SST_PIXELS, 1>
		}
	}
}

CancelIcon = GenTrigger {
#if DO_PIZZA
	moniker = ButtonCancelMoniker;
#else
	moniker = "X";
#endif
	action = MSG_SSEBC_CANCEL_DATA, "TO_OBJ_BLOCK_OUTPUT";
	genStates = default -enabled;
	hints = {
		ATTR_GEN_FOCUS_HELP {
			optr CancelIconHelp
		},
		ATTR_GEN_FOCUS_DISABLED_HELP {
			optr CancelIconDisabledHelp
		}
	}
}

#if DO_PIZZA
visMoniker ButtonCancelMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 15, 15;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 36
		Bitmap <15,15,0,BMF_MONO>
	db	00000000b, 00000000b
	db	01100000b, 00000110b
	db	00110000b, 00001100b
	db	00011000b, 00011000b
	db	00001100b, 00110000b
	db	00000110b, 01100000b
	db	00000011b, 11000000b
	db	00000001b, 10000000b
	db	00000011b, 11000000b
	db	00000110b, 01100000b
	db	00001100b, 00110000b
	db	00011000b, 00011000b
	db	00110000b, 00001100b
	db	01100000b, 00000110b
	db	00000000b, 00000000b
		GSEndString
	}
}
#endif

EnterIcon = GenTrigger {
#if DO_DBCS
	moniker = ButtonEnterMoniker;
#else
	moniker = "\\303";		/* Geos char square root */
#endif
	action = MSG_SSEBC_ENTER_DATA, "TO_OBJ_BLOCK_OUTPUT";
	genStates = default -enabled;
	hints = {
		/* Pass 0 to MSG_SSEBC_ENTER_DATA in BP, since
		   there is no associated keyboard event */
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word 0
			word 0
			word 0
		},
		ATTR_GEN_FOCUS_HELP {
			optr EnterIconHelp
		},
		ATTR_GEN_FOCUS_DISABLED_HELP {
			optr EnterIconDisabledHelp
		}
	}
}

#if DO_DBCS
#if DO_PIZZA
visMoniker ButtonEnterMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 15, 15;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 36
		Bitmap <15,15,0,BMF_MONO>
	db	00000000b, 00000000b
	db	00000000b, 00111100b
	db	00000000b, 01111100b
	db	00000000b, 01100000b
	db	00000000b, 01100000b
	db	00000000b, 01100000b
	db	00000000b, 11000000b
	db	00000000b, 11000000b
	db	00000000b, 11000000b
	db	01110001b, 10000000b
	db	01111001b, 10000000b
	db	00001101b, 10000000b
	db	00000111b, 00000000b
	db	00000011b, 00000000b
	db	00000000b, 00000000b
		GSEndString
	}
}
#else
visMoniker ButtonEnterMoniker = data {
                        /* mnemonic offset */
	byte -1			/* Best is Unicode checkmark 0x2713 */
	wchar C_SQUARE_ROOT, 0	/* All fonts has square root symbol */
}
#endif	/* DO_PIZZA */
#endif	/* DO_DBCS */



/****************************************************************************
 *	the edit bar
 ***************************************************************************/

EditBar = EBCEditBar {
	genStates = default -usable;
	textDisplayAttributes =
		singleLineText,
		allowTextOffEnd;
	maxLength = MAX_CELL_TEXT_LENGTH;
	hints = {
		ATTR_VIS_TEXT_SEND_CONTEXT_NOTIFICATIONS_EVEN_IF_NOT_FOCUSED,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT
	}
}


/****************************************************************************
 *	the backspace button
 ***************************************************************************/

BackspaceButton = GenTrigger {
	moniker = BackspaceMoniker;
	action = MSG_META_KBD_CHAR, EditBar;
	genStates = default -usable,-enabled;
	hints = {
		ATTR_GEN_TRIGGER_ACTION_DATA {
#if DO_DBCS
			word C_SYS_BACKSPACE	/* think Unicode */
#else
			byte C_BS
			byte CS_CONTROL
#endif
			byte mask CF_FIRST_PRESS
			byte 0
			byte 2
			byte 0x0e
		}
	}
}

/****************************************************************************
 *	the mask selector
 ***************************************************************************/

FilterSelector = GenItemGroup {
	children = NumericMask, AlphaNumericMask;
	applyMsg = MSG_VIS_TEXT_SET_FILTER;
	destination = EditBar;
	selection = VTFC_NO_FILTER;
	numSelections = 1;
	genStates = default -usable,-enabled;
}

NumericMask = GenItem {
	moniker = NumericMoniker;
	identifier = VTFC_FLOAT_DECIMAL;
}

AlphaNumericMask = GenItem {
	moniker = AlphabeticMoniker;
	identifier = VTFC_NO_FILTER;
}

end EditBarControlToolUI;


/******************************************************************************
 * Strings for controllers
 *****************************************************************************/

start ControlStrings, data;

chunk EBCName = "Edit Bar";

chunk GotoDBName = "Go to Cell";
chunk GotoCellName = "Go to Cell";
chunk GotoCellButtonName = "Go to Cell (Button)";
chunk EditBarName = "Edit Bar";
chunk EditIconsName = "Edit Icons";
chunk BackspaceButtonName = "Backspace Button";
chunk FilterSelectorName = "Filter Selector";

/* Help strings */

chunk EnterIconHelp = "Accept the changes to the current cell";
chunk EnterIconDisabledHelp = "No changes to accept";

chunk CancelIconHelp = "Cancel the changes to the current cell";
chunk CancelIconDisabledHelp = "No changes to cancel";

end ControlStrings;

