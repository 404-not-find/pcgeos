COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1992 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		
FILE:		prefintl.def

AUTHOR:		Gene Anderson, Aug 25, 1992

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	Gene	8/25/92		Initial revision


DESCRIPTION:
	Definitions for Keyboard module of Preferences
		
	$Id: prefintl.def,v 1.1 97/04/05 01:39:08 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

;-----------------------------------------------------------------------------
;	Exported routines		
;-----------------------------------------------------------------------------
 
PrefIntlCode	segment resource

global PrefIntlGetPrefUITree:far
;
global PrefIntlGetModuleInfo:far

PrefIntlCode	ends


;-----------------------------------------------------------------------------
;	CONSTANTS		
;-----------------------------------------------------------------------------


DATE_FORMAT_GADGET_PAIRS 	= 4
DATE_TOKEN_COUNT		= 13
				
if PZ_PCGEOS
SEPARATOR_TEXT_WIDTH		= 24	;pixels for Kanji + space
else
SEPARATOR_TEXT_WIDTH		= 9     ;pixels
endif
EXAMPLE_TEXT_WIDTH		= 36 	;characters

				
DATE_TOKEN_COUNT		= (size dateTokenTable) / 2
TIME_TOKEN_START		= DATE_TOKEN_COUNT + 1
TIME_TOKEN_COUNT		= (size timeTokenTable) / 2
TOKEN_COUNT			= DATE_TOKEN_COUNT + TIME_TOKEN_COUNT
				
;
; Constants for other settable formats besides time and date, which we'll
; use ourselves.
;
DTF_CURRENCY			enum	DateTimeFormat
DTF_DECIMAL			enum	DateTimeFormat
DTF_QUOTES			enum	DateTimeFormat

	
DateTimeTokens	etype	byte
DTT_BLANK			enum	DateTimeTokens

if PZ_PCGEOS	;Koji
				; Japanese Weekday tokens.
DTT_LONG_WEEKDAY_JP		enum	DateTimeTokens
DTT_SHORT_WEEKDAY_JP		enum	DateTimeTokens
endif

DTT_LONG_WEEKDAY		enum	DateTimeTokens
DTT_SHORT_WEEKDAY		enum	DateTimeTokens
				; Date tokens.
DTT_LONG_DATE			enum	DateTimeTokens
DTT_SHORT_DATE			enum	DateTimeTokens
DTT_ZERO_PADDED_DATE		enum	DateTimeTokens
DTT_SPACE_PADDED_DATE		enum	DateTimeTokens
				; Month tokens.
DTT_LONG_MONTH			enum	DateTimeTokens
DTT_SHORT_MONTH			enum	DateTimeTokens
DTT_NUMERIC_MONTH		enum	DateTimeTokens
DTT_ZERO_PADDED_MONTH		enum	DateTimeTokens
DTT_SPACE_PADDED_MONTH		enum	DateTimeTokens
				; Year tokens.
DTT_LONG_YEAR			enum	DateTimeTokens
DTT_SHORT_YEAR			enum	DateTimeTokens

if PZ_PCGEOS	;Koji
				; Japanese Year tokens.
DTT_LONG_EMPEROR_YEAR_JP	enum	DateTimeTokens
DTT_SHORT_EMPEROR_YEAR_JP	enum	DateTimeTokens
endif
				
DTT_BLANK2			enum	DateTimeTokens
				; AM/PM tokens.
DTT_AM_PM			enum	DateTimeTokens
DTT_AM_PM_ALL_CAPS		enum	DateTimeTokens
				; 12-Hour tokens.
DTT_12HOUR		  	enum	DateTimeTokens
DTT_ZERO_PADDED_12HOUR  	enum	DateTimeTokens
DTT_SPACE_PADDED_12HOUR 	enum	DateTimeTokens
				; 24-Hour tokens.
DTT_24HOUR		  	enum	DateTimeTokens
DTT_ZERO_PADDED_24HOUR  	enum	DateTimeTokens
DTT_SPACE_PADDED_24HOUR 	enum	DateTimeTokens
				; Minute tokens.
DTT_MINUTE		  	enum	DateTimeTokens
DTT_ZERO_PADDED_MINUTE  	enum	DateTimeTokens
DTT_SPACE_PADDED_MINUTE 	enum	DateTimeTokens
				; Second tokens.
DTT_SECOND		  	enum	DateTimeTokens
DTT_ZERO_PADDED_SECOND  	enum	DateTimeTokens
DTT_SPACE_PADDED_SECOND 	enum	DateTimeTokens

;
; Flags which tell what to remove from the main format to come up with to
; produce a spinoff format.
;
FormatAdjustFlags	record
	;must be at end
	FAF_CLEAN_UP_AFTER_THREE_TOKENS:1,
		;Remove any trailing text after processing three tokens.
		;We'll process the fourth token, though.
	FAF_CLEAN_UP_AFTER_FOUR_TOKENS:1,
		;Remove any trailing text after processing four tokens.
	FAF_CLEAN_UP_SPACES_AFTER_FOUR_TOKENS:1,
		;Remove any trailing spaces after processing 
	FAF_REMOVE_LEADING_TEXT:1,
		;Remove text before the first token.  Used for the day, month,
		;weekday, and year formats.
	FAF_USE_FIRST_TOKEN_IN_MINUTES:1,
		;If this is a minutes token, we'll look at the prefix of the
		;main format's first token (the hour) and use that accordingly,
		;to figure out whether zero padding is appropriate or not.
		;If the guy zero or space padded the hour in the HMS format,
		;we'll do the same for minutes in the MS format.
	FAF_CONVERT_TO_24_HOUR:1,
		;Convert any hours to 24 hour time.
	FAF_ZERO_PAD_DATE:1,
		;If set, zero pad any month or day.
	FAF_CONDENSE_DATE:1,	
		;If set, shorten any weekday, month or day.
	FAF_REMOVE_AM_PM:1,
		;If set, remove AM/PM.  If there is any text in FRONT of it,
		;we'll remove that, too.
	FAF_REMOVE_HOURS:1,
		;If set, remove hours.
	FAF_REMOVE_MINUTES:1,
		;If set, remove minutes.
	FAF_REMOVE_SECONDS:1,
		;If set, remove seconds.  We will NOT remove the following
		;text in this case, though, so the endings will be right.
	FAF_REMOVE_DAY:1,
		;If set, remove day.
	FAF_REMOVE_MONTH:1,
		;If set, remove month.
	FAF_REMOVE_YEAR:1,
		;If set, remove year.
	FAF_REMOVE_WEEKDAY:1
		;If set, remove any weekday.
FormatAdjustFlags	end
	


idata	segment
	
; Possible available tokens
;

if PZ_PCGEOS	;Koji
dateTokenTable		byte	\
		TOKEN_LONG_WEEKDAY_JP,		;DTT_LONG_WEEKDAY_JP
		TOKEN_SHORT_WEEKDAY_JP,		;DTT_SHORT_WEEKDAY_JP
		TOKEN_LONG_WEEKDAY, 		;DTT_LONG_WEEKDAY
		TOKEN_SHORT_WEEKDAY,		;DTT_SHORT_WEEKDAY
		TOKEN_LONG_DATE,		;DTT_LONG_DATE
		TOKEN_SHORT_DATE, 		;DTT_SHORT_DATE
		TOKEN_ZERO_PADDED_DATE,		;DTT_ZERO_PADDED_DATE
		TOKEN_SPACE_PADDED_DATE, 	;DTT_SPACE_PADDED_DATE
		TOKEN_LONG_MONTH, 		;DTT_LONG_MONTH
		TOKEN_SHORT_MONTH,		;DTT_SHORT_MONTH
		TOKEN_NUMERIC_MONTH, 		;DTT_NUMERIC_MONTH
		TOKEN_ZERO_PADDED_MONTH,	;DTT_ZERO_PADDED_MONTH
		TOKEN_SPACE_PADDED_MONTH, 	;DTT_SPACE_PADDED_MONTH
		TOKEN_LONG_YEAR,		;DTT_LONG_YEAR
		TOKEN_SHORT_YEAR,		;DTT_SHORT_YEAR
		TOKEN_LONG_EMPEROR_YEAR_JP,	;DDT_LONG_EMPEROR_YEAR_JP
		TOKEN_SHORT_EMPEROR_YEAR_JP	;DDT_SHORT_EMPEROR_YEAR_JP
else
dateTokenTable		byte	\
		TOKEN_LONG_WEEKDAY, 		;DTT_LONG_WEEKDAY
		TOKEN_SHORT_WEEKDAY,		;DTT_SHORT_WEEKDAY
		TOKEN_LONG_DATE,		;DTT_LONG_DATE
		TOKEN_SHORT_DATE, 		;DTT_SHORT_DATE
		TOKEN_ZERO_PADDED_DATE,		;DTT_ZERO_PADDED_DATE
		TOKEN_SPACE_PADDED_DATE, 	;DTT_SPACE_PADDED_DATE
		TOKEN_LONG_MONTH, 		;DTT_LONG_MONTH
		TOKEN_SHORT_MONTH,		;DTT_SHORT_MONTH
		TOKEN_NUMERIC_MONTH, 		;DTT_NUMERIC_MONTH
		TOKEN_ZERO_PADDED_MONTH,	;DTT_ZERO_PADDED_MONTH
		TOKEN_SPACE_PADDED_MONTH, 	;DTT_SPACE_PADDED_MONTH
		TOKEN_LONG_YEAR,		;DTT_LONG_YEAR
		TOKEN_SHORT_YEAR		;DTT_SHORT_YEAR
endif
timeTokenTable		byte 	\
		0, 0,			;space for second blank token
		TOKEN_AM_PM, 
		TOKEN_AM_PM_ALL_CAPS,
		TOKEN_12HOUR, 			;DTT_12HOUR
		TOKEN_ZERO_PADDED_12HOUR, 	;DTT_ZERO_PADDED_12HOUR
		TOKEN_SPACE_PADDED_12HOUR, 	;etc.
		TOKEN_24HOUR, 
		TOKEN_ZERO_PADDED_24HOUR, 
		TOKEN_SPACE_PADDED_24HOUR,
		TOKEN_MINUTE, 
		TOKEN_ZERO_PADDED_MINUTE, 
		TOKEN_SPACE_PADDED_MINUTE, 
		TOKEN_SECOND, 
		TOKEN_ZERO_PADDED_SECOND, 
		TOKEN_SPACE_PADDED_SECOND
			
			
if PZ_PCGEOS	;Koji
longJapaneseValueTable	byte	\
	DTT_LONG_YEAR, DTT_SHORT_EMPEROR_YEAR_JP,	;range 1 of DTF_LONG
	DTT_LONG_MONTH, DTT_SPACE_PADDED_MONTH,		;range 2 of DTF_LONG
	DTT_LONG_DATE, DTT_SPACE_PADDED_DATE,		;range 3 of DTF_LONG
	DTT_LONG_WEEKDAY_JP, DTT_SHORT_WEEKDAY		;range 4 of DTF_LONG

longEnglishValueTable	byte	\
	DTT_LONG_WEEKDAY_JP, DTT_SHORT_WEEKDAY,		;range 1 of DTF_LONG
	DTT_LONG_DATE, DTT_SHORT_EMPEROR_YEAR_JP,	;range 2 of DTF_LONG
	DTT_LONG_DATE, DTT_SHORT_EMPEROR_YEAR_JP,	;range 3 of DTF_LONG
	DTT_LONG_DATE, DTT_SHORT_EMPEROR_YEAR_JP	;range 4 of DTF_LONG

shortValueTable	byte	\
	DTT_LONG_DATE, DTT_SHORT_EMPEROR_YEAR_JP,	;range 1 of DTF_SHORT
	DTT_LONG_DATE, DTT_SHORT_EMPEROR_YEAR_JP,	;range 2 of DTF_SHORT
	DTT_LONG_DATE, DTT_SHORT_EMPEROR_YEAR_JP,	;range 3 of DTF_SHORT
	DTT_BLANK, DTT_BLANK				;range 4 of DTF_SHORT

else
longValueTable	byte	\
	DTT_LONG_WEEKDAY, DTT_SHORT_WEEKDAY,	;range 1 of DTF_LONG
	DTT_LONG_DATE, DTT_SHORT_YEAR,		;range 2 of DTF_LONG
	DTT_LONG_DATE, DTT_SHORT_YEAR,		;range 3 of DTF_LONG
	DTT_LONG_DATE, DTT_SHORT_YEAR		;range 4 of DTF_LONG

shortValueTable	byte	\
	DTT_LONG_DATE, DTT_SHORT_YEAR,		;range 1 of DTF_SHORT
	DTT_LONG_DATE, DTT_SHORT_YEAR,		;range 2 of DTF_SHORT
	DTT_LONG_DATE, DTT_SHORT_YEAR,		;range 3 of DTF_SHORT
	DTT_BLANK, DTT_BLANK			;range 4 of DTF_SHORT
endif

timeValueTable	byte	\
	DTT_12HOUR, DTT_SPACE_PADDED_24HOUR,	;range 1 of DTF_HMS
	DTT_MINUTE, DTT_SPACE_PADDED_MINUTE,	;range 2 of DTF_HMS
	DTT_SECOND, DTT_SPACE_PADDED_SECOND,	;range 3 of DTF_HMS
	DTT_BLANK2, DTT_AM_PM_ALL_CAPS		;range 4 of DTF_HMS
	
;
; This transforms a sequence of flags into one of the eight number formats,
; taking into account several don't-cares.
;
			;Use	Symbol	Neg	Neg
			;Neg	Before  Before	Before
			;Sign	Number	Number	Symbol
			
currFormatTable	 	byte	\
	1,		;0	0	0	0	(199.00$)
	1,		;0	0	0	1	(199.00$)
	1,		;0	0	1	0	(199.00$)
	1,		;0	0	1	1	(199.00$)
	0,		;0	1	0	0	($199.00)
	0,		;0	1	0	1	($199.00)
	0,		;0	1	1	0	($199.00)
	0,		;0	1	1	1	($199.00)
	7,		;1	0	0	0	199.95$-
	6,		;1	0	0	1	199.95-$
	5,		;1	0	1	0	-199.95$
	5,		;1	0	1	1	-199.95$
	4,		;1	1	0	0	$199.95-
	4,		;1	1	0	1	$199.95-
	3,		;1	1	1	0	$-199.95
	2		;1	1	1	1	-$199.95
	
;
; Modification tables.
;
formatModificationTable		FormatAdjustFlags  \
	0,						;DTF_LONG
	mask FAF_CONDENSE_DATE,				;DTF_LONG_CONDENSED
	mask FAF_REMOVE_WEEKDAY,			;DTF_LONG_NO_WEEKDAY
	mask FAF_CONDENSE_DATE or mask FAF_REMOVE_WEEKDAY,
							;DTF_LONG_NO_WKDAY_COND
	0,						;DTF_SHORT
	mask FAF_ZERO_PAD_DATE,				;DTF_ZERO_PADDED_SHORT
	mask FAF_REMOVE_YEAR or mask FAF_CLEAN_UP_AFTER_FOUR_TOKENS,
							;DTF_MD_LONG
	mask FAF_REMOVE_WEEKDAY or mask FAF_REMOVE_YEAR or \
		mask FAF_CLEAN_UP_AFTER_FOUR_TOKENS,	;DTF_MD_LONG_NO_WEEKDAY
	mask FAF_REMOVE_YEAR or mask FAF_REMOVE_WEEKDAY or \
		mask FAF_CLEAN_UP_AFTER_FOUR_TOKENS,	;DTF_MD_SHORT
	mask FAF_REMOVE_WEEKDAY or mask FAF_REMOVE_DAY or \
		mask FAF_CLEAN_UP_AFTER_FOUR_TOKENS,	;DTF_MY_LONG
	mask FAF_REMOVE_WEEKDAY or mask FAF_REMOVE_DAY or \
		mask FAF_CLEAN_UP_AFTER_FOUR_TOKENS,	;DTF_MY_SHORT
	mask FAF_REMOVE_WEEKDAY or mask FAF_REMOVE_DAY or \
		mask FAF_REMOVE_MONTH or mask FAF_CLEAN_UP_AFTER_FOUR_TOKENS or\
		mask FAF_REMOVE_LEADING_TEXT,			;DTF_YEAR
	mask FAF_REMOVE_WEEKDAY or mask FAF_REMOVE_DAY or \
		mask FAF_REMOVE_YEAR or mask FAF_CLEAN_UP_AFTER_FOUR_TOKENS or\
		mask FAF_REMOVE_LEADING_TEXT,			;DTF_MONTH
	mask FAF_REMOVE_WEEKDAY or mask FAF_REMOVE_YEAR or \
		mask FAF_REMOVE_MONTH or mask FAF_CLEAN_UP_AFTER_FOUR_TOKENS or\
		mask FAF_REMOVE_LEADING_TEXT,			;DTF_DAY
	mask FAF_REMOVE_MONTH or mask FAF_REMOVE_DAY or \
		mask FAF_REMOVE_YEAR or mask FAF_CLEAN_UP_AFTER_FOUR_TOKENS or\
		mask FAF_REMOVE_LEADING_TEXT,			;DTF_WEEKDAY
	mask FAF_CLEAN_UP_SPACES_AFTER_FOUR_TOKENS,		;DTF_HMS
	mask FAF_REMOVE_SECONDS or mask FAF_CLEAN_UP_AFTER_THREE_TOKENS or \
		mask FAF_CLEAN_UP_SPACES_AFTER_FOUR_TOKENS,	;DTF_HM
		
	mask FAF_REMOVE_SECONDS or mask FAF_REMOVE_MINUTES or \
		mask FAF_CLEAN_UP_AFTER_THREE_TOKENS or \
		mask FAF_CLEAN_UP_SPACES_AFTER_FOUR_TOKENS,	;DTF_H
	mask FAF_REMOVE_HOURS or mask FAF_REMOVE_AM_PM or \
		mask FAF_CLEAN_UP_AFTER_THREE_TOKENS or \
		mask FAF_CLEAN_UP_AFTER_FOUR_TOKENS or \
		mask FAF_USE_FIRST_TOKEN_IN_MINUTES,	;DTF_MS
	mask FAF_REMOVE_AM_PM or mask FAF_CONVERT_TO_24_HOUR or \
		mask FAF_CLEAN_UP_SPACES_AFTER_FOUR_TOKENS,
							;DTF_HMS_24HOUR
	mask FAF_REMOVE_AM_PM or mask FAF_CONVERT_TO_24_HOUR or \
	     mask FAF_REMOVE_SECONDS or mask FAF_CLEAN_UP_AFTER_THREE_TOKENS \
	     or mask FAF_CLEAN_UP_SPACES_AFTER_FOUR_TOKENS 	;DTF_HM_24HOUR
		
	.assert (DTF_HM_24HOUR eq 20)	;make sure above table stays up-to-date	
	
;
; Formats built out from DTF_LONG:
;
longFormats		byte		\
	DTF_LONG_CONDENSED,  	
	DTF_LONG_NO_WEEKDAY, 	
	DTF_LONG_NO_WEEKDAY_CONDENSED,
	DTF_MD_LONG,
	DTF_MD_LONG_NO_WEEKDAY,
	DTF_MY_LONG,
	DTF_MONTH,
	DTF_WEEKDAY,
	DTF_LONG,		;must be last
	-1
	
;
; Formats built out from DTF_SHORT:
;
shortFormats		byte		\
	DTF_ZERO_PADDED_SHORT,
	DTF_MD_SHORT,
	DTF_MY_SHORT,
	DTF_SHORT,		;must be last
	-1
	
;
; Formats built out from DTF_HMS:
;
timeFormats		byte	\
	DTF_HM,	
	DTF_H,
	DTF_MS,
	DTF_HMS_24HOUR,
	DTF_HM_24HOUR,
	DTF_HMS,		;must be last
	-1
	
otherFormats		byte	\
	0,			;only one item -- this list will be completely
	-1			;   ignored by DoOtherExamples
	
;
; This is our example text for quotes.  We will stuff in the right quote values.
;
if DBCS_PCGEOS
exampleQuoteText	label	wchar
			
exampleQuoteSingleLeft	wchar	" 123"
exampleQuoteSingleRight	wchar	"      "
exampleQuoteDoubleLeft	wchar	" 456"
exampleQuoteDoubleRight	wchar	" "
nullTerminator		wchar	0
else
exampleQuoteText	label	char
			
exampleQuoteSingleLeft	char	" 123"
exampleQuoteSingleRight	char	"      "
exampleQuoteDoubleLeft	char	" 456"
exampleQuoteDoubleRight	char	" "
nullTerminator		char	0
endif

idata	ends

