/**********************************************************************
 *
 *	Copyright (c) Designs in Light 2002 -- All Rights Reserved
 *
 * PROJECT:        Mail	
 * MODULE:	   Mail
 * FILE:	   mime.goc
 * 
 * DESCRIPTION:
 *      Definitions for MIME encoding
 * 
 ****************************************************************************/

#ifndef __MIME_GOH__
#define __MIME_GOH__

#include "buffer.h"

#define MAX_CONTENT_TYPE_PARAM_LEN 1024;
#define NUM_CONTENT_TYPES  12
#define MAX_CONTENT_TYPE_LEN   25

extern char contentTypeArray[NUM_CONTENT_TYPES][MAX_CONTENT_TYPE_LEN];

typedef enum {
    TE_7BIT,
    TE_8BIT,
    TE_BINARY,
    TE_QUOTED_PRINTABLE,
    TE_BASE64,
    TE_UU
} TransferEncoding;

typedef struct {
    MemHandle BSE_boundaryHandle;
    ContentTypeRecord BSE_ctr;
} BoundaryStackElement;

#define NUM_TRANSFER_ENCODING_TYPES 6
#define MAX_TRANSFER_ENCODING_LEN   20
extern char transferEncodingArray[NUM_TRANSFER_ENCODING_TYPES][MAX_TRANSFER_ENCODING_LEN];

extern MailError  _pascal
POP3Mime (char *header, BufferBlock *block, MailMessage *msg);

extern MailError _pascal
GetBody (MailMessage *msg, BufferBlock *block, char *boundary, TransferEncoding te, Boolean *done, ContentTypeRecord *ctr);

extern MailError _pascal
GetAttachment(MailMessage *msg, BufferBlock *block, 
	      ContentTypeRecord *ctr, char *boundary, 
	      TransferEncoding te, Boolean *done);

extern void _pascal
RemoveQuotes (char *data);

extern Boolean _pascal
UpdateProgress (MailMessage *msg, dword *updateTime);

extern char *
FileCreateNewFile (FileHandle *fHan,char  *fileName, MemHandle *mh);

extern void _pascal
GetLine (BufferBlock *block, char *buffer, int *count);

extern void _pascal
DecodeLine (char *line, int *lineLen, TransferEncoding te);

extern void _pascal
AddAttachmentName (MailMessage *msg, char *name);

#endif
