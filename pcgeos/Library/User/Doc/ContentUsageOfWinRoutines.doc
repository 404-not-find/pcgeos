COMMENT @----------------------------------------------------------------------

	Copyright (c) GeoWorks 1992 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		User Interface
FILE:		ContentUsageOfWinRoutines

DESCRIPTION:

	$Id: ContentUsageOfWinRoutines.doc,v 1.2.34.1 97/03/29 03:38:07 canavese Exp $

------------------------------------------------------------------------------@
		  Content usage of Win* Routines
		  ------------------------------

GenView is provided as the UI's version of a "Window" for application use.
Because of this, applications & contents generally do not need to, & in many
cases, should absolutely not, use the PC/GEOS window system functions.
In general, anything which an application or content might need may be
accessed through the METHOD_GEN_VIEW_* methods or the graphic system API
(Those routines starting with Gr*).  The following notes are provided for
those tempted to use the Win* routines on windows created by GenView:

------------------------------------------------------------------------------
Window routines			; NOTES on usage by GenView content
------------------------------------------------------------------------------

export WinAckUpdate		; Use GrStartUpdate/GrEndUpdate routines

export WinInvalReg		; Use GrInval* routines
export WinInvalWhole		; Use GrInval* routines, or METHOD_INVALIDATE

export WinSuspendUpdate		; Use METHOD_GEN_VIEW equivalent
export WinUnSuspendUpdate	; Use METHOD_GEN_VIEW equivalent

export WinGetWinScreenBounds	; OBSCURE -- not generally needed by content,
				; though it wouldn't hurt anything to use it.

export WinGetInfo		; Use METHOD_GEN_VIEW equivalents
export WinSetInfo		; MAY NOT be called by content

export WinTransform	; Use Gr variation
export WinUntransform	; Use Gr variation
export WinTransformDWord	; Use Gr variation
export WinUntransformDWord	; Use Gr variation

export WinGetTransform		; Use Gr variation

export WinApplyRotation		; MAY NOT be called by content
export WinApplyScale		; MAY NOT be called by content
export WinApplyTransform	; MAY NOT be called by content
export WinApplyTranslation	; MAY NOT be called by content 
export WinApplyDWordTranslation	; MAY NOT be called by content
export WinSetTransform		; MAY NOT be called by content
export WinSetNullTransform	; MAY NOT be called by content

export WinOpen			; MAY NOT be called by content
export WinClose			; MAY NOT be called by content
export WinChangePriority	; MAY NOT be called by content
export WinScroll		; MAY NOT be called by content
export WinMove			; MAY NOT be called by content
export WinResize		; MAY NOT be called by content


------------------------------------------------------------------------------
Proposed name changes		; NOTES for Jim
------------------------------------------------------------------------------

; The following require GState's in di, & aren't involved with transformation
; matrices, so they don't have any particular good reason for being window
; routines:

GrBeginUpdate		-> GrStartUpdate
GrEndUpdate		-> GrEndUpdate

------------------------------------------------------------------------------
Proposed Gr/Win changes -- updated 3/92	; NOTES for Jim
------------------------------------------------------------------------------

WinGetMaskBounds & WinGetWinBounds appear to be the last two window system
routines that return info in document coordinates (all others have been moved
to Gr* routines & return graphic coordinates, or modified to return the
simpler window coordinates, based on the theory that it's always possible to
get document coordinate info by using a default GState w/the Gr* routines)
WinGetMaskBounds, in fact, even requires a GState to be passed. 

I could see uses for both Win & Gr versions of these routines, which to me,
anyway, would logically look like:

export WinGetMaskBounds		; Whould return mask bounds in
				; window coordinates, (i.e. it should
				; just pull mask bounds info out
				; of window structure data, & adjust
				; it for window's screen offset)
	As is:  requires GState & returns info in doc coords.  Ugh.  However,
	is a good starting point for GrGetMaskBounds!

export GrGetMaskBounds		; Would take GState, graphics coordinates,
				; & would return carry if mask null OR is the
				; equivalent of null from the caller's
				; 16-bit graphic space vantage point within
				; the 32-bit space.

	Current WinGetMaskBounds comes close to being this routine,
	but has these problems:

	BUG:  Does not return error if graphics space overflow
	      (Perhaps should return carry if NULL mask -OR- if outside of
	       16-bit graphics space ???)

	BUG:  Returns bogus rectangle if matrix rotated


export WinGetWinBounds			; Should return bounds relative to
					; parent window, in WINDOW coordinates

	As is:  returns info in doc coords.  Ugh.  However, may be a good
	starting point for GrGetWinBounds!

export GrGetWinBounds		; Would take GState, graphics coordinates,
				; & would return error if outside of graphics
				; space

	Current WinGetWinBounds comes close, but has these problems:

	BUG:  Does not return error if graphics space overflow
	      (Perhaps we should nuke return of window closing & return
	       overflow error instead -- check w/Chris)

	BUG:  Returns bogus rectangle if matrix rotated


Q:  Do the following work w/gstate or window rotation?

export GrInvalRectDWord
export GrInvalRectDWord
export GrGetMaskBoundsDWord
export GrGetWinBoundsDWord

