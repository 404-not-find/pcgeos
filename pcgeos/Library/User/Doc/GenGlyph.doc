COMMENT `CLASS DESCRIPTION-----------------------------------------------------

			GenGlyphClass

$Id: GenGlyph.doc,v 1.1.34.1 97/03/29 03:37:47 canavese Exp $

Synopsis
--------
	The GenGlyphClass allows simple displaying of VisMonikers 
	by themselves.  This is useful for both putting graphics in a UI area 
	or for putting simple text in an area.  The moniker can be clipped, if 
	desired. GenGlyphs have the advantage (especially over a GenText 
	object) of having very little space overhead.   The data for a 
	GenGlyph is essentially the object's moniker, and is set and 
	manipulated the same as a moniker for any other generic object.

Limitations
-----------
	GenGlyphs are not interactable in any way.  It cannot display
	arbitrarily wrapping text, although if you choose your own size for the
	glyph you can wrap the text any way you want in a graphics string.  
	Choosing fonts and styles for text are also only available via graphics
	string commands in the moniker.  The text and graphics cannot be edited,
	although they can be changed at any time just as you would change any 
	other object's moniker.
    

Alternatives
------------
	You may want to use a GenText object for displaying more complicated 
	text-oriented data.
	      

Implementation Status
---------------------
	Hopefully done as of Jan 1992.

See Also
--------
	GenTextDisplayClass (in Include/Objects/gTDispC.def, genTextDisplay.asm)

;------------------------------------------------------------------------------
;	Description
;------------------------------------------------------------------------------

Terminology
-----------
	moniker -- the graphic and/or text that describes the object.  In the
		   case of the GenGlyph, nothing but the moniker is
		   displayed.  See the discussion on VisMonikers in 
		   genClass.asm.

Relationships/Context
---------------------
	This object can appear under any object that normal generic objects
	as children.

Conceptual Overview
-------------------
	Here is a simple defininition for a GenGlyph:
	
		@object GenGlyphClass OldText = {
		    GI_visMoniker = "Old";
		}

	Defining a visual moniker for a generic object, as well as sending
	messages to change the moniker, is documented under VisMoniker in 
	genClass.asm.

	
GenClass hints available for the GenGlyph
------------------------------------------------
	These hints are discussed in more detail in genC.def.
	
	HINT_CAN_CLIP_MONIKER --
		Allows glyph moniker to be clipped, if there isn't enough
		space for it.  Along with HINT_EXPAND_WIDTH/HEIGHT_TO_FIT,
		allows solid color or repeating graphics glyphs to be used
		as resizable separators, etc.
		
	HINT_EXPAND_WIDTH_TO_FIT_PARENT --
	HINT_EXPAND_HEIGHT_TO_FIT_PARENT --
		Let the glyph expand to fill any width or height available.
		Useful for solid or repeating graphics monikers that can be 
		clipped.
		
	HINT_FIXED_SIZE --
	HINT_INITIAL_SIZE -- 
	HINT_MINIMUM_SIZE --
		Force some size behavior on the glyph, regardless of moniker.
		
	HINT_SEEK_X_SCROLLER_AREA
	HINT_SEEK_Y_SCROLLER_AREA	
	HINT_SEEK_LEFT_OF_VIEW		
	HINT_SEEK_TOP_OF_VIEW		
	HINT_SEEK_RIGHT_OF_VIEW		
	HINT_SEEK_BOTTOM_OF_VIEW -- 
		For glyphs under a GenView, locate in a certain place.
		
	HINT_SHOW_ENTIRE_MONIKER --
		Forces glyph to size itself large enough to display its entire
		moniker.
		
Warnings
--------

See Also
--------
	GenClass (in Include/Objects/genC.def, genClass.asm)

;------------------------------------------------------------------------------
;	Assembling & Debugging
;------------------------------------------------------------------------------

Sample Code/Programming Tips
----------------------------

Include Files Needed
--------------------

Assembly Tips
-------------

Debugging Tools & Tips
----------------------

See Also
--------
	See Appl/SDK_C/Glyph/glyph.goc --
		A very simple example of the GenGlyph object.

;------------------------------------------------------------------------------
;	Implementation Notes
;------------------------------------------------------------------------------

;------------------------------------------------------------------------------
;	Most frequently asked questions
;------------------------------------------------------------------------------

;------------------------------------------------------------------------------
;	Inheritance
;------------------------------------------------------------------------------

< Add entries for every superclass, including instance data, methods & hints,
  & then document how they are used within this object.   Example: >

<Note to uigroup:

	Let's hold off on documenting changes from standard behavior in
	this section for classes we've not yet reviewed, i.e.  we've not
	reviewed GenClass yet, so let's not actually do the type of
	documentation listed below just yet -- Doug >

From GenClass:
-------------

<List hints here, explain how, if at all they pertain to this object>


Imported Messages Handled
-------------------------

<List any imported messages handled by this class or its superclasses.>


------------------------------------------------------------------------------`
