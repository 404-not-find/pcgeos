COMMENT @----------------------------------------------------------------------

	Copyright (c) GeoWorks 1992 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		User Interface
FILE:		GCNListNode.doc

DESCRIPTION:

	$Id: GCNListNode.doc,v 1.2.34.1 97/03/29 03:37:36 canavese Exp $

------------------------------------------------------------------------------@

The system provides these classes which support object-based GCN lists:
	MetaClass
	GenApplicationClass
	VisContentClass

Any other classes that add GCN list support must remember to free the GCN lists
when the object is freed and handle (un)relocation of the GCN lists when the
object is (un)relocated.

Freeing
-------
When an object is freed, any GCN lists stored with that object should also be
freed.

For example, FooClass, which supports some GCN list types that are stored with
TEMP_META_GCN vardata (this would be case for any GCN lists accessed by the
MSG_META_GCN_LIST_{ADD,REMOVE,SEND} messages) would look like this:

FooFinalObjFree	method	FooClass, MSG_META_FINAL_OBJ_FREE
	;
	; Free GCN list of lists chunk, & list chunks, if in use here
	;
	mov	ax, MSG_META_GCN_LIST_DESTROY
	call	ObjCallInstanceNoLock
	;
	; let superclass finish up
	;
	mov	ax, MSG_META_FINAL_OBJ_FREE
	mov	di, offset FooClass
	call	ObjCallSuperNoLock
	ret
FooFinalObjFree	endm

MSG_META_GCN_LIST_DESTROY frees all the chunks used to store the GCN lists
in the TEMP_META_GCN vardata and the TEMP_META_GCN vardata itself.


Saving to State/(Un)Relocation
------------------------------
Object-based GCN lists are marked as being saved to state file if they are
defined in a .ui/.goc file with the "gcnList" syntax or if a new GCN list is
created with MSG_META_GCN_LIST_ADD and the GCNLTF_SAVE_TO_STATE flag is passed
with the list type.

Other GCN lists managed by the application may also be saved to state.

In either case, in order for a GCN list can be saved, the optrs on the list
must be unrelocated.  This is done with the GCNListUnRelocateBlock and
GCNListUnRelocateList routines.  When restoring a GCN list from state, the optrs
on the list must be relocated.  GCNListRelocateBlock and GCNListRelocateList
do this.

The system-provided classes that support GCN lists (GenApplicationClass,
MetaClass, and VisContentClass) do this relocation and unrelocation work
automatically.  Any other classes that wish to support object-based GCN lists
that can be saved to state, or any general GCN lists that can be saved
to state must manaully relocate and unrelocate by using these routines.

Multiple GCN lists managed by a list of lists can use GCNListRelocateBlock and
GCNListUnRelocateBlock.  Single GCN lists can use GCNListRelocateList and
GCNListUnRelocateList.

For example, the relocation handler FooClass, which supports some GCN list
types that are stored with TEMP_META_GCN vardata (this would be case for any
GCN lists accessed by the MSG_META_GCN_LIST_{ADD,REMOVE,SEND} messages) would
look like this:

FooRelocOrUnReloc	method	FooClass, reloc
	cmp	ax, MSG_META_RELOCATE
	je	reloc
	;
	; unrelocate any GCN lists (will do all GCN lists stored in
	; TEMP_META_GCN even non-FGCNLT types.  This is okay as other classes
	; that do this will check if it is necessary before unrelocating.)
	;
	mov	ax, TEMP_META_GCN
	call	ObjVarFindData			; get ptr to TempGenAppGCNList
	jnc	done
	test	ds:[bx].TMGCND_flags, mask TMGCNF_RELOCATED
	jz	done				; already unrelocated
						; indicate unrelocated
	andnf	ds:[bx].TMGCND_flags, not mask TMGCNF_RELOCATED
	mov	di, ds:[bx].TMGCND_listOfLists	; get list of lists
	mov	dx, ds:[LMBH_handle]
	call	GCNListUnRelocateBlock		; unrelocate all the lists we've
						;	been using
	jnc	done				; lists saved to state, leave
						;	var data element
	mov	ax, TEMP_META_GCN
	call	ObjVarDeleteData		; else, remove var data element
	jmp	short done

reloc:
	;
	; relocate any GCN lists (will do all GCN lists stored in TEMP_META_GCN
	; even non-FGCNLT types.  This is okay as other classes that do this
	; will check if it is necessary before relocating.)
	;
	mov	ax, TEMP_META_GCN
	call	ObjVarFindData			; get ptr to TempGenAppGCNList
	jnc	done
	test	ds:[bx].TMGCND_flags, mask TMGCNF_RELOCATED
	jnz	done				; already relocated
						; indicate relocated
	ornf	ds:[bx].TMGCND_flags, mask TMGCNF_RELOCATED
	mov	di, ds:[bx].TMGCND_listOfLists	; get list of lists
	mov	dx, ds:[LMBH_handle]
	call	GCNListRelocateBlock		; relocate all the lists we've
						;	been using

done:
	GOTO	ObjRelocOrUnRelocSuper
FooRelocOrUnReloc	endm

Note that the TMGCNF_RELOCATED indicates that the list has been relocated
already.  This is necessary as superclass and subclass may also have GCN
list types and may also do this (un)relocation work.  We must be sure that
the list is relocated or unrelocated only once per object, regardless of the
number of class levels.

Note also that GCNListUnRelocateBlock returns carry set if there are no
individual lists in the list of lists that need to be saved.  In this case,
the list of lists chunk will have been freed by GCNListUnRelocateBlock, so
the TEMP_META_GCN vardata should be deleted.

As with any ", reloc" handler, ObjRelocOrUnRelocSuper should be called to
finish up.
