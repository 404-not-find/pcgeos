COMMENT @----------------------------------------------------------------------

	Copyright (c) GeoWorks 1992 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		User Interface
FILE:		V1.0_to_V2.0_conversion

DESCRIPTION:	Guide to UI changes from V1.0 to V2.0

	$Id: V1.0_to_V2.0_conversion.doc,v 1.6.34.1 97/03/29 03:37:23 canavese Exp $

------------------------------------------------------------------------------@

Visible Object Library
----------------------
        * Nuked METHOD_VUP_CREATE_CALC_GSTATE, & METHOD_VUP_CREATE_DRAW_GSTATE.

          In their place is METHOD_VUP_CREATE_GSTATE, which works as the
          old METHOD_VUP_CREATE_DRAW_GSTATE was documented -- it always returns
          a GState, even if the object is not realized, in which case the
          GState points to a null window.

        * Added METHOD_FIND_VIS_PARENT, & handler, to VisClass

Window System
-------------
          Nuked the unused routine WinBitBlt (Use WinScroll or GrBitBlt instead)

          Changed WinInvalWhole to not be exported by the kernel
          (It required a locked window to be passed)

          Added EC code to GrBeginUpdate to ensure that a GSTATE is passed,
          & not a Window.

	  WinScroll -- X, Y parameters are RELATIVE only (Will no longer take
	  absolute values)

Object System
-------------
        * Fixed ObjCompFindChild (& therefore METHOD_FIND_GEN_CHILD &
	   METHOD_FIND_VIS_CHILD) so that it correctly returns the number of
	   children in bp in the case that a child # is passed, & the object
	   does not have that many children.  Also documented the actual,
	   more interesting cx, dx return values, in cases where they were
	   previously documented as being destroyed.


Pointer Images
--------------

	 * All methods relating the screen saver have been moved from the
	   Flow object to the Input Manager (a kernel process).  See
	   "ScreenSaver" documentation.

	 * Pointer image changes:
		 - FlowSetPtrImage no longer exits.  Use ImSetPtrImage directly
		   (To do so, you will need to include im.def)
		 - changed API for all of:
			 ImSetPtrImage
			 METHOD_PTR return case ax = mask MRF_SET_POINTER_IMAGE
			 METHOD_GEN_VIEW_SET_PTR_IMAGE
		   to require cx:dx to be an optr to a PointerDef in a sharable
		   local memory block, (used to be far ptr to PointerDef in
		   fixed memory).  Also, now takes a parameter in bp.

 Quick Transfer
 --------------

	 * Mechanism is completely updated, see "Quick Transfer" documentation.
	   ( name changes and new routines:
		 FlowStartQuickTransfer -> UserStartQuickTransfer
		 new routine -> UserStartQuickTransferStatus
		 new routine -> UserSetQuickTransferCursor
		 FlowEndQuickTransfer -> UserEndQuickTransfer
		 FlowAbortQuickTransfer -> UserAbortQuickTransfer
		 new routine -> UserClearQuickTransferNotification
		 new routine -> UserHandleEndMoveCopy
		 FlowStartQuickRegionStruct -> StartQuickRegionStruct
		 FSQRS_* -> SQRS_*
		 FlowQuickTransferFlags -> QuickTransferFlags
		 FQTF_* -> QTF_* )

 Clipboard
 ---------

	 * TransferItemCommon and TransferItemFinished structures combined into
	   TransferItemHeader.

	 * TIH_sourceID field added for additional identification of source
	   of clipboard item (useful for determining default quick-transfer
	   move/copy behavior).  Defined to be OD of "source document".
	   Currently, only OD of document object for write text objects.

	 * UserGetTransferItemInfo routine to get TIH_sourceID field.

	 * TIH_handles and TIH_formats field combined into new TIH_formats
	   field.  New TransferFormatInfo structure for each format.

	 * Change format identifier from single word (TransferItemFormat) to
	   two words -- a manufacturer ID and a manufacturer-specific format
	   type (TransferFormatID).  TransferItemFormat is retained as the
	   available MANUFACTURER_ID_GEOWORKS format types.

	 * UserQueryTransfer changed to not return list of formats.

	 * UserTestTransferFormat added to check for existence of single format.

	 * UserEnumTransferFormats added to return full list of formats.

	 * UserRequestTransfer changed to take new format identifier.

	 * Addition of TIH_reserved and TFI_renderer for future usage.

 File Selector
 -------------

	 * Old FileSelectorAttributes are now seperated into
	   FileSelectorAttributes, FileSelectorFileTypes, and
	   FileSelectorFileCritera.  Added new methods to get and set new,
	   associated instance data fields.  (attributes -> attributes,
	   fileTypes, fileCriteria in .ui files) (attribute names also changed
	   slightly)

	 * The selection # in GenFileSelectorEntryFlags sent to the OD of
	   the action descriptor and returned from
	   METHOD_FILE_SELECTOR_GET_SELECTION has been broken out.  For the
	   action descriptor, cx:dx no longer contains the OD of the file
	   selector, instead cx is the selection #.  For
	   METHOD_FILE_SELECTOR_GET_SELECTION, the new return value, ax,
	   contains the entry #.

	 * GenFileSelectorEntryFlags has a new GFSEF_ERROR flag that indicates
	   that an error occured during the previous attempt at building the
	   file list.

	 * Add METHOD_FILE_SELECTOR_SUSPEND and METHOD_FILE_SELECTOR_END_SUSPEND
	   to allow setting multiple attributes without causing file list to
	   be rescanned and redrawn each time.

	 * Miscellaneous instance data name changes:  GFSI_AD -> GFSI_action,
	   FSC_attrs -> FSC_attributes, FSC_dosAttrs -> FSC_dosAttributes

File Selector (9/13/91)
-----------------------
- remove do-nothing 'subdir' field in 'dosAttrs' flags, directories are
	controlled exclusively by 'fileType' flags

- change MSG_GEN_FILE_SELECTOR_END_SUSPEND to rescan automatically, instead
	of requiring a seperate MSG__GEN_FILE_SELECTOR_RESCAN

- support MSG_GEN_BRANCH_REPLACE_PARAMS(BRPT_OUTPUT_OPTR) in GenFileSelector
	to facilitate copying UI templates containing GenFileSelectors

Document Control
----------------

	 * Corresponding changes to FileSelectorAttributes as in File Selector.
	   (fileAttributes -> fileAttributes, fileTypes, fileCriteria in .ui
	   files)

FileEnum
--------

	 * FileEnumFileTypes is simplified.

GenView
-------
	 * Lots of new documentation in genView.asm.

	 * Now uses a document bounds (left/top/right/bottom)

	 * Document bounds, increment values now sdwords

	 * Many changes to METHOD_NORMALIZE_POSITION.
		METHOD_NORMALIZE_POSITION -> MSG_META_CONTENT_TRACK_SCROLLING
		NormalizePositionArgs -> TrackScrollingParams
		NPA_xChange -> TSP_change.PD_x (word -> sdword)
		NPA_yChange -> TSP_change.PD_y (word -> sdword)

	 * METHOD_SET_DOC_SIZE, METHOD_GET/SET_INCREMENT, METHOD_ORIGIN_CHANGED,
	   METHOD_SET/GET_SMALL_SUBVIEW_ORIGIN, METHOD_SCROLL,
	   METHOD_SCROLL_INTO_SUBVIEW (now MAKE_RECT_VISIBLE) all changed
	   substantially, no longer passing values in registers.

	 * METHOD_SET_DOC_SIZE -> MSG_GEN_VIEW_SET_DOC_BOUNDS

	 * Lots of other method name changes, usually be METHOD_GEN_VIEW_...
	   Methods sent to content now METHOD_CONTENT_...

	 * Some subtle instance data name changes

	 * Added some methods:  METHOD_GEN_VIEW_SUSPEND_UPDATE, METHOD_GEN_VIEW_
	   UNSUSPEND_UPDATE, METHOD_CONTENT_VIEW_SCALE_CHANGED,
	   METHOD_GEN_VIEW_GET_VISIBLE_RECT, METHOD_GEN_VIEW_CALC_WIN_SIZE,
	   METHOD_GEN_VIEW_SET_DRAG_BOUNDS.   See genView.asm for details.

	 * Can now place scrollbars wherever you want.  Other generic objects
	   can be placed next to scrollbars, if desired.

	 * vert/horizOpenSize, vert/horizMinSize gone away, replaced by
	   HINT_MINIMUM_SIZE, HINT_MAXIMUM_SIZE, HINT_FIXED_SIZE, HINT_INITIAL_
	   SIZE.

	 * Mouse methods are passed as an offset from the view window, rather
	   than in doc coords, for the large document model.  

	 * Vis objects under a content, currently by default when they do
	   a VisGrabMouse send a METHOD_VUP_SET_MOUSE_INTERACTION_BOUNDS upwards,
	   which eventually is used to set the drag bounds of the view.


Generic world changes to Geometry Manager
-----------------------------------------
	Here are instructions for how to make a lot of the hint changes
	automatically:

	Lock out .ui files

	Do this:
	alias change 'cat \!$ | sed -f /staff/pcgeos/chris/geo.sed >\! /tmp/out; cp \!$ \!$~; cp /tmp/out \!$'

	On each file, do "change <file>"
	Go into each resulting file, and search for HINT_EXPAND. For each object
	for which the string is found in:

		Change any
			HINT_FULL_JUSTIFY_CHILDREN_VERTICALLY_INCLUDING_ENDS
		to 
			HINT_FULL_JUSTIFY_CHILDREN_VERTICALLY,
			HINT_INCLUDE_ENDS_IN_CHILD_SPACING

		Determine the object's orientation (I recommend explicitely 
			putting in a HINT_ORIENT_CHILDREN_HORIZONTALLY or 
			HINT_ORIENT_CHILDREN_VERTICALLY if there isn't one, 
			since in almost all cases you want the orientation to 
			be a certain way.)  I believe that GenInteractions
			are vertical by default, GenLists horizontal.  Anyway,
			you should know since you wrote it.

		If vertically oriented, you're done
		Else if horizontally oriented:

			Change HINT_EXPAND_HEIGHT_TO_FIT_PARENT 
			to     HINT_EXPAND_WIDTH_TO_FIT_PARENT
	
			Change HINT_EXPAND_WIDTH_TO_FIT_PARENT 
			to     HINT_EXPAND_HEIGHT_TO_FIT_PARENT

			Change HINT_FULL_JUSTIFY_CHILDREN_VERTICALLY,
			to     HINT_FULL_JUSTIFY_CHILDREN_HORIZONTALLY,

	Make sure you don't make two passes on the same file, or you'll undo
		some of what you've done, and be totally lost.
		

	Here is what has changed:

	HINT_ORIENT_VERTICALLY now HINT_ORIENT_CHILDREN_VERTICALLY
	HINT_ORIENT_HORIZONTALLY now HINT_ORIENT_CHILDREN_HORIZONTALLY

	HINT_BOTTOM_JUSTIFY now HINT_BOTTOM_JUSTIFY_CHILDREN
	HINT_TOP_JUSTIFY now HINT_TOP_JUSTIFY_CHILDREN
	HINT_LEFT_JUSTIFY now HINT_LEFT_JUSTIFY_CHILDREN
	HINT_RIGHT_JUSTIFY now HINT_RIGHT_JUSTIFY_CHILDREN
	HINT_CENTER_HORIZONTALLY now HINT_CENTER_CHILDREN_HORIZONTALLY
	HINT_CENTER_VERTICALLY now HINT_CENTER_CHILDREN_VERTICALLY
	HINT_CENTER_ON_MONIKERS now HINT_CENTER_CHILDREN_ON_MONIKERS

	HINT_EXPAND_TO_FIT, which used to direct a composite to expand
	to fit its parent in the orientation direction and HINT_EXPAND_
	WIDTH_TO_FIT, which directed a composite to expand in the 
	direction opposite its orientation, are gone.  The new hints
	are not orientation specific, and are called HINT_EXPAND_WIDTH_
	TO_FIT_PARENT and HINT_EXPAND_HEIGHT_TO_FIT_PARENT.  Similarly,
	HINT_CAN_CHOP_LENGTH and HINT_CAN_CHOP_HEIGHT are replaced by
	HINT_CAN_TRUNCATE_{WIDTH/HEIGHT}_TO_FIT_PARENT.   See information
	below for easily converting your existing V1.2 .ui files.

	HINT_FULL_JUSTIFY now HINT_FULL_JUSTIFY_CHILDREN_VERTICALLY or 
	HINT_FULL_JUSTIFY_CHILDREN_HORIZONTALLY, depending on the orientation
	of the object the hint works on.

	HINT_SET_DESIRED_SIZE is gone.
	It is replaced by HINT_FIXED_SIZE, HINT_MINIMUM_SIZE,
	HINT_MAXIMUM_SIZE, and HINT_INITIAL_SIZE.  The old hint had 3 arguments:
	number of children, desired height of one child, and total desired 
	width.  The new hint can have 2 or 3 arguments, depending on whether the
	object is a composite or not:  total width, total height, and number
	of children.  The new hints should work on any generic object.

	HINT_ALLOW_WRAPPING now HINT_ALLOW_CHILDREN_TO_WRAP
	HINT_NO_WRAPPING now HINT_DONT_ALLOW_CHILDREN_TO_WRAP

	HINT_USE_SPACING_ON_ENDS now HINT_INCLUDE_ENDS_IN_CHILD_SPACING
	There's also a HINT_DONT_INCLUDE_ENDS_IN_CHILD_SPACING

	HINT_CENTER_MONIKER added to allow centering of a composite's moniker
	when used in conjunction with HINT_PLACE_MONIKER_ABOVE.  The default
	action is now to left justify the moniker when placed above.

	HINT_LEFT_JUSTIFY_MONIKERS, added to allow a variation on HINT_CENTER_
	CHILDREN_ON_MONIKERS.  Monikers will be left justified when this hint
	is used, rather than the normal right justification.

	HINT_CUSTOM_CHILD_SPACING added to set custom spacing.  It takes
	one argument of type SpecSizeSpec, for suggestions on a spacing
	amount to use.  HINT_MINIMIZE_SPACING is gone, and should be
	replaced with:

		HINT_CUSTOM_CHILD_SPACING {
			SpecSizeSpec <SST_PIXELS, 1>
		}
	
	HINT_WRAP_AFTER_CHILD_COUNT add to allow forced wrapping after a certain
	number of children, defined as a word in the hint.


Vis world changes to Geometry Manager
-------------------------------------
	* Name changes to VisGeoFlags, GeoFlags, JustFlags instance data in
	  the visual world.  Likewise, VGF_* flags changed to VGA_*. 

	* Other changes to VisGeoFlags:
		VGF_NEVER_DIFFERENT_THAN_CURRENT is now VGA_ONLY_CALC_SIZE_WHEN_
		INVALID.

		VGF_UPDATE_USING_DESIRED_SIZE is gone.
		
		VGF_ALWAYS_SEND_SIZE_MESSAGE now VGA_ALWAYS_CALC_SIZE.

	* Other changes to GeoFlags and JustFlags:
		GF_EXPAND_TO_FIT, which used to direct a composite to expand
		to fit its parent in the orientation direction and GF_EXPAND_
		WIDTH_TO_FIT, which directed a composite to expand in the 
		direction opposite its orientation, are gone.  The new flags
		are not orientation specific, and are called GDA_EXPAND_WIDTH_
		TO_FIT_PARENT and GDA_EXPAND_HEIGHT_TO_FIT_PARENT.  Similarly,
		GF_CAN_CHOP_LENGTH and GF_CAN_CHOP_HEIGHT are replaced by
		GDA_CAN_TRUNCATE_{WIDTH/HEIGHT}_TO_FIT_PARENT.  These flags
		are all in GeoDimensionAttrs, which replaces JustFlags.

		Justification flags have changed to be enumerated types
		in GeoDimensionFlags, with new, orientation-specific names
		such as WJ_LEFT_JUSTIFY_CHILDREN, HJ_BOTTOM_JUSTIFY_CHILDREN,
		etc.
			
		GF_WRAPPING now GA_ALLOW_CHILDREN_TO_WRAP.

		GF_VERTICAL now GA_ORIENT_CHILDREN_VERTICALLY.
	
		GF_DONT_MANAGE now GA_CUSTOM_MANAGE_CHILDREN

		JF_HAS_MIN_SIZE now GA_HAS_MINIMUM_SIZE

		GF_ONE_PASS now GA_ONE_PASS_OPTIMIZATION
		
		JF_USE_SPACING_ON_ENDS now GA_INCLUDE_ENDS_IN_CHILD_SPACING

	* GA_WRAP_AFTER_CHILD_COUNT now directs the geometry manager to get a
	  child count from the composite, via a METHOD_VIS_COMP_GET_CHILD_
	  WRAP_COUNT.  It will wrap children after this count.

	* DESIRED_DIMENSION becomes "mask CSA_CHOOSE_OWN_SIZE." CSA_SUGGESTED_
	  SIZE added for the low 15 bits.  OPTIONALLY_RESIZE goes away, is no
	  longer used.  HINT_FORCE_WIDTHS and GF_FORCE_WIDTHS are gone as well,
	  applications should remove this hint from their composite and make
	  their children expand to fit as appropriate.

Geometry changes to various generic objects
-------------------------------------------

	GenTextDisplay and GenText
	------------------------------

	SINGLE_LINE_VALUES is no longer used. 

	SINGLE_LINE_EDIT_ATTRIBUTES has fewer attributes set.
	Lots of geometry-related text attributes are gone.  It's probably
	better to put the three attributes in to make your code more readable.

	If your text object had a desiredWidth and/or a desired height,
	you will want to replace them with something like:

	hints = {
		  HINT_FIXED_SIZE {
			SpecWidth <SST_AVG_CHAR_WIDTHS, 60>
			SpecHeight <SST_LINES_OF_TEXT, 6>
		  }
	}

	The width or height can be left blank (especially the height in a 
	single line text object.  You can also use SST_PIXELS instead,
	or one of the other more bizarre desired size arguments.

	If you want your text object to expand to the right edge of your
	dialog box (or the parent of the text object), add a HINT_EXPAND_WIDTH_
	TO_FIT_PARENT.

	GenList
	-------

	A scrolling list, when no desired size is specified, will default to
	5 lines high and whatever width is needed for the entries (except in
	the case of a dynamic list, which defaults to 25 characters.)  

	You can now put HINT_EXPAND_WIDTH_TO_FIT_PARENT if
	you want your scrolling list to use all of your dialog box.  
	HINT_EXPAND_HEIGHT_TO_FIT_PARENT is also available.

	GenFileSelector
	---------------
	
	HINT_FILE_NAME_WIDTH and HINT_FILE_NUM_ENTRIES (or whatever they were)
	are gone.  You now can specify a desired size hint and it will be used
	by the scrolling list.  HINT_DEFAULT_FOCUS is now specified by
	the user rather than always applied to the list.


Massive method name changes
---------------------------

	It's time to change all of the method names in your application.
	Create the following two aliases:

	alias lockemall 'cdi; lockEm *.asm *.def *.gp *.ui *.uih *.temp *.tcl *.goc *.goh */*.asm */*.def */*.gp */*.ui */*.uih */*.temp */*.tcl */*.goc */*.goh; cdi'

	alias changemall 'changeEm *.asm *.def *.gp *.ui *.uih *.temp *.tcl *.goc *.goh */*.asm */*.def */*.gp */*.ui */*.uih */*.temp */*.tcl */*.goc */*.goh'

	lockEm and changeEm are shell scripts in /usr/public.  In your local
	tree, check all your application files out by typing "lockemall,"  then
	convert them to 2.0 using "changemall".

	You can use the shell command "whatis" to see what changed.  For 
	instance typing "whatis METHOD_DRAW will return "MSG_VIS_DRAW."

	Here is the complete list of changes:

	s/VisualMoniker/VisMoniker/g
	s/METHOD_SPEC_BUILD/METHOD_SPEC_BUILD/g
	s/METHOD_UPDATE_SPEC_BUILD/METHOD_SPEC_BUILD_BRANCH/g
	s/TCBF_METHOD_DRAW/TCBF_METHOD_SHME/g
	s/METHOD_DRAW_/METHOD_SHME_/g
	s/METHOD_DRAW/METHOD_VIS_DRAW/g
	s/METHOD_SHME_/METHOD_DRAW_/g
	s/TCBF_METHOD_SHME/TCBF_METHOD_DRAW/g
	s/METHOD_MARK_INVALID/METHOD_VIS_MARK_INVALID/g
	s/METHOD_SET_VIS_ATTR/METHOD_VIS_SET_ATTRS/g
	s/METHOD_SET_VIS_SPEC_ATTR/METHOD_SPEC_SET_ATTRS/g
	s/VisSpecAttr/SpecAttrs/g
	s/VisAttrs/ShmeAttrs/g
	s/VisAttr/VisAttrs/g
	s/ShmeAttrs/VisAttrs/g
	s/METHOD_MOVE_RESIZE_WIN/METHOD_VIS_MOVE_RESIZE_WIN/g
	s/METHOD_MOVE_VIS_CHILD/METHOD_VIS_MOVE_CHILD/g
	s/METHOD_MOVE_/METHOD_SHME_/g
	s/METHOD_MOVE/METHOD_VIS_SET_POSITION/g
	s/METHOD_SHME_/METHOD_MOVE_/g
	s/METHOD_POSITION/METHOD_VIS_POSITION_BRANCH/g
	s/METHOD_RESIZE_/METHOD_SHME_/g
	s/METHOD_RESIZE/METHOD_VIS_SET_SIZE/g
	s/METHOD_SHME_/METHOD_RESIZE_/g
	s/METHOD_GET_SIZE/METHOD_VIS_GET_SIZE/g
	s/METHOD_GET_BOUNDS/METHOD_VIS_GET_BOUNDS/g
	s/METHOD_GET_CENTER/METHOD_VIS_GET_CENTER/g
	s/METHOD_CALC_NEW_SIZE/METHOD_VIS_RECALC_SIZE/g
	s/CalcSizeArgs/RecalcSizeArgs/g
	s/CSA_CHOOSE_OWN_SIZE/RSA_CHOOSE_OWN_SIZE/g
	s/CSA_SUGGESTED_SIZE/RSA_SUGGESTED_SIZE/g
	s/METHOD_NOTIFY_GEOMETRY_VALID/METHOD_VIS_NOTIFY_GEOMETRY_VALID/g
	s/METHOD_RESET_WIN_GEOMETRY/METHOD_VIS_RESET_WIN_GROUP_GEOMETRY/g
	s/METHOD_GET_EXTRA_SIZE/METHOD_VIS_GET_EXTRA_SIZE/g
	s/METHOD_INVALIDATE_/METHOD_SHME_/g
	s/METHOD_INVALIDATE/METHOD_VIS_INVALIDATE/g
	s/METHOD_SHME_/METHOD_INVALIDATE_/g
	s/METHOD_UPDATE_WIN_GROUP/METHOD_VIS_UPDATE_WIN_GROUP/g
	s/METHOD_UPDATE_GEOMETRY/METHOD_VIS_UPDATE_GEOMETRY/g
	s/METHOD_UPDATE_WINDOWS_AND_IMAGE/METHOD_VIS_UPDATE_WINDOWS_AND_IMAGE/g
	s/METHOD_OPEN_WIN/METHOD_VIS_OPEN_WIN/g
	s/METHOD_CLOSE_WIN/METHOD_VIS_CLOSE_WIN/g
	s/METHOD_ADD_VIS_CHILD/METHOD_VIS_ADD_CHILD/g
	s/METHOD_REMOVE_VIS_CHILD/METHOD_VIS_REMOVE_CHILD/g
	s/METHOD_FIND_VIS_CHILD/METHOD_VIS_FIND_CHILD/g
	s/METHOD_TAKE_GADGET_EXCL/METHOD_VIS_TAKE_GADGET_EXCL/g
	s/METHOD_RELEASE_GADGET_EXCL/METHOD_VIS_RELEASE_GADGET_EXCL/g
	s/METHOD_LOST_GADGET_EXCL/METHOD_VIS_LOST_GADGET_EXCL/g
	s/METHOD_SPEC_VIS_UNBUILD_BRANCH/METHOD_SPEC_UNBUILD_BRANCH/g
	s/METHOD_SPEC_VIS_UNBUILD_NODE/METHOD_SPEC_UNBUILD/g
	s/METHOD_INCLUDE_WIN/METHOD_VIS_INCLUDE_WIN/g
	s/METHOD_EXCLUDE_WIN/METHOD_VIS_EXCLUDE_WIN/g
	s/METHOD_FIND_VIS_PARENT/METHOD_VIS_FIND_PARENT/g
	s/GVI_attrs/GVI_shme/g
	s/VI_attrs/VI_shme/g
	s/VI_attr/VI_attrs/g
	s/VI_shme/VI_attrs/g
	s/GVI_shme/GVI_attrs/g
	s/VI_specAttrs/VI_shme/g
	s/VI_specAttr/VI_specAttrs/g
	s/VI_shme/VI_specAttrs/g
	s/METHOD_SET_GEOMETRY/METHOD_VIS_COMP_SET_GEO_ATTRS/g
	s/METHOD_GET_GEOMETRY/METHOD_VIS_COMP_GET_GEO_ATTRS/g
	s/METHOD_VIS_COMP_GET_SPACING/METHOD_VIS_COMP_GET_CHILD_SPACING/g
	s/CalcNewSize/RecalcSize/g
	s/calcNewSize/recalcSize/g
	s/VisResize/VisSetSize/g
	s/VisMove/VisSetPosition/g
	s/VGA_USE_VIS_MOVE/VGA_USE_VIS_SET_POSITION/g
	s/VGA_USE_VIS_CALC_NEW_SIZE/VGA_USE_VIS_RECALC_SIZE/g
	s/VGA_ALWAYS_CALC_SIZE/VGA_ALWAYS_RECALC_SIZE/g
	s/VGA_ONLY_CALC_SIZE_WHEN_INVALID/VGA_ONLY_RECALC_SIZE_WHEN_INVALID/g
	s/METHOD_ADD_GEN_CHILD/METHOD_GEN_ADD_CHILD/g
	s/METHOD_MOVE_GEN_CHILD/METHOD_GEN_MOVE_CHILD/g
	s/METHOD_REMOVE_GEN_CHILD/METHOD_GEN_REMOVE_CHILD/g
	s/METHOD_FIND_GEN_CHILD/METHOD_GEN_FIND_CHILD/g
	s/METHOD_FIND_GEN_PARENT/METHOD_GEN_FIND_PARENT/g
	s/METHOD_SCAN_HINTS/METHOD_GEN_SCAN_HINTS/g
	s/METHOD_APPLY/METHOD_GEN_APPLY/g
	s/METHOD_RESET/METHOD_GEN_RESET/g
	s/METHOD_MAKE_APPLYABLE/METHOD_GEN_MAKE_APPLYABLE/g
	s/METHOD_ADD_GEN_CHILD_UPWARD_LINK_ONLY/METHOD_GEN_ADD_CHILD_UPWARD_LINK_ONLY/g
	s/METHOD_GET_MONIKER_SIZE/METHOD_GEN_GET_MONIKER_SIZE/g
	s/VisBuildChangeEnabledState/VisSpecBuildChangeEnabledState/g
	s/VisBuild/SpecBuild/g
	s/VisSendUpdateSpecBuild/VisSendSpecBuildBranch/g
	s/VisSendMove/VisSendPositionAndInvalIfNeeded/g
	s/METHOD_REPLACE_ALL/METHOD_VIS_TEXT_REPLACE_ALL_CASES/g
	s/METHOD_SET_TEXT/METHOD_VIS_TEXT_REPLACE_ALL/g
	s/METHOD_REPLACE/METHOD_VIS_TEXT_REPLACE/g
	s/METHOD_APPEND_TEXT/METHOD_VIS_TEXT_APPEND/g
	s/METHOD_REPLACE_SELECTION/METHOD_VIS_TEXT_REPLACE_SELECTION/g
	s/METHOD_GET_TEXT/METHOD_VIS_TEXT_GET_ALL/g
	s/METHOD_TEXT_GET_SELECTION_BOUNDS/METHOD_VIS_TEXT_GET_SELECTION_BOUNDS/g
	s/METHOD_TEXT_GET_SIZE/METHOD_VIS_TEXT_GET_SIZE/g
	s/METHOD_GET_SELECTION/METHOD_VIS_TEXT_GET_SELECTION/g
	s/METHOD_SET_SELECTION/METHOD_VIS_TEXT_SELECT_RANGE/g
	s/METHOD_ZERO_SELECTION/METHOD_VIS_TEXT_SELECT_NONE/g
	s/METHOD_REMOVE_RUNS/METHOD_VIS_TEXT_REMOVE_RUNS/g
	s/METHOD_SET_STYLE_BY_DEFAULT/METHOD_VIS_TEXT_SET_STYLE_BY_DEFAULT/g
	s/METHOD_SET_STYLE_BY_TOKEN/METHOD_VIS_TEXT_SET_STYLE_BY_TOKEN/g
	s/METHOD_SET_STYLE/METHOD_VIS_TEXT_SET_STYLE/g
	s/METHOD_SET_GRAPHIC_DRAW_STATE/METHOD_VIS_TEXT_SET_GRAPHIC_DRAW_STATE/g
	s/METHOD_SET_FONT/METHOD_VIS_TEXT_SET_FONT/g
	s/METHOD_SET_POINT_SIZE/METHOD_VIS_TEXT_SET_POINT_SIZE/g
	s/METHOD_MAKE_POINT_SIZE_SMALLER/METHOD_VIS_TEXT_SET_SMALLER_POINT_SIZE/g
	s/METHOD_MAKE_POINT_SIZE_LARGER/METHOD_VIS_TEXT_SET_LARGER_POINT_SIZE/g
	s/METHOD_SET_TEXT_STYLE/METHOD_VIS_TEXT_SET_STYLE/g
	s/METHOD_SET_COLOR/METHOD_VIS_TEXT_SET_COLOR/g
	s/METHOD_SET_COLOR_MAP_MODE/METHOD_VIS_TEXT_SET_COLOR_MAP_MODE/g
	s/METHOD_SET_GRAY_SCREEN/METHOD_VIS_TEXT_SET_GRAY_SCREEN/g
	s/METHOD_SET_TRACK_KERNING/METHOD_VIS_TEXT_SET_TRACK_KERNING/g
	s/METHOD_GET_STYLE/METHOD_VIS_TEXT_GET_STYLE/g
	s/METHOD_STYLE_ADD/METHOD_VIS_TEXT_ADD_STYLE/g
	s/METHOD_STYLE_REMOVE/METHOD_VIS_TEXT_REMOVE_STYLE/g
	s/METHOD_STYLE_SET_BY_TOKEN/METHOD_VIS_TEXT_SET_STYLE_FROM_TOKEN/g
	s/METHOD_STYLE_GET_TOKEN_BY_ID/METHOD_VIS_TEXT_GET_STYLE_TOKEN_FROM_ID/g
	s/METHOD_STYLE_GET_BY_TOKEN/METHOD_VIS_TEXT_GET_STYLE_FROM_TOKEN/g
	s/METHOD_STYLE_SET_ID/METHOD_VIS_TEXT_SET_STYLE_ID/g
	s/METHOD_STYLE_FIND/METHOD_VIS_TEXT_FIND_STYLE/g
	s/METHOD_SET_RULER_BY_DEFAULT/METHOD_VIS_TEXT_SET_RULER_TO_DEFAULT/g
	s/METHOD_SET_RULER/METHOD_VIS_TEXT_SET_RULER/g
	s/METHOD_SET_RULER_BY_TOKEN/METHOD_VIS_TEXT_SET_RULER_FROM_TOKEN/g
	s/METHOD_SET_BORDER/METHOD_VIS_TEXT_SET_BORDER/g
	s/METHOD_SET_BORDER_COLOR_MAP_MODE/METHOD_VIS_TEXT_SET_BORDER_COLOR_MAP_MODE/g
	s/METHOD_SET_BORDER_GRAY_SCREEN/METHOD_VIS_TEXT_SET_BORDER_GRAY_SCREEN/g
	s/METHOD_SET_JUSTIFICATION/METHOD_VIS_TEXT_SET_JUSTIFICATION/g
	s/METHOD_SET_LINE_SPACING/METHOD_VIS_TEXT_SET_LINE_SPACING/g
	s/METHOD_SET_DEFAULT_TABS/METHOD_VIS_TEXT_SET_DEFAULT_TABS/g
	s/METHOD_SET_LEFT_MARGIN/METHOD_VIS_TEXT_SET_LEFT_MARGIN/g
	s/METHOD_SET_RIGHT_MARGIN/METHOD_VIS_TEXT_SET_RIGHT_MARGIN/g
	s/METHOD_SET_PARA_MARGIN/METHOD_VIS_TEXT_SET_PARA_MARGIN/g
	s/METHOD_SET_LEFT_AND_PARA_MARGIN/METHOD_VIS_TEXT_SET_LEFT_AND_PARA_MARGIN/g
	s/METHOD_SET_SPACE_ON_TOP/METHOD_VIS_TEXT_SET_SPACE_ON_TOP/g
	s/METHOD_SET_SPACE_ON_BOTTOM/METHOD_VIS_TEXT_SET_SPACE_ON_BOTTOM/g
	s/METHOD_SET_LEADING/METHOD_VIS_TEXT_SET_LEADING/g
	s/METHOD_SET_BG_COLOR/METHOD_VIS_TEXT_SET_BG_COLOR/g
	s/METHOD_SET_BG_COLOR_MAP_MODE/METHOD_VIS_TEXT_SET_BG_COLOR_MAP_MODE/g
	s/METHOD_SET_BG_GRAY_SCREEN/METHOD_VIS_TEXT_SET_BG_GRAY_SCREEN/g
	s/METHOD_SET_TAB/METHOD_VIS_TEXT_SET_TAB/g
	s/METHOD_CLEAR_TAB/METHOD_VIS_TEXT_CLEAR_TAB/g
	s/METHOD_MOVE_TAB/METHOD_VIS_TEXT_MOVE_TAB/g
	s/METHOD_GET_RULER/METHOD_VIS_TEXT_GET_RULER/g
	s/METHOD_RULER_ADD/METHOD_VIS_TEXT_ADD_RULER/g
	s/METHOD_RULER_REMOVE/METHOD_VIS_TEXT_REMOVE_RULER/g
	s/METHOD_RULER_SET_BY_TOKEN/METHOD_VIS_TEXT_SET_RULER_FROM_TOKEN/g
	s/METHOD_RULER_GET_TOKEN_BY_ID/METHOD_VIS_TEXT_GET_RULER_TOKEN_FROM_ID/g
	s/METHOD_RULER_GET_BY_TOKEN/METHOD_VIS_TEXT_GET_RULER_FROM_TOKEN/g
	s/METHOD_RULER_SET_ID/METHOD_VIS_TEXT_SET_RULER_ID/g
	s/METHOD_RULER_FIND/METHOD_VIS_TEXT_FIND_RULER/g
	s/METHOD_SET_TYPE/METHOD_VIS_TEXT_SET_TYPE/g
	s/METHOD_GET_TYPE/METHOD_VIS_TEXT_GET_TYPE/g
	s/METHOD_SET_MAX_LENGTH/METHOD_VIS_TEXT_SET_MAX_LENGTH/g
	s/VSA_/SA_/g
	s/VBF_/SBF_/g
	s/METHOD_VUP/METHOD_VIS_VUP/g
	s/METHOD_GUP/METHOD_GEN_GUP/g
	s/METHOD_FUP/METHOD_VIS_FUP/g
	s/METHOD_GET_MAX_LENGTH/METHOD_VIS_TEXT_GET_MAX_LENGTH/g
	s/METHOD_GET_DIRTY/METHOD_VIS_TEXT_GET_DIRTY/g
	s/METHOD_SET_CLEAN/METHOD_VIS_TEXT_SET_CLEAN/g
	s/METHOD_SET_DIRTY/METHOD_VIS_TEXT_SET_DIRTY/g
	s/METHOD_SET_WASH_COLOR/METHOD_VIS_TEXT_SET_WASH_COLOR/g
	s/METHOD_GET_WASH_COLOR/METHOD_VIS_TEXT_GET_WASH_COLOR/g
	s/METHOD_SET_TEXT_STATE/METHOD_VIS_TEXT_SET_TEXT_STATE/g
	s/METHOD_GET_TEXT_STATE/METHOD_VIS_TEXT_GET_TEXT_STATE/g
	s/METHOD_TEXT_SUSPEND/METHOD_VIS_TEXT_SUSPEND/g
	s/METHOD_TEXT_END_SUSPEND/METHOD_VIS_TEXT_END_SUSPEND/g
	s/METHOD_TEXT_GET_NOTIFY_STRUCTURE/METHOD_VIS_TEXT_GET_NOTIFY_STRUCTURE/g
	s/METHOD_STYLE_RULER_MAY_HAVE_CHANGED/METHOD_TEXT_STYLE_RULER_MAY_HAVE_CHANGED/g
	s/METHOD_DISPLAY_OBJECT/METHOD_VIS_TEXT_DISPLAY_OBJECT/g
	s/METHOD_MAKE_LAST_OBJECT/METHOD_VIS_TEXT_MAKE_LAST_OBJECT/g
	s/METHOD_GET_GRAPHIC_DRAW_STATE/METHOD_VIS_TEXT_GET_GRAPHIC_DRAW_STATE/g
	s/METHOD_EDIT_DRAW/METHOD_VIS_TEXT_EDIT_DRAW/g
	s/METHOD_SHOW_SELECTION/METHOD_VIS_TEXT_SHOW_SELECTION/g
	s/METHOD_HEIGHT_NOTIFY/METHOD_VIS_TEXT_HEIGHT_NOTIFY/g
	s/METHOD_FILTER_CHAR_FROM_KBD/METHOD_VIS_TEXT_FILTER_CHAR_FROM_KBD/g
	s/METHOD_GET_DOC_OBJ/METHOD_VIS_TEXT_GET_DOC_OBJECT/g
	s/METHOD_DISABLE_DOC_OBJ/METHOD_VIS_TEXT_DISABLE_DOC_OBJECT/g
	s/METHOD_ENABLE_DOC_OBJ/METHOD_VIS_TEXT_ENABLE_DOC_OBJECT/g
	s/METHOD_GET_SELECTION_STATE/METHOD_VIS_TEXT_GET_SELECTION_STATE/g
	s/METHOD_TEXT_HILITE/METHOD_VIS_TEXT_HILITE/
	s/METHOD_TEXT_UNHILITE/METHOD_VIS_TEXT_UNHILITE/
	s/METHOD_TEXT_UPDATE_GENERIC/METHOD_VIS_TEXT_UPDATE_GENERIC/
	s/METHOD_ENTER_OVERSTRIKE_MODE/METHOD_VIS_TEXT_ENTER_OVERSTRIKE_MODE/g
	s/METHOD_ENTER_INSERT_MODE/METHOD_VIS_TEXT_ENTER_INSERT_MODE/g
	s/METHOD_REPLACE_WITH_TEXT_TRANSFER_ITEM/METHOD_VIS_TEXT_REPLACE_WITH_TRANSFER_ITEM/g
	s/METHOD_CREATE_TEXT_TRANSFER_ITEM/METHOD_VIS_TEXT_CREATE_TRANSFER_ITEM/g
	s/METHOD_APPEND_TO_TEXT_TRANSFER_ITEM/METHOD_VIS_TEXT_APPEND_TO_TRANSFER_ITEM/g
	s/METHOD_GET_NEXT_OBJECT/METHOD_VIS_TEXT_GET_NEXT_OBJECT/g
	s/METHOD_TEXT_GET_NEXT_OBJECT_NO_CREATE/METHOD_VIS_TEXT_GET_NEXT_OBJECT_NO_CREATE/g
	s/METHOD_GET_PREV_OBJECT/METHOD_VIS_TEXT_GET_PREV_OBJECT/g
	s/METHOD_NUKE_DOC_OBJECT/METHOD_VIS_TEXT_NUKE_DOC_OBJECT/g
	s/METHOD_TEXT_GET_MIN_WIDTH/METHOD_VIS_TEXT_GET_MIN_WIDTH/g
	s/METHOD_GET_AVERAGE_CHAR_WIDTH/METHOD_VIS_TEXT_GET_AVERAGE_CHAR_WIDTH/g
	s/METHOD_TEXT_CALC_HEIGHT/METHOD_VIS_TEXT_CALC_HEIGHT/g
	s/METHOD_GET_LINE_HEIGHT/METHOD_VIS_TEXT_GET_LINE_HEIGHT/g
	s/METHOD_RECALC_AND_DRAW/METHOD_VIS_TEXT_RECALC_AND_DRAW/g
	s/METHOD_TEXT_GET_ONE_LINE_WIDTH/METHOD_VIS_TEXT_GET_ONE_LINE_WIDTH/g
	s/METHOD_SCREEN_UPDATE/METHOD_VIS_TEXT_SCREEN_UPDATE/g
	s/METHOD_ADJUST_SELECTION/METHOD_VIS_TEXT_ADJUST_SELECTION/g
	s/METHOD_RECALC_GSTATE/METHOD_VIS_TEXT_RECALC_GSTATE/g
	s/METHOD_SCROLL_ONE_LINE/METHOD_VIS_TEXT_SCROLL_ONE_LINE/g
	s/METHOD_GET_SCROLL_AMOUNT/METHOD_VIS_TEXT_GET_SCROLL_AMOUNT/g
	s/METHOD_SHOW_POSITION/METHOD_VIS_TEXT_SHOW_POSITION/g
	s/METHOD_GET_RANGE/METHOD_VIS_TEXT_GET_RANGE/g
	s/METHOD_TEXT_KEY_FUNCTION/METHOD_VIS_TEXT_DO_KEY_FUNCTION/g
	s/METHOD_GAINED_DOCUMENT_TARGET_EXCL/METHOD_VIS_TEXT_GAINED_DOCUMENT_TARGET_EXCL/g
	s/METHOD_LOST_DOCUMENT_TARGET_EXCL/METHOD_VIS_TEXT_LOST_DOCUMENT_TARGET_EXCL/g
	s/METHOD_TEXT_SCROLL_PAGE_UP/METHOD_VIS_TEXT_SCROLL_PAGE_UP/g
	s/METHOD_TEXT_SCROLL_PAGE_DOWN/METHOD_VIS_TEXT_SCROLL_PAGE_DOWN/g
	s/METHOD_FILTER_CHARS_FROM_TRANSFER/METHOD_VIS_TEXT_FILTER_CHARS_FROM_TRANSFER/g
	s/METHOD_TEXT_GET_SIMPLE_MIN_WIDTH/METHOD_VIS_TEXT_GET_SIMPLE_MIN_WIDTH/g
	s/METHOD_TEXT_SELECT_VISIBLE_CHARS/METHOD_VIS_TEXT_SELECT_VISIBLE_CHARS/g
	s/METHOD_TEXT_COUNT_REAL_NUMBER_OF_CHARS/METHOD_VIS_TEXT_COUNT_REAL_NUMBER_OF_CHARS/g
	s/METHOD_TEXT_SEARCH_WRAPAROUND/METHOD_VIS_TEXT_SEARCH_WRAPAROUND/g
	s/METHOD_TEXT_BACKWARDS_SEARCH_WRAPAROUND/METHOD_VIS_TEXT_BACKWARDS_SEARCH_WRAPAROUND/g
	s/METHOD_TEXT_REPLACE_GET_NEXT_OBJECT/METHOD_VIS_TEXT_REPLACE_GET_NEXT_OBJECT/g
	s/METHOD_TEXT_GET_STRING/METHOD_VIS_TEXT_GET_STRING/g
	s/METHOD_TEXT_SEARCH_FROM_OFFSET/METHOD_VIS_TEXT_SEARCH_FROM_OFFSET/g
	s/METHOD_TEXT_REPLACE_ALL_FROM_OFFSET/METHOD_VIS_TEXT_REPLACE_ALL_FROM_OFFSET/g
	s/METHOD_TEXT_SET_SEARCH_SPELL_IN_PROGRESS/METHOD_VIS_TEXT_SET_SEARCH_SPELL_IN_PROGRESS/g
	s/IDTENDED/INTENDED/g
	s/DRIVER_LEVEL/IM_DRIVER_LEVEL/g
	s/COMBINE_LEVEL/IM_COMBINE_LEVEL/g
	s/PTR_PERTURB_LEVEL/IM_PTR_PERTURB_LEVEL/g
	s/OUTPUT_LEVEL/IM_OUTPUT_LEVEL/g
	s/INIT_DRAG_TIME/IM_INIT_DRAG_TIME/g
	s/INIT_DRAG_DISTANCE/IM_INIT_DRAG_DISTANCE/g
	s/MAX_BUTTONS/IM_MAX_BUTTONS/g
	s/NUM_PTR_IMAGE_LEVELS/IM_NUM_PTR_IMAGE_LEVELS/g
	s/MemIntAllocateHandle/FarAllocateHandle/g
	s/METHOD_FILE_SELECTOR_/METHOD_GEN_FILE_SELECTOR_/g
	s/Berkeley Softworks/GeoWorks/g
	s/MemVerifyHeap/ECMemVerifyHeap/g
	s/LMemValidateHeap/ECLMemValidateHeap/g
	s/LMemValidateHandle/ECLMemValidateHandle/g
	s/LMemExists/ECLMemExists/g
	s/FileGetDate/FileGetDateAndTime/g
	s/FileSetDate/FileSetDateAndTime/g
	s/FileGetVolumeInfo/DiskFileGetVolumeInfo/g
	s/FileSetVolumeName/DiskFileSetVolumeName/g
	s/FileGetVolumeFreeSpace/DiskFileGetVolumeFreeSpace/g
	s/FileLocateFileInDosPath/SysLocateFileInDosPath/g
	s/FileGetEnvironment/SysGetDosEnvironment/g
	s/DiskWritable\?/DiskCheckWritable/g
	s/DiskWritable\?Far/DiskCheckWritableFar/g
	s/DiskInUse\?/DiskCheckInUse/g
	s/DiskUnnamed\?/DiskCheckUnnamed/g
	s/ProcBroadcastEvent/ObjProcBroadcastMessage/g
	s/METHOD_REMOTE_OBJ_MESSAGE_VIA_HOLD_UP_QUEUE/METHOD_FLOW_REMOTE_OBJ_MESSAGE_VIA_HOLD_UP_QUEUE/g
	s/METHOD_STARTUP_APPLS/METHOD_USER_STARTUP_APPLS/g
	s/METHOD_UI_TOKEN_DEFINE_TOKEN/METHOD_USER_TOKEN_DEFINE_TOKEN/g
	s/METHOD_APP_DOC_CONTROL_/METHOD_GEN_APP_DOCUMENT_CONTROL_/g
	s/METHOD_GEN_MAKE_FOCUS_APPLICATION/METHOD_GEN_APP_MAKE_FOCUS_APPLICATION/g
	s/METHOD_GEN_MAKE_NOT_FOCUS_APPLICATION/METHOD_GEN_APP_MAKE_NOT_FOCUS_APPLICATION/g
	s/METHOD_GEN_MARK_BUSY/METHOD_GEN_APP_MARK_BUSY/g
	s/METHOD_GEN_MARK_NOT_BUSY/METHOD_GEN_APP_MARK_NOT_BUSY/g
	s/METHOD_GEN_HOLD_UP_INPUT/METHOD_GEN_APP_HOLD_UP_INPUT/g
	s/METHOD_GEN_RESUME_INPUT/METHOD_GEN_APP_RESUME_INPUT/g
	s/METHOD_GEN_IGNORE_INPUT/METHOD_GEN_APP_IGNORE_INPUT/g
	s/METHOD_GEN_ACCEPT_INPUT/METHOD_GEN_APP_ACCEPT_INPUT/g
	s/METHOD_GEN_RESUME_INPUT/METHOD_GEN_APP_RESUME_INPUT/g
	s/METHOD_GEN_QUERY_UI/METHOD_GEN_APP_QUERY_UI/g
	s/METHOD_APP_BUILD_STANDARD_DIALOG/METHOD_GEN_APP_BUILD_STANDARD_DIALOG/g
	s/METHOD_GEN_MARK_APP_COMPLETELY_BUSY/METHOD_GEN_APP_MARK_APP_COMPLETELY_BUSY/g
	s/METHOD_GEN_MARK_APP_NOT_COMPLETELY_BUSY/METHOD_GEN_APP_MARK_APP_NOT_COMPLETELY_BUSY/g
	s/METHOD_GUP_/METHOD_GEN_GUP_/g
	s/METHOD_DOCUMENT_/METHOD_GEN_DOCUMENT_/g
	s/METHOD_GEN_GET_LONG_TERM_MONIKER/METHOD_GEN_PRIMARY_GET_LONG_TERM_MONIKER/g
	s/METHOD_GEN_SET_LONG_TERM_MONIKER/METHOD_GEN_PRIMARY_SET_LONG_TERM_MONIKER/g
	s/METHOD_RANGE_/METHOD_GEN_RANGE_/g
	s/METHOD_SET_DEFAULT_VIS_PARENT_FOR_FIELD/METHOD_GEN_SYS_SET_DEFAULT_VIS_PARENT_FOR_FIELD/g
	s/METHOD_GEN_SYS_/METHOD_GEN_SYSTEM_/g
	s/METHOD_TRIGGER/METHOD_GEN_TRIGGER_TRIGGER/g
	s/METHOD_TRIGGER_/METHOD_GEN_TRIGGER_/g
	s/METHOD_UI_DOC_CONTROL_/METHOD_GEN_UI_DOCUMENT_CONTROL_/g
	s/METHOD_CONTENT_/METHOD_VIS_CONTENT_/g
	s/GeodeLockResource/MemLock/g
	s/GetResourceHandleFromDS_BX/GeodeGetResourceHandleFromDS_BX/g
	s/FILE_SEEK_/FILE_POS_/g
	s/ModuleLock/ThreadLock/g
	s/ML_owner/TL_owner/g
	s/ML_sem/TL_sem/g
	s/ML_nesting/TL_nesting/g
	s/SNM_MESSAGE/SNM_MESSAGE/g
	s/METHOD_/MSG_/g
	s/MSG_VIS_RESET_WIN_GEOMETRY/MSG_VIS_RESET_WIN_GROUP_GEOMETRY/g

GenClass clean-up part 1 (7/26/91)
----------------------------------
- replace METHOD_GEN_CALL_CHILDREN_{SPTA,SPNT,NSTA,NSNT,STACK} with
	METHOD_GEN_SEND_TO_CHILDREN, which takes classed event;
	changed uses of SPNT and STACK to directly use
	METHOD_GEN_SEND_TO_CHILDREN or GenCallChildren;
	changed obscure usages of above SPTA to do something else

- replace MSG_GEN_GET_STATE with MSG_GEN_GET_{ENABLED,USABLE,MINIMIZED,
	MAXIMIZED} to test generic states and change usages of
	MSG_GEN_GET_STATE to use new methods

- rename MSG_GEN_AL_FINISH_QUIT to MSG_GEN_ACTIVE_LIST_FINISH_QUIT

- move all MSG_GEN_GUP_*_ACTIVE_LIST methods to GenActiveListClass and
	replaces usages with MSG_GEN_GUP_CALL_OBJECT_OF_CLASS

- remove unused and redundant MSG_GEN_GUP_QUERY_DISPLAY

- remove MSG_GEN_GUP_QUERY_CLASS and replaced usages with
	MSG_GEN_GUP_CALL_OBJECT_OF_CLASS or with
	MSG_GEN_GUP_TEST_FOR_OBJECT_OF_CLASS/MSG_GEN_GUP_CALL_OBJECT_OF_CLASS
	combination

- move MSG_GEN_GET_VIS_PARENT, MSG_GEN_GET_SPECIFIC_VIS_OBJECT,
	MSG_GEN_GUP_QUERY_FOR_VIS_PARENT, MSG_GEN_DETERMINE_VIS_PARENT_FOR_CHILD
	to "SpecClass"

- move GenMarkDirty to kernel as ObjMarkDirty

- consolidate GenScanBothHintLists and ObjVarScanData into ObjVarScanData

GenClass cleanup part 2
-----------------------
- change MSG_GEN_BRANCH_REPLACE_OUTPUT_OD_CONSTANT and BRPT_OUTPUT_OD to
        MSG_GEN_BRANCH_REPLACE_OUTPUT_OPTR_CONSTANT and BRPT_OUTPUT_OPTR,
        changed usages

- remove references to passing VisUpdateMode of -1 to MSG_GEN_SET_ENABLED and
        MSG_GEN_SET_NOT_ENABLED (this bogus mode was not used)

- change MSG_GEN_COPY_VIS_MONIKER parameters so that CopyVisMonikerFrame
        includes CopyChunkFlags previously passed in CX (needed for C support),
        changed usages

- change MSG_GEN_ADD_HINT parameters so that variable-sized stack frame is
        now just referenced by fptr (needed for C support), changed handler,
        changed usages

- change MSG_GEN_BRANCH_REPLACE_OUTPUT_OPTR_CONSTANT so that
        BranchReplaceParams includes BranchReplaceParamType previously passed
        in CX (needed for C support), changed usages


VisClass cleanup
----------------
      * Change MSG_VIS_RESET_WIN_GEOMETRY -> MSG_GEN_RESET_TO_INITIAL_SIZE.
	No flags are passed anymore.
	
      * Removed VisHandleMaxResize, VisHandleMinResize, VisHandleDesiredResize.
	These just did stuff like:
		and	cx, not mask RSA_CHOOSE_OWN_SIZE   ;remove this bit
		and	dx, not mask RSA_CHOOSE_OWN_SIZE
		cmp	cx, MINIMUM_WIDTH
		jb	10$
		mov	cx, MINIMUM_WIDTH
	10$:
		etc. etc.
	Apps can handle this on their own, and make their code more readable,
	than using those silly little library routines.
	

      * several VUQ_ constants for MSG_VIS_VUP_QUERY have gone away:
		VUQ_WIN_GROUP_SIZE
		VUQ_FIELD_SIZE
		VUQ_FIELD_OBJECT
		VUQ_SCREEN_OBJECT
		VUQ_WIN_GROUP_OBJECT
		VUQ_VIEW_OBJECT
	to be replaced by messages where you pass an event and direct the UI	
	to find the object to send the event to.
	
	here are some typical replacement snippets to use:

	Change:
		mov	ax, MSG_VIS_VUP_QUERY
		mov	cx, VUQ_FIELD_SIZE
		call	ObjCallInstanceNoLock
	to:
		push	si
		mov	ax, MSG_VIS_GET_SIZE
		mov	bx, segment GenFieldClass
		mov	si, offset GenFieldClass
		mov	di, mask MF_RECORD 
		call	ObjMessage
		mov	cx, di			;cx <- ClassedEvent for field
		pop	si
		mov	ax, MSG_VIS_VUP_CALL_OBJECT_OF_CLASS
		call	ObjCallInstanceNoLock

	Change:
		mov	ax, MSG_VIS_VUP_QUERY
		mov	cx, VUQ_VIEW_OBJECT
		call	ObjCallInstanceNoLock
		mov	bx, cx
		mov	si, dx
		mov	ax, MSG_GEN_VIEW...
		mov	di, mask MF_STACK or mask MF_CALL or mask MF_FIXUP_DS
		call	ObjMessage
	to:
		push	si
		mov	ax, MSG_GEN_VIEW...
		mov	di, mask MF_STACK
		call	ObjMessage
		mov	cx, di			;cx <- event for view
		mov	ax, MSG_VIS_CONTENT_CALL_VIEW
		mov	bx, segment VisContentClass
		mov	si, offset VisContentClass
		mov	di, mask MF_RECORD 
		call	ObjMessage
		mov	cx, di			;cx <- ClassedEvent for content
		pop	si
		mov	ax, MSG_VIS_VUP_CALL_OBJECT_OF_CLASS
		call	ObjCallInstanceNoLock
	
		
Focus/Target
------------
	* There are no longer "WIN" & "non-WIN" variations of FOCUS & TARGET
	  exclusives;  these "WIN" variations no longer exist:

	        HINT_MAKE_DEFAULT_TARGET_WIN
		HINT_MAKE_DEFAULT_FOCUS_WIN

		MSG_GEN_MAKE_TARGET_WIN
		MSG_GEN_MAKE_FOCUS_WIN

		MSG_GEN_MAKE_NOT_TARGET_WIN
		MSG_GEN_MAKE_NOT_FOCUS_WIN

		MSG_VIS_VUP_GRAB_TARGET_WIN_EXCL
		MSG_VIS_VUP_GRAB_FOCUS_WIN_EXCL

		MSG_META_GAINED_TARGET_WIN_EXCL
		MSG_META_GAINED_FOCUS_WIN_EXCL

		MSG_META_LOST_TARGET_WIN_EXCL
		MSG_META_LOST_FOCUS_WIN_EXCL

	  Any uses of these remaining in your code should be changed to the
	  "non-WIN" version (i.e. delete the "WIN_" in each of the above 
	  occurrences).

	* More name changes:

	  s/MSG_GEN_MAKE_FOCUS/MSG_META_GRAB_FOCUS_EXCL/g
	  s/MSG_GEN_MAKE_NOT_FOCUS/MSG_META_RELEASE_FOCUS_EXCL/g
	  s/MSG_GEN_MAKE_TARGET/MSG_META_GRAB_TARGET_EXCL/g
	  s/MSG_GEN_MAKE_NOT_TARGET/MSG_META_RELEASE_TARGET_EXCL/g
	  s/MSG_VIS_MAKE_FOCUS/MSG_META_GRAB_FOCUS_EXCL/g
	  s/MSG_VIS_MAKE_NOT_FOCUS/MSG_META_RELEASE_FOCUS_EXCL/g
	  s/MSG_VIS_MAKE_TARGET/MSG_META_GRAB_TARGET_EXCL/g
	  s/MSG_VIS_MAKE_NOT_TARGET/MSG_META_RELEASE_TARGET_EXCL/g
	  s/VisGrabFocusExcl/MetaGrabFocusExclLow/g
	  s/VisReleaseFocusExcl/MetaReleaseFocusExclLow/g
	  s/VisGrabTargetExcl/MetaGrabTargetExclLow/g
	  s/VisReleaseTargetExcl/MetaReleaseTargetExclLow/g

	* MSG_VIS_VUP_GRAB/RELEASE_FOCUS/TARGET_EXCL no longer exist.  Use
	  the MSG_META_GRAB/RELEASE/_FOCUS/TARGET_EXCL in their place, unless
	  low-level direct control is required, in which case
	  MSG_META_MUP_ALTER_FTVMC_EXCL may be used.

	* Nuked MSG_VIS_INITIALIZE_WORKING_VARS -- no longer necessary, as
	  messages are no longer stored in VisIsoContents

	* Eliminated:
	  (The focus & target exclusives are used in their place):

		MSG_GEN_APP_MAKE_FOCUS_APPLICATION
		MSG_GEN_APP_MAKE_NOT_FOCUS_APPLICATION
		MSG_GEN_APP_GAINED_APPLICATION_EXCL
		MSG_GEN_APP_LOST_APPLICATION_EXCL
		MSG_GEN_FIELD_GRAB_APPLICATION_EXCL
		MSG_GEN_FIELD_RELEASE_APPLICATION_EXCL
		MSG_GEN_FIELD_GAINED_FIELD_EXCL
		MSG_GEN_FIELD_LOST_FIELD_EXCL
		MSG_GEN_SYSTEM_GRAB_FIELD_EXCL
		MSG_GEN_SYSTEM_RELEASE_FIELD_EXCL

	* Removed "targetable" bit option in GenTextDisplay/Edit's
	  textDisplayAttributes & GenView's viewAttributes -- use new 
	  "targetable" bit in "genAttributes" described below.

	* Added "targetable" bit to GenClass's "genAttributes" field.  Used
	  to control targetability for all generic objects.  The bit is set
	  by default upon instantiation or declaration in UIC for the
	  following classes:
                        GenField
                        GenApplication
                        GenPrimary
                        GenDisplayControl
                        GenDisplay
                        GenView

	* Eliminated MSG_GEN_APP_DOCUMENT_CONTROL_SEND_TO_TARGET
	  (Use TO_MODEL option w/MSG_META_SEND_CLASSED_EVENT, with the class
	  of the ClassedEvent being GenDocumentClass).  The manner of
	  setting & getting the current document remains unchanged, for now.

GenClass clean-up part 3
------------------------
- split MSG_GEN_FIND_CHILD into MSG_GEN_FIND_CHILD, which maps OD to position,
	and MSG_GEN_FIND_CHILD_AT_POSITION, which maps position to OD; simplify
	pass and return values for C prototypes; changed usages

- rename GenCallChildren to GenSendToChildren, GenCallProcess to
	GenSendToProcess and GenCallApplicationViaProcess to
	GenSendToApplicationViaProcess to match their functionality
	(cannot have return values), changed usages

- add MSG_GEN_SEND_TO_PARENT to supplement MSG_GEN_CALL_PARENT, both take
	classed event, only GenCallParent exists as library routine for
	assembly language optimzation, change usages

- add MSG_GEN_GUP_FIND_OBJECT_OF_CLASS for non-conformists,
	MSG_GEN_GUP_SEND_TO_OBJECT_OF_CLASS and
	MSG_GEN_GUP_CALL_OBJECT_OF_CLASS are preferred when communicating with
	and not just fetching the OD of an object

- add MSG_GEN_MAKE_NOT_APPLYABLE to complement MSG_GEN_MAKE_APPLYABLE,
	when sent to GenSummons, disables reply bar (handled in
	OLNoticeWinClass)

- add/fix MSG_GEN_DRAW_MONIKER, MSG_GEN_GET_MONIKER_POS, and
	MSG_GEN_GET_MONIKER_SIZE, MSG_GEN_FIND_MONIKER for eas'C' access to
	GenDrawMoniker, GenGetMonikerPos, GenGetMonikerSize, and GenFindMoniker
	library routines.  Assembly programmers can use either.

- add MSG_GEN_CALL_APPLICATION, MSG_GEN_SEND_TO_PROCESS for orthogonality/
	completeness, defined C prototypes with void return value (need to
	cast return type), but C programmers should use goc's
	@call @application and @call @process instead.  Assembly language
	programmers can use either the library routines GenCallApplication,
	GenSendToProcess or the methods.  The utility routines take data in
	registers while the methods take a classed event.

- add MSG_GEN_CALL_SYSTEM for C access to UserCallSystem.  Assembly programmers
	can use either.

- add MSG_GEN_GET_ATTRIBUTES/MSG_GEN_SET_ATTRS to allowing fetching/
	setting of GenAttrs instance data.

- add MSG_GEN_CHECK_IF_FULLY_ENABLED to complement
	MSG_GEN_CHECK_IF_FULLY_USABLE and supplement GenCheckIfFullyEnabled
	library routine, or something like that...

- change MSG_GEN_COPY_VIS_MONIKER's CCM_STRING option so that string length
	can be passed, if desired.  Pass length of zero to indicate that
	string is null-terminated, changed some usages -- there may be others
	I didn't catch (bad monikers will hopefully be easy to spot)

File Selector (9/27)
--------------------
- replace/rename MSG_GEN_FILE_SELECTOR_{GET,SET}_GEODEATTR_MATCH
        and MSG_GEN_FILE_SELECTOR_{GET,SET}_GEODEATTR_MISMATCH with
        MSG_GEN_FILE_SELECTOR_{GET,SET}_GEODE_ATTRS that deals with both.
        Instance data remains the same.

- replace FSFC_FILE_CALLBACK, fileCallback, GFSI_callback, et al. with
        FSFC_FILE_FILTER, fileFilter, and MSG_GEN_FILE_SELECTOR_FILTER_FILE
        that the file selector sends to itself for each file it scans.
        To use the filter, you'll need to subclass the file selector and
        intercept this method.  The information available is now just
        DosFileInfoStruct and GeosFileHeaderCore, no more sleazy access to
        the FileEnumParams.  Also added GFSI_filterData instance data
        that is sent with the new message so multiple file selectors can
        use the same subclass and still perform different filterings --
        choose the filter depending on the GFSI_filterData.  Also added
        obligatory MSG_GEN_FILE_SELECTOR_{GET,SET}_FILTER_DATA.  Subclassing
        to add functionality is nice for the object model and helps the C
        world where a callback routine is pretty ugly.

File Selector (10/29)
---------------------
- remove GFSI_diskHandle, GFSI_selectionFlags, and GFSI_selectionNumber
	instance data fields.  These were not allowed to be set in .ui
	or .goc files and were not being saved to state file.  They are
	now stored as variable data.

Object Variable Data Storage
----------------------------
- new kernel routines: ObjVarAddData, ObjVarDeleteData, ObjVarDeleteAt,
	ObjVarFindData, ObjVarDerefData, ObjVarScanData, ObjVarDeleteDataRange,
	ObjVarCopyDataRange

- new macros:   ObjVarTypePtr, ObjVarFlagsPtr, ObjVarSizePtr

- new MetaClass messages: MSG_META_ADD_VAR_DATA, MSG_META_DELETE_VAR_DATA,
	MSG_INITIALIZE_VAR_DATA

- replaces hint mechanism (routines, messages, GI_hints chunk) in UI

- replaces temp lmem chunk mechanism.  Note that the TLMBH_tempList field
	in the LMem header object blocks is no more.
	Yet another change from the 1.X datafile format (if you've got objects
	saved in datafiles).

- UIC (only if version20 flag set, of course :)
	- outputs variable data to end of object chunk
	- variable data is specified just like other attributes:
		MyTrigger = GenTriggerClass {
			HINT_EXPAND_WIDTH_TO_FIT_PARENT,
			HINT_INITIAL_SIZE {
					SpecWidth <SST_PIXELS, 216>
					SpecHeight <0, 0>
			}
		}


2.0 GenInteraction API changes
------------------------------
- GenInteraction
	- HINT_MENUABLE -> visibility = popup
	- remove HINT_SUB_GROUP (visibility = subGroup, if under another popup)
	- HINT_MAKE_REPLY_BAR
		- nuke HINT_MAKE_REPLY_BAR GenInteraction, moving GenTrigger
			children directly to parent GenInteraction and adding
			HINT_SEEK_REPLY_BAR to them
	- appModal/GIA_APP_MODAL -> modal/GIA_MODAL
	- HINT_IS_TEMPORARY -> nuke or change to HINT_INTERACTION_SINGLE_USAGE
	- userDismissable/GIA_USER_DISMISSABLE -> GIT_PROGRESS and
		GIT_MULTIPLE_RESPONSE will not have any specific-UI supplied
		way to close the box, including disabling system-menu's close
		trigger
	- organizational/GIA_ORGANIZATIONAL ->
		type = GIT_ORGANIZATIONAL, visibility = GIV_DIALOG,
		attributes = GIA_NOT_USER_INITIATABLE, place dialogs as children
		If initiate or dismiss messages are sent through this object,
		MF_RECORD it and use MSG_GEN_SEND_TO_CHILDREN instead.
- GenSummons
	- change to GenInteraction with visibility = dialog, attributes = modal
	- SRS_APPLY_RESET -> type = properties
	- SRS_IMMEDIATE_PROPERTEIS -> type = properties with
		HINT_INTERACTION_UNRELATED_PROPERTIES or
		HINT_INTERACTION_FAST_RESPONSE_PROPERTIES
		or type = organizational (this works, but would be pretty lame)
	- SRS_CUSTOM_APPLIED_PROPERTIES -> type = properties, supply your
		own Apply trigger with appropriate action, and mark with
		ATTR_GEN_TRIGGER_INTERACTION_COMMAND {word IC_APPLY}
	- SRS_ACKNOWLEDGE
		- change to type = notification, gives reply bar w/"OK" trigger
	- SRS_YES_NO
		- change to type = affirmation, gives reply bar w/"Yes"/"No"
			triggers
	- SRS_OK_CANCEL, SRS_YES_NO_CANCEL, SRS_CUSTOM_SUMMONS,
		SRS_CUSTOM_COMMAND
		- change to 'type = command', add custom response triggers with
			HINT_SEEK_REPLY_BAR, etc. to get reply bar with your
			triggers and automatic "Close" or "Cancel" triggers
		- change to 'type = multipleResponse', add custom response
			triggers with HINT_SEEK_REPLY_BAR, etc. to get reply
			bar with your triggers only
	- affirmativeAction, negativeAction, cancelAction & output
		- change to provide your own GenTrigger under the GenInteraction
			with the desired action (i.e. affirmativeAction,
			negativeAction, cancelAction & output) and with
			ATTR_GEN_TIGGER_INTERACTION_COMMAND with the
			appropriate InteractionCommand data word, depending on
			the old SRS_* type
	- MSG_GEN_SUMMONS_SET_OD -> MSG_GEN_TRIGGER_TRIGGER_SET_ACTION_OD on
		appropriate app-supplied response triggers
	- HINT_INVOLVED -> HINT_INTERACTION_COMPLEX_PROPERTIES
	- HINT_ONESHOT_USAGE -> HINT_INTERACTION_SINGLE_USAGE
- UserDoDialog
	- add initiatedViaUserDoDialog attribute on GenInteraction
	- specify response values of response triggers with
		ATTR_GEN_TRIGGER_INTERACTION_COMMAND instead of action method
	- response values change from SDBR_* (StandardDialogBoxResponses) to
		IC_* (InteractionCommand)
- UserStandardDialog/UserStandardDialogOptr
	- pass params on stack instead of in registers
	- update CDBF_* (CustomDialogBoxFlags)
		- CDBF_TYPE -> CDBF_DIALOG_TYPE
		- CDBF_RESPONSE_TYPE (SummonsResponseStyle) ->
			CDBF_INTERACTION_TYPE (GenInteractionType)
	- response values change from SDBR_* (StandardDialogBoxResponses) to
		IC_* (InteractionCommand)
- MSG_GEN_APP_DO_DIALOG
	- update CDBF_* (CustomDialogBoxFlags)
		- CDBF_TYPE -> CDBF_DIALOG_TYPE
		- CDBF_RESPONSE_TYPE (SummonsResponseStyle) ->
			CDBF_INTERACTION_TYPE (GenInteractionType)
	- response values change from SDBR_* (StandardDialogBoxResponses) to
		IC_* (InteractionCommand)
- MSG_GEN_DISMISS_INTERACTION
	- change to MSG_GEN_GUP_INTERACTION_COMMAND with IC_DISMISS
- MSG_GEN_NOTIFY_INTERACTION_COMPLETE
	- change to MSG_GEN_GUP_INTERACTION_COMMAND with IC_INTERACTION_COMPLETE
		or IC_DISMISS (if that is what you really intended)
- MSG_GEN_CLOSE_INTERACTION
	- change to MSG_GEN_GUP_INTERACTION_COMMAND with IC_INTERACTION_COMPLETE
		or IC_DISMISS (if that is what you really intended)
- MSG_GEN_INITITATE_INTERACTION
	- change to MSG_GEN_INTERACTION_INITIATE
- SDBR_* (StandardDialogBoxResponses)
	- SDBR_AFFIRMATIVE -> IC_YES if GIT_AFFIRMATION
	- make sure you test for the set of responses that are set up in the
		response triggers (e.g. you can't check for IC_OK in a
		GIT_AFFIRMATION -- it returns IC_YES, IC_NO, and IC_NULL)
- CDBF_* (CustomDialogBoxFlags)
	- CDBF_TYPE -> CDBF_DIALOG_TYPE
	- CDBF_RESPONSE_TYPE -> CDBF_INTERACTION_TYPE
	- SRS_YES_NO -> GIT_AFFIRMATION
	- SRS_ACKNOWLEDGE -> GIT_NOTIFICATION
	- SRS_OK_CANCEL -> GIT_MULTIPLE_RESPONSE + response trigger list
	- SRS_YES_NO_CANCEL -> GIT_MULTIPLE_RESPONSE + response trigger list
- SpoolPrintControl
	- remove HINT_MENUABLE, HINT_SUB_GROUP as these are handled in the
		default SpoolPrintControl definition,
		HINT_SAME_CATEGORY_AS_PARENT is still valid
- GenAttributes
	- change completesInteraction/GIA_COMPLETES_INTERACTION to
		GIA_SIGNAL_INTERACTION_COMPLETE/signalInteractionComplete


Miscellanious vis changes
-------------------------
	* Added the following messages which do the same thing as their 
	  utility counterparts (so they'll be reachable in C):
		MSG_VIS_RECALC_SIZE_AND_INVAL_IF_NEEDED
		MSG_VIS_POSITION_AND_INVAL_IF_NEEDED
		MSG_VIS_FIND_MONIKER
		MSG_SPEC_NAVIGATE_COMMON
		MSG_VIS_FORCE_GRAB_MOUSE
		MSG_VIS_GRAB_LARGE_MOUSE
		MSG_VIS_FORCE_GRAB_LARGE_MOUSE
		MSG_VIS_FORCE_GRAB_KBD
		MSG_VIS_SEND_ENTER_LEAVE_PTR_EVENTS
		MSG_VIS_IGNORE_PTR_EVENTS
		MSG_VIS_ADD_BUTTON_PRE_PASSIVE
		MSG_VIS_REMOVE_BUTTON_PRE_PASSIVE
		MSG_VIS_ADD_BUTTON_POST_PASSIVE
		MSG_VIS_REMOVE_BUTTON_POST_PASSIVE
		MSG_VIS_GET_POSITION (VisMove in V1.2)

	* Nuke the rather long winded, badly behaved, and unused
	  MSG_VIS_ISO_CONTENT_REMOTE_OBJ_MESSAGE_VIA_HOLD_UP_QUEUE.

	* Changed MSG_SPEC_FIND_MNEMONIC to MSG_SPEC_ACTIVATE_OBJECT_WITH_-
	  MNEMONIC, changed MSG_SPEC_CONVERT_DESIRED_SIZE to MSG_SPEC_CONVERT-
	  _DESIRED_SIZE_HINT.

Bye bye VisContentClass
-----------------------
      * The VisIsoContent object is no more.  The VisContent now has all the
	functionality that VisIsoContent had.  VisContent can be run by
	the same thread as the view (ui) or a different thread (app).  
	GVA_ISOLATED_CONTENTS has been removed from the view.  VCA_ISOLATED_
	FROM_VIEW has been removed from the content.  This should make life
	a little easier for those people setting up contents.

VisClass geometry and updating changes
--------------------------------------

      *	The image and geometry update mechanisms have changed somewhat. 
	The net effect is there are very few things unecessarily invalidated 
	now.  (The worst-case example of the old way was adding or removing
	objects at the end of a group, and having the entire group redrawn each
	time.)

	Previously, any time an object's bounds changed, its visual parent's
	image was marked invalid, thus causing it (and its children) to be 
	completely redrawn.  The geometry manager now saves away the old 
	bounds of an object in temporary data, and if the object moves, the 
	geometry manager will WinInval the old bounds and set the object's 
	image invalid.  The image update mechanism will then WinInval the new 
	bounds.  (Actually, a WinInvalReg is only done once during an update
	for a region containing all the invalid rectangles in a win group, to 
	make things faster).  Second, if a visual object is removed, its old 
	area is invalidated rather than marking the parent composite's image 
	as invalid (geometry is of course done on the parent in case its bounds
	do change).  Finally, a geometry flag GA_ONLY_DRAWS_IN_MARGINS can be 
	set for a composite to optimize invalidations -- if a composite is 
	invalid, only its margins are WinInval'ed.  The children then are 
	invalidated only if their bounds have changed.

	New methods added:  MSG_VIS_NOTIFY_BOUNDS_CHANGED, which an object
	sends to itself when its bounds change so it can invalidate its old
	bounds and marked its image invalid; MSG_VIS_VUP_ADD_RECT_TO_UPDATE_-
	REGION, which travels up the visual tree to a win group or portal
	and adds the passed rectangle to the invalidation region.

      *	Changed MSG_VIS_SET_POSITION for composites so it doesn't automatically
	move all the children (MSG_VIS_POSITION_BRANCH already does this).

	* Broke up VCI_geo in VisCompClass to be VCI_geoAttrs and VCI_geoDim-
	  ensionAttrs.  Changed VisComp geometry constants to be prefixed
	  with VCGA_ instead of GA_, and VCGDA_ instead of GDA_.

	* Changed geometry manager to it doesn't add child spacing after an
	  object that has no size, effectively acting as if the child weren't
	  there.  As a result, empty interactions no longer take up any space.

Miscellanious Gen changes
-------------------------
	* Nuked the old and weak HINT_IS_TOOLBOX.  HINT_TOOLBOX can now be put
	  on any composite-type object, and all the objects in the hierarchy
	  below it will act accordingly, including GenTriggers & both exclusive
	  and non-exclusive settings.  In addition, windows that have this
	  hint act like pinned menus in that they don't take the focus.
	  Exclusive-settings under HINT_TOOLBOX draw slightly differently
	  in color to make them be the same size as GenTriggers given the
	  same moniker.

GenText changes
---------------
	* Added a HINT_TEXT_WHITE_WASH_COLOR to the GenText object, since that's what
	  people do commonly and HINT_TEXT_WASH_COLOR is more difficult to use.
	  Fixed another problem with the wash color stuff.

GenViewChanges
--------------
      * Removed noMaxSize/GVDA_DOC_SIZE_IS_NOT_MAX flag from the dimension
	attributes.  The view by default no longer shrinks (often annoyingly)
	to fit the content size.  You can set GVDA_NO_LARGER_THAN_CONTENT
	to get this behavior.  You can also set GVDA_NO_SMALLER_THAN_CONTENT
	to keep the view displaying the entire content (for non-scrollable
	views). Many, many apps updated to hopefully keep the same behavior
	that they had before.

      *	Keyboard character passing stuff has changed.  The view by default
	now sends *all* keyboard characters to the content if they are not 
	handled by the specific UI, which gets first crack at them.  (The 
	exception is ALT, which is always sent to the application, whether 
	handled by the UI or not.)    If this is not acceptable to the app, 
	GVA_SEND_ALL_KBD_CHARS can be set, which gives ALL keyboard characters 
	to the content first, which then is expected to FUP them up so the 
	specific UI can handle them.  Applications shouldn't have to use
	this flag in most cases.  GVA_DONT_SEND_KBD_RELEASES works as before.
	VGA_SEND_ALL_CHARS_TO_CONTENT is gone.  Updated docs in genView.asm.

GenListChanges
--------------
	* Changed MSG_GEN_LIST_SET_ENTRY_MONIKER (and all uses of it) to 
	  expect copyFlags in the CopyListEntryMonikerFrame structure rather 
	  than cx, so a C stub could be written (and exciting C sample apps 
	  could be written).   I changed over most apps to pass this correctly,
	  but if your app dies while sending this message, this is the culprit.

GenTrigger changes
------------------
	* Nuked GenDataTrigger.  GenTrigger takes a HINT_GEN_TRIGGER_ACTION_
	  DATA with a variable size argument in place of it.  Changed the
	  500 some-odd uses of the GenDataTrigger in applications.  I tested
	  the major working apps somewhat, and with any luck, I didn't make 
	  any difficult-to-track-down mistakes (like moving a dataDX to be
	  passed in cx, etc.)    

	* Changed various trigger message names.  The new message names are:
		MSG_GEN_TRIGGER_SEND_ACTION
		MSG_GEN_TRIGGER_GET_ACTION_MSG
		MSG_GEN_TRIGGER_SET_ACTION_MSG
		MSG_GEN_TRIGGER_GET_DESTINATION
		MSG_GEN_TRIGGER_SET_DESTINATION

	  instance data names changed (in .asm only; .goh names are in NAME_-
	  CHANGED) to GTI_actionMsg, GTI_destination.   .uih names will remain the
	  same until uic's eventual death.

	* GenTrigger now handles ATTR_GEN_CUSTOM_DOUBLE_PRESS to send out a
	  different message when double-clicked on.

GenClass geometry hints
-----------------------
	* For those who feel compelled to get around the geometry manager
	  (and face the myriad possible problems in doing so), there are
	  now positioning attributes that supercede the geometry manager's
	  calculated positions:

		ATTR_GEN_POSITION = {x, y};    
					   Forces a position, relative to the 
					   object's visual parent
		ATTR_GEN_POSITION_X = x;	   
					   Forces an x position, relative to
					   the object's visual parent
		ATTR_GEN_POSITION_Y = y;	   
					   Forces a y position, relative to
					   the object's visual parent.

		HINT_ALIGN_TOP_EDGE_WITH_OBJECT = @MyObject;
		HINT_ALIGN_LEFT_EDGE_WITH_OBJECT = @MyObject;
		HINT_ALIGN_RIGHT_EDGE_WITH_OBJECT = @MyObject;
		HINT_ALIGN_BOTTOM_EDGE_WITH_OBJECT = @MyObject;
					   Will line up the object's edge
					   with the same edge of some other 
					   object.  One of these can be used
				 	   for each direction.

	* Added MSG_GEN_ADD_GEOMETRY_HINT and MSG_GEN_REMOVE_GEOMETRY_HINT,
	  which allow geometry and window pos/size hints to be added or removed
	  while the object is onscreen, and have the object redo its geometry
	  accordingly.   Untested so far, actually.

	  Broke off specific object geometry setup into MSG_SPEC_SCAN_-
	  GEOMETRY_HINTS  (previously scattered throughout MSG_SPEC_BUILD and 
	  MSG_META_INITIALIZE handlers), so objects can redo their geometry on the 
	  fly.

GenGlyph changes
----------------
	* Removed maxWidth from GenGlyphDisplayClass.  Implemented HINT_EXPAND-
	  WIDTH_TO_FIT_PARENT, HINT_EXPAND_HEIGHT_TO_FIT_PARENT, HINT_-
	  CAN_CLIP_MONIKER, and the size hints for GenGlyph.

File Selector (3/25/92)
-----------------------
	* most match criteria moved to vardata. the presence of the vardata is
	  enough to signal it should be used, while the absence of the
	  vardata, for all things but the FileAttrs, indicates it shouldn't
	  enter into the picture. If no ATTR_GEN_FILE_SELECTOR_FILE_ATTR is
	  present, the file selector will have 0 for the attributes that must
	  match, and mask FA_HIDDEN or mask FA_SYSTEM for those that must not
	  match.

	* current path is set and fetched via the MSG_GEN_PATH_{GET,SET}
	  messages. This allows setting to a StandardPath, etc.
	
	* fileTypes and fileCriteria merged into single 16-bit fileCriteria
	  record.
	  
	* wildcard pattern is for virtual namespace, so * should be used
	  instead of *.*, if you're so inclined.

FileEnum (3/25/92)
------------------
	* Major restructuring of FileEnumParams. FileEnum now works with three
	  arrays of extended-attribute descriptors, and always returns its 
	  results in a dynamically-allocated buffer.
	  
	  The first array of extended-attribute descriptors indicates where
	  within each return record the particular attribute should be placed.
	  FEAD_attr gives the attribute to be returned, FEAD_value.offset
	  gives the offset within the record (FEAD_value.segment is always 0),
	  FEAD_size gives the size of the space within the record where the
	  value should go.
	  
	  The second array dictates the matching criteria. For attributes
	  whose value is a byte or word record (i.e. bitfields), the low byte
	  (or all) of FEAD_value.offset contains the bits in the attribute
	  that must be set for the file to match, while the low byte (or all)
	  of FEAD_value.segment contains the bits in the attribute that must
	  not be set for the file to match.
	  
	  For attributes whose value is a byte or word integer, the value
	  against which to compare the attribute's value is in
	  FEAD_value.offset.
	  
	  For attributes whose value is a null-terminated string, the value
	  against which to match is pointed to by FEAD_value and will be
	  compared up to the terminating null.
	  
	  For attributes whose value is an array of bytes, the value against
	  which to match is pointed to by FEAD_value and all bytes dictated by
	  FEAD_size will be compared.
	  
	  The third array is the attributes that need to be fetched for each
	  file so they may be passed to the caller-specified callback routine.

	* The caller may specify the buffer size as unlimited, in which case
	  FileEnum will start with a reasonably-sized buffer and expand it as
	  necessary and as possible. The only time the number of missed files
	  will return non-zero is if there was not enough memory available to
	  store all the records. The caller specifies a buffer size, that many
	  records will be allocated at the start. If not that many files are
	  found, the buffer will be shrunk to contain only those that were.


Misc changes 4/29/92

        * GenCheckIfFullyUsable & GenCheckIfFullyEnabled now require a flag to
          be passed in cx, which indicates whether an optimized check, or a
          full check, should be performed (see headers for details).  Pass
          cx=non-zero for old behavior, cx=0 for equivalent functionality of
          old VisCheckIfUsable/VisCheckIfFullyEnabled.

        * Nuked VisCheckIfUsable, VisCheckIfFullyEnabled.  Use
          GenCheckIfFullyUsable(0)/GenCheckIfFullyEnabled(0) instead.

        * More NAME_CHANGES, in the area of exported message ranges:
                SpecGenClass    -> GenSpecMessages
                AppGenClass     -> GenAppMessages
                SpecVisClass    -> VisSpecMessages
                AppVisClass     -> VisAppMessages
                        
        * Nuked VTF_IS_ROOT from VisTypeFlags in VisClass.  Hardly anthing found
          this useful, & this made room for the new VTF_IS_INPUT_NODE bit, which
          allows for mouse & kbd grab/release routines to be much quicker.

Steve!    NOTE:  Anyone implementing their own mouse or keyboard input node
          must set this bit on the node object, or MSG_META_VUP_ALTER_INPUT_FLOW
          messages from below will in many cases not be delivered to the object.

GenInteraction/menu typing
--------------------------
- add ATTR_GEN_INTERACTION_GROUP_TYPE to indicate to the specific UI the
	function of a GenInteraction.  Takes enumerated type,
	GenInteractionGroupType.  Currently defined values are GIGT_FILE_MENU,
	GIGT_EDIT_MENU, GIGT_VIEW_MENU, GIGT_OPTIONS_MENU, GIGT_PRINT_GROUP,
	GIGT_WINDOW_MENU, and GIGT_HELP_MENU.  The specific UI will provide
	monikers for such GenInteractions, so you can leave that blank, unless
	you want a custom moniker.  Removed HINT_IS_{FILE,EDIT,VIEW,OPTIONS,
	WINDOW,HELP}_MENU.  Also removed the .uic shortcuts {FILE,EDIT,WINDOW,
	OPTIONS,HELP}_MENU_VALUES.

- For GenInterations specified as GIGT_FILE_MENU (and GIV_POPUP), the specific
	UI will automatically created an "Exit" menu item at the end of the
	menu.  The "Exit" item exits the application.  If you wish to provide
	your own "Exit" item (so you can have a custom action), you can supply
	the GenTrigger and mark it with ATTR_GEN_TRIGGER_INTERACTION_COMMAND
	and the new InteractionCommand IC_EXIT.  The specific UI will supply
	the moniker, so you can leave that blank, unless you want some custom
	moniker.  Removed .uic shortcut EXIT_TRIGGER_VALUES.

Active list
-----------
- forget all the old active list stuff.  There are now 4 GCN lists for the
	items on the old active list:  MGCNLT_ACTIVE_LIST, GAGCNLT_WINDOWS,
	GAGCNLT_OPTIONS, and GAGCNLT_GEN_CONTROL_OBJECTS, used as follows:

	MGCNLT_ACTIVE_LIST - this list is for objects that need to receive
	MSG_META_ATTACH, MSG_META_DETACH, and/or MSG_META_QUIT.  Currently,
	this is only certain controllers (see below).  These controllers need
	MSG_META_ATTACH, so they should be placed on the MGCNLT_ACTIVE_LIST list
	in the .ui/.goc file, using the new gcnList syntax.  Other objects may
	add themselves dynamically, if they only need to receive MSG_META_DETACH
	or MSG_META_QUIT.

	GAGCNLT_WINDOWS - this list is for windowed objects on screen.  In your
	.ui/.goc file, you would have any windows on this list that you want to
	appear when the application starts up.  In most cases, this is just a
	GenPrimary.  When windows are opened, they are automatically added to
	this list.  The list is saved to state and used to re-open all windows
	that were on-screen when the appliation shutdown.  The only message sent
	to this list is MSG_META_UPDATE_WINDOW.  The handlers for this message
	replace the functionality of the old MSG_META_ATTACH, MSG_META_DETACH,
	and MSG_SPEC_UPDATE_GEN_WIN_GROUP handlers.

	GAGCNLT_OPTIONS - this list is strictly for objects that deal with
	MSG_META_LOAD_OPTIONS and MSG_META_SAVE_OPTIONS.  MSG_META_LOAD_OPTIONS
	is automatically sent by the UI when the application starts up.
	MSG_META_SAVE_OPTIONS must be sent by the application.

	GAGCNLT_GEN_CONTROL_OBJECTS - this is a list of ALL controllers in your
	app

	Controllers that need to be on MGCNLT_ACTIVE_LIST list:
		GenEditControl
		GenViewControl
		GenToolControl
		PrintControl (not GenPrintControl)
		GenDocumentControl
		GenDisplayControl
		TextRulerControl
		TabControl

- GCN lists (for both .goc and .ui) are defined like so:

	gcnList(MANUFACTURER_ID_GEOWORKS,GAGCNLT_WINDOWS) = MyPrimary;
	gcnList (MANUFACTURER_ID_GEOWORKS,MGCNLT_ACTIVE_LIST) =
			MyDisplayControl;
	gcnList (MANUFACTURER_ID_GEOWORKS,GAGCNLT_GEN_CONTROL_OBJECTS) =
			MyDisplayControl,
			MyFontControl;
	gcnList (MANUFACTURER_ID_GEOWORKS,GAGCNLT_OPTIONS) = MyOptionsMenu;
