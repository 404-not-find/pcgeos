COMMENT @MECHANISM DESCRIPTION-------------------------------------------------


			    Scalable UI

$Id: ScalableUI.doc,v 1.9.34.1 97/03/29 03:37:29 canavese Exp $

Synopsis
--------

	The purpose of this file is to describe the PC/GEOS concept of
	Scalable Interfaces, & the API for supporting this capability within
	your application.

Limitations
-----------

Alternatives
------------

Implementation Status
---------------------

See Also
--------
	<related objects, mechanisms, modules, other documentation>

;------------------------------------------------------------------------------
;	Description
;------------------------------------------------------------------------------

Terminology
-----------

Relationships/Context
---------------------
	<Relationship of this mechanisms to others, tree relationship of
	 objects>

Conceptual Overview
-------------------
	The following descriptions represent some conceptual levels of interface
	that a user might desire or require.  Applications should be designed
	such that by turning on or off options, they can be made to meet the
	goals of the conceptual levels described below.
	Application can then initialize those options based on the system-wide
	"starting interface level", until the user feels comfortable enough
	with the app to tweak it to whatever level or option set they desire.

	The constant represents the default level of interface desired by the
	user.  Lengthy descriptions are included here so that app designers
	can appropriately tune the default behavior of their applications
	for each given level.  Note that this is only a default -- all options
	offered by the system/library objects or applications should be
	individually settable by the user.  The interpretation of this setting
	by the various system & library mechanisms & objects should be
	documented for that geode.  The documentation for default option
	settings in the UI library itself may be found below in the section
	entitled "UI library option defaults"

	UIIL_NOVICE			enum	UIInterfaceLevel
	; This level is designed for the first-time user, or those who just
	; use computers infrequently.  Complex models & all but the most basic
	; features are shunned in favor of metaphors & functionality that is
	; easy to grasp.  Ease of learning and the absence of anything that
	; isn't immediately obvious are the most important considerations
	; of interfaces presented at this level, with a focus towards
	; providing a pleasant experience.  Ease of quick results is very
	; important, however prefabricated & limited in scope (remember
	; PrintShop?).
	;
	; Default behavior:
	; In this mode, the UI protects the user from the concepts of
	; "running" applications & "open" documents by letting them just
	; switch to whatever application & document they wish to use.  The
	; UI takes care of managing the running status of applications &
	; open status of documents transparently, in the background.
	; Apps generally come up maximized, and have no window controls
	; whatsoever (the exception here is desk accessories, which float
	; on top and may be moved & dismissed by the user).  Only one 
	; document at a time may be worked on, & it generally appears in
	; a display which is perminantly maximized.  Applications where
	; the user typically uses only one data file (Address book) won't
	; have a "File" menu at all.  Applications designed for creation of
	; new files will have only "New..." & "Switch to..." options, & will
	; automatically fetch & place files in a single directory.  Kbd
	; shorcuts & mnemonic navigation are turned off (excepting kbd only
	; systems) Application menu structures in general are kept to a minimum,
	; & advanced features are kept completely hidden, not even accessible
	; through the "Options" menu.

	UIIL_BEGINNING_INTERMEDIATE	enum	UIInterfaceLevel
	; This level is designed for those who feel comfortable with the
	; basic operation of their computer, how it works, what modules
	; exist within it, etc. & wish to gain access to more of its 
	; capability, or need to solve a particular problem or need for
	; something other than a canned solution.  This level adds in a number
	; of useful features to UI-provided menus, & results in applications
	; offering "options" to turn on all but the most advanced or short-cut
	; oriented capabilities within them. Ease of Learning remains the most
	; important aspect of the interface, & probability of successful
	; usage the most important goal.  We're trying to get the user to be
	; able to actually *accomplish* things here, all on their own, with
	; a low risk of failure.  Time to task completion is not an issue so
	; long as the user is able to figure out what the model is, how to use
	; it, & is able to actually complete whatever it is they're trying to
	; do.  This may be accomplished via more verbose, or scripted dialogs,
	; as opposed to the "set everything at once" type of dialogs seen
	; at higher levels.  The computer should detect abnormal or
	; dangerous situations & help the user to avoid costly mistakes.
	; Dangerous actions should be undoable.  Options that trade
	; performance against safety or recoverability will be tilted
	; towards recoverability.
	;
	; Default behavior:
	; In this mode, the document control adds "New..", "Switch to...", 
	; "Quick Backup", & variety of other capabilities.  Applications
	; offer a way to access most of their features.  The app launch &
	; document models remain "transparent".  Apps continue to run
	; full-screen.  Files created by the user remain in one directory.
	;

	UIIL_ADVANCED_INTERMEDIATE	enum	UIInterfaceLevel
	; This level is designed for people familiar with the capabilities
	; of the software, & who are now willing to learn a few things that
	; might not otherwise be obvious in order to speed up their ability
	; to get things done.
	;
	; Default behavior:
	; Here we introduce the user to the concepts of "running apps" &
	; "open documents", & adds in easy to understand "power" features
	; that makes it easier to get things done.  The user must open &
	; close apps & docs to manage accessibility & performance.  App
	; windows start out overlapping (except on machines w/small screens)
	; Adds window min/max/restore capability, pinned menus.  Systems
	; with both mice & keyboards get kbd accelerators & mnemonic
	; navigation.  The system allows only one instance of any given
	; app to be running, but allows multiple documents to be open within
	; that app.

	UIIL_ADVANCED			enum	UIInterfaceLevel
	; This level is designed for the people who use their computer day in,
	; day out, and know PC/GEOS like the back of their hand.  All the
	; bells & whistles available are offered here, though still organized 
	; intelligently with the degree of accessibility set by the user --
	; a technical writer may live in his Word Processor, for instance, but
	; venture into other applications only infrequently -- they shouldn't
	; all look like the cockpits of 727's.  A reduction in the number
	; of steps necessary to complete common tasks, & the speed in which
	; this can be done becomes very important.  The key phrases here
	; are "powerful", "well designed", and "intelligent".
	;
	; Default behavior:
	; The UI offers the possibility of multiple instances of a given app,
	; dialog-clarified.  The notion of hierarchical storage of document
	; files is introduced.
	; 

	UIIL_GURU			enum	UIInterfaceLevel
	; Same as "UIIL_ADVANCED" level, but minus protective warning dialogs
	; that might be annoying to someone who never makes mistakes. :)
	; Options that trade performance against safety or recoverability are
	; tilted towards performance.

Warnings
--------


Usage: <Usage #1>
-----------------
	<Describe the common case, then exactly what the programmer has to do
	 to completely support it.  If 1 or more "In-Depth" topics apply, refer
	 to them.>

Usage: <Usage #2>
-----------------
	<If more than one common case..>

...

In-Depth: <Topic #1>
--------------------

In-Depth: <Topic #2>
--------------------

...


See Also
--------
	<related objects, mechanisms, modules, other documentation>

;------------------------------------------------------------------------------
;	UI library options
;------------------------------------------------------------------------------

Starting interface level
------------------------
	[ui features]
	interfaceLevel = 1	; UIInterfaceLevel value here

	This is the starting, or default interface level for all other options
	offered throughout the system & in applications, which is used until
	the user goes in changes the level for that piece of software, or 
	customizes it via the offered options.  Essentially, this becomes
	the interface level to use when the user uses an app for the first
	few times, before they become familiar with it & customize it by
	setting the interface level or individual options to suit them.

Launch options
--------------
	[ui features]
	launchModel = 1

	-> If document double-clicked on, & is already open, that app &
           document would be brought to the top.  (This would really just
           be a general feature of the system, aside from the application
           launching options offered here)

        * launchModel = 0:  Transparent application launching
		-> applications are shut down in background, & reloaded when
		   switched to
                -> Single instance limit on any given app
                -> App windows are full screen (except for those marked as
                   Desk Accessories, which float on top, & would not be 
		   managed transparently, i.e. would have to stay in memory
		   until exited))
		-> Minimize/Maximize/Restore/Close features of full-screen
		   main Primary windows removed
		-> "Exit" item is eliminated from File menu

        * launchModel = 1 to 3:
       		-> By default, app windows are not maximized on launch, and are
		   movable & resizable.  This could be "fine tuned" by using
		   window options below, however.

          	* launchModel = 1:  Single instance per app
                	-> Single instance limit on given app
          		-> If app or document is double-clicked on, and an
			   instance of the app is already running, that
			   instance would be brought to the top (& any
			   document opened/switched to within it, depending
			   on the doc model)

            	* launchModel = 2:  Multiple instances available
            		-> If app or document double-clicked on, and an
			   instance of the app is already running, a dialog
			   would come up asking if one of the already running
			   apps should be used, or whether a new instance
			   should be created.

            	* launchModel = 3:  "Power" multiple instances
            		-> Like V1.2

Launch levels
-------------
	[ui features] (or field name)

	launchLevel = <0,1,2,3>

	The deterimines the default UI level for applications to launch in

Interface options
-----------------
	[ui features] (or field name)

	interfaceOptions = <bitmask>

    UIIO_OPTIONS_MENU:1			;TRUE if the options menu should exist

Window options
--------------
	[ui features] (or field name)

	windowOptions = <bitmask>

	-> Top 8 bits would be mask of which settings have been overriden,
	   bottom 8 is actually settings

	UIWO_MAXIMIZE_ON_STARTUP:1
	; If true, applications by default would come up maximized.  There
	; will be a way for applications that are considered desk accessories
	; to defeat this behavior, so that they come up overlapping, & on top
	; where the user can always get at them.

	UIWO_COMBINE_HEADER_AND_MENU_IN_MAXIMIZED_WINDOWS:1
	; This is a scren space saving measre -- if true, the header & menu
	; areas of maximized windows is combined, such that only the window
	; gadgetry, window menu & menus are left, i.e. the title string is
	; eliminated.

	UIWO_PRIMARY_MIN_MAX_RESTORE_CONTROLS:1
	; If false, window gadgetry & menu items for minimizing, maximizing,
	; & restoring would disappear from primary windows.

	UIWO_WINDOW_MENU:1
	; If true, a window menu for keyboard control of
	; min/max/restore/move/resize features will be provided.   If false,
	; only a "close" icon will appear in this space.

	UIWO_PINNABLE_MENUS:1
	; True to allow "pinnable" menus.

	UIWO_KBD_NAVIGATION:1
	; True to allow keyboard accelerators, keyboard navigation

Express access options
----------------------
	[uiFeatures]
	expressOptions = <bitmask>

	-> Top 8 bits would be mask of which settings have been overriden,
	   bottom 8 is actually settings

	UIEO_EXIT_TO_DOS:1
	; Set for "Exit to DOS" option, clear for none.

	:7

	Most of the express menu features are controlled by the limits of
	the hardware & other option settings:

	Running tasks list:	Appears for launchModel >= 1
	Startup list:		Submenu for launchModel >= 1, replaces
				running tasks area for launchModel = 0
	Welcome:		Appears if Welcome present
	Printer control panel:	Appears if Spooler present


Document Control options
------------------------
	[ui features]
	backupDir = <DiskSave data> (default = DOCUMENT/BACKUP)
		Directory for Quick Backup

	docControlOptions = integer
    DCO_BYPASS_BIG_DIALOG:1	;True to bypass the
				;NewEmpty/Template/Import/Open/Close dialog
    DCO_TRANSPARENT_DOC:1	;True to use "Switch Document" in place of
				;New/Open/Close and to only allow a single
				;open document and to immediately prompt for
				;a new for untitled documents
    DCO_HAVE_FILE_OPEN:1	;Have a File->Open
    DCO_ALWAYS_SIMPLE_FS:1	;Always have a simple file selector (no
				;advanced button)

	docControlFSLevel = {0,1,2,3}

	0 - no directories
	1 - directories, but simple file selector
	2,3 - directories and complete file selector

;------------------------------------------------------------------------------
;	UI library option defaults
;------------------------------------------------------------------------------

Based on the interface level setting for the UI library itself, available
from within the "Preferences" application (and in products where this is
desired, as a dialog that appears during installation)

(NOTE:  The above-mentioned interface level may currently be directly set
in the .ui file, via "interfaceLevel" in the UI category)

Starting Interface Level
------------------------
		Novice		Beg Int.	Adv. Int	Adv.
		-----------	------------	------------	-------------
starting
interface
level		Novice		Beg Int.	Beg Int.	Adv. Int.

Launch model
------------
		Novice		Beg Int.	Adv. Int	Adv.
		-----------	------------	------------	-------------
launch model	transparent	transparent	single instance	multiple
						per app 	instances
								available
Window model
------------
		Novice		Beg Int.	Adv. Int	Adv.
		-----------	------------	------------	-------------
maximize on
startup		yes		yes		if small screen	if small screen
						or kbd only	or kbd only

combine header	on small 	on small	on small	on small
and menu if	screens		screens		screens		screens
maximized

primary min/
max/restore
controls	no		no		yes		yes

display min/
max/restore
controls	no		no		yes		yes

window (system)
menu		full menu present if system has keyboard only, else is
		replaced w/close button ------------------------------------>

pinnable menus	no		no		yes		yes

kbd navigation	if kbd only	if kbd only	yes		yes

kbd accel.	if kbd only	if kbd only	yes		yes


Express Access
--------------
Exit to DOS	yes, unless there is no DOS command shell available, such as
		is the case on Zoomer -------------------------------------->

Document Control
----------------
		Novice		Beg Int.	Adv. Int	Adv.
		-----------	------------	------------	-------------
transparentMode	yes		yes		no		no

File Selector
-------------
		Novice		Beg Int.	Adv. Int	Adv.
		-----------	------------	------------	-------------
< **************** NOT YET DETERMINED *********************** >


;------------------------------------------------------------------------------
;	Assembling & Debugging
;------------------------------------------------------------------------------


Sample Code/Programming Tips
----------------------------
	<useful code snippets, references to sample applications & a short
	 description of them>

Include Files Needed
--------------------

Assembly Tips
-------------

Debugging Tools & Tips
----------------------

See Also
--------
	<Sample apps, related tools, other documentation>


;------------------------------------------------------------------------------
;	Internal Structure
;------------------------------------------------------------------------------


;------------------------------------------------------------------------------
;	Most frequently asked questions
;------------------------------------------------------------------------------

	<anytime someone asks you a question about this object, clear up
	 the documentation above to explain it, or add an entry here>


;------------------------------------------------------------------------------
;	Declaration
;------------------------------------------------------------------------------

	NOTE: The section between "Declaration" and "End Declaration" is
	      copied into uilib.def by "pmake def"

Declaration
-----------

;------------------------------------------------------------------------------
;	Constants & Structures
;------------------------------------------------------------------------------

	<Use this section only for files which actually make declarations
	 relative to the mechansism, i.e. are code & not just documentation>

End Declaration
---------------

------------------------------------------------------------------------------@


