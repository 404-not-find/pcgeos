
	File: documentModels
	Description: This document describes the document models
		     available in GEOS
	Author: Tony Requist
	Date: 8/22/91

	$Id: DocumentModels.doc,v 1.2.34.1 97/03/29 03:36:41 canavese Exp $

Synopsis
--------
Applications can visual display documents in many ways.  The document
control is designed to make the common ways of displaying documents as
simple as possible.

The model for displaying the document depends on:
- whether the application is using the single threaded model or the
  multi-threaded model
- whether document behavior is added by subclassing the GenDocument
  object or by sending output to the process
- whether only a single open document is supported (as opposed to
  multiple open documents)
- whether a one to one mapping exists between documents and GenViews
  to display them
- whether an object tree is used to display the document, whether that
  object tree is generic or visual, and whether or not the document is
  saved by saving the object tree 

All possible combinations of these models (and others that exist due
to the flexible nature of the UI) are not described here, but the
models described below will cover (or can be combined to cover) almost
all situations.

Simple procedural one document model, view attached to process
--------------------------------------------------------------
- document output to process
- one open document (at a time)
- single GenView to display the document with the output of the
  GenView pointing at the process

This is a simple model for dealing with documents.  The sample
application Document/ProcView works in this way.

Simple procedural one document model, static UI objects
-------------------------------------------------------
- document output to process
- one open document (at a time)
- static UI objects display the document

This is another simple model for dealing with documents.  The sample
application Document/ProcUI works in this way.

Simple object-oriented one document model, view attached to GenDocument
-----------------------------------------------------------------------
- GenDocument object subclassed by application
- one open document (at a time)
- single GenView to display the document with the output of the
  GenView pointing at the GenDocument

This is a simple way of dealing with documents in an object oriented
model.  This model takes advantage of the fact that GenDocumentClass
is subclassed fromVisIsoContentClass and thus has the behavior of a
content object.  Thus, the GenDocument object responds to visual
messages (such as MSG_DRAW).  The sample application Document/DocView
works in this way.

Simple object-oriented one document model, static UI objects
------------------------------------------------------------
- GenDocument object subclassed by application
- one open document (at a time)
- static UI objects display the document

This is a simple way of dealing with documents in an object oriented
model.  The sample application Document/DocUI works in this way.

*** DocUI does not work -- waiting for ability to set output of Range
			   to be the target document

Simple object-oriented one document model saving a visual object tree
---------------------------------------------------------------------
- GenDocument object subclassed by application
- one open document (at a time)
- visual object tree used to display the document and saved in the
  file as the representation of the document

This model uses a visual object tree to represent the document and
then saves that visual tree in the document file.  The sample
application *** works in this way.

*** Not yet implemented

Simple object-oriented one document model saving a generic object tree
----------------------------------------------------------------------
- GenDocument object subclassed by application
- one open document (at a time)
- generic object tree used to display the document and saved in the
  file as the representation of the document

This model uses a generic object tree to represent the document and
then saves that generic tree in the document file.  The sample
application *** works in this way.

*** Not yet implemented

Simple object-oriented one document model, dynamic generic object tree
----------------------------------------------------------------------
- GenDocument object subclassed by application
- one open document (at a time)
- generic object tree dynamically constructed to display the document

This model constructs a generic object tree to display the document.
The sample application *** works in this way.

*** Not yet implemented

Object-oriented multiple document model, view attached to document
------------------------------------------------------------------
- GenDocument object subclassed by application
- mutliple open documents
- static UI objects display the document
- GenDisplay duplicated for each document.  Single GenView inside the
  GenDisplay to display the document with the output of the GenView
  pointing at the GenDocument

This model allows multiple documents to be open.  It creates a
GenDisplay for each open document (the GenDisplay's are managed by the
GenDisplayControl).  The sample application Document/MultView works in
this way.

Simple object-oriented one document model, multi-user file
----------------------------------------------------------
- GenDocument object subclassed by application
- one open document (at a time)
- multi-user access allowed to files

This is a variation of the DocView sample to demonstrate the document
control's support for multi-user files.  The sample application
Document/SharedDB works in this way.
