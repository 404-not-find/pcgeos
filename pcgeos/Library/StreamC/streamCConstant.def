COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1993 -- All Rights Reserved

PROJECT:	GEOS
MODULE:		Library/StreamC
FILE:		streamCConstant.def

AUTHOR:		John D. Mitchell

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	JDM	93.07.08	Initial version.

DESCRIPTION:
	This file contains all of the internal constant definitions for the
	C Stream Driver Library.

	$Id: streamCConstant.def,v 1.1 97/04/07 11:15:04 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@


COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		Fatal Errors
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@
DATA_ROUTINE_NOTIFIER_MUST_BE_SET_WITH_StreamSetDataRoutineNotify enum FatalErrors
; When setting a routine notifier for the SNE_DATA event, you must use the
; routine StreamSetDataRoutineNotify, not StreamSetRoutineNotify
;


COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		Constant Definitions
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

;
; The serial driver status is as yet unknown.
;
SERIAL_PORT_STATUS_UNKNOWN	= (0x01 shl 15)

;
; Indicate that the user has passed in an invalid port specifier.
;
SERIAL_PORT_INVALID		= (0x01 shl 14)

;
; The maximum number of serial ports that are supported.
;
MAX_NUM_SERIAL_PORT		= 8


COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		Structure Types
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

;
; DriverPassParams is used to give information from a caller into a
; driver entry point routine.
;
DriverPassParams	struc
	DPP_ax		word
	DPP_bx		word
	DPP_cx		word
	DPP_dx		word
	DPP_si		word
	DPP_bp		word
	DPP_ds		word
	DPP_es		word
DriverPassParams	ends

;
; DriverReturnParams is used to return the results of an invocation of a
; driver entry point routine.
;
DriverReturnParams	struc
	DRP_ax		word
	DRP_bx		word
	DRP_cx		word
	DRP_dx		word
	DRP_si		word
	DRP_di		word
	DRP_bp		word
	DRP_ds		word
	DRP_es		word
	DRP_flags	word
DriverReturnParams	ends


StreamCallbackData	struct
    SCD_handle		hptr.StreamCallbackData
    ;	Pointer to self
    
    SCD_next		sptr.StreamCallbackData
    ; 	Next registered callback
    
    SCD_driver		hptr
    ;	Driver with which the callback is registered
    
    SCD_unit		word
    ;	Unit for which it is registered
    
    SCD_type		StreamNotifyType
    ;	Event/side for which it is registered
    
    SCD_callback	fptr.far
    ;	C Routine to call for general notifier, error notifier, passive notifier
    ;	and modem notifier. Called as
    ;		void _pascal (*callback)(word data, word cxValue, word bpValue)
    ;
    ; 	For data notifier:
    ;		cxValue is # bytes available
    ;		bpValue is STREAM_READ/STREAM_WRITE
    ;	For error notifier:
    ;		cxValue is error word
    ;		bpValue is undefined
    ;	For passive notifier:
    ;		cxValue is SerialPassiveNotificationStatus
    ;		bpValue is port #
    ;	For modem notifier:
    ;		cxValue is SerialModemStatus
    ;		bpValue is undefined
    ;
    ;	C routine to call for special data notifier:
    ;		word _pascal (*callback)(word data, word cxValue, word bpValue)
    ;
    ;	For read side:
    ;		cxValue is byte just read
    ;		bpValue is STREAM_READ
    ;		return is non-zero if byte was consumed, else byte is placed
    ;			in stream
    ;	For write side:
    ;		cxValue is undefined
    ;		bpValue is STREAM_WRITE
    ;		return high byte is non-zero if low byte contains byte to
    ;			write into the now-free byte in the stream
    
    SCD_ds		sptr
    ;	Value to load into DS before calling. (as passed to
    ;	StreamSetRoutineNotify or StreamSetDataRoutineNotify)
    
    SCD_data		word
    ;	Data value to pass to callback

StreamCallbackData	ends
