/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
start GrObjTCMonikerResource, data;
visMoniker BringToFrontTCMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = normal;
	color = color4;
	cachedSize = 15, 15;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 156
		Bitmap <15,15,0,BMF_4BIT or mask BMT_MASK>
	db	0x7e, 0x00
	db	0x21, 0x11, 0x11, 0x12, 0x22, 0x22, 0x22, 0x20
	db	0x7e, 0x00
	db	0x21, 0x99, 0x99, 0x12, 0x22, 0x22, 0x22, 0x20
	db	0x7e, 0x00
	db	0x21, 0x99, 0x99, 0x12, 0x22, 0x22, 0x22, 0x20
	db	0x7f, 0xf0
	db	0x21, 0x91, 0x11, 0x11, 0x11, 0x11, 0x22, 0x20
	db	0x7f, 0xf8
	db	0x21, 0x91, 0xff, 0xff, 0xff, 0xf1, 0x92, 0x20
	db	0x7f, 0xf8
	db	0x21, 0x91, 0xff, 0xff, 0xff, 0xf1, 0x92, 0x20
	db	0x7f, 0xf8
	db	0x21, 0x11, 0xff, 0xff, 0xff, 0xf1, 0x92, 0x20
	db	0x1f, 0xf8
	db	0x22, 0x21, 0xff, 0xff, 0xff, 0xf1, 0x92, 0x20
	db	0x1f, 0xf8
	db	0x22, 0x21, 0xff, 0xff, 0xff, 0xf1, 0x92, 0x20
	db	0x1f, 0xfc
	db	0x22, 0x21, 0xff, 0xff, 0xff, 0xf1, 0x11, 0x20
	db	0x1f, 0xfc
	db	0x22, 0x21, 0xff, 0xff, 0xff, 0xf1, 0x91, 0x20
	db	0x1f, 0xfc
	db	0x22, 0x21, 0xff, 0xff, 0xff, 0xf1, 0x91, 0x20
	db	0x1f, 0xfc
	db	0x22, 0x21, 0x11, 0x11, 0x11, 0x11, 0x91, 0x20
	db	0x0f, 0xfc
	db	0x22, 0x22, 0x99, 0x99, 0x19, 0x99, 0x91, 0x20
	db	0x00, 0xfc
	db	0x22, 0x22, 0x22, 0x22, 0x11, 0x11, 0x11, 0x20
		GSEndString
	}
}
end GrObjTCMonikerResource;
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
start GrObjTMMonikerResource, data;
visMoniker BringToFrontTMMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 15, 15;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 36
		Bitmap <15,15,0,BMF_MONO>
	db	0x7e, 0x00
	db	0x7e, 0x00
	db	0x7e, 0x00
	db	0x7f, 0xf0
	db	0x70, 0x18
	db	0x70, 0x18
	db	0x10, 0x18
	db	0x10, 0x18
	db	0x10, 0x18
	db	0x10, 0x1f
	db	0x10, 0x1f
	db	0x10, 0x1f
	db	0x1f, 0xff
	db	0x0f, 0xff
	db	0x00, 0xff
		GSEndString
	}
}
end GrObjTMMonikerResource;
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
start GrObjTCGAMonikerResource, data;
visMoniker BringToFrontTCGAMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = verySquished;
	color = gray1;
	cachedSize = 15, 10;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 26
		Bitmap <15,10,0,BMF_MONO>
	db	0x7f, 0x00
	db	0x7f, 0xf0
	db	0x78, 0x10
	db	0x78, 0x10
	db	0x78, 0x10
	db	0x08, 0x1c
	db	0x08, 0x1c
	db	0x0f, 0xfc
	db	0x00, 0x7c
	db	0x00, 0x7c
		GSEndString
	}
}
end GrObjTCGAMonikerResource;
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
start GrObjTCMonikerResource, data;
visMoniker SendToBackTCMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = normal;
	color = color4;
	cachedSize = 15, 15;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 156
		Bitmap <15,15,0,BMF_4BIT or mask BMT_MASK>
	db	0x7e, 0x00
	db	0x21, 0x11, 0x11, 0x12, 0x22, 0x22, 0x22, 0x20
	db	0x7e, 0x00
	db	0x21, 0x99, 0x99, 0x12, 0x22, 0x22, 0x22, 0x20
	db	0x7e, 0x00
	db	0x21, 0x99, 0x99, 0x12, 0x22, 0x22, 0x22, 0x20
	db	0x7f, 0xf0
	db	0x21, 0x99, 0x99, 0x11, 0x11, 0x11, 0x22, 0x20
	db	0x7f, 0xf8
	db	0x21, 0x99, 0x99, 0x1f, 0xff, 0xf1, 0x92, 0x20
	db	0x7f, 0xf8
	db	0x21, 0x99, 0x99, 0x1f, 0xff, 0xf1, 0x92, 0x20
	db	0x7f, 0xf8
	db	0x21, 0x11, 0x11, 0x1f, 0xff, 0xf1, 0x92, 0x20
	db	0x1f, 0xf8
	db	0x22, 0x21, 0xff, 0xff, 0xff, 0xf1, 0x92, 0x20
	db	0x1f, 0xf8
	db	0x22, 0x21, 0xff, 0xff, 0xff, 0xf1, 0x92, 0x20
	db	0x1f, 0xfc
	db	0x22, 0x21, 0xff, 0xff, 0x11, 0x11, 0x11, 0x20
	db	0x1f, 0xfc
	db	0x22, 0x21, 0xff, 0xff, 0x19, 0x99, 0x91, 0x20
	db	0x1f, 0xfc
	db	0x22, 0x21, 0xff, 0xff, 0x19, 0x99, 0x91, 0x20
	db	0x1f, 0xfc
	db	0x22, 0x21, 0x11, 0x11, 0x19, 0x99, 0x91, 0x20
	db	0x0f, 0xfc
	db	0x22, 0x22, 0x99, 0x99, 0x19, 0x99, 0x91, 0x20
	db	0x00, 0xfc
	db	0x22, 0x22, 0x22, 0x22, 0x11, 0x11, 0x11, 0x20
		GSEndString
	}
}
end GrObjTCMonikerResource;
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
start GrObjTMMonikerResource, data;
visMoniker SendToBackTMMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 15, 15;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 36
		Bitmap <15,15,0,BMF_MONO>
	db	0x7e, 0x00
	db	0x7e, 0x00
	db	0x7e, 0x00
	db	0x7f, 0xf0
	db	0x7e, 0x18
	db	0x7e, 0x18
	db	0x10, 0x18
	db	0x10, 0x18
	db	0x10, 0x18
	db	0x10, 0xff
	db	0x10, 0xff
	db	0x10, 0xff
	db	0x1f, 0xff
	db	0x0f, 0xff
	db	0x00, 0xff
		GSEndString
	}
}
end GrObjTMMonikerResource;
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
start GrObjTCGAMonikerResource, data;
visMoniker SendToBackTCGAMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = verySquished;
	color = gray1;
	cachedSize = 15, 10;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 26
		Bitmap <15,10,0,BMF_MONO>
	db	0x7f, 0x00
	db	0x7f, 0xf0
	db	0x7f, 0x10
	db	0x7f, 0x10
	db	0x7f, 0x10
	db	0x08, 0x7c
	db	0x08, 0x7c
	db	0x0f, 0xfc
	db	0x00, 0x7c
	db	0x00, 0x7c
		GSEndString
	}
}
end GrObjTCGAMonikerResource;
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
start GrObjTCMonikerResource, data;
visMoniker ShuffleDownTCMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = normal;
	color = color4;
	cachedSize = 15, 15;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 156
		Bitmap <15,15,0,BMF_4BIT or mask BMT_MASK>
	db	0x00, 0x00
	db	0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x20
	db	0x00, 0x00
	db	0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x20
	db	0x30, 0x00
	db	0x22, 0x91, 0x22, 0x22, 0x22, 0x22, 0x22, 0x20
	db	0x37, 0xc0
	db	0x22, 0x91, 0x21, 0x11, 0x11, 0x22, 0x22, 0x20
	db	0x37, 0xc0
	db	0x22, 0x91, 0x21, 0x99, 0x91, 0x22, 0x22, 0x20
	db	0x37, 0xfc
	db	0x22, 0x91, 0x21, 0x99, 0x91, 0x11, 0x11, 0x20
	db	0x37, 0xfe
	db	0x22, 0x91, 0x21, 0x99, 0x91, 0xff, 0xf1, 0x90
	db	0x37, 0xfe
	db	0x22, 0x91, 0x21, 0x11, 0x11, 0xff, 0xf1, 0x90
	db	0x31, 0xfe
	db	0x22, 0x91, 0x22, 0x21, 0xff, 0xff, 0xf1, 0x90
	db	0xfd, 0xfe
	db	0x99, 0x11, 0x11, 0x21, 0xff, 0xff, 0xf1, 0x90
	db	0x79, 0xfe
	db	0x29, 0x11, 0x12, 0x21, 0xff, 0xff, 0xf1, 0x90
	db	0x31, 0xfe
	db	0x22, 0x91, 0x22, 0x21, 0x11, 0x11, 0x11, 0x90
	db	0x00, 0x7e
	db	0x22, 0x22, 0x22, 0x22, 0x29, 0x99, 0x99, 0x90
	db	0x00, 0x00
	db	0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x20
	db	0x00, 0x00
	db	0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x20
		GSEndString
	}
}
end GrObjTCMonikerResource;
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
start GrObjTMMonikerResource, data;
visMoniker ShuffleDownTMMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 15, 15;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 36
		Bitmap <15,15,0,BMF_MONO>
	db	0x00, 0x00
	db	0x00, 0x00
	db	0x30, 0x00
	db	0x37, 0xc0
	db	0x37, 0xc0
	db	0x37, 0xfc
	db	0x37, 0xc7
	db	0x37, 0xc7
	db	0x31, 0x07
	db	0xfd, 0x07
	db	0x79, 0x07
	db	0x31, 0xff
	db	0x00, 0x7f
	db	0x00, 0x00
	db	0x00, 0x00
		GSEndString
	}
}
end GrObjTMMonikerResource;
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
start GrObjTCGAMonikerResource, data;
visMoniker ShuffleDownTCGAMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = verySquished;
	color = gray1;
	cachedSize = 15, 10;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 26
		Bitmap <15,10,0,BMF_MONO>
	db	0x00, 0x04
	db	0x27, 0x84
	db	0x27, 0xfc
	db	0x27, 0x8c
	db	0x21, 0x0c
	db	0x71, 0x0c
	db	0x21, 0xfc
	db	0x00, 0x04
	db	0xff, 0xfc
	db	0x00, 0x00
		GSEndString
	}
}
end GrObjTCGAMonikerResource;
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
start GrObjTCMonikerResource, data;
visMoniker ShuffleUpTCMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = normal;
	color = color4;
	cachedSize = 15, 15;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 156
		Bitmap <15,15,0,BMF_4BIT or mask BMT_MASK>
	db	0x00, 0x00
	db	0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x20
	db	0x00, 0x18
	db	0x22, 0x22, 0x22, 0x22, 0x22, 0x21, 0x92, 0x20
	db	0x00, 0x3c
	db	0x22, 0x22, 0x22, 0x22, 0x22, 0x11, 0x19, 0x20
	db	0xf8, 0x7e
	db	0x11, 0x11, 0x12, 0x22, 0x21, 0x11, 0x19, 0x90
	db	0xf8, 0x18
	db	0x19, 0x99, 0x12, 0x22, 0x22, 0x21, 0x92, 0x20
	db	0xff, 0x98
	db	0x19, 0x11, 0x11, 0x11, 0x12, 0x21, 0x92, 0x20
	db	0xff, 0xd8
	db	0x19, 0x1f, 0xff, 0xff, 0x19, 0x21, 0x92, 0x20
	db	0xff, 0xd8
	db	0x11, 0x1f, 0xff, 0xff, 0x19, 0x21, 0x92, 0x20
	db	0x3f, 0xd8
	db	0x22, 0x1f, 0xff, 0xff, 0x19, 0x21, 0x92, 0x20
	db	0x3f, 0xd8
	db	0x22, 0x1f, 0xff, 0xff, 0x19, 0x21, 0x92, 0x20
	db	0x3f, 0xd8
	db	0x22, 0x1f, 0xff, 0xff, 0x19, 0x21, 0x92, 0x20
	db	0x3f, 0xc0
	db	0x22, 0x11, 0x11, 0x11, 0x19, 0x22, 0x22, 0x20
	db	0x0f, 0xc0
	db	0x22, 0x22, 0x99, 0x99, 0x99, 0x22, 0x22, 0x20
	db	0x00, 0x00
	db	0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x20
	db	0x00, 0x00
	db	0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x20
		GSEndString
	}
}
end GrObjTCMonikerResource;
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
start GrObjTMMonikerResource, data;
visMoniker ShuffleUpTMMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 15, 15;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 36
		Bitmap <15,15,0,BMF_MONO>
	db	0x00, 0x00
	db	0x00, 0x18
	db	0x00, 0x3c
	db	0xf8, 0x7f
	db	0xf8, 0x18
	db	0xff, 0x98
	db	0xe0, 0xd8
	db	0xe0, 0xd8
	db	0x20, 0xd8
	db	0x20, 0xd8
	db	0x20, 0xd8
	db	0x3f, 0xc0
	db	0x0f, 0xc0
	db	0x00, 0x00
	db	0x00, 0x00
		GSEndString
	}
}
end GrObjTMMonikerResource;
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
start GrObjTCGAMonikerResource, data;
visMoniker ShuffleUpTCGAMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = verySquished;
	color = gray1;
	cachedSize = 15, 10;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 26
		Bitmap <15,10,0,BMF_MONO>
	db	0x00, 0x04
	db	0x27, 0x84
	db	0x77, 0xfc
	db	0x27, 0x0c
	db	0x21, 0x0c
	db	0x21, 0x0c
	db	0x21, 0xfc
	db	0x00, 0x04
	db	0xff, 0xfc
	db	0x00, 0x00
		GSEndString
	}
}
end GrObjTCGAMonikerResource;
