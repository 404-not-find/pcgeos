start GrObjAlignColorMonikerResource, data;
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker AlignBottomCMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color4;
	cachedSize = 17, 35;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 409
		Bitmap <17,35,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
	db	0x02, 0x1f, 0x00, 0x00
	db	0x03, 0x22, 0x21, 0x11, 0x11, 0xfd, 0x22, 0x00, 
		0x20
	db	0x02, 0x1f, 0x00, 0x00
	db	0x03, 0x22, 0x21, 0x99, 0x91, 0xfd, 0x22, 0x00, 
		0x20
	db	0x02, 0x1f, 0x00, 0x00
	db	0x03, 0x22, 0x21, 0x99, 0x91, 0xfd, 0x22, 0x00, 
		0x20
	db	0x02, 0x1f, 0x00, 0x00
	db	0x03, 0x22, 0x21, 0x99, 0x91, 0xfd, 0x22, 0x00, 
		0x20
	db	0x02, 0x1f, 0x00, 0x00
	db	0x03, 0x22, 0x21, 0x99, 0x91, 0xfd, 0x22, 0x00, 
		0x20
	db	0x02, 0x1f, 0x00, 0x00
	db	0x03, 0x22, 0x21, 0x99, 0x91, 0xfd, 0x22, 0x00, 
		0x20
	db	0x02, 0x1f, 0x00, 0x00
	db	0x03, 0x22, 0x21, 0x99, 0x91, 0xfd, 0x22, 0x00, 
		0x20
	db	0x02, 0x1f, 0x00, 0x00
	db	0x03, 0x22, 0x21, 0x11, 0x11, 0xfd, 0x22, 0x00, 
		0x20
	db	0x02, 0x04, 0x00, 0x00
	db	0x02, 0x22, 0x22, 0x20, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x04, 0x00, 0x00
	db	0x02, 0x22, 0x22, 0x20, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x04, 0x00, 0x00
	db	0x02, 0x22, 0x22, 0x20, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x04, 0x00, 0x00
	db	0x02, 0x22, 0x22, 0x20, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x04, 0x00, 0x00
	db	0x02, 0x22, 0x22, 0x20, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x04, 0x00, 0x00
	db	0x02, 0x22, 0x22, 0x20, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x04, 0x00, 0x00
	db	0x02, 0x22, 0x22, 0x20, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x04, 0x3e, 0x00
	db	0x08, 0x22, 0x22, 0x20, 0x22, 0x22, 0x11, 0x11, 
		0x12, 0x20
	db	0x02, 0x04, 0x3e, 0x00
	db	0x08, 0x22, 0x22, 0x20, 0x22, 0x22, 0x19, 0x99, 
		0x12, 0x20
	db	0x02, 0x04, 0x3e, 0x00
	db	0x08, 0x22, 0x22, 0x20, 0x22, 0x22, 0x19, 0x99, 
		0x12, 0x20
	db	0x02, 0x04, 0x3e, 0x00
	db	0x08, 0x22, 0x22, 0x20, 0x22, 0x22, 0x19, 0x99, 
		0x12, 0x20
	db	0x02, 0x04, 0x3e, 0x00
	db	0x08, 0x22, 0x22, 0x20, 0x22, 0x22, 0x19, 0x99, 
		0x12, 0x20
	db	0x02, 0x04, 0x3e, 0x00
	db	0x08, 0x22, 0x22, 0x20, 0x22, 0x22, 0x19, 0x99, 
		0x12, 0x20
	db	0x02, 0x04, 0x3e, 0x00
	db	0x08, 0x22, 0x22, 0x20, 0x22, 0x22, 0x19, 0x99, 
		0x12, 0x20
	db	0x02, 0x04, 0x3e, 0x00
	db	0x08, 0x22, 0x22, 0x20, 0x22, 0x22, 0x19, 0x99, 
		0x12, 0x20
	db	0x02, 0x1f, 0x3e, 0x00
	db	0x08, 0x22, 0x20, 0x00, 0x00, 0x22, 0x19, 0x99, 
		0x12, 0x20
	db	0x02, 0x0e, 0x3e, 0x00
	db	0x08, 0x22, 0x22, 0x00, 0x02, 0x22, 0x19, 0x99, 
		0x12, 0x20
	db	0x02, 0x04, 0x3e, 0x00
	db	0x08, 0x22, 0x22, 0x20, 0x22, 0x22, 0x19, 0x99, 
		0x12, 0x20
	db	0x02, 0x2a, 0xbe, 0x00
	db	0x00, 0x22, 0xfd, 0x02, 0x03, 0x11, 0x11, 0x12, 
		0x20
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker AlignCenterHCMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color4;
	cachedSize = 35, 17;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 292
		Bitmap <35,17,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
	db	0x04, 0x00, 0x47, 0xfc, 0x40, 0x00
	db	0xfd, 0x22, 0x02, 0x20, 0x22, 0x21, 0xfd, 0x11, 
		0x01, 0x22, 0x20, 0xfd, 0x22, 0x00, 0x20
	db	0x04, 0x00, 0x67, 0xfc, 0xc0, 0x00
	db	0xfd, 0x22, 0x02, 0x20, 0x02, 0x21, 0xfe, 0x99, 
		0x02, 0x91, 0x22, 0x00, 0xfd, 0x22, 0x00, 0x20
	db	0x04, 0x07, 0xf7, 0xfd, 0xfc, 0x00
	db	0x02, 0x22, 0x22, 0x20, 0xfe, 0x00, 0x00, 0x21, 
		0xfe, 0x99, 0x01, 0x91, 0x20, 0xfe, 0x00, 0x02, 
		0x22, 0x22, 0x20
	db	0x04, 0x00, 0x67, 0xfc, 0xc0, 0x00
	db	0xfd, 0x22, 0x02, 0x20, 0x02, 0x21, 0xfe, 0x99, 
		0x02, 0x91, 0x22, 0x00, 0xfd, 0x22, 0x00, 0x20
	db	0x04, 0x00, 0x47, 0xfc, 0x40, 0x00
	db	0xfd, 0x22, 0x02, 0x20, 0x22, 0x21, 0xfd, 0x11, 
		0x01, 0x22, 0x20, 0xfd, 0x22, 0x00, 0x20
	db	0x04, 0x00, 0x00, 0x40, 0x00, 0x00
	db	0xf9, 0x22, 0x00, 0x20, 0xf9, 0x22, 0x00, 0x20
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
	db	0x04, 0x00, 0x00, 0x40, 0x00, 0x00
	db	0xf9, 0x22, 0x00, 0x20, 0xf9, 0x22, 0x00, 0x20
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
	db	0x04, 0x00, 0x00, 0x40, 0x00, 0x00
	db	0xf9, 0x22, 0x00, 0x20, 0xf9, 0x22, 0x00, 0x20
	db	0x04, 0x01, 0x1f, 0xff, 0x10, 0x00
	db	0xfe, 0x22, 0x02, 0x20, 0x22, 0x21, 0xfb, 0x11, 
		0x01, 0x22, 0x20, 0xfe, 0x22, 0x00, 0x20
	db	0x04, 0x01, 0x9f, 0xff, 0x30, 0x00
	db	0xfe, 0x22, 0x02, 0x20, 0x02, 0x21, 0xfc, 0x99, 
		0x02, 0x91, 0x22, 0x00, 0xfe, 0x22, 0x00, 0x20
	db	0x04, 0x1f, 0xdf, 0xff, 0x7f, 0x00
	db	0x01, 0x22, 0x20, 0xfe, 0x00, 0x00, 0x21, 0xfc, 
		0x99, 0x01, 0x91, 0x20, 0xfe, 0x00, 0x01, 0x22, 
		0x20
	db	0x04, 0x01, 0x9f, 0xff, 0x30, 0x00
	db	0xfe, 0x22, 0x02, 0x20, 0x02, 0x21, 0xfc, 0x99, 
		0x02, 0x91, 0x22, 0x00, 0xfe, 0x22, 0x00, 0x20
	db	0x04, 0x01, 0x1f, 0xff, 0x10, 0x00
	db	0xfe, 0x22, 0x02, 0x20, 0x22, 0x21, 0xfb, 0x11, 
		0x01, 0x22, 0x20, 0xfe, 0x22, 0x00, 0x20
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker AlignCenterVCMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color4;
	cachedSize = 17, 35;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 416
		Bitmap <17,35,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
	db	0x02, 0x00, 0x04, 0x00
	db	0xfb, 0x22, 0x02, 0x20, 0x22, 0x20
	db	0x02, 0x00, 0x04, 0x00
	db	0xfb, 0x22, 0x02, 0x20, 0x22, 0x20
	db	0x02, 0x10, 0x04, 0x00
	db	0x01, 0x22, 0x20, 0xfd, 0x22, 0x02, 0x20, 0x22, 
		0x20
	db	0x02, 0x10, 0x04, 0x00
	db	0x01, 0x22, 0x20, 0xfd, 0x22, 0x02, 0x20, 0x22, 
		0x20
	db	0x02, 0x10, 0x1f, 0x00
	db	0x01, 0x22, 0x20, 0xfe, 0x22, 0x03, 0x20, 0x00, 
		0x00, 0x20
	db	0x02, 0x10, 0x0e, 0x00
	db	0x01, 0x22, 0x20, 0xfd, 0x22, 0x02, 0x00, 0x02, 
		0x20
	db	0x02, 0x7c, 0x04, 0x00
	db	0x02, 0x20, 0x00, 0x00, 0xfe, 0x22, 0x02, 0x20, 
		0x22, 0x20
	db	0x02, 0x38, 0x00, 0x00
	db	0x02, 0x22, 0x00, 0x02, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x10, 0x1f, 0x00
	db	0x01, 0x22, 0x20, 0xfe, 0x22, 0x03, 0x21, 0x11, 
		0x11, 0x20
	db	0x02, 0x00, 0x1f, 0x00
	db	0xfc, 0x22, 0x03, 0x21, 0x99, 0x91, 0x20
	db	0x02, 0x7c, 0x1f, 0x00
	db	0x08, 0x21, 0x11, 0x11, 0x22, 0x22, 0x21, 0x99, 
		0x91, 0x20
	db	0x02, 0x7c, 0x1f, 0x00
	db	0x08, 0x21, 0x99, 0x91, 0x22, 0x22, 0x21, 0x99, 
		0x91, 0x20
	db	0x02, 0x7c, 0x1f, 0x00
	db	0x08, 0x21, 0x99, 0x91, 0x22, 0x22, 0x21, 0x99, 
		0x91, 0x20
	db	0x02, 0x7c, 0x1f, 0x00
	db	0x08, 0x21, 0x99, 0x91, 0x22, 0x22, 0x21, 0x99, 
		0x91, 0x20
	db	0x02, 0x7e, 0xbf, 0x00
	db	0x08, 0x21, 0x99, 0x91, 0x02, 0x02, 0x01, 0x99, 
		0x91, 0x20
	db	0x02, 0x7c, 0x1f, 0x00
	db	0x08, 0x21, 0x99, 0x91, 0x22, 0x22, 0x21, 0x99, 
		0x91, 0x20
	db	0x02, 0x7c, 0x1f, 0x00
	db	0x08, 0x21, 0x99, 0x91, 0x22, 0x22, 0x21, 0x99, 
		0x91, 0x20
	db	0x02, 0x7c, 0x1f, 0x00
	db	0x08, 0x21, 0x99, 0x91, 0x22, 0x22, 0x21, 0x99, 
		0x91, 0x20
	db	0x02, 0x7c, 0x1f, 0x00
	db	0x08, 0x21, 0x11, 0x11, 0x22, 0x22, 0x21, 0x99, 
		0x91, 0x20
	db	0x02, 0x00, 0x1f, 0x00
	db	0xfc, 0x22, 0x03, 0x21, 0x99, 0x91, 0x20
	db	0x02, 0x10, 0x1f, 0x00
	db	0x01, 0x22, 0x20, 0xfe, 0x22, 0x03, 0x21, 0x11, 
		0x11, 0x20
	db	0x02, 0x38, 0x00, 0x00
	db	0x02, 0x22, 0x00, 0x02, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x04, 0x00
	db	0x02, 0x20, 0x00, 0x00, 0xfe, 0x22, 0x02, 0x20, 
		0x22, 0x20
	db	0x02, 0x10, 0x0e, 0x00
	db	0x01, 0x22, 0x20, 0xfd, 0x22, 0x02, 0x00, 0x02, 
		0x20
	db	0x02, 0x10, 0x1f, 0x00
	db	0x01, 0x22, 0x20, 0xfe, 0x22, 0x03, 0x20, 0x00, 
		0x00, 0x20
	db	0x02, 0x10, 0x04, 0x00
	db	0x01, 0x22, 0x20, 0xfd, 0x22, 0x02, 0x20, 0x22, 
		0x20
	db	0x02, 0x10, 0x04, 0x00
	db	0x01, 0x22, 0x20, 0xfd, 0x22, 0x02, 0x20, 0x22, 
		0x20
	db	0x02, 0x00, 0x04, 0x00
	db	0xfb, 0x22, 0x02, 0x20, 0x22, 0x20
	db	0x02, 0x00, 0x04, 0x00
	db	0xfb, 0x22, 0x02, 0x20, 0x22, 0x20
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker AlignHeightCMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color4;
	cachedSize = 17, 35;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 380
		Bitmap <17,35,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
	db	0x02, 0x3e, 0x00, 0x00
	db	0x03, 0x22, 0x11, 0x11, 0x12, 0xfd, 0x22, 0x00, 
		0x20
	db	0x02, 0x3e, 0x00, 0x00
	db	0x03, 0x22, 0x19, 0x99, 0x12, 0xfd, 0x22, 0x00, 
		0x20
	db	0x02, 0x3e, 0x00, 0x00
	db	0x03, 0x22, 0x19, 0x99, 0x12, 0xfd, 0x22, 0x00, 
		0x20
	db	0x02, 0x3e, 0x00, 0x00
	db	0x03, 0x22, 0x19, 0x99, 0x12, 0xfd, 0x22, 0x00, 
		0x20
	db	0x02, 0x3e, 0x00, 0x00
	db	0x03, 0x22, 0x19, 0x99, 0x12, 0xfd, 0x22, 0x00, 
		0x20
	db	0x02, 0x3e, 0x00, 0x00
	db	0x03, 0x22, 0x19, 0x99, 0x12, 0xfd, 0x22, 0x00, 
		0x20
	db	0x02, 0x3e, 0x00, 0x00
	db	0x03, 0x22, 0x19, 0x99, 0x12, 0xfd, 0x22, 0x00, 
		0x20
	db	0x02, 0x3e, 0xaa, 0x00
	db	0x03, 0x22, 0x11, 0x11, 0x12, 0xfd, 0x02, 0x00, 
		0x20
	db	0x02, 0x00, 0x10, 0x00
	db	0xfc, 0x22, 0x03, 0x20, 0x22, 0x22, 0x20
	db	0x02, 0x00, 0x38, 0x00
	db	0xfc, 0x22, 0x03, 0x00, 0x02, 0x22, 0x20
	db	0x02, 0x00, 0x7c, 0x00
	db	0xfd, 0x22, 0x04, 0x20, 0x00, 0x00, 0x22, 0x20
	db	0x02, 0x00, 0x10, 0x00
	db	0xfc, 0x22, 0x03, 0x20, 0x22, 0x22, 0x20
	db	0x02, 0x00, 0x10, 0x00
	db	0xfc, 0x22, 0x03, 0x20, 0x22, 0x22, 0x20
	db	0x02, 0x00, 0x10, 0x00
	db	0xfc, 0x22, 0x03, 0x20, 0x22, 0x22, 0x20
	db	0x02, 0x00, 0x10, 0x00
	db	0xfc, 0x22, 0x03, 0x20, 0x22, 0x22, 0x20
	db	0x02, 0x00, 0x7c, 0x00
	db	0xfd, 0x22, 0x04, 0x21, 0x11, 0x11, 0x22, 0x20
	db	0x02, 0x00, 0x7c, 0x00
	db	0xfd, 0x22, 0x04, 0x21, 0x99, 0x91, 0x22, 0x20
	db	0x02, 0x00, 0x7c, 0x00
	db	0xfd, 0x22, 0x04, 0x21, 0x99, 0x91, 0x22, 0x20
	db	0x02, 0x00, 0x7c, 0x00
	db	0xfd, 0x22, 0x04, 0x21, 0x99, 0x91, 0x22, 0x20
	db	0x02, 0x00, 0x7c, 0x00
	db	0xfd, 0x22, 0x04, 0x21, 0x99, 0x91, 0x22, 0x20
	db	0x02, 0x00, 0x7c, 0x00
	db	0xfd, 0x22, 0x04, 0x21, 0x99, 0x91, 0x22, 0x20
	db	0x02, 0x00, 0x7c, 0x00
	db	0xfd, 0x22, 0x04, 0x21, 0x99, 0x91, 0x22, 0x20
	db	0x02, 0x00, 0x7c, 0x00
	db	0xfd, 0x22, 0x04, 0x21, 0x99, 0x91, 0x22, 0x20
	db	0x02, 0x00, 0x7c, 0x00
	db	0xfd, 0x22, 0x04, 0x21, 0x99, 0x91, 0x22, 0x20
	db	0x02, 0x00, 0x7c, 0x00
	db	0xfd, 0x22, 0x04, 0x21, 0x99, 0x91, 0x22, 0x20
	db	0x02, 0x00, 0x7c, 0x00
	db	0xfd, 0x22, 0x04, 0x21, 0x99, 0x91, 0x22, 0x20
	db	0x02, 0x00, 0x7c, 0x00
	db	0xfd, 0x22, 0x04, 0x21, 0x11, 0x11, 0x22, 0x20
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker AlignLeftCMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color4;
	cachedSize = 35, 17;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 238
		Bitmap <35,17,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
	db	0x01, 0x0f, 0xf0, 0xfe, 0x00
	db	0x01, 0x22, 0x22, 0xfd, 0x11, 0xf6, 0x22, 0x00, 
		0x20
	db	0x01, 0x0f, 0xf0, 0xfe, 0x00
	db	0x05, 0x22, 0x22, 0x19, 0x99, 0x99, 0x91, 0xf6, 
		0x22, 0x00, 0x20
	db	0x01, 0x0f, 0xf0, 0xfe, 0x00
	db	0x05, 0x22, 0x22, 0x19, 0x99, 0x99, 0x91, 0xf6, 
		0x22, 0x00, 0x20
	db	0x01, 0x0f, 0xf0, 0xfe, 0x00
	db	0x05, 0x22, 0x22, 0x19, 0x99, 0x99, 0x91, 0xf6, 
		0x22, 0x00, 0x20
	db	0x01, 0x0f, 0xf0, 0xfe, 0x00
	db	0x01, 0x22, 0x22, 0xfd, 0x11, 0xf6, 0x22, 0x00, 
		0x20
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
	db	0x00, 0x08, 0xfd, 0x00
	db	0x02, 0x22, 0x22, 0x02, 0xf3, 0x22, 0x00, 0x20
	db	0x04, 0x01, 0x00, 0x1f, 0xfe, 0x00
	db	0xfe, 0x22, 0x00, 0x20, 0xfc, 0x22, 0x00, 0x21, 
		0xfc, 0x11, 0x02, 0x12, 0x22, 0x20
	db	0x04, 0x0b, 0x00, 0x1f, 0xfe, 0x00
	db	0x03, 0x22, 0x22, 0x02, 0x00, 0xfc, 0x22, 0x00, 
		0x21, 0xfc, 0x99, 0x02, 0x12, 0x22, 0x20
	db	0x04, 0x07, 0xff, 0xff, 0xfe, 0x00
	db	0x02, 0x22, 0x22, 0x20, 0xfb, 0x00, 0x00, 0x01, 
		0xfc, 0x99, 0x02, 0x12, 0x22, 0x20
	db	0x04, 0x0b, 0x00, 0x1f, 0xfe, 0x00
	db	0x03, 0x22, 0x22, 0x02, 0x00, 0xfc, 0x22, 0x00, 
		0x21, 0xfc, 0x99, 0x02, 0x12, 0x22, 0x20
	db	0x04, 0x01, 0x00, 0x1f, 0xfe, 0x00
	db	0xfe, 0x22, 0x00, 0x20, 0xfc, 0x22, 0x00, 0x21, 
		0xfc, 0x11, 0x02, 0x12, 0x22, 0x20
	db	0x00, 0x08, 0xfd, 0x00
	db	0x02, 0x22, 0x22, 0x02, 0xf3, 0x22, 0x00, 0x20
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker AlignRightCMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color4;
	cachedSize = 35, 17;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 242
		Bitmap <35,17,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0xfe, 0x00, 0x01, 0x02, 0x00
	db	0xf2, 0x22, 0x02, 0x02, 0x22, 0x20
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
	db	0xfe, 0x00, 0x01, 0x02, 0x00
	db	0xf2, 0x22, 0x02, 0x02, 0x22, 0x20
	db	0x04, 0x0f, 0xf0, 0x00, 0x10, 0x00
	db	0x01, 0x22, 0x22, 0xfd, 0x11, 0xfa, 0x22, 0x00, 
		0x20, 0xfe, 0x22, 0x00, 0x20
	db	0x04, 0x0f, 0xf0, 0x00, 0x1a, 0x00
	db	0x05, 0x22, 0x22, 0x19, 0x99, 0x99, 0x91, 0xfa, 
		0x22, 0x04, 0x20, 0x02, 0x02, 0x22, 0x20
	db	0x04, 0x0f, 0xff, 0xff, 0xfc, 0x00
	db	0x05, 0x22, 0x22, 0x19, 0x99, 0x99, 0x91, 0xf8, 
		0x00, 0x02, 0x22, 0x22, 0x20
	db	0x04, 0x0f, 0xf0, 0x00, 0x1a, 0x00
	db	0x05, 0x22, 0x22, 0x19, 0x99, 0x99, 0x91, 0xfa, 
		0x22, 0x04, 0x20, 0x02, 0x02, 0x22, 0x20
	db	0x04, 0x0f, 0xf0, 0x00, 0x10, 0x00
	db	0x01, 0x22, 0x22, 0xfd, 0x11, 0xfa, 0x22, 0x00, 
		0x20, 0xfe, 0x22, 0x00, 0x20
	db	0xfe, 0x00, 0x01, 0x02, 0x00
	db	0xf2, 0x22, 0x02, 0x02, 0x22, 0x20
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
	db	0x04, 0x00, 0x00, 0x1f, 0xfe, 0x00
	db	0xf8, 0x22, 0x00, 0x21, 0xfc, 0x11, 0x02, 0x12, 
		0x22, 0x20
	db	0x04, 0x00, 0x00, 0x1f, 0xfe, 0x00
	db	0xf8, 0x22, 0x00, 0x21, 0xfc, 0x99, 0x02, 0x12, 
		0x22, 0x20
	db	0x04, 0x00, 0x00, 0x1f, 0xfe, 0x00
	db	0xf8, 0x22, 0x00, 0x21, 0xfc, 0x99, 0x02, 0x12, 
		0x22, 0x20
	db	0x04, 0x00, 0x00, 0x1f, 0xfe, 0x00
	db	0xf8, 0x22, 0x00, 0x21, 0xfc, 0x99, 0x02, 0x12, 
		0x22, 0x20
	db	0x04, 0x00, 0x00, 0x1f, 0xfe, 0x00
	db	0xf8, 0x22, 0x00, 0x21, 0xfc, 0x11, 0x02, 0x12, 
		0x22, 0x20
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker AlignTopCMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color4;
	cachedSize = 17, 35;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 386
		Bitmap <17,35,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
	db	0x02, 0x3e, 0xaa, 0x00
	db	0x03, 0x22, 0x11, 0x11, 0x12, 0xfd, 0x02, 0x00, 
		0x20
	db	0x02, 0x3e, 0x10, 0x00
	db	0x08, 0x22, 0x19, 0x99, 0x12, 0x22, 0x20, 0x22, 
		0x22, 0x20
	db	0x02, 0x3e, 0x38, 0x00
	db	0x08, 0x22, 0x19, 0x99, 0x12, 0x22, 0x00, 0x02, 
		0x22, 0x20
	db	0x02, 0x3e, 0x7c, 0x00
	db	0x08, 0x22, 0x19, 0x99, 0x12, 0x20, 0x00, 0x00, 
		0x22, 0x20
	db	0x02, 0x3e, 0x10, 0x00
	db	0x08, 0x22, 0x19, 0x99, 0x12, 0x22, 0x20, 0x22, 
		0x22, 0x20
	db	0x02, 0x3e, 0x10, 0x00
	db	0x08, 0x22, 0x19, 0x99, 0x12, 0x22, 0x20, 0x22, 
		0x22, 0x20
	db	0x02, 0x3e, 0x10, 0x00
	db	0x08, 0x22, 0x19, 0x99, 0x12, 0x22, 0x20, 0x22, 
		0x22, 0x20
	db	0x02, 0x3e, 0x10, 0x00
	db	0x08, 0x22, 0x11, 0x11, 0x12, 0x22, 0x20, 0x22, 
		0x22, 0x20
	db	0x02, 0x00, 0x10, 0x00
	db	0xfc, 0x22, 0x03, 0x20, 0x22, 0x22, 0x20
	db	0x02, 0x00, 0x10, 0x00
	db	0xfc, 0x22, 0x03, 0x20, 0x22, 0x22, 0x20
	db	0x02, 0x00, 0x10, 0x00
	db	0xfc, 0x22, 0x03, 0x20, 0x22, 0x22, 0x20
	db	0x02, 0x00, 0x10, 0x00
	db	0xfc, 0x22, 0x03, 0x20, 0x22, 0x22, 0x20
	db	0x02, 0x00, 0x10, 0x00
	db	0xfc, 0x22, 0x03, 0x20, 0x22, 0x22, 0x20
	db	0x02, 0x00, 0x10, 0x00
	db	0xfc, 0x22, 0x03, 0x20, 0x22, 0x22, 0x20
	db	0x02, 0x00, 0x10, 0x00
	db	0xfc, 0x22, 0x03, 0x20, 0x22, 0x22, 0x20
	db	0x02, 0x00, 0x7c, 0x00
	db	0xfd, 0x22, 0x04, 0x20, 0x00, 0x00, 0x22, 0x20
	db	0x02, 0x00, 0x7c, 0x00
	db	0xfd, 0x22, 0x04, 0x20, 0x99, 0x90, 0x22, 0x20
	db	0x02, 0x00, 0x7c, 0x00
	db	0xfd, 0x22, 0x04, 0x20, 0x99, 0x90, 0x22, 0x20
	db	0x02, 0x00, 0x7c, 0x00
	db	0xfd, 0x22, 0x04, 0x20, 0x99, 0x90, 0x22, 0x20
	db	0x02, 0x00, 0x7c, 0x00
	db	0xfd, 0x22, 0x04, 0x20, 0x99, 0x90, 0x22, 0x20
	db	0x02, 0x00, 0x7c, 0x00
	db	0xfd, 0x22, 0x04, 0x20, 0x99, 0x90, 0x22, 0x20
	db	0x02, 0x00, 0x7c, 0x00
	db	0xfd, 0x22, 0x04, 0x20, 0x99, 0x90, 0x22, 0x20
	db	0x02, 0x00, 0x7c, 0x00
	db	0xfd, 0x22, 0x04, 0x20, 0x99, 0x90, 0x22, 0x20
	db	0x02, 0x00, 0x7c, 0x00
	db	0xfd, 0x22, 0x04, 0x20, 0x99, 0x90, 0x22, 0x20
	db	0x02, 0x00, 0x7c, 0x00
	db	0xfd, 0x22, 0x04, 0x20, 0x99, 0x90, 0x22, 0x20
	db	0x02, 0x00, 0x7c, 0x00
	db	0xfd, 0x22, 0x04, 0x20, 0x99, 0x90, 0x22, 0x20
	db	0x02, 0x00, 0x7c, 0x00
	db	0xfd, 0x22, 0x04, 0x20, 0x00, 0x00, 0x22, 0x20
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker AlignWidthCMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color4;
	cachedSize = 35, 17;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 232
		Bitmap <35,17,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
	db	0x01, 0x0f, 0xf0, 0xfe, 0x00
	db	0x01, 0x22, 0x22, 0xfd, 0x11, 0xf6, 0x22, 0x00, 
		0x20
	db	0x01, 0x0f, 0xf0, 0xfe, 0x00
	db	0x05, 0x22, 0x22, 0x19, 0x99, 0x99, 0x91, 0xf6, 
		0x22, 0x00, 0x20
	db	0x01, 0x0f, 0xf0, 0xfe, 0x00
	db	0x05, 0x22, 0x22, 0x19, 0x99, 0x99, 0x91, 0xf6, 
		0x22, 0x00, 0x20
	db	0x01, 0x0f, 0xf0, 0xfe, 0x00
	db	0x05, 0x22, 0x22, 0x19, 0x99, 0x99, 0x91, 0xf6, 
		0x22, 0x00, 0x20
	db	0x01, 0x0f, 0xf0, 0xfe, 0x00
	db	0x01, 0x22, 0x22, 0xfd, 0x11, 0xf6, 0x22, 0x00, 
		0x20
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
	db	0x01, 0x00, 0x10, 0xfe, 0x00
	db	0xfc, 0x22, 0x00, 0x20, 0xf6, 0x22, 0x00, 0x20
	db	0x04, 0x00, 0x02, 0x1f, 0xfe, 0x00
	db	0xfa, 0x22, 0x02, 0x02, 0x22, 0x21, 0xfc, 0x11, 
		0x02, 0x12, 0x22, 0x20
	db	0x04, 0x00, 0x16, 0x1f, 0xfe, 0x00
	db	0xfc, 0x22, 0x04, 0x20, 0x20, 0x02, 0x22, 0x21, 
		0xfc, 0x99, 0x02, 0x12, 0x22, 0x20
	db	0x04, 0x00, 0x0f, 0xff, 0xfe, 0x00
	db	0xfb, 0x22, 0xfe, 0x00, 0x00, 0x01, 0xfc, 0x99, 
		0x02, 0x12, 0x22, 0x20
	db	0x04, 0x00, 0x16, 0x1f, 0xfe, 0x00
	db	0xfc, 0x22, 0x04, 0x20, 0x20, 0x02, 0x22, 0x21, 
		0xfc, 0x99, 0x02, 0x12, 0x22, 0x20
	db	0x04, 0x00, 0x02, 0x1f, 0xfe, 0x00
	db	0xfa, 0x22, 0x02, 0x02, 0x22, 0x21, 0xfc, 0x11, 
		0x02, 0x12, 0x22, 0x20
	db	0x01, 0x00, 0x10, 0xfe, 0x00
	db	0xfc, 0x22, 0x00, 0x20, 0xf6, 0x22, 0x00, 0x20
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker DistributeBottomCMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color4;
	cachedSize = 17, 35;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 424
		Bitmap <17,35,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x11, 0x11, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7d, 0x55, 0x00
	db	0x02, 0x21, 0x11, 0x11, 0xfb, 0x20
	db	0x02, 0x00, 0x08, 0x00
	db	0xfb, 0x22, 0x02, 0x02, 0x22, 0x20
	db	0x02, 0x00, 0x1c, 0x00
	db	0xfc, 0x22, 0x03, 0x20, 0x00, 0x22, 0x20
	db	0x02, 0x00, 0x3e, 0x00
	db	0xfc, 0x22, 0x03, 0x00, 0x00, 0x02, 0x20
	db	0x02, 0x00, 0x08, 0x00
	db	0xfb, 0x22, 0x02, 0x02, 0x22, 0x20
	db	0x02, 0x00, 0x08, 0x00
	db	0xfb, 0x22, 0x02, 0x02, 0x22, 0x20
	db	0x02, 0x7c, 0x08, 0x00
	db	0x02, 0x21, 0x11, 0x11, 0xfe, 0x22, 0x02, 0x02, 
		0x22, 0x20
	db	0x02, 0x7c, 0x08, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfe, 0x22, 0x02, 0x02, 
		0x22, 0x20
	db	0x02, 0x7c, 0x08, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfe, 0x22, 0x02, 0x02, 
		0x22, 0x20
	db	0x02, 0x7c, 0x3e, 0x00
	db	0x08, 0x21, 0x99, 0x91, 0x22, 0x22, 0x00, 0x00, 
		0x02, 0x20
	db	0x02, 0x7c, 0x1c, 0x00
	db	0x08, 0x21, 0x99, 0x91, 0x22, 0x22, 0x20, 0x00, 
		0x22, 0x20
	db	0x02, 0x7c, 0x08, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfe, 0x22, 0x02, 0x02, 
		0x22, 0x20
	db	0x02, 0x7d, 0x55, 0x00
	db	0x02, 0x21, 0x11, 0x11, 0xfb, 0x20
	db	0x02, 0x00, 0x08, 0x00
	db	0xfb, 0x22, 0x02, 0x02, 0x22, 0x20
	db	0x02, 0x00, 0x1c, 0x00
	db	0xfc, 0x22, 0x03, 0x20, 0x00, 0x22, 0x20
	db	0x02, 0x00, 0x3e, 0x00
	db	0xfc, 0x22, 0x03, 0x00, 0x00, 0x02, 0x20
	db	0x02, 0x7c, 0x08, 0x00
	db	0x02, 0x21, 0x11, 0x11, 0xfe, 0x22, 0x02, 0x02, 
		0x22, 0x20
	db	0x02, 0x7c, 0x08, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfe, 0x22, 0x02, 0x02, 
		0x22, 0x20
	db	0x02, 0x7c, 0x08, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfe, 0x22, 0x02, 0x02, 
		0x22, 0x20
	db	0x02, 0x7c, 0x08, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfe, 0x22, 0x02, 0x02, 
		0x22, 0x20
	db	0x02, 0x7c, 0x08, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfe, 0x22, 0x02, 0x02, 
		0x22, 0x20
	db	0x02, 0x7c, 0x3e, 0x00
	db	0x08, 0x21, 0x99, 0x91, 0x22, 0x22, 0x00, 0x00, 
		0x02, 0x20
	db	0x02, 0x7c, 0x1c, 0x00
	db	0x08, 0x21, 0x99, 0x91, 0x22, 0x22, 0x20, 0x00, 
		0x22, 0x20
	db	0x02, 0x7c, 0x08, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfe, 0x22, 0x02, 0x02, 
		0x22, 0x20
	db	0x02, 0x7d, 0x55, 0x00
	db	0x02, 0x21, 0x11, 0x11, 0xfb, 0x20
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker DistributeCenterHCMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color4;
	cachedSize = 35, 17;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 329
		Bitmap <35,17,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
	db	0x04, 0x7f, 0xc3, 0xf8, 0x7f, 0xc0
	db	0x00, 0x21, 0xfd, 0x11, 0x01, 0x22, 0x22, 0xfe, 
		0x11, 0x02, 0x12, 0x22, 0x21, 0xfd, 0x11, 0x00, 
		0x20
	db	0x04, 0x7f, 0xc3, 0xf8, 0x7f, 0xc0
	db	0x00, 0x21, 0xfe, 0x99, 0x08, 0x91, 0x22, 0x22, 
		0x19, 0x99, 0x99, 0x12, 0x22, 0x21, 0xfe, 0x99, 
		0x01, 0x91, 0x20
	db	0x04, 0x7f, 0xc3, 0xf8, 0x7f, 0xc0
	db	0x00, 0x21, 0xfe, 0x99, 0x08, 0x91, 0x22, 0x22, 
		0x19, 0x99, 0x99, 0x12, 0x22, 0x21, 0xfe, 0x99, 
		0x01, 0x91, 0x20
	db	0x04, 0x7f, 0xc3, 0xf8, 0x7f, 0xc0
	db	0x00, 0x21, 0xfe, 0x99, 0x08, 0x91, 0x22, 0x22, 
		0x19, 0x99, 0x99, 0x12, 0x22, 0x21, 0xfe, 0x99, 
		0x01, 0x91, 0x20
	db	0x04, 0x7f, 0xc3, 0xf8, 0x7f, 0xc0
	db	0x00, 0x21, 0xfd, 0x11, 0x01, 0x22, 0x22, 0xfe, 
		0x11, 0x02, 0x12, 0x22, 0x21, 0xfd, 0x11, 0x00, 
		0x20
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
	db	0x04, 0x04, 0x00, 0x40, 0x04, 0x00
	db	0x02, 0x22, 0x22, 0x20, 0xfc, 0x22, 0x00, 0x20, 
		0xfc, 0x22, 0x03, 0x20, 0x22, 0x22, 0x20
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
	db	0x04, 0x04, 0x00, 0x40, 0x04, 0x00
	db	0x02, 0x22, 0x22, 0x20, 0xfc, 0x22, 0x00, 0x20, 
		0xfc, 0x22, 0x03, 0x20, 0x22, 0x22, 0x20
	db	0x04, 0x00, 0x82, 0x08, 0x20, 0x00
	db	0xfd, 0x22, 0x09, 0x02, 0x22, 0x22, 0x02, 0x22, 
		0x22, 0x02, 0x22, 0x22, 0x02, 0xfe, 0x22, 0x00, 
		0x20
	db	0x04, 0x05, 0x83, 0x58, 0x34, 0x00
	db	0x11, 0x22, 0x22, 0x20, 0x20, 0x02, 0x22, 0x22, 
		0x00, 0x20, 0x20, 0x02, 0x22, 0x22, 0x00, 0x20, 
		0x22, 0x22, 0x20
	db	0x04, 0x03, 0xff, 0xbf, 0xf8, 0x00
	db	0xfe, 0x22, 0xfc, 0x00, 0x00, 0x02, 0xfc, 0x00, 
		0x03, 0x02, 0x22, 0x22, 0x20
	db	0x04, 0x05, 0x83, 0x58, 0x34, 0x00
	db	0x11, 0x22, 0x22, 0x20, 0x20, 0x02, 0x22, 0x22, 
		0x00, 0x20, 0x20, 0x02, 0x22, 0x22, 0x00, 0x20, 
		0x22, 0x22, 0x20
	db	0x04, 0x00, 0x82, 0x08, 0x20, 0x00
	db	0xfd, 0x22, 0x09, 0x02, 0x22, 0x22, 0x02, 0x22, 
		0x22, 0x02, 0x22, 0x22, 0x02, 0xfe, 0x22, 0x00, 
		0x20
	db	0x04, 0x04, 0x00, 0x40, 0x04, 0x00
	db	0x02, 0x22, 0x22, 0x20, 0xfc, 0x22, 0x00, 0x20, 
		0xfc, 0x22, 0x03, 0x20, 0x22, 0x22, 0x20
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker DistributeCenterVCMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color4;
	cachedSize = 17, 35;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 420
		Bitmap <17,35,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x11, 0x11, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7d, 0x55, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfb, 0x20
	db	0x02, 0x7c, 0x08, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfe, 0x22, 0x02, 0x02, 
		0x22, 0x20
	db	0x02, 0x7c, 0x1c, 0x00
	db	0x08, 0x21, 0x99, 0x91, 0x22, 0x22, 0x20, 0x00, 
		0x22, 0x20
	db	0x02, 0x7c, 0x3e, 0x00
	db	0x08, 0x21, 0x99, 0x91, 0x22, 0x22, 0x00, 0x00, 
		0x02, 0x20
	db	0x02, 0x7c, 0x08, 0x00
	db	0x02, 0x21, 0x11, 0x11, 0xfe, 0x22, 0x02, 0x02, 
		0x22, 0x20
	db	0x02, 0x00, 0x08, 0x00
	db	0xfb, 0x22, 0x02, 0x02, 0x22, 0x20
	db	0x02, 0x00, 0x08, 0x00
	db	0xfb, 0x22, 0x02, 0x02, 0x22, 0x20
	db	0x02, 0x00, 0x08, 0x00
	db	0xfb, 0x22, 0x02, 0x02, 0x22, 0x20
	db	0x02, 0x00, 0x08, 0x00
	db	0xfb, 0x22, 0x02, 0x02, 0x22, 0x20
	db	0x02, 0x7c, 0x3e, 0x00
	db	0x08, 0x21, 0x11, 0x11, 0x22, 0x22, 0x00, 0x00, 
		0x02, 0x20
	db	0x02, 0x7c, 0x1c, 0x00
	db	0x08, 0x21, 0x99, 0x91, 0x22, 0x22, 0x20, 0x00, 
		0x22, 0x20
	db	0x02, 0x7c, 0x08, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfe, 0x22, 0x02, 0x02, 
		0x22, 0x20
	db	0x02, 0x7d, 0x55, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfb, 0x20
	db	0x02, 0x7c, 0x08, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfe, 0x22, 0x02, 0x02, 
		0x22, 0x20
	db	0x02, 0x7c, 0x1c, 0x00
	db	0x08, 0x21, 0x99, 0x91, 0x22, 0x22, 0x20, 0x00, 
		0x22, 0x20
	db	0x02, 0x7c, 0x3e, 0x00
	db	0x08, 0x21, 0x11, 0x11, 0x22, 0x22, 0x00, 0x00, 
		0x02, 0x20
	db	0x02, 0x00, 0x08, 0x00
	db	0xfb, 0x22, 0x02, 0x02, 0x22, 0x20
	db	0x02, 0x00, 0x08, 0x00
	db	0xfb, 0x22, 0x02, 0x02, 0x22, 0x20
	db	0x02, 0x00, 0x08, 0x00
	db	0xfb, 0x22, 0x02, 0x02, 0x22, 0x20
	db	0x02, 0x00, 0x08, 0x00
	db	0xfb, 0x22, 0x02, 0x02, 0x22, 0x20
	db	0x02, 0x7c, 0x08, 0x00
	db	0x02, 0x21, 0x11, 0x11, 0xfe, 0x22, 0x02, 0x02, 
		0x22, 0x20
	db	0x02, 0x7c, 0x3e, 0x00
	db	0x08, 0x21, 0x99, 0x91, 0x22, 0x22, 0x00, 0x00, 
		0x02, 0x20
	db	0x02, 0x7c, 0x1c, 0x00
	db	0x08, 0x21, 0x99, 0x91, 0x22, 0x22, 0x20, 0x00, 
		0x22, 0x20
	db	0x02, 0x7c, 0x08, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfe, 0x22, 0x02, 0x02, 
		0x22, 0x20
	db	0x02, 0x7d, 0x55, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfb, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x11, 0x11, 0xfc, 0x22, 0x00, 0x20
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker DistributeHeightCMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color4;
	cachedSize = 17, 35;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 382
		Bitmap <17,35,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x11, 0x11, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7d, 0x55, 0x00
	db	0x02, 0x21, 0x11, 0x11, 0xfb, 0x20
	db	0x02, 0x00, 0x08, 0x00
	db	0xfb, 0x22, 0x02, 0x02, 0x22, 0x20
	db	0x02, 0x00, 0x1c, 0x00
	db	0xfc, 0x22, 0x03, 0x20, 0x00, 0x22, 0x20
	db	0x02, 0x00, 0x3e, 0x00
	db	0xfc, 0x22, 0x03, 0x00, 0x00, 0x02, 0x20
	db	0x02, 0x00, 0x08, 0x00
	db	0xfb, 0x22, 0x02, 0x02, 0x22, 0x20
	db	0x02, 0x00, 0x08, 0x00
	db	0xfb, 0x22, 0x02, 0x02, 0x22, 0x20
	db	0x02, 0x00, 0x3e, 0x00
	db	0xfc, 0x22, 0x03, 0x00, 0x00, 0x02, 0x20
	db	0x02, 0x00, 0x1c, 0x00
	db	0xfc, 0x22, 0x03, 0x20, 0x00, 0x22, 0x20
	db	0x02, 0x00, 0x08, 0x00
	db	0xfb, 0x22, 0x02, 0x02, 0x22, 0x20
	db	0x02, 0x7d, 0x55, 0x00
	db	0x02, 0x21, 0x11, 0x11, 0xfb, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7d, 0x55, 0x00
	db	0x02, 0x21, 0x11, 0x11, 0xfb, 0x20
	db	0x02, 0x00, 0x08, 0x00
	db	0xfb, 0x22, 0x02, 0x02, 0x22, 0x20
	db	0x02, 0x00, 0x1c, 0x00
	db	0xfc, 0x22, 0x03, 0x20, 0x00, 0x22, 0x20
	db	0x02, 0x00, 0x3e, 0x00
	db	0xfc, 0x22, 0x03, 0x00, 0x00, 0x02, 0x20
	db	0x02, 0x00, 0x08, 0x00
	db	0xfb, 0x22, 0x02, 0x02, 0x22, 0x20
	db	0x02, 0x00, 0x08, 0x00
	db	0xfb, 0x22, 0x02, 0x02, 0x22, 0x20
	db	0x02, 0x00, 0x3e, 0x00
	db	0xfc, 0x22, 0x03, 0x00, 0x00, 0x02, 0x20
	db	0x02, 0x00, 0x1c, 0x00
	db	0xfc, 0x22, 0x03, 0x20, 0x00, 0x22, 0x20
	db	0x02, 0x00, 0x08, 0x00
	db	0xfb, 0x22, 0x02, 0x02, 0x22, 0x20
	db	0x02, 0x7d, 0x55, 0x00
	db	0x02, 0x21, 0x11, 0x11, 0xfb, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x11, 0x11, 0xfc, 0x22, 0x00, 0x20
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker DistributeLeftCMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color4;
	cachedSize = 35, 17;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 322
		Bitmap <35,17,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
	db	0x04, 0x7f, 0xe7, 0xe0, 0x7f, 0xc0
	db	0x00, 0x21, 0xfd, 0x11, 0x07, 0x12, 0x21, 0x11, 
		0x11, 0x12, 0x22, 0x22, 0x21, 0xfd, 0x11, 0x00, 
		0x20
	db	0x04, 0x7f, 0xe7, 0xe0, 0x7f, 0xc0
	db	0x00, 0x21, 0xfd, 0x99, 0x07, 0x12, 0x21, 0x99, 
		0x99, 0x12, 0x22, 0x22, 0x21, 0xfe, 0x99, 0x01, 
		0x91, 0x20
	db	0x04, 0x7f, 0xe7, 0xe0, 0x7f, 0xc0
	db	0x00, 0x21, 0xfd, 0x99, 0x07, 0x12, 0x21, 0x99, 
		0x99, 0x12, 0x22, 0x22, 0x21, 0xfe, 0x99, 0x01, 
		0x91, 0x20
	db	0x04, 0x7f, 0xe7, 0xe0, 0x7f, 0xc0
	db	0x00, 0x21, 0xfd, 0x99, 0x07, 0x12, 0x21, 0x99, 
		0x99, 0x12, 0x22, 0x22, 0x21, 0xfe, 0x99, 0x01, 
		0x91, 0x20
	db	0x04, 0x7f, 0xe7, 0xe0, 0x7f, 0xc0
	db	0x00, 0x21, 0xfd, 0x11, 0x07, 0x12, 0x21, 0x11, 
		0x11, 0x12, 0x22, 0x22, 0x21, 0xfd, 0x11, 0x00, 
		0x20
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
	db	0x04, 0x40, 0x04, 0x00, 0x40, 0x00
	db	0x00, 0x20, 0xfc, 0x22, 0x00, 0x20, 0xfc, 0x22, 
		0x00, 0x20, 0xfd, 0x22, 0x00, 0x20
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
	db	0x04, 0x40, 0x04, 0x00, 0x40, 0x00
	db	0x00, 0x20, 0xfc, 0x22, 0x00, 0x20, 0xfc, 0x22, 
		0x00, 0x20, 0xfd, 0x22, 0x00, 0x20
	db	0x04, 0x08, 0x20, 0x82, 0x00, 0x00
	db	0x0b, 0x22, 0x22, 0x02, 0x22, 0x22, 0x02, 0x22, 
		0x22, 0x02, 0x22, 0x22, 0x02, 0xfc, 0x22, 0x00, 
		0x20
	db	0x04, 0x58, 0x35, 0x83, 0x40, 0x00
	db	0x0c, 0x20, 0x20, 0x02, 0x22, 0x22, 0x00, 0x20, 
		0x20, 0x02, 0x22, 0x22, 0x00, 0x20, 0xfd, 0x22, 
		0x00, 0x20
	db	0x04, 0x3f, 0xfb, 0xff, 0x80, 0x00
	db	0x00, 0x22, 0xfc, 0x00, 0x00, 0x02, 0xfc, 0x00, 
		0x00, 0x02, 0xfd, 0x22, 0x00, 0x20
	db	0x04, 0x58, 0x35, 0x83, 0x40, 0x00
	db	0x0c, 0x20, 0x20, 0x02, 0x22, 0x22, 0x00, 0x20, 
		0x20, 0x02, 0x22, 0x22, 0x00, 0x20, 0xfd, 0x22, 
		0x00, 0x20
	db	0x04, 0x08, 0x20, 0x82, 0x00, 0x00
	db	0x0b, 0x22, 0x22, 0x02, 0x22, 0x22, 0x02, 0x22, 
		0x22, 0x02, 0x22, 0x22, 0x02, 0xfc, 0x22, 0x00, 
		0x20
	db	0x04, 0x40, 0x04, 0x00, 0x40, 0x00
	db	0x00, 0x20, 0xfc, 0x22, 0x00, 0x20, 0xfc, 0x22, 
		0x00, 0x20, 0xfd, 0x22, 0x00, 0x20
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker DistributeRightCMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color4;
	cachedSize = 35, 17;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 313
		Bitmap <35,17,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
	db	0x04, 0x7f, 0xc1, 0xfc, 0x7f, 0xc0
	db	0x00, 0x21, 0xfd, 0x11, 0x02, 0x22, 0x22, 0x21, 
		0xfe, 0x11, 0x01, 0x22, 0x21, 0xfd, 0x11, 0x00, 
		0x20
	db	0x04, 0x7f, 0xc1, 0xfc, 0x7f, 0xc0
	db	0x00, 0x21, 0xfe, 0x99, 0x08, 0x91, 0x22, 0x22, 
		0x21, 0x99, 0x99, 0x91, 0x22, 0x21, 0xfe, 0x99, 
		0x01, 0x91, 0x20
	db	0x04, 0x7f, 0xc1, 0xfc, 0x7f, 0xc0
	db	0x00, 0x21, 0xfe, 0x99, 0x08, 0x91, 0x22, 0x22, 
		0x21, 0x99, 0x99, 0x91, 0x22, 0x21, 0xfe, 0x99, 
		0x01, 0x91, 0x20
	db	0x04, 0x7f, 0xc1, 0xfc, 0x7f, 0xc0
	db	0x00, 0x21, 0xfe, 0x99, 0x08, 0x91, 0x22, 0x22, 
		0x21, 0x99, 0x99, 0x91, 0x22, 0x21, 0xfe, 0x99, 
		0x01, 0x91, 0x20
	db	0x04, 0x7f, 0xc1, 0xfc, 0x7f, 0xc0
	db	0x00, 0x21, 0xfd, 0x11, 0x02, 0x22, 0x22, 0x21, 
		0xfe, 0x11, 0x01, 0x22, 0x21, 0xfd, 0x11, 0x00, 
		0x20
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
	db	0x04, 0x00, 0x40, 0x04, 0x00, 0x40
	db	0xfd, 0x22, 0x00, 0x20, 0xfc, 0x22, 0x00, 0x20, 
		0xfc, 0x22, 0x01, 0x20, 0x20
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
	db	0x04, 0x00, 0x40, 0x04, 0x00, 0x40
	db	0xfd, 0x22, 0x00, 0x20, 0xfc, 0x22, 0x00, 0x20, 
		0xfc, 0x22, 0x01, 0x20, 0x20
	db	0x04, 0x00, 0x08, 0x20, 0x82, 0x00
	db	0xfb, 0x22, 0x0b, 0x02, 0x22, 0x22, 0x02, 0x22, 
		0x22, 0x02, 0x22, 0x22, 0x02, 0x22, 0x20
	db	0x04, 0x00, 0x58, 0x35, 0x83, 0x40
	db	0xfd, 0x22, 0x0d, 0x20, 0x20, 0x02, 0x22, 0x22, 
		0x00, 0x20, 0x20, 0x02, 0x22, 0x22, 0x00, 0x20, 
		0x20
	db	0x04, 0x00, 0x3f, 0xfb, 0xff, 0x80
	db	0xfc, 0x22, 0xfc, 0x00, 0x00, 0x02, 0xfc, 0x00, 
		0x01, 0x02, 0x20
	db	0x04, 0x00, 0x58, 0x35, 0x83, 0x40
	db	0xfd, 0x22, 0x0d, 0x20, 0x20, 0x02, 0x22, 0x22, 
		0x00, 0x20, 0x20, 0x02, 0x22, 0x22, 0x00, 0x20, 
		0x20
	db	0x04, 0x00, 0x08, 0x20, 0x82, 0x00
	db	0xfb, 0x22, 0x0b, 0x02, 0x22, 0x22, 0x02, 0x22, 
		0x22, 0x02, 0x22, 0x22, 0x02, 0x22, 0x20
	db	0x04, 0x00, 0x40, 0x04, 0x00, 0x40
	db	0xfd, 0x22, 0x00, 0x20, 0xfc, 0x22, 0x00, 0x20, 
		0xfc, 0x22, 0x01, 0x20, 0x20
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker DistributeTopCMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color4;
	cachedSize = 17, 35;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 423
		Bitmap <17,35,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
	db	0x02, 0x7d, 0x55, 0x00
	db	0x02, 0x21, 0x11, 0x11, 0xfb, 0x20
	db	0x02, 0x7c, 0x08, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfe, 0x22, 0x02, 0x02, 
		0x22, 0x20
	db	0x02, 0x7c, 0x1c, 0x00
	db	0x08, 0x21, 0x99, 0x91, 0x22, 0x22, 0x20, 0x00, 
		0x22, 0x20
	db	0x02, 0x7c, 0x3e, 0x00
	db	0x08, 0x21, 0x99, 0x91, 0x22, 0x22, 0x00, 0x00, 
		0x02, 0x20
	db	0x02, 0x7c, 0x08, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfe, 0x22, 0x02, 0x02, 
		0x22, 0x20
	db	0x02, 0x7c, 0x08, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfe, 0x22, 0x02, 0x02, 
		0x22, 0x20
	db	0x02, 0x7c, 0x08, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfe, 0x22, 0x02, 0x02, 
		0x22, 0x20
	db	0x02, 0x7c, 0x08, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfe, 0x22, 0x02, 0x02, 
		0x22, 0x20
	db	0x02, 0x7c, 0x08, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfe, 0x22, 0x02, 0x02, 
		0x22, 0x20
	db	0x02, 0x7c, 0x3e, 0x00
	db	0x08, 0x21, 0x11, 0x11, 0x22, 0x22, 0x00, 0x00, 
		0x02, 0x20
	db	0x02, 0x00, 0x1c, 0x00
	db	0xfc, 0x22, 0x03, 0x20, 0x00, 0x22, 0x20
	db	0x02, 0x00, 0x08, 0x00
	db	0xfb, 0x22, 0x02, 0x02, 0x22, 0x20
	db	0x02, 0x7d, 0x55, 0x00
	db	0x02, 0x21, 0x11, 0x11, 0xfb, 0x20
	db	0x02, 0x7c, 0x08, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfe, 0x22, 0x02, 0x02, 
		0x22, 0x20
	db	0x02, 0x7c, 0x1c, 0x00
	db	0x08, 0x21, 0x99, 0x91, 0x22, 0x22, 0x20, 0x00, 
		0x22, 0x20
	db	0x02, 0x7c, 0x3e, 0x00
	db	0x08, 0x21, 0x99, 0x91, 0x22, 0x22, 0x00, 0x00, 
		0x02, 0x20
	db	0x02, 0x7c, 0x08, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfe, 0x22, 0x02, 0x02, 
		0x22, 0x20
	db	0x02, 0x7c, 0x08, 0x00
	db	0x02, 0x21, 0x11, 0x11, 0xfe, 0x22, 0x02, 0x02, 
		0x22, 0x20
	db	0x02, 0x00, 0x08, 0x00
	db	0xfb, 0x22, 0x02, 0x02, 0x22, 0x20
	db	0x02, 0x00, 0x08, 0x00
	db	0xfb, 0x22, 0x02, 0x02, 0x22, 0x20
	db	0x02, 0x00, 0x08, 0x00
	db	0xfb, 0x22, 0x02, 0x02, 0x22, 0x20
	db	0x02, 0x00, 0x3e, 0x00
	db	0xfc, 0x22, 0x03, 0x00, 0x00, 0x02, 0x20
	db	0x02, 0x00, 0x1c, 0x00
	db	0xfc, 0x22, 0x03, 0x20, 0x00, 0x22, 0x20
	db	0x02, 0x00, 0x08, 0x00
	db	0xfb, 0x22, 0x02, 0x02, 0x22, 0x20
	db	0x02, 0x7d, 0x55, 0x00
	db	0x02, 0x21, 0x11, 0x11, 0xfb, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x99, 0x91, 0xfc, 0x22, 0x00, 0x20
	db	0x02, 0x7c, 0x00, 0x00
	db	0x02, 0x21, 0x11, 0x11, 0xfc, 0x22, 0x00, 0x20
	db	0xfe, 0x00
	db	0xf9, 0x22, 0x00, 0x20
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker DistributeWidthCMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color4;
	cachedSize = 35, 17;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 333
		Bitmap <35,17,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
	db	0x04, 0x7c, 0x03, 0xf8, 0x07, 0xc0
	db	0x02, 0x21, 0x11, 0x11, 0xfd, 0x22, 0xfe, 0x11, 
		0x00, 0x12, 0xfe, 0x22, 0x03, 0x21, 0x11, 0x11, 
		0x20
	db	0x04, 0x7c, 0x03, 0xf8, 0x07, 0xc0
	db	0x02, 0x21, 0x99, 0x91, 0xfd, 0x22, 0x03, 0x19, 
		0x99, 0x99, 0x12, 0xfe, 0x22, 0x03, 0x21, 0x99, 
		0x91, 0x20
	db	0x04, 0x7c, 0x03, 0xf8, 0x07, 0xc0
	db	0x02, 0x21, 0x99, 0x91, 0xfd, 0x22, 0x03, 0x19, 
		0x99, 0x99, 0x12, 0xfe, 0x22, 0x03, 0x21, 0x99, 
		0x91, 0x20
	db	0x04, 0x7c, 0x03, 0xf8, 0x07, 0xc0
	db	0x02, 0x21, 0x99, 0x91, 0xfd, 0x22, 0x03, 0x19, 
		0x99, 0x99, 0x12, 0xfe, 0x22, 0x03, 0x21, 0x99, 
		0x91, 0x20
	db	0x04, 0x7c, 0x03, 0xf8, 0x07, 0xc0
	db	0x02, 0x21, 0x11, 0x11, 0xfd, 0x22, 0xfe, 0x11, 
		0x00, 0x12, 0xfe, 0x22, 0x03, 0x21, 0x11, 0x11, 
		0x20
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
	db	0x04, 0x04, 0x02, 0x08, 0x04, 0x00
	db	0x02, 0x22, 0x22, 0x20, 0xfd, 0x22, 0x03, 0x02, 
		0x22, 0x22, 0x02, 0xfe, 0x22, 0x03, 0x20, 0x22, 
		0x22, 0x20
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
	db	0x04, 0x04, 0x02, 0x08, 0x04, 0x00
	db	0x02, 0x22, 0x22, 0x20, 0xfd, 0x22, 0x03, 0x02, 
		0x22, 0x22, 0x02, 0xfe, 0x22, 0x03, 0x20, 0x22, 
		0x22, 0x20
	db	0x04, 0x00, 0x90, 0x01, 0x20, 0x00
	db	0xfd, 0x22, 0x01, 0x02, 0x20, 0xfc, 0x22, 0x02, 
		0x20, 0x22, 0x02, 0xfe, 0x22, 0x00, 0x20
	db	0x04, 0x05, 0x9a, 0x0b, 0x34, 0x00
	db	0x11, 0x22, 0x22, 0x20, 0x20, 0x02, 0x20, 0x02, 
		0x02, 0x22, 0x22, 0x02, 0x00, 0x22, 0x00, 0x20, 
		0x22, 0x22, 0x20
	db	0x04, 0x03, 0xfc, 0x07, 0xf8, 0x00
	db	0xfe, 0x22, 0xfd, 0x00, 0xfe, 0x22, 0x00, 0x20, 
		0xfe, 0x00, 0x03, 0x02, 0x22, 0x22, 0x20
	db	0x04, 0x05, 0x9a, 0x0b, 0x34, 0x00
	db	0x11, 0x22, 0x22, 0x20, 0x20, 0x02, 0x20, 0x02, 
		0x02, 0x22, 0x22, 0x02, 0x00, 0x22, 0x00, 0x20, 
		0x22, 0x22, 0x20
	db	0x04, 0x00, 0x90, 0x01, 0x20, 0x00
	db	0xfd, 0x22, 0x01, 0x02, 0x20, 0xfc, 0x22, 0x02, 
		0x20, 0x22, 0x02, 0xfe, 0x22, 0x00, 0x20
	db	0x04, 0x04, 0x02, 0x08, 0x04, 0x00
	db	0x02, 0x22, 0x22, 0x20, 0xfd, 0x22, 0x03, 0x02, 
		0x22, 0x22, 0x02, 0xfe, 0x22, 0x03, 0x20, 0x22, 
		0x22, 0x20
	db	0xfc, 0x00
	db	0xf0, 0x22, 0x00, 0x20
		GSEndString
	}
}
end GrObjAlignColorMonikerResource;
start GrObjAlignMonoMonikerResource, data;
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker AlignBottomMMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 17, 35;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 111
		Bitmap <17,35,0,BMF_MONO>
	db	0x00, 0x00, 0x00
	db	0x00, 0x00, 0x00
	db	0x00, 0x00, 0x00
	db	0x00, 0x00, 0x00
	db	0x1f, 0x00, 0x00
	db	0x1b, 0x00, 0x00
	db	0x15, 0x00, 0x00
	db	0x1b, 0x00, 0x00
	db	0x15, 0x00, 0x00
	db	0x1b, 0x00, 0x00
	db	0x15, 0x00, 0x00
	db	0x1f, 0x00, 0x00
	db	0x04, 0x00, 0x00
	db	0x04, 0x00, 0x00
	db	0x04, 0x00, 0x00
	db	0x04, 0x00, 0x00
	db	0x04, 0x00, 0x00
	db	0x04, 0x00, 0x00
	db	0x04, 0x00, 0x00
	db	0x04, 0x3e, 0x00
	db	0x04, 0x36, 0x00
	db	0x04, 0x2a, 0x00
	db	0x04, 0x36, 0x00
	db	0x04, 0x2a, 0x00
	db	0x04, 0x36, 0x00
	db	0x04, 0x2a, 0x00
	db	0x04, 0x36, 0x00
	db	0x1f, 0x2a, 0x00
	db	0x0e, 0x36, 0x00
	db	0x04, 0x2a, 0x00
	db	0x2a, 0xbe, 0x00
	db	0x00, 0x00, 0x00
	db	0x00, 0x00, 0x00
	db	0x00, 0x00, 0x00
	db	0x00, 0x00, 0x00
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker AlignCenterHMMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 35, 17;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 91
		Bitmap <35,17,0,BMF_MONO>
	db	0x00, 0x00, 0x00, 0x00, 0x00
	db	0x00, 0x47, 0xfc, 0x40, 0x00
	db	0x00, 0x65, 0x54, 0xc0, 0x00
	db	0x07, 0xf6, 0xad, 0xfc, 0x00
	db	0x00, 0x65, 0x54, 0xc0, 0x00
	db	0x00, 0x47, 0xfc, 0x40, 0x00
	db	0x00, 0x00, 0x40, 0x00, 0x00
	db	0x00, 0x00, 0x00, 0x00, 0x00
	db	0x00, 0x00, 0x40, 0x00, 0x00
	db	0x00, 0x00, 0x00, 0x00, 0x00
	db	0x00, 0x00, 0x40, 0x00, 0x00
	db	0x01, 0x1f, 0xff, 0x10, 0x00
	db	0x01, 0x95, 0x55, 0x30, 0x00
	db	0x1f, 0xda, 0xab, 0x7f, 0x00
	db	0x01, 0x95, 0x55, 0x30, 0x00
	db	0x01, 0x1f, 0xff, 0x10, 0x00
	db	0x00, 0x00, 0x00, 0x00, 0x00
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker AlignCenterVMMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 17, 35;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 111
		Bitmap <17,35,0,BMF_MONO>
	db	0x00, 0x00, 0x00
	db	0x00, 0x00, 0x00
	db	0x00, 0x00, 0x00
	db	0x00, 0x04, 0x00
	db	0x00, 0x04, 0x00
	db	0x10, 0x04, 0x00
	db	0x10, 0x04, 0x00
	db	0x10, 0x1f, 0x00
	db	0x10, 0x0e, 0x00
	db	0x7c, 0x04, 0x00
	db	0x38, 0x00, 0x00
	db	0x10, 0x1f, 0x00
	db	0x00, 0x15, 0x00
	db	0x7c, 0x1b, 0x00
	db	0x54, 0x15, 0x00
	db	0x6c, 0x1b, 0x00
	db	0x54, 0x15, 0x00
	db	0x6e, 0xbb, 0x00
	db	0x54, 0x15, 0x00
	db	0x6c, 0x1b, 0x00
	db	0x54, 0x15, 0x00
	db	0x7c, 0x1b, 0x00
	db	0x00, 0x15, 0x00
	db	0x10, 0x1f, 0x00
	db	0x38, 0x00, 0x00
	db	0x7c, 0x04, 0x00
	db	0x10, 0x0e, 0x00
	db	0x10, 0x1f, 0x00
	db	0x10, 0x04, 0x00
	db	0x10, 0x04, 0x00
	db	0x00, 0x04, 0x00
	db	0x00, 0x04, 0x00
	db	0x00, 0x00, 0x00
	db	0x00, 0x00, 0x00
	db	0x00, 0x00, 0x00
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker AlignHeightMMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 17, 35;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 111
		Bitmap <17,35,0,BMF_MONO>
	db	0x00, 0x00, 0x00
	db	0x00, 0x00, 0x00
	db	0x00, 0x00, 0x00
	db	0x00, 0x00, 0x00
	db	0x3e, 0x00, 0x00
	db	0x2a, 0x00, 0x00
	db	0x36, 0x00, 0x00
	db	0x2a, 0x00, 0x00
	db	0x36, 0x00, 0x00
	db	0x2a, 0x00, 0x00
	db	0x36, 0x00, 0x00
	db	0x3e, 0xaa, 0x00
	db	0x00, 0x10, 0x00
	db	0x00, 0x38, 0x00
	db	0x00, 0x7c, 0x00
	db	0x00, 0x10, 0x00
	db	0x00, 0x10, 0x00
	db	0x00, 0x10, 0x00
	db	0x00, 0x10, 0x00
	db	0x00, 0x7c, 0x00
	db	0x00, 0x54, 0x00
	db	0x00, 0x6c, 0x00
	db	0x00, 0x54, 0x00
	db	0x00, 0x6c, 0x00
	db	0x00, 0x54, 0x00
	db	0x00, 0x6c, 0x00
	db	0x00, 0x54, 0x00
	db	0x00, 0x6c, 0x00
	db	0x00, 0x54, 0x00
	db	0x00, 0x6c, 0x00
	db	0x00, 0x7c, 0x00
	db	0x00, 0x00, 0x00
	db	0x00, 0x00, 0x00
	db	0x00, 0x00, 0x00
	db	0x00, 0x00, 0x00
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker AlignLeftMMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 35, 17;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 79
		Bitmap <35,17,BMC_PACKBITS,BMF_MONO>
	db	0xfc, 0x00
	db	0xfc, 0x00
	db	0x01, 0x0f, 0xf0, 0xfe, 0x00
	db	0x01, 0x0a, 0xb0, 0xfe, 0x00
	db	0x01, 0x0d, 0x50, 0xfe, 0x00
	db	0x01, 0x0a, 0xb0, 0xfe, 0x00
	db	0x01, 0x0f, 0xf0, 0xfe, 0x00
	db	0xfc, 0x00
	db	0x00, 0x08, 0xfd, 0x00
	db	0x04, 0x01, 0x00, 0x1f, 0xfe, 0x00
	db	0x04, 0x0b, 0x00, 0x15, 0x56, 0x00
	db	0x04, 0x07, 0xff, 0xfa, 0xaa, 0x00
	db	0x04, 0x0b, 0x00, 0x15, 0x56, 0x00
	db	0x04, 0x01, 0x00, 0x1f, 0xfe, 0x00
	db	0x00, 0x08, 0xfd, 0x00
	db	0xfc, 0x00
	db	0xfc, 0x00
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker AlignRightMMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 35, 17;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 89
		Bitmap <35,17,BMC_PACKBITS,BMF_MONO>
	db	0xfe, 0x00, 0x01, 0x02, 0x00
	db	0xfc, 0x00
	db	0xfe, 0x00, 0x01, 0x02, 0x00
	db	0x04, 0x0f, 0xf0, 0x00, 0x10, 0x00
	db	0x04, 0x0d, 0x50, 0x00, 0x1a, 0x00
	db	0x04, 0x0a, 0xbf, 0xff, 0xfc, 0x00
	db	0x04, 0x0d, 0x50, 0x00, 0x1a, 0x00
	db	0x04, 0x0f, 0xf0, 0x00, 0x10, 0x00
	db	0xfe, 0x00, 0x01, 0x02, 0x00
	db	0xfc, 0x00
	db	0x04, 0x00, 0x00, 0x1f, 0xfe, 0x00
	db	0x04, 0x00, 0x00, 0x1a, 0xaa, 0x00
	db	0x04, 0x00, 0x00, 0x15, 0x56, 0x00
	db	0x04, 0x00, 0x00, 0x1a, 0xaa, 0x00
	db	0x04, 0x00, 0x00, 0x1f, 0xfe, 0x00
	db	0xfc, 0x00
	db	0xfc, 0x00
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker AlignTopMMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 17, 35;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 111
		Bitmap <17,35,0,BMF_MONO>
	db	0x00, 0x00, 0x00
	db	0x00, 0x00, 0x00
	db	0x00, 0x00, 0x00
	db	0x00, 0x00, 0x00
	db	0x3e, 0xaa, 0x00
	db	0x2a, 0x10, 0x00
	db	0x36, 0x38, 0x00
	db	0x2a, 0x7c, 0x00
	db	0x36, 0x10, 0x00
	db	0x2a, 0x10, 0x00
	db	0x36, 0x10, 0x00
	db	0x3e, 0x10, 0x00
	db	0x00, 0x10, 0x00
	db	0x00, 0x10, 0x00
	db	0x00, 0x10, 0x00
	db	0x00, 0x10, 0x00
	db	0x00, 0x10, 0x00
	db	0x00, 0x10, 0x00
	db	0x00, 0x10, 0x00
	db	0x00, 0x7c, 0x00
	db	0x00, 0x54, 0x00
	db	0x00, 0x6c, 0x00
	db	0x00, 0x54, 0x00
	db	0x00, 0x6c, 0x00
	db	0x00, 0x54, 0x00
	db	0x00, 0x6c, 0x00
	db	0x00, 0x54, 0x00
	db	0x00, 0x6c, 0x00
	db	0x00, 0x54, 0x00
	db	0x00, 0x6c, 0x00
	db	0x00, 0x7c, 0x00
	db	0x00, 0x00, 0x00
	db	0x00, 0x00, 0x00
	db	0x00, 0x00, 0x00
	db	0x00, 0x00, 0x00
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker AlignWidthMMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 35, 17;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 81
		Bitmap <35,17,BMC_PACKBITS,BMF_MONO>
	db	0xfc, 0x00
	db	0xfc, 0x00
	db	0x01, 0x0f, 0xf0, 0xfe, 0x00
	db	0x01, 0x0a, 0xb0, 0xfe, 0x00
	db	0x01, 0x0d, 0x50, 0xfe, 0x00
	db	0x01, 0x0a, 0xb0, 0xfe, 0x00
	db	0x01, 0x0f, 0xf0, 0xfe, 0x00
	db	0xfc, 0x00
	db	0x01, 0x00, 0x10, 0xfe, 0x00
	db	0x04, 0x00, 0x02, 0x1f, 0xfe, 0x00
	db	0x04, 0x00, 0x16, 0x15, 0x56, 0x00
	db	0x04, 0x00, 0x0f, 0xfa, 0xaa, 0x00
	db	0x04, 0x00, 0x16, 0x15, 0x56, 0x00
	db	0x04, 0x00, 0x02, 0x1f, 0xfe, 0x00
	db	0x01, 0x00, 0x10, 0xfe, 0x00
	db	0xfc, 0x00
	db	0xfc, 0x00
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker DistributeBottomMMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 17, 35;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 111
		Bitmap <17,35,0,BMF_MONO>
	db	0x00, 0x00, 0x00
	db	0x7c, 0x00, 0x00
	db	0x54, 0x00, 0x00
	db	0x6c, 0x00, 0x00
	db	0x54, 0x00, 0x00
	db	0x6c, 0x00, 0x00
	db	0x54, 0x00, 0x00
	db	0x6c, 0x00, 0x00
	db	0x54, 0x00, 0x00
	db	0x7d, 0x55, 0x00
	db	0x00, 0x08, 0x00
	db	0x00, 0x1c, 0x00
	db	0x00, 0x3e, 0x00
	db	0x00, 0x08, 0x00
	db	0x00, 0x08, 0x00
	db	0x7c, 0x08, 0x00
	db	0x54, 0x08, 0x00
	db	0x6c, 0x08, 0x00
	db	0x54, 0x3e, 0x00
	db	0x6c, 0x1c, 0x00
	db	0x54, 0x08, 0x00
	db	0x7d, 0x55, 0x00
	db	0x00, 0x08, 0x00
	db	0x00, 0x1c, 0x00
	db	0x00, 0x3e, 0x00
	db	0x7c, 0x08, 0x00
	db	0x54, 0x08, 0x00
	db	0x6c, 0x08, 0x00
	db	0x54, 0x08, 0x00
	db	0x6c, 0x08, 0x00
	db	0x54, 0x3e, 0x00
	db	0x6c, 0x1c, 0x00
	db	0x54, 0x08, 0x00
	db	0x7d, 0x55, 0x00
	db	0x00, 0x00, 0x00
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker DistributeCenterHMMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 35, 17;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 91
		Bitmap <35,17,0,BMF_MONO>
	db	0x00, 0x00, 0x00, 0x00, 0x00
	db	0x7f, 0xc3, 0xf8, 0x7f, 0xc0
	db	0x55, 0x43, 0x58, 0x55, 0x40
	db	0x6a, 0xc2, 0xa8, 0x6a, 0xc0
	db	0x55, 0x43, 0x58, 0x55, 0x40
	db	0x7f, 0xc3, 0xf8, 0x7f, 0xc0
	db	0x00, 0x00, 0x00, 0x00, 0x00
	db	0x04, 0x00, 0x40, 0x04, 0x00
	db	0x00, 0x00, 0x00, 0x00, 0x00
	db	0x04, 0x00, 0x40, 0x04, 0x00
	db	0x00, 0x82, 0x08, 0x20, 0x00
	db	0x05, 0x83, 0x58, 0x34, 0x00
	db	0x03, 0xff, 0xbf, 0xf8, 0x00
	db	0x05, 0x83, 0x58, 0x34, 0x00
	db	0x00, 0x82, 0x08, 0x20, 0x00
	db	0x04, 0x00, 0x40, 0x04, 0x00
	db	0x00, 0x00, 0x00, 0x00, 0x00
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker DistributeCenterVMMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 17, 35;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 111
		Bitmap <17,35,0,BMF_MONO>
	db	0x00, 0x00, 0x00
	db	0x7c, 0x00, 0x00
	db	0x54, 0x00, 0x00
	db	0x6c, 0x00, 0x00
	db	0x54, 0x00, 0x00
	db	0x6d, 0x55, 0x00
	db	0x54, 0x08, 0x00
	db	0x6c, 0x1c, 0x00
	db	0x54, 0x3e, 0x00
	db	0x7c, 0x08, 0x00
	db	0x00, 0x08, 0x00
	db	0x00, 0x08, 0x00
	db	0x00, 0x08, 0x00
	db	0x00, 0x08, 0x00
	db	0x7c, 0x3e, 0x00
	db	0x6c, 0x1c, 0x00
	db	0x54, 0x08, 0x00
	db	0x6d, 0x55, 0x00
	db	0x54, 0x08, 0x00
	db	0x6c, 0x1c, 0x00
	db	0x7c, 0x3e, 0x00
	db	0x00, 0x08, 0x00
	db	0x00, 0x08, 0x00
	db	0x00, 0x08, 0x00
	db	0x00, 0x08, 0x00
	db	0x7c, 0x08, 0x00
	db	0x54, 0x3e, 0x00
	db	0x6c, 0x1c, 0x00
	db	0x54, 0x08, 0x00
	db	0x6d, 0x55, 0x00
	db	0x54, 0x00, 0x00
	db	0x6c, 0x00, 0x00
	db	0x54, 0x00, 0x00
	db	0x7c, 0x00, 0x00
	db	0x00, 0x00, 0x00
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker DistributeHeightMMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 17, 35;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 111
		Bitmap <17,35,0,BMF_MONO>
	db	0x00, 0x00, 0x00
	db	0x7c, 0x00, 0x00
	db	0x54, 0x00, 0x00
	db	0x6c, 0x00, 0x00
	db	0x54, 0x00, 0x00
	db	0x7d, 0x55, 0x00
	db	0x00, 0x08, 0x00
	db	0x00, 0x1c, 0x00
	db	0x00, 0x3e, 0x00
	db	0x00, 0x08, 0x00
	db	0x00, 0x08, 0x00
	db	0x00, 0x3e, 0x00
	db	0x00, 0x1c, 0x00
	db	0x00, 0x08, 0x00
	db	0x7d, 0x55, 0x00
	db	0x6c, 0x00, 0x00
	db	0x54, 0x00, 0x00
	db	0x6c, 0x00, 0x00
	db	0x54, 0x00, 0x00
	db	0x6c, 0x00, 0x00
	db	0x7d, 0x55, 0x00
	db	0x00, 0x08, 0x00
	db	0x00, 0x1c, 0x00
	db	0x00, 0x3e, 0x00
	db	0x00, 0x08, 0x00
	db	0x00, 0x08, 0x00
	db	0x00, 0x3e, 0x00
	db	0x00, 0x1c, 0x00
	db	0x00, 0x08, 0x00
	db	0x7d, 0x55, 0x00
	db	0x54, 0x00, 0x00
	db	0x6c, 0x00, 0x00
	db	0x54, 0x00, 0x00
	db	0x7c, 0x00, 0x00
	db	0x00, 0x00, 0x00
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker DistributeLeftMMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 35, 17;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 91
		Bitmap <35,17,0,BMF_MONO>
	db	0x00, 0x00, 0x00, 0x00, 0x00
	db	0x7f, 0xe7, 0xe0, 0x7f, 0xc0
	db	0x55, 0x65, 0x60, 0x55, 0x40
	db	0x6a, 0xa6, 0xa0, 0x6a, 0xc0
	db	0x55, 0x65, 0x60, 0x55, 0x40
	db	0x7f, 0xe7, 0xe0, 0x7f, 0xc0
	db	0x00, 0x00, 0x00, 0x00, 0x00
	db	0x40, 0x04, 0x00, 0x40, 0x00
	db	0x00, 0x00, 0x00, 0x00, 0x00
	db	0x40, 0x04, 0x00, 0x40, 0x00
	db	0x08, 0x20, 0x82, 0x00, 0x00
	db	0x58, 0x35, 0x83, 0x40, 0x00
	db	0x3f, 0xfb, 0xff, 0x80, 0x00
	db	0x58, 0x35, 0x83, 0x40, 0x00
	db	0x08, 0x20, 0x82, 0x00, 0x00
	db	0x40, 0x04, 0x00, 0x40, 0x00
	db	0x00, 0x00, 0x00, 0x00, 0x00
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker DistributeRightMMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 35, 17;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 91
		Bitmap <35,17,0,BMF_MONO>
	db	0x00, 0x00, 0x00, 0x00, 0x00
	db	0x7f, 0xc1, 0xfc, 0x7f, 0xc0
	db	0x55, 0x41, 0x54, 0x55, 0x40
	db	0x6a, 0xc1, 0xac, 0x6a, 0xc0
	db	0x55, 0x41, 0x54, 0x55, 0x40
	db	0x7f, 0xc1, 0xfc, 0x7f, 0xc0
	db	0x00, 0x00, 0x00, 0x00, 0x00
	db	0x00, 0x40, 0x04, 0x00, 0x40
	db	0x00, 0x00, 0x00, 0x00, 0x00
	db	0x00, 0x40, 0x04, 0x00, 0x40
	db	0x00, 0x08, 0x20, 0x82, 0x00
	db	0x00, 0x58, 0x35, 0x83, 0x40
	db	0x00, 0x3f, 0xfb, 0xff, 0x80
	db	0x00, 0x58, 0x35, 0x83, 0x40
	db	0x00, 0x08, 0x20, 0x82, 0x00
	db	0x00, 0x40, 0x04, 0x00, 0x40
	db	0x00, 0x00, 0x00, 0x00, 0x00
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker DistributeTopMMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 17, 35;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 111
		Bitmap <17,35,0,BMF_MONO>
	db	0x00, 0x00, 0x00
	db	0x7d, 0x55, 0x00
	db	0x54, 0x08, 0x00
	db	0x6c, 0x1c, 0x00
	db	0x54, 0x3e, 0x00
	db	0x6c, 0x08, 0x00
	db	0x54, 0x08, 0x00
	db	0x6c, 0x08, 0x00
	db	0x54, 0x08, 0x00
	db	0x6c, 0x08, 0x00
	db	0x7c, 0x3e, 0x00
	db	0x00, 0x1c, 0x00
	db	0x00, 0x08, 0x00
	db	0x7d, 0x55, 0x00
	db	0x54, 0x08, 0x00
	db	0x6c, 0x1c, 0x00
	db	0x54, 0x3e, 0x00
	db	0x6c, 0x08, 0x00
	db	0x7c, 0x08, 0x00
	db	0x00, 0x08, 0x00
	db	0x00, 0x08, 0x00
	db	0x00, 0x08, 0x00
	db	0x00, 0x3e, 0x00
	db	0x00, 0x1c, 0x00
	db	0x00, 0x08, 0x00
	db	0x7d, 0x55, 0x00
	db	0x54, 0x00, 0x00
	db	0x6c, 0x00, 0x00
	db	0x54, 0x00, 0x00
	db	0x6c, 0x00, 0x00
	db	0x54, 0x00, 0x00
	db	0x6c, 0x00, 0x00
	db	0x54, 0x00, 0x00
	db	0x7c, 0x00, 0x00
	db	0x00, 0x00, 0x00
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker DistributeWidthMMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 35, 17;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 91
		Bitmap <35,17,0,BMF_MONO>
	db	0x00, 0x00, 0x00, 0x00, 0x00
	db	0x7c, 0x03, 0xf8, 0x07, 0xc0
	db	0x54, 0x03, 0x58, 0x05, 0x40
	db	0x6c, 0x02, 0xa8, 0x06, 0xc0
	db	0x54, 0x03, 0x58, 0x05, 0x40
	db	0x7c, 0x03, 0xf8, 0x07, 0xc0
	db	0x00, 0x00, 0x00, 0x00, 0x00
	db	0x04, 0x02, 0x08, 0x04, 0x00
	db	0x00, 0x00, 0x00, 0x00, 0x00
	db	0x04, 0x02, 0x08, 0x04, 0x00
	db	0x00, 0x90, 0x01, 0x20, 0x00
	db	0x05, 0x9a, 0x0b, 0x34, 0x00
	db	0x03, 0xfc, 0x07, 0xf8, 0x00
	db	0x05, 0x9a, 0x0b, 0x34, 0x00
	db	0x00, 0x90, 0x01, 0x20, 0x00
	db	0x04, 0x02, 0x08, 0x04, 0x00
	db	0x00, 0x00, 0x00, 0x00, 0x00
		GSEndString
	}
}
end GrObjAlignMonoMonikerResource;
