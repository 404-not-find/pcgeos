******************************************************************************
$Id: tools,v 1.1.27.1 97/03/29 04:49:30 canavese Exp $
******************************************************************************
			       Overview
******************************************************************************
This file contains a brief discussion of the tools available to aid
in debugging the chart library and to help in debugging interactions
between the application and the chart library.

All tcl code is contained in the 'lib' directory at the root of the
chart library directory. If you are doing a lot of work in the chart
library I suggest you add the following lines to your .swat file:
	var load-path [format {%s %s %s} [var load-path]
				/staff/pcgeos/Library/Chart/lib
				/staff/pcgeos/<user>/Library/Chart/lib]

This will place both the installed Chart/lib directory and your own
Chart/lib directory into your load-path so that swat will understand
when you type something like "load fp".


******************************************************************************
			  Chart Object Block
******************************************************************************
The file 'chart.tcl' contains tcl code for printing out various parts of
the chart object block. The commands include:
   	pchart	- Print information about all the chart objects
   	psarea	- Print information about the series area
   	pparea	- Print information about the plot area

All of these take the address of chart block as an argument. They assume
that the address is at ds:0 if no argument is supplied.

There is also a command:
   	paxis	- Print information about an axis

Which takes the address of an axis to print information for. The address
is assumed to be in *ds:si if no argument is supplied.

The information for each object contains at least:
	- Segment and chunk of the object
	- The bounds of the object
	- The chart object geometry flags

There is other information that depends on the object:
	Plot Group - Block containing the chart parameters
	Axis	   - Axis flags, various axis values (min, max, etc)


******************************************************************************
			   Parameter Block
******************************************************************************
The file 'pblk.tcl' contains tcl code to print out the parameter block
for a chart.

The only function contained there is 'pparams'. This takes as an argument
the address of the parameter block. If no argument is supplied then ds
is assumed to be the segment containing a chart block and the parameter
block for that chart block is found and used.


******************************************************************************
			    Floating Point
******************************************************************************
Since the chart library depends on sometimes complex floating point math
code there is a file 'fp.tcl' which contains two functions:
	pfloat	- Print a floating point number given the address of
		  the number. (Assumes ds:si).
	
	fpstack	- Print the floating point stack for a given process.
		  Assumes the current process if no argument is given.

******************************************************************************
			       Geometry
******************************************************************************
The file 'cgeo.tcl' contains a function 'cgwatch' which will turn on and off
breakpoints which allow you to watch as chart geometry happens. If you
are having geometry problems this may be able to help you track them down.


******************************************************************************
				Other
******************************************************************************
The only other file is 'fprof.tcl' which was intended to give a rundown on
the number of calls made to the various floating point routines by the
chart library. My hope was that this would help out when it came time
to optimize the chart library. The stuff in here isn't complete (in fact
it is hardly started).
