COMMENT @----------------------------------------------------------------------

	Copyright (c) GeoWorks 1988 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		Startup
FILE:		cstartupConstant.def

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	brianc	10/92		Initial version

DESCRIPTION:
	This file contains contains global constants for startup.

	$Id: cstartupConstant.def,v 1.1 97/04/04 16:52:29 newdeal Exp $

------------------------------------------------------------------------------@

;------------------------------------------------------------------------------
;	Conditional Assembly flags
;------------------------------------------------------------------------------

include product.def

; For the New Deal version of Welcome (different artwork, right now)
; If this is not set, the default artwork is for GlobalPC
;
ifndef  _NEW_DEAL
ifdef	NEW_DEAL
	_NEW_DEAL = -1
else
	_NEW_DEAL = 0
endif
endif


;------------------------------------------------------------------------------
;	StartupClass
;------------------------------------------------------------------------------

StartupClass	class	StartupProcessClass

MSG_STARTUP_OPEN_FIELD	message
;
;	Pass:	^lcx:dx = field to open
;	Return:	nothing
;

MSG_STARTUP_TRY_TO_SWITCH_TO_STARTUP	message
;
;	Called from F2 monitor to try to switch to main screen.
;	(In Redwood, MSG_STARTUP_REALLY_TRY_TO_SWITCH_TO_STARTUP will do the
;	real switching work.)
;
;	Pass: nothing

MSG_STARTUP_EXPRESS_MENU_CONTROL_ITEM_CREATED	message
;
; Sent by Express Menu Control objects when they've created the item we've
; asked them to create.
;
; pass:
;	ss:bp = CreateExpressMenuControlItemResponseParams


ifdef ISTARTUP
;**********************************************************************

MSG_STARTUP_SWITCH_TO_HOST	message
;
; Called from keystroke monitor.  Attempts to task-switch to the host
; connectivity app.
;
; Pass: nothing

MSG_STARTUP_SHELL_TO_DOS	message
;
; Called from keystoke monitor to shell to DOS.
;
; Pass: nothing
;

MSG_STARTUP_BEGIN_EDLAN_MODE	message
;
; Begin EDLan mode.  (Pass keys onto BIOS.)
;
; Pass: nothing
;

MSG_STARTUP_DO_QUIZ_DIALOG	message
;
; Bring up the Excelsior Quiz dialog
;

ifdef MOUSETUTORIAL
MSG_STARTUP_MOUSE_TUTORIAL 	message
;
; Sent by MouseTutTrigger to startup the mouse tutorial.
;
endif

MSG_STARTUP_SEND_TEXT_MESSAGE	message
; 
; Launch the NETMSG app.

MSG_STARTUP_POLL_SERVER_FOR_MESSAGES	message
;
; Poll the netware server & see if there's a message coming in.
;

MSG_STARTUP_CLOSE_ALERT_INTERACTION message
;
; Close up the interaction

MSG_STARTUP_AUTOLOGIN_USER 	message
;
; Complete autologin of user 

MSG_STARTUP_COUNTDOWN_AUTOLOGIN	message
;
; countdown on autologin timeout.

endif

ifdef _VS150

MSG_STARTUP_REALLY_TRY_TO_SWITCH_TO_STARTUP	message
;
;	Called from F2 monitor to try to switch to main screen.
;	(In Redwood, MSG_STARTUP_REALLY_TRY_TO_SWITCH_TO_STARTUP will do the
;	real switching work.)
;
;	Pass: nothing

endif

MSG_STARTUP_CONFIRM_FIELD_CHANGE_ACK	message
;
; Response from UserConfirmFieldChange when all of those queried on the
; GCNSLT_FIELD_CHANGE_NOTIFICATIONS list have responded.  Indicates whether
; the field change should go on or not
;
;	Pass:	cx	= TRUE indicates field change is OK
;			= FALSE indicates field change must be aborted.
;	Return: nothing
;	Destroys: ax, cx, dx, bp (allowed)

StartupClass	endc

;-----------------------------------------------------------------------------
;	StartupApplicationClass		
;-----------------------------------------------------------------------------
 
StartupApplicationClass	class	GenApplicationClass

MSG_STARTUP_APP_SWITCH_TO_STARTUP	message
;
;	Called to return to Startup main screen
;
; 	Pass: nothing

MSG_STARTUP_APP_GET_RETURN_FIELD	message
;
;	Called from StartupOpenApplication to see if we should return to
;	a particular room.
;
;	Pass:	nothing
;	Return: if carry set, ^lcx:dx = room to which we should return to
;

MSG_STARTUP_APP_SET_RETURN_FIELD	message
;
;	Called from StartupOpenField to set the field we should return to
;	when returning from a shutdown to DOS
;
;	Pass:	^lcx:dx = field
;	Return:	nothing
;

ifdef ISTARTUP

MSG_STARTUP_APP_KEYBOARD_DRIVER_CHAR	message
;
;	Called from the keyboard driver.  We have a raw keyboard char that
;	we must handle for EDLan compatibility.
;
;	Pass:	al	= scan code
;		ah	= ShiftState
;	Return:	nothing
;

MSG_STARTUP_APP_LOGOUT			message
;
;	Called when we want to try to logout.
;
;	Pass:	cx	= TRUE/FALSE (should we query user?)
;	Return:	nothing
;

endif


;
; Here we store the field we should return to after shutting down to DOS.
;
returnField	optr	0

StartupApplicationClass	endc

;------------------------------------------------------------------------------
;	StartupPrimaryClass
;------------------------------------------------------------------------------

StartupPrimaryClass	class	GenPrimaryClass
StartupPrimaryClass	endc

;------------------------------------------------------------------------------
;	StartupRoomTriggerClass
;------------------------------------------------------------------------------

StartupRoomTriggerClass	class	GenTriggerClass, master

	;----------------------------------------------------------------------
	;	Methods
	;----------------------------------------------------------------------

MSG_SRT_SET_MONIKER	message
;
;	This method takes a chunk handle of a moniker and the title chunk from
;	its own instance data and combines them to make its own ever-lovin' 
;	moniker.
;
;	Pass: CX:DX - Chunk handle of bitmap to draw as part of moniker
;

	;----------------------------------------------------------------------
	;	Instance data
	;----------------------------------------------------------------------

	SRTI_title		lptr.char
	SRTI_pictureNumber	byte
StartupRoomTriggerClass	endc

;------------------------------------------------------------------------------
;	StartupFieldClass
;------------------------------------------------------------------------------

StartupFieldClass	class	GenFieldClass

ifdef GPC
MSG_STARTUP_FIELD_START_SET_UP	message
;
; Prepare for running set up application.
;

MSG_STARTUP_FIELD_FINISH_SET_UP	message
;
; Finish running set up application.
;

MSG_STARTUP_FIELD_CLEAN_UP_SET_UP	message
;
; Clean up set up application on error.
;
endif

StartupFieldClass	endc


ifdef	ISTARTUP
;------------------------------------------------------------------------------
;	IStartupFieldClass -- 	exists to limit the number of running apps in a
;				field to a value in the .INI file.
;------------------------------------------------------------------------------

IStartupFieldClass	class	StartupFieldClass
IStartupFieldClass	endc

endif			; ifdef ISTARTUP


;------------------------------------------------------------------------------
;			Constants
;------------------------------------------------------------------------------

PictureNumber	etype	word

PN_ROOM_1	enum PictureNumber
PN_ROOM_2	enum PictureNumber
PN_ROOM_3	enum PictureNumber

;
; CONSTANTS for summons responses
;
YES_RESPONSE			equ 0
NO_RESPONSE			equ 1

TITLE_MAX_LEN		equ 32



;------------------------------------------------------------------------------
;			Fatal errors
;------------------------------------------------------------------------------

BAD_PICTURE_NUMBER					enum	FatalErrors
STARTUP_ERROR						enum	FatalErrors
