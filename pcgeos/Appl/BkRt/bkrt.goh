/*
 ***************************************************************************
 *		Class & Message Definitions
 ***************************************************************************
 */
extern Boolean g_isEFax;
/*
 *  Criteria type for sorting the list entries in the view.
 */
typedef enum {
    LM_DATETIME,
    LM_FILENAME,
    LM_MEMO
} ListMenu;

@class	BKRTProcessClass, GenProcessClass ;

@message void MSG_BKRTP_UPDATE_BACKUP_VIEW_LIST();
@message void MSG_BKRTP_VIEW_BACKUP_GROUP();
@message void MSG_BKRTP_VIEW_ALL_BACKUP_GROUPS();
@message void MSG_BKRTP_QUIT_APP();
@message void MSG_BKRTP_BACKUP_SELECTED_FILE();
@message void MSG_BKRTP_BACKUP_SYS_CONFIG();
@message void MSG_BKRTP_BACKUP_USER_DOC();
@message void MSG_BKRTP_BACKUP_FULL_SYS();
@message (GEN_ITEM_GROUP_APPLY_MSG) MSG_BKRTP_EMAIL_BACKUP_SELECTION_APPLY;
@message void MSG_BKRTP_RESTORE_SYS_CONFIG();
@message void MSG_BKRTP_RESTORE_FULL_SYS();
@message void MSG_BKRTP_RESTORE_GROUP();
@message void MSG_BKRTP_CONFIRMATION_ON_RESTORE();
@message void MSG_BKRTP_DELETE_GROUP();

@message void MSG_BKRTP_READ_SETTING();
@message void MSG_BKRTP_WRITE_SETTING();

@message void MSG_BKRTP_SORT_DATETIME();
@message void MSG_BKRTP_SORT_FILENAME();
@message void MSG_BKRTP_SORT_MEMO();

@message void MSG_BKRTP_AUTOMATIC_BACKUP();
@endc   /* end of class definition */


/*
 *  Scrolling list class for the search result.
 */
@class BackupListClass, GenDynamicListClass;

@message (GEN_DYNAMIC_LIST_QUERY_MSG)MSG_BL_QUERY_MONIKER;
@message void MSG_BL_SET_LIST(optr chunkArray, word num, word maxFileLen);
@message optr MSG_BL_GET_LIST();
@message void MSG_BL_CLEAR_LIST();
    /*
     *  Internal data structure to store entries returned by the backup
     *  restore library.
     */
    @instance optr BL_monikerChunk;
    /*
     *  Store the length of the longest file name in the list.
     *  Help to format the list.
     */
    @instance word BL_maxFileLen;
@endc


/*
 *  Used to intercept system messages and update the ui gadget
 */
@class MyItemGroupClass, GenItemGroupClass;
@endc


/*
 *  Used to intercept system messages and update the ui gadget
 */
@class MyDocumentFolderWindowClass, GenInteractionClass;
@endc


/*
 *  Used to intercept system messages and update the ui gadget
 */
@class MyGenInteractionClass, GenInteractionClass;
@endc

/*
 *  Used to intercept system messages and update the ui gadget
 */
@class MyGenFileSelectorClass, GenFileSelectorClass;
@endc


/*
 *  Used to intercept system messages and update the ui gadget
 */
@class MyGenTextClass, GenTextClass;
@message void MSG_MGT_SET_NUM_FILES(word num, dword totalSize);
@message void MSG_MGT_INC_COUNT();
@message dword MSG_MGT_GET_TOTAL_FILE_SIZE();
@message word MSG_MGT_GET_TOTAL_FILE_NUMBER();
    @instance word  MGT_numOfFiles;/* total number of files to be operated */
    @instance dword MGT_totalSize; /* total number of bytes of these files */
    @instance word  MGT_doneSoFar; /* number of files that have been operated*/

@endc

@class MyGenTriggerClass, GenTriggerClass;
@message void	MSG_MGT_SET_SELECTION(word sel);
@message word	MSG_MGT_GET_SELECTION();
    @instance word MGT_selection;
@endc
