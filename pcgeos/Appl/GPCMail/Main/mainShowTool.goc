/***********************************************************************
 *
 *	Copyright (c) New Deal 1998 -- All Rights Reserved
 *
 * PROJECT:	  Mail
 * MODULE:	  Mail
 * FILE:	  mainProcess.goc
 *
 * AUTHOR:  	  Gene Anderson: 12/2/98
 *
 * REVISION HISTORY:
 *	Date	  Name	    Description
 *	----	  ----	    -----------
 *	12/2/98    gene	    Initial version
 *
 * DESCRIPTION:
 *	Catch-all for misc. classes
 *
 * 	$Id$
 *
 ***********************************************************************/

@include "mail.goh"
@include "class.goh"
@include "global.goh"
@include "initfile.h"

@classdecl ShowToolbarClass;
@classdecl PasswordTextClass;
@classdecl EnableTextClass;



/**************************************************************
*          
* FUNCTION:        MSG_SHOW_TOOLBAR_SHOW_TOOLBAR
* PASS:            none
* RETURN:          none
* DESCRIPTION:     show the associated toolbar
*
* REVISION HISTORY:
*         Name      Date        Description
*         ----      ----        -----------
*         gene      12/14/98    Initial Revision

***************************************************************/
@method ShowToolbarClass, MSG_SHOW_TOOLBAR_SHOW_TOOLBAR
{
        @call pself->STI_toolbar::MSG_GEN_SET_USABLE(VUM_DELAYED_VIA_APP_QUEUE);
	@call oself::MSG_GEN_REPLACE_VIS_MONIKER_OPTR(@hideToolbarMoniker,
	                                            VUM_DELAYED_VIA_APP_QUEUE);
	@call oself::MSG_GEN_TRIGGER_SET_ACTION_MSG(MSG_SHOW_TOOLBAR_HIDE_TOOLBAR);
}



/**************************************************************
*          
* FUNCTION:        MSG_SHOW_TOOLBAR_HIDE_TOOLBAR
* PASS:            none
* RETURN:          none
* DESCRIPTION:     show the associated toolbar
*
* REVISION HISTORY:
*         Name      Date        Description
*         ----      ----        -----------
*         gene      12/14/98    Initial Revision

***************************************************************/
@method ShowToolbarClass, MSG_SHOW_TOOLBAR_HIDE_TOOLBAR
{
        @call pself->STI_toolbar::MSG_GEN_SET_NOT_USABLE(VUM_DELAYED_VIA_APP_QUEUE);
	@call oself::MSG_GEN_REPLACE_VIS_MONIKER_OPTR(@showToolbarMoniker,
	                                            VUM_DELAYED_VIA_APP_QUEUE);
	@call oself::MSG_GEN_TRIGGER_SET_ACTION_MSG(MSG_SHOW_TOOLBAR_SHOW_TOOLBAR);
}


/**************************************************************
*          
* FUNCTION:        MSG_GEN_LOAD_OPTIONS
* PASS:            params - GenOptionsParams *
* RETURN:          none
* DESCRIPTION:     load options to get starting state
*
* REVISION HISTORY:
*         Name      Date        Description
*         ----      ----        -----------
*         gene      12/14/98    Initial Revision

***************************************************************/
@method ShowToolbarClass, MSG_GEN_LOAD_OPTIONS
{
        word err, state;

        err = InitFileReadInteger(params->GOP_category,
				  params->GOP_key,
				  &state);
	if (err || (state & pself->STI_mask)) {
	    @call oself::MSG_SHOW_TOOLBAR_SHOW_TOOLBAR();
	} else {
	    @call oself::MSG_SHOW_TOOLBAR_HIDE_TOOLBAR();
	}
}


/**************************************************************
*          
* FUNCTION:        MSG_GEN_SAVE_OPTIONS
* PASS:            params - GenOptionsParams *
* RETURN:          none
* DESCRIPTION:     save options to record current state
*
* REVISION HISTORY:
*         Name      Date        Description
*         ----      ----        -----------
*         gene      12/14/98    Initial Revision

***************************************************************/
@method ShowToolbarClass, MSG_GEN_SAVE_OPTIONS
{
    word state, newState;

    /*
     * only save options if not CUI
     */
    if (@call MailAppObj::MSG_MAIL_APP_GET_USER_LEVEL() != UIIL_INTRODUCTORY) {
	InitFileReadInteger(params->GOP_category,
			    params->GOP_key,
			    &state);
	if (@call pself->STI_toolbar::MSG_GEN_GET_USABLE()) {
	    newState = state|pself->STI_mask;
	} else {
	    newState = state&~(pself->STI_mask);
	}
	InitFileWriteInteger(params->GOP_category,
			     params->GOP_key,
			     newState);
    }
}




/**************************************************************
*          
* FUNCTION:        MSG_META_START_MOVE_COPY
* PASS:            retVal - 
* RETURN:          no
* DESCRIPTION:     get 
*
* REVISION HISTORY:
*         Name      Date        Description
*         ----      ----        -----------
*         gene      12/28/98    Initial Revision

***************************************************************/

@method PasswordTextClass, MSG_META_START_MOVE_COPY
{
    /*
     * do nothing
     */
    retVal->flags = MRF_PROCESSED;
}





/**************************************************************
*          
* FUNCTION:        MSG_META_TEXT_EMPTY_STATUS_CHANGED
* PASS:            object - optr of object
*                  hasTextFlag - TRUE if has text
* RETURN:          none
* DESCRIPTION:     save options to record current 
*
* REVISION HISTORY:
*         Name      Date        Description
*         ----      ----        -----------
*         gene      3/12/99     Initial Revision

***************************************************************/
@method EnableTextClass, MSG_META_TEXT_EMPTY_STATUS_CHANGED
{
    if (hasTextFlag) {
	@call pself->ETI_object::MSG_GEN_SET_ENABLED(VUM_DLYD);
    } else {
	@call pself->ETI_object::MSG_GEN_SET_NOT_ENABLED(VUM_DLYD);
    }
}
