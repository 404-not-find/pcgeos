/***********************************************************************
 *
 *	Copyright (c) New Deal 1998 -- All Rights Reserved
 *
 * PROJECT:	  Mail
 * MODULE:	  Mail
 * FILE:	  mainProcess.goc
 *
 * AUTHOR:  	  Gene Anderson: 12/2/98
 *
 * REVISION HISTORY:
 *	Date	  Name	    Description
 *	----	  ----	    -----------
 *	12/2/98    gene	    Initial version
 *
 * DESCRIPTION:
 *	strings for the Mail application
 *
 * 	$Id$
 *
 ***********************************************************************/

@include	<stdapp.goh>
@include        <ui.goh>
@include        <product.goh>
@include        "mail.goh"

@start STRINGS, data;

@chunk TCHAR msglistName[] ="msglist";
@localize not;

@ifdef (PRODUCT_NDO2000)
@chunk TCHAR addrBookFileName[] = "First Address Book";
@else
@chunk TCHAR addrBookFileName[] = "My Address Book";
@endif
@localize {"name of address book data file" 1-32};
@chunk TCHAR addrBookMailField[] = "email";
@localize {"name of address book field for email" 1-5};
@chunk TCHAR addrBookAliasField[] = "alias";
@localize {"name of address book field for aliases" 1-5};

@chunk TCHAR printMessageName[] = "Mail Message";
@localize {"string for document name when printing"};


@chunk TCHAR noMessagesCtStr[] = "%s: No Messages";
@localize {"moniker for list with no messages; %s is folder name" 1-128};

@chunk TCHAR oneMessageCtStr[] = "%s: 1 Message";
@localize {"moniker for list with 1 message; %s is folder name" 1-128};

@chunk TCHAR nMessagesCtStr[] = "%s: %d Messages";
@localize {"moniker for list with more than 1 message; %s is folder name, %d is # of messages" 1-128};

@chunk TCHAR messTitleMkr = "Email Message: \"%s\"";
@localize {"used to create the moniker for the message read window" 1-128};

@chunk TCHAR messTitleNoSubjMkr = "Message: [No Subject Specified]";
@localize {"used to create the moniker for the message read window for a message with no subject"};

@chunk TCHAR messListNoSubjMkr = "[No Subject Specified]";
@localize {"used to create the moniker for the message list for a message with no subject"};



@chunk TCHAR folderExistsErr[] = "A folder named \"\1\" already exists.";
@localize {"error when trying to create a folder that already exists; @1 is the folder name"};

@chunk TCHAR folderNoCreateErr[] = "An error occurred trying to create the folder.";
@localize {"generic error when trying to create a folder"};

@chunk TCHAR folderNoRenameErr[] = "Unable to rename the folder \"\1\".";
@localize {"generic error when trying to rename a folder"};

@chunk TCHAR folderRenameExistsErr[] = "Unable to rename the folder to \"\1\". A folder with that name already exists.";
@localize {"error when trying to rename a folder to a name that already exists; @1 is the new folder name"};

@chunk TCHAR addrLaunchErr[] = "Unable to open the Address Book application.";
@localize {"error from File / Address Book"};

@chunk TCHAR browserLaunchErr[] = "Unable to open the browser.";
@localize {"error after clicking on a URL in a message"};

@chunk TCHAR docLaunchErr[] = "Unable to open an application for the attachment.";
@localize {"error trying to open attachment"};

@chunk TCHAR emptyToFieldErr[] = "The To: field must be filled in.";
@localize {"error when To: field is left empty"};

@chunk TCHAR unableToCreateMessageErr[] = "Error: unable to create the message.";
@localize {"error when file error occurs creating the message."};

@chunk TCHAR unableToSaveMessageErr[] = "Error: unable to save the message.";
@localize {"error when file error occurs saving the message."};

@chunk TCHAR unableToOpenMessageErr[] = "Error: unable to open message.";
@localize {"error when file error occurs opening the message."};


@chunk TCHAR saveThrowBackStr="This message has not yet been sent. Do you want to save it, throw it away, or go back to the message window?";
@localize {"message when user exits New Message window without saving or sending the message. buttons=save/throw away/back"};

@chunk TCHAR unableToMoveMessageStr[] = "Error: unable to move the message to the folder \"\1\".";
@localize {"error when file error occurs moving a message from one file to another; @1 is the folder name"};
@chunk TCHAR unableToRecoverStr[] = "Error: unable to recover the message.";
@localize {"error when file error occurs recovering a message from Trash"};

@visMoniker yesMoniker = 'Y', "Yes";
@localize {"used for standard OK/Cancel dialogs"};

@visMoniker noMoniker = 'N', "No";
@localize {"used for standard OK/Cancel dialogs"};

@visMoniker saveMoniker = "Save";
@localize {"used for save/throw away/back message dialog"};
@visMoniker throwAwayMoniker = "Throw Away";
@localize {"used for save/throw away/back message dialog"};
@visMoniker backMoniker = "Back";
@localize {"used for save/throw away/back message dialog"};

@visMoniker readMoniker = "Read";
@localize {"used for read/edit message button"};
@visMoniker editMoniker = "Edit";
@localize {"used for read/edit message button"};

@ifndef GRAPHICAL_ATTACHMENT_LIST
@chunk TCHAR noAttachmentStr = "(None)";
@localize {"used for attachment list with no attachments" 1-128};
@chunk TCHAR oneAttachmentStr = "This message has 1 attachment";
@localize {"used for attachment list with 1 attachment" 1-128};
@chunk TCHAR nAttachmentsStr = "This message has %d attachments";
@localize {"used for attachment list with more than 1 attachment; %d is #" 1-128};
@endif

@chunk TCHAR folderDeleteEmpty[] = "Delete the folder \"\1\"?";
@localize {"yes/no message for deleting an empty folder"};

@chunk TCHAR folderDeleteNonEmpty[] = "The folder \"\1\" contains messages. You will not be able to undo this action. Delete it any way?";
@localize {"yes/no message for deleting a non-empty folder"};

@chunk TCHAR folderDeleteErr[] = "Unable to delete the folder \"\1\".";
@localize {"error when deleting a folder fails"};

@chunk TCHAR emptyTrashStr[] = "Delete all messages in the Trash?";
@localize {"yes/no message for emptying the trash"};

@chunk TCHAR deleteAccountStr[] = "This will delete all messages, folders, and attachments for this account. You will not be able to undo this action. Do you wish to proceed?";
@localize {"yes/no message for deleting an account"};

@chunk TCHAR deleteAccountErr[] = "Unable to delete the account. A file may be open by another application.";
@localize {"error when deleting an account fails"};

@chunk TCHAR messageSavedStr[] = "Your message \"\1\" has been saved.";
@localize {"OK message after successfully saving a draft message; @1 is the subject"};

@chunk TCHAR messageRecoveredStr[] = "Your message has been recovered to the folder \"\1\".";
@localize {"OK message after recovering a message from the trash; @1 is the folder name the message was recovered to"};

@chunk TCHAR unableToCreateAccountErr[] = "An error occurred when creating the account \"\1\".";
@localize {"file error when creating an account; @1 is the account name"};

@chunk TCHAR defaultAccountErr[] = "An error occurred when creating the default account.";
@localize {"error when creating the default mail account; app exits"};

@chunk TCHAR accountExistsErr[] = "Error: an account named \"\1\" already exists.";
@localize {"error for new account when account already exists; @1 is the account name"};

@chunk TCHAR unableToSaveAccountErr[] = "Error: unable to save account information.";
@localize {"memory alloc or file error when saving account info"};

@chunk TCHAR attachFileTwiceStr[] = "The file \"\1\" is already attached. Do you wish to attach it again?";
@localize {"yes/no when file has already been attached; @1 is filename"};

@chunk TCHAR noMoreFoundStr[] = "No more instances of \"\1\" were found.";
@localize {"message when search fails or wraps completely; @1 is the search string"};

@ifdef SEND_BUG_MAIL

@ifndef (PRODUCT_NDO2000)
@chunk TCHAR bugMailStr[] = "Thank you for taking the time to provide feedback to MyTurn.com. After you click on the \"OK\" button at the bottom of this window, an e-mail message with blank fields for you to enter information will be created. Please type your comments or description of the problem you are having in the provided areas, and then click on the \"Send\" button.";
@else
@chunk TCHAR bugMailStr[] = "Thank you for taking the time to provide feedback to NewDeal. After you click on the \"OK\" button at the bottom of this window, an e-mail message with blank fields for you to enter information will be created. Please type your comments or description of the problem you are having in the provided areas, and then click on the \"Send\" button.";
@endif
@localize {"message when sending bug mail to Global PC/NewDeal"};

@chunk TCHAR bugMailErr[] = "Unable to open the template message file \"\1\".";
@localize {"error when failing to open template message for bug mail; @1 is the template file name"};

@endif

@chunk TCHAR copyAttachErr[] = "Unable to copy the attachment file \"\1\".";
@localize {"error when copying a forwarded attachment; @1 is the attachment file name"};

@chunk TCHAR saveAttachOverwriteStr[] = "\"\1\" already exists. Would you like to overwrite it?";
@localize {"message when saving an attachment where the file already exists; @1 is the attachment name"};

@chunk TCHAR saveAttachErr[] = "Unable to save the attachment file \"\1\".";
@localize {"error when saving an attachment; @1 is the attachment file name"};

@ifdef (PRODUCT_NDO2000)
@chunk TCHAR saveAttachNameErr[] = "Invalid file name. The file name must be less than 8.3 characters for DOS files, and 32 characters for other files.";
@else
@chunk TCHAR saveAttachNameErr[] = "Invalid file name. The file name must be less than 8.3 characters for DOS files, and 32 characters for other files.";
@endif

@chunk TCHAR attachNoExistStr[] = "One or more of the attachments cannot be opened.  Would you like to send the message anyway?";
@localize {"message when attachments for message being sent cannot be opened."};

@chunk TCHAR enterPasswordStr[] = "Please enter the password for %s.";
@localize {"prompt displayed when asking the user for a password; %s is mail account"};

@chunk TCHAR noServerErr[] = "You must configure your e-mail account first.";
@localize {"error when trying to send or receive mail with no account set up"};

@ifdef MAIL_CONVERSION_SERVER

@chunk TCHAR convertAddr[] = "translate@globalpc.com";
@localize {"address for attachment conversion"};

@endif

@chunk TCHAR attachUnreadable[] = " (file unreadable)";
@localize {"string appended to open/convert/save attachment dialog if file missing or unreadable"};

/*------------------------------------------------------------------------*/

@chunk TCHAR fromFieldStr[] = "From: ";
@localize {"string displayed for From: field; must end with : "};
@chunk TCHAR fromFieldOut[] = "From: ";
@localize not;
@chunk TCHAR fromFieldName[] = "FROM";
@localize not;
@chunk TCHAR replyToFieldName[] = "REPLY-TO";
@localize not;

@chunk TCHAR subjectFieldStr[] = "Subject: ";
@localize {"string displayed for Subject: field; must end with : "};
@chunk TCHAR subjectFieldOut[] = "Subject: ";
@localize not;
@chunk TCHAR subjectFieldName[] = "SUBJECT";
@localize not;

@chunk TCHAR toFieldStr[] = "To: ";
@localize {"string displayed for To: field; must end with : "};
@chunk TCHAR toFieldOut[] = "To: ";
@localize not;
@chunk TCHAR toFieldName[] = "TO";
@localize not;

@chunk TCHAR dateFieldStr[] = "Date: ";
@localize {"string displayed for Date: field; must end with : "};
@chunk TCHAR dateFieldOut[] = "Date: ";
@localize not;
@chunk TCHAR dateFieldName[] = "DATE";
@localize not;

@chunk TCHAR ccFieldStr[] = "Cc: ";
@localize {"string displayed for Cc: field; must end with : "};
@chunk TCHAR ccFieldOut[] = "Cc: ";
@localize not;
@chunk TCHAR ccFieldName[] = "CC";
@localize not;

@ifdef BCC_SUPPORT
@chunk TCHAR bccFieldStr[] = "Bcc: ";
@localize {"string displayed for Bcc: field; must end with : "};
@chunk TCHAR bccFieldOut[] = "Bcc: ";
@localize not;
@chunk TCHAR bccFieldName[] = "BCC";
@localize not;
@endif

@chunk TCHAR xdirFieldOut[] = "X-Dir: ";
@localize not;
@chunk TCHAR xdirFieldName[] = "X-DIR";
@localize not;

@chunk TCHAR xreadFieldOut[] = "X-Read: R\r";
@localize not;
@chunk TCHAR xreadFieldName[] = "X-READ";
@localize not;

@ifdef (PRODUCT_NDO2000)
@chunk TCHAR xmailerFieldStr[] = "X-Mailer: NewMail 2.2";
@localize not;
@else
@chunk TCHAR xmailerFieldStr[] = "X-Mailer: Global Email 1.0";
@localize not;
@endif

@chunk TCHAR addrSeparator[] = ", ";
@localize not;

@chunk TCHAR dateFormatStr[] = "|SW|, |SD| |SM| |SY| |Zh|:|Zm|:|Zs|";
@localize not;

@chunk TCHAR dateFormatStrAlt1[] = "|SD| |SM| |SY| |Zh|:|Zm|:|Zs|";
@localize not;

@chunk TCHAR reStr[] = "Re: ";
@localize {"string prepended to subject for replying to messages"};

@chunk TCHAR fwdStr[] = "Fwd: ";
@localize {"string prepended to subject for forwared message"};

@chunk TCHAR replyAtStr[] = "At %s, %s wrote:\r";
@localize {"string used for message replies; first %s is date & time, 2nd is sender"};

@chunk TCHAR replyDateFormatStr[] = "|HH|:|Zm||AP| |NM|/|SD|/|SY|";
@localize {"date/time format in for replies"};

@chunk TCHAR noSubjectStr[] = "No Subject";
@localize {"string for message with no subject"};

@chunk TCHAR sendingStatus[] = "Sending mail";
@localize {"string to notify the user that email is sending messages"};

@chunk TCHAR sendProgress[] = "Sending %d of %d";
@localize {"string to notify the user which message is being sent"};

@chunk TCHAR receivingStatus[] = "Receiving mail";
@localize {"string to notify the user that email is receiving messages"};

@chunk TCHAR checkMailStatus[] = "Checking for new mail";
@localize {"string to notify user that email is checking for new messages"};

@chunk TCHAR connectingStatus[] = "Connecting";
@localize {"string to notify user that email is connecting to the server"};

@chunk TCHAR receiveProgress[] = "Receiving %d of %d";
@localize {"string to notify the user which message is being received"};

@chunk TCHAR meFailedToConnectSMTP[] = "Failed to connect to email server";
@localize {"Error message notifying user that email failed to connect to the SMTP server"};

@chunk TCHAR meUnknownError[] = "The email exchange failed.";
@localize {"Email failed to send or receive for an unknown reason"};

@chunk TCHAR meHostNotResolved[] = "Failed because the host cannot be resolved.";
@localize {"Notify user email failed because host was not resolved"};

@chunk TCHAR meHostUnreachable[] = "Failed because the host is not reachable.";
@localize {"Notify user email failed because host was not reachable"};

@chunk TCHAR meLoginFailed[] = "Failed because login failed.";
@localize {"Notify User Login Failed"};

@chunk TCHAR meNetworkError[] = "The connection was lost during message transfer. Please check your internet connection and try again.";
@localize {"Notify of network error"};

@chunk TCHAR meUserStopped[] = "The email connection has been stopped.";
@localize {"User has terminated the connection"};

@chunk TCHAR mailToSendStr[] = "You still have email messages waiting to be sent. Would you still like to exit, or send the mail?";
@localize {"message displayed when mail still in Outbox when exiting"};

@visMoniker exitMoniker = 'E', "Exit";
@localize {"used for mailToSendStr"};
@visMoniker sendMoniker = 'S', "Send";
@localize {"used for mailToSendStr"};

@chunk TCHAR stopStopTrigger[] = "Stop";
@localize {"text for the button to cancel sending of email"};

@chunk TCHAR stoppingStr[] = "Stopping\xc9please wait";
@localize {"string when canceling sending of email"};

@chunk TCHAR attachmentProgress[] = "Attachment: ";
@localize {"moniker for the progress gen value when sending attachments"};

@chunk TCHAR defaultProgress[] = "Progress: ";
@localize {"default moniker for the download progress bar"};

@ifdef WARN_SENT_FOLDER_100
@chunk TCHAR warnSent0[] = "Warning! The Sent folder has \2 messages in it. Keeping all these messages may degrade performance. Either delete some of them or move them to other folders.";
@endif

@chunk TCHAR warnTrash1[] = "Warning! The Trash folder has \2 messages in it and is starting to get full. You should empty the trash.";
@localize {"warning for 400, 450 messages in Trash; @2 is # messages"};

@chunk TCHAR warnOutbox1[] = "Warning! The Outbox folder has \2 messages in it and is starting to get full. You should send the queued messages.";
@localize {"warning for 400, 450 messages in Outbox; @2 is # messages"};

@chunk TCHAR warnOther1[] = "Warning! The folder \"\1\" has \2 messages in it and is starting to get full. You should delete some of the messages or move them to other folders.";
@localize {"warning for 400, 450 messages in other folders; @1 is folder name; @2 is # messages"};

@chunk TCHAR warnTrash3[] = "Warning! The Trash folder is full. Empty the trash immediately.";
@localize {"warning for 500 messages in the Trash; @2 is # messages"};

@chunk TCHAR warnOutbox3[] = "Warning! The Outbox folder is full. Either send the messages or delete some of them immediately.";
@localize {"Warning for 500 messages in the Outbox; @2 is # messages"};

@chunk TCHAR warnOther3[] = "Warning! The folder \"\1\" has \2 messages in it and is full. Delete some of the messages or move them to other folders immediately.";
@localize {"Warning for 500 messages in other folders; @1 is folder name; @2 is # messages"};

@chunk TCHAR warnBadAddress[] = "The message with subject \"\1\" has a bad address \"\2\"";
@localize {"Warning for a badly formatted address"};
@chunk TCHAR warnBadAddress2[] = "The message with subject \"\1\" has a bad or missing address";
@localize {"Warning for a badly formatted or missing address"};

@ifdef SERVER_MOD_WARNING
@chunk TCHAR changeServerWarning[] = "Are you sure you really want to do this? If these changes are incorrect, it may stop you from being able to use email.";
@localize {"warning if the user changes any of the server settings"};
@endif

@ifdef GPC_PORTAL_SUPPORT
@chunk TCHAR changePortalError[] = "Please use the Your Accounts page at MyTurn.com to change these settings.";
@localize {"error if the user changes settings for portal-created account"};
@endif

@ifdef FIRST_LAUNCH_USER_GUIDE
@chunk TCHAR firstLaunchStr[] = "If this is your first time using email, we highly recommend you read the email section of the Getting Started Guide.";
@localize {"warning the first time the user starts the app"};
@endif

@ifndef DETAILED_ADDR_ERRORS
@chunk TCHAR badAddrErr[] = "\"\1\" is not a valid email address.";
@localize {"error if the user enters a bad email address in a field"};
@else
@ifdef (PRODUCT_NDO2000)
@chunk TCHAR cuiAddrNoDomainErr[] = "\rThe email address is missing a domain name, like \"@newdealinc.com\".";
@else
@chunk TCHAR cuiAddrNoDomainErr[] = "\rThe email address is missing a domain name, like \"@myturn.com\".";
@endif // PRODUCT_NDO2000
@localize "part of error DB for bad email addresses";

@chunk TCHAR cuiAddrDefaultErr[] = "\rThe email address could not be understood. Please look at the examples below to determine how to address your message.";
@localize "part of error DB for bad email addresses -- default error";

@chunk TCHAR cuiAddrNoExtErr[] = "\rThe email address is missing a domain suffix, like \".com\" or \".net\".";
@localize "part of error DB for bad email addresses";

@chunk TCHAR cuiAddrErr1[] = "The email message cannot be delivered because there appears to be an error in the address:\r\t";
@chunk TCHAR cuiAddrErr2[] = "\r\rPlease edit the address so that it can be delivered to the recipient. Email addresses need to look like:\r\tuser@domain.com\r";
@ifdef (PRODUCT_NDO2000)
@chunk TCHAR cuiAddrErr3[] = "\tsupport@newdealinc.com\r\tjohn_doe@somewhere.com\r";
@else
@chunk TCHAR cuiAddrErr3[] = "\tsupport@myturn.com\r\tjohn_smith@globalpc.net\r";
@endif

@endif // DETAILED_ADDR_ERRORS

@ifdef MBX_IMPORT_SUPPORT

@chunk TCHAR importFileOpenErr[] = "Unable to open the mailbox \"\1\".";
@localize {"error if file error when opening mailbox for import"};

@chunk TCHAR importFileCreateErr[] = "Unable to create the import file.";
@localize {"error when file create error occurs while importing"};

@endif

@ifdef MAIL_READ_IACP_SUPPORT

@chunk TCHAR noSuchAccountErr[] = "There is no email account named \"\1\". Unable to read mail.";
@localize {"error on mailread: if account does not exist"};

@endif

@ifdef RECEIVE_NOTIFY_OPTIONS

@chunk TCHAR newMailStr[] = "You have new mail.";
@localize {"message when new mail has arrived"};

@endif

@if defined(RECEIVE_NOTIFY_OPTIONS) || defined(SIMPLE_RECEIVE_NONE_NOTIFY)

@chunk TCHAR noNewMailStr[] = "No new mail has arrived.";
@localize {"message when no new mail has arrived"};

@endif

@ifdef GEOS_FILE_INSTRUCTIONS

/* Note: need to manually insert line breaks as the Email application
 * will automatically break text lines after 80 characters (annoying!). */

@chunk TCHAR geosFileInstSigLine = "-------------------------- Note from MyTurn.com --------------------------\r";
@chunk TCHAR geosFileInst[] = "This message contains one or more attachments from the GlobalPC. If\ryou are using a GlobalPC to read this message, you should be able to\rview the attachments. If you cannot open the attachments, request that the\rsender convert them first, or visit http://www.myturn.com for details on\rhow to view the attachments.\r";
@localize {"comment lines when possibly sending GEOS files to a non-GEOS user"};

@endif

@ifdef LEAVE_MAIL_ON_SERVER

@chunk TCHAR deleteStatus[] = "Checking for messages to delete";
@localize {"progress string when checking for messages previously left on server that can now be deleted"};

@chunk TCHAR deleteProgress[] = "Deleting message %d from server";
@localize {"progress string when deleting a message that had previously been left on the server"};

@endif

@ifdef DELETE_MAIL_AFTER_CRASH

@chunk TCHAR deleteMessStr[] = "Email encountered a problem downloading a message. Would you like to delete the message, or try downloading it again?";
@localize {"string for dialog when deleting message after crash"};

@visMoniker deleteMessMoniker = 'D', "Delete";
@localize {"used for dialog when deleting message after crash"};

@visMoniker downloadMessMoniker = 'w', "Download";
@localize {"used for dialog when deleting message after crash"};

@endif

/* Quick Help strings for the main primary */

@chunk TCHAR sendReceiveHelpStr[] = "Send all outgoing messages and receive any incoming email messages";
@localize "Quick Help for Send and Receive";
@chunk TCHAR readMessageHelpStr[] = "Read the selected email message";
@localize "Quick Help for Read Message";
@chunk TCHAR createNewMessageHelpStr[] = "Create a new email message";
@localize "Quick Help for Create a New Message";
@chunk TCHAR editMessageHelpStr[] = "Edit an existing email message";
@localize "Quick Help for Edit Message";
@chunk TCHAR moveMessageHelpStr[] = "Move your email message to a folder";
@localize "Quick Help for Move Message";
@chunk TCHAR throwAwayHelpStr[] = "Discard your email message";
@localize "Quick Help for Throw Away Message";

@chunk TCHAR noMessageDisabledHelpStr[] = "No message selected";
@localize "Disabled Help for Read, Move & Throw Away";

/* Quick Help strings common to the Compose & Read primaries */

@ifdef CUI_ZOOM_IN
@chunk TCHAR zoomOutHelpStr[] = "Make the email message text smaller";
@localize "Quick Help for Zoom Out";
@chunk TCHAR zoomInHelpStr[] = "Make the email message text larger";
@localize "Quick Help for Zoom In";
@endif
@chunk TCHAR attachmentListHelpStr[] = "Displays list of files attached to this email message";
@localize "Quick Help for the list of attachments";
@chunk TCHAR attachmentListDisabledHelpStr[] = "No files are attached to this email message";
@localize "Disabled Help for the list of attachments";

/* Quick Help strings for the Compose primary */

@chunk TCHAR composeToHelpStr[] = "Address the email message to individuals stored in your Address Book";
@localize "Quick Help for To: button";
@chunk TCHAR composeCcHelpStr[] = "Send a copy of the message to individuals stored in your Address Book";
@localize "Quick Help for Cc: button";
@ifdef BCC_SUPPORT
@chunk TCHAR composeBccHelpStr[] = "Copy others on the email message without any of the To: or CC: recipients knowing";
@localize "Quick Help for Bcc: button";
@endif

@chunk TCHAR composeSignHelpStr[] = "Add your personal signature to the email message";
@localize "Quick Help for Sign button";
@chunk TCHAR composeSignDisabledHelpStr[] = "Select \"Email Accounts\" on the \"Options\" menu to define your signature";
@localize "Disabled Help for Sign button";
@chunk TCHAR composeAttachHelpStr[] = "Attach a file to the email message";
@localize "Quick Help for Attach button";
@chunk TCHAR composeSendHelpStr[] = "Send the email message";
@localize "Quick Help for Send button";

/* Quick Help strings for the Read primary */

@ifdef INCLUDE_PRINT_TOOL
@chunk TCHAR readPrintHelpStr[] = "Print the email message";
@localize "Quick Help for Print button";
@endif
@chunk TCHAR readAddressHelpStr[] = "Add the sender of the email message your Address Book";
@localize "Quick Help for Address button";
@chunk TCHAR readReplyHelpStr[] = "Reply to the sender of the email message";
@localize "Quick Help for Reply button";
@chunk TCHAR readReplyAllHelpStr[] = "Reply to the sender and all recipients of the email message";
@localize "Quick Help for Reply All button";
@chunk TCHAR readForwardHelpStr[] = "Forward the email message to someone else";
@localize "Quick Help for Forward button";
@chunk TCHAR readPrevHelpStr[] = "Display the previous email message";
@localize "Quick Help for Previous button";
@chunk TCHAR readPrevDisabledHelpStr[] = "There is no previous email message to display";
@localize "Disabled Help for Previous button";
@chunk TCHAR readNextHelpStr[] = "Display the next email message";
@localize "Quick Help for Next button";
@chunk TCHAR readNextDisabledHelpStr[] = "There is no next email message to display";
@localize "Disabled Help for Next button";
@chunk TCHAR readDiscardHelpStr[] = "Discard this email message";
@localize "Quick Help for Discard button";

@ifdef CUI_SUPPORT_2

@chunk TCHAR cuiDiscardMessageStr[] = "Are you sure you want to discard this email?";
@localize "confirmation string for deleting messages in CUI";

@endif

@chunk TCHAR nonLatin1Err[] = "The text that was pasted contained characters that are not supported by email. These characters were replaced with underscores (_).";
@localize "error when pasting text outside Latin-1 character set into email";

@chunk TCHAR noGraphicsErr[] = "Graphics cannot be pasted into email messages. They must be included as file attachments.";
@localize "error when pasting graphics into email";

@ifdef LAUNCH_HELP
@chunk TCHAR launchHelpText[] = "If this is your first time using email, we recommend that you click the ";
@localize "help text on startup";
@chunk TCHAR launchHelp2Text[] = "? button in the upper right corner of this box to help you get started.\r";
@localize "second help text on startup for AUI";
@chunk TCHAR launchHelp2CUIText[] = "Help button in the upper right corner of this box to help you get started.\r";
@localize "second help text on startup for CUI";
@endif

@ifdef COMPOSE_EMAIL_HELP
@chunk TCHAR composeEmailHelpCUIText[] = "To write and send email:\r\r1. Type the email address of the person you want to send email to in the Send To: field.\r2. The Copy to (Cc): field is optional.\r3. Type the subject of your email in the Subject: field.\r4. Type the text of your email message in the large unlabeled field.\r5. Click Send Now to send the email.\r\r";
@localize "help text for new email message in Program Level 1";
@chunk TCHAR composeEmailHelpText[] = "To write and send email:\r\r1. Type the email address of the person you want to send email to in the To: field.\r2. The Copy to (Cc): field is optional.\r3. Type the subject of your email in the Subject: field.\r4. Type the text of your email message in the large unlabeled field.\r5. Click Send Now to send the email.\r\r";
@localize "help text for new email message in Program Level 2 and 3";
@chunk TCHAR composeEmailHelp2CUIText[] = "Click the Help button in the upper right corner of this box to get more information.\r";
@localize "second help text for new email message in CUI";
@chunk TCHAR composeEmailHelp2Text[] = "Click the ? button in the upper right corner of this box to get more information.\r";
@localize "second help text for new email message in AUI";
@endif

@ifdef CONFIRM_EMAIL_SENT
@chunk TCHAR confirmEmailSentText[] = "Your email has been sent.\r";
@endif

@ifdef CONFIRM_SEND_LATER
@chunk TCHAR confirmSendLaterText[] = "Your email has been filed for sending later.  You can send it by using the Send Email button.";
@chunk TCHAR confirmSendLaterAUIText[] = "Your email has been filed for sending later.  You can send it by using the Send and Receive button.";
@endif

@ifdef VERBOSE_TITLE_BAR
@chunk TCHAR titleBarTemplate[] = "My address is ";
@endif

@ifdef COMPOSE_SEND_NOW
@chunk TCHAR composeSendNowMultipleStr[] = "You have other email waiting to be sent. Would you like to send these as well?";
@endif

@end STRINGS;

@ifdef CUI_SUPPORT_2

@start CUISTRINGS, data;

@chunk TCHAR writeEmailStr1[] = "Click on Write Email to create a new email message.";
@localize "string for CUI Write Email button, part 1";
@chunk TCHAR writeEmailStr2b[] = "\r\rYou have 1 unfinished email saved.";
@localize "string for CUI Write Email button, part 2 (one mail); should start with two CRs";
@chunk TCHAR writeEmailStr2c[] = "\r\rYou have %d unfinished emails saved.";
@localize "string for CUI Write Email button, part 2 (multiple mails); should start with two CRs";

@chunk TCHAR readEmailStr1[] = "Click on Read Email to get new email and read saved email.\r\r";
@localize "string for CUI Read Email button, part 1; should end with two CRs";
@chunk TCHAR readEmailStr2a[] = "You have no new email.";
@localize "string for CUI Read Email button, part 2 (no new mail)";
@chunk TCHAR readEmailStr2b[] = "You have 1 new email.";
@localize "string for CUI Read Email button, part 2 (1 new message)";
@chunk TCHAR readEmailStr2c[] = "You have %d new emails.";
@localize "string for CUI Read Email button, part 2 (multiple new messages)";

@chunk TCHAR savedEmailStr2a[] = "\rYou have no saved email.";
@localize "string for CUI Read Email button, part 3 (no saved mail); should start with one CR";
@chunk TCHAR savedEmailStr2b[] = "\rYou have 1 saved email.";
@localize "string for CUI Read Email button, part 3 (1 saved message); should start with one CR";
@chunk TCHAR savedEmailStr2c[] = "\rYou have %d saved emails.";
@localize "string for CUI Read Email button, part 3 (multiple saved messages); should start with one CR";

@ifdef CUI_SEND_EMAIL_OPENS_OUTBOX
@chunk TCHAR sendEmailStr1[] = "Click on Send Email to send the emails you've written, but not yet sent.\r\r";
@else
@chunk TCHAR sendEmailStr1[] = "Click on Send Email to connect to the Internet and send the emails you've written, but not yet sent.\r\r";
@endif
@localize "string for CUI Send Email button, part 1; should end with two CRs";
@chunk TCHAR sendEmailStr2a[] = "You have no email waiting to be sent.";
@localize "string for CUI Send Email button, part 2 (no queued messages)";
@chunk TCHAR sendEmailStr2b[] = "You have 1 email waiting to be sent.";
@localize "string for CUI Send Email button, part 2 (1 queued message)";
@chunk TCHAR sendEmailStr2c[] = "You have %d emails waiting to be sent.";
@localize "string for CUI Send Email button, part 2 (multiple queued messages)";

@chunk TCHAR cuiWriteEmailHelpStr[] = "Write an email message";
@localize "Quick Help for Write Email button";

@chunk TCHAR cuiReadEmailHelpStr[] = "Read an email message";
@localize "Quick Help for Read Email button";

@chunk TCHAR cuiSendEmailHelpStr[] = "Connect to Internet and send all waiting email messages";
@localize "Quick Help for Send Email button (enabled)";

@chunk TCHAR cuiSendEmailHelpStrDis[] = "There are no email messages waiting to be sent";
@localize "Quick Help for Send Email button (disabled)";

@chunk TCHAR cuiAddrBookHelpStr[] = "Open your Address Book";
@localize "Quick Help for Address Book button";

@chunk TCHAR cuiOpenHelpStr[] = "Open the selected email message";
@localize "Quick Help for Open Email button (enabled)";

@chunk TCHAR cuiOpenHelpStrDis[] = "No email message selected to open";
@localize "Quick Help for Open Email button (disabled)";

@chunk TCHAR cuiDiscardHelpStr[] = "Discard the selected email message";
@localize "Quick Help for Discard Email button (enabled)";

@chunk TCHAR cuiDiscardHelpStrDis[] = "No email message selected to discard";
@localize "Quick Help for Discard Email button (disabled)";

@chunk TCHAR cuiCheckHelpStr[] = "Connect to the Internet and check for new email messages";
@localize "Quick Help for Check for New Email button";

@chunk TCHAR cuiBackHelpStr[] = "Go back to the main email screen";
@localize "Quick Help for Back button";

@chunk TCHAR cuiWriteNewHelpStr[] = "Write a new email message";
@localize "Quick Help for Write New Email button";

@chunk TCHAR cuiOpenUnfHelpStr[] = "Open the selected unfinished email message";
@localize "Quick Help for Open Unfinished Email button (enabled)";

@chunk TCHAR cuiOpenUnfHelpStrDis[] = "No email messaged selected to open";
@localize "Quick Help for Open Unfinished Email button (disabled)";

@chunk TCHAR cuiDiscardUnfHelpStr[] = "Discard the selected unfinished email message";
@localize "Quick Help for Discard Unfinished Email button (enabled)";

@chunk TCHAR cuiDiscardUnfHelpStrDis[] = "No email message selected to discard";
@localize "Quick Help for Discard Unfinished Email button (disabled)";

@chunk TCHAR cuiComposeDiscardHelpStr[] = "Discard this email message";
@localize "Quick Help for Discard button in New Email Message window";

@chunk TCHAR cuiQueuedChangeEmailHelpStr[] = "Make changes to the selected unsent email message";
@localize "Quick Help for Change Email button in Queued Email Message window (enabled)";

@chunk TCHAR cuiQueuedChangeEmailHelpDisStr[] = "No email message selected to change";
@localize "Quick Help for Change Email button in Queued Email Message window (dsiabled)";

@chunk TCHAR cuiSendOneHelpStr[] = "Send only the selected email message";
@localize "Quick Help for Send Email button in Queued Email Message window (enabled)";

@chunk TCHAR cuiSendOneHelpStrDis[] = "No email messages selected to send";
@localize "Quick Help for Send Email button in Queued Email Message window (disabled)";

@chunk TCHAR cuiSendAllHelpStr[] = "Send all waiting email messages";
@localize "Quick Help for Send All Email button in Queued Email Message window";

@end CUISTRINGS;

@endif
