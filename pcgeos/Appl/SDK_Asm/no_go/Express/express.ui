/*
 * Project:	PC/GEOS
 * Module:	Express (Express menu Sample PC/GEOS application)
 * File:	express.ui
 *
 * Author:	brianc
 *
 *	This file contains the user Interface description for this
 * application. This file is written in a language called ESPIRE, which is
 * compiled by the UIC compiler. See Spec/User/uic.doc for info.
 *
 *RCS STAMP:
 *	$Id: express.ui,v 1.1 97/04/04 16:34:17 newdeal Exp $
 *
 */

#define TEST_SUBGROUP 1
#define TEST_DIALOG 1

/* ----------------------------------------------------------------------------
	Include files
-----------------------------------------------------------------------------*/

/* first, read pre-defined class definitions. See the file
 * /staff/pcgeos/Include/generic.uih. */

#include "generic.uih"

#include "Objects/eMenuC.uih"

/* ----------------------------------------------------------------------------
	Application Object
-----------------------------------------------------------------------------*/
/* The very top-level generic object of an application MUST be a GenApplication
 * object. The clipsamp.gp file contains "appobj" statement which indicates
 * that this "ExpressApp" object is in fact the top-level UI object.
 * This object should be in its own resource so that GeoManager can load it
 * quickly to grab the icon for this application. GeoManager will store this
 * icon in its "Token Database", so that the icon image can be reused quickly.*/

start	AppResource;

ExpressApp = GenApplication {
	/* The geoManager uses this token information to store this
	 * application's icon in a database. */

	moniker = list {
		TextMoniker
	}

					/* four letters used as index to
					 * refer to this application in the
					 * token database. */

					/* manufacturer ID number. Also used
					 * for accessing database, to ensure
					 * uniqueness. */

	children = ExpressPrimary;
	windows_list = ExpressPrimary;

}

					/* this title will appear at the top
					 * of the window. */
visMoniker TextMoniker = "Express Menu Sample Application";

ExpressPrimary = GenPrimary {
	children = LocalExpressMenu
#if TEST_SUBGROUP
			, LocalExpressSubGroup
#endif
#if TEST_DIALOG
			, LocalExpressDialog
#endif
			;
}

LocalExpressMenu = ExpressMenuControl {
	moniker = "Local Express Menu";
	visibility = popup;
	hints = {
		HINT_GEN_CONTROL_SCALABLE_UI_DATA { GenControlScalableUIEntry <
			 GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
			 UIIL_INTRODUCTORY,
			 EMC_SUGGESTED_INTRODUCTORY_FEATURES>,
			<GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
			 UIIL_BEGINNING,
			 EMC_SUGGESTED_BEGINNING_FEATURES>,
			<GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
			 UIIL_INTERMEDIATE,
			 EMC_SUGGESTED_INTERMEDIATE_FEATURES>,
			<GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
			 UIIL_ADVANCED,
			 EMC_SUGGESTED_ADVANCED_FEATURES>
		}
	}
}

#if TEST_SUBGROUP
LocalExpressSubGroup = ExpressMenuControl {
	moniker = "Local Express SubGroup";
	visibility = subGroup;
	hints = {
		HINT_GEN_CONTROL_SCALABLE_UI_DATA { GenControlScalableUIEntry <
			 GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
			 UIIL_INTRODUCTORY,
			 EMC_SUGGESTED_INTRODUCTORY_FEATURES>,
			<GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
			 UIIL_BEGINNING,
			 EMC_SUGGESTED_BEGINNING_FEATURES>,
			<GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
			 UIIL_INTERMEDIATE,
			 EMC_SUGGESTED_INTERMEDIATE_FEATURES>,
			<GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
			 UIIL_ADVANCED,
			 EMC_SUGGESTED_ADVANCED_FEATURES>
		}
	}
}
#endif

#if TEST_DIALOG
LocalExpressDialog = ExpressMenuControl {
	moniker = "Local Express Dialog";
	visibility = dialog;
	hints = {
		HINT_GEN_CONTROL_SCALABLE_UI_DATA { GenControlScalableUIEntry <
			 GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
			 UIIL_INTRODUCTORY,
			 EMC_SUGGESTED_INTRODUCTORY_FEATURES>,
			<GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
			 UIIL_BEGINNING,
			 EMC_SUGGESTED_BEGINNING_FEATURES>,
			<GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
			 UIIL_INTERMEDIATE,
			 EMC_SUGGESTED_INTERMEDIATE_FEATURES>,
			<GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
			 UIIL_ADVANCED,
			 EMC_SUGGESTED_ADVANCED_FEATURES>
		}
	}
}
#endif

end	AppResource;


/* ----------------------------------------------------------------------------
	 Express menu panel.
-----------------------------------------------------------------------------*/

/* the entire Interface resource is duplicated and attached to the Express Menu
   Control Control Panel items we created */

start Interface, notDetachable;

/* we want a menu subgroup with ExpressTriggerOne, ExpressTriggerTwo
   and ExpressSubMenu.  We'll have to create the subgroup dynamically,
   but we can define this template to add to it. */

ExpressMenuPanelGroup = GenInteraction {
	children = ExpressTriggerOne, ExpressTriggerTwo, ExpressSubMenu;
	genStates = default -usable;
	hints = {
		HINT_SAME_CATEGORY_AS_PARENT
	}
}

ExpressTriggerOne = GenTrigger {
	moniker = "Trigger One";
}

ExpressTriggerTwo = GenTrigger {
	moniker = "Trigger Two";
}

ExpressSubMenu = GenInteraction {
	moniker = "Sub Menu";
	children = ExpressTriggerThree, ExpressTriggerFour;
	visibility = popup;
}

ExpressTriggerThree = GenTrigger {
	moniker = "Trigger Three";
}

ExpressTriggerFour = GenTrigger {
	moniker = "Trigger Four";
}

end Interface;


start Strings, data;

/* moniker for Control Panel item we add to the express menu */

visMoniker ExpressMenuPanelMoniker = "Express Menu Panel";

end Strings;
