COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) Geoworks 1994 -- All Rights Reserved

PROJECT:	Circle
MODULE:		
FILE:		circle.asm

AUTHOR:		David Litwin, Jun 13, 1994

ROUTINES:
	Name			Description
	----			-----------

	
REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	dlitwin	6/13/94   	Initial revision


DESCRIPTION:
	A lab where a circle routine is written
		

	$Id: circle.asm,v 1.1 97/04/04 16:35:21 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@
;------------------------------------------------------------------------------
;		Generic Include files
;------------------------------------------------------------------------------

include geos.def
include heap.def
include geode.def
include resource.def
include ec.def
include graphics.def
include gstring.def
include object.def

include Objects/winC.def
include Objects/inputC.def


;------------------------------------------------------------------------------
;			Libraries used
;------------------------------------------------------------------------------

UseLib ui.def


;------------------------------------------------------------------------------
;			local includes
;------------------------------------------------------------------------------

include circle.def

include	circle.rdef		; generated by UIC from our .ui file



;------------------------------------------------------------------------------
;			Methods
;------------------------------------------------------------------------------


CircleCode segment resource



COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		CircleVisDraw
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

SYNOPSIS:	Draw ourselves according to the values in our instance data

CALLED BY:	MSG_VIS_DRAW
PASS:		*ds:si	= CircleClass object
		ds:di	= CircleClass instance data
		ds:bx	= CircleClass object (same as *ds:si)
		es 	= segment of CircleClass
		ax	= message #
		cl	= DrawFlags
		^hbp	= GState
RETURN:		nothing
DESTROYED:	ax, cx, dx, bp

SIDE EFFECTS:	
PSEUDO CODE/STRATEGY:

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	dlitwin	6/13/94   	Initial version

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@
CircleVisDraw	method dynamic CircleClass, 
					MSG_VIS_DRAW
	.enter

	;
	;	Part I: (assembly)
	; Code should be added here to replace the call to GrDrawEllipse
	; with your own circle drawing code that uses only GrDrawPoint.
	;


	xchg	di, bp			; swap GState and instance data ptr

	mov	ax, ds:[bp].CI_circleOrigin.PF_x.WWF_int
	mov	bx, ds:[bp].CI_circleOrigin.PF_y.WWF_int

	mov	cx, ax
	mov	dx, bx

	sub	ax, ds:[bp].CI_circleRadius.WWF_int
	sub	bx, ds:[bp].CI_circleRadius.WWF_int
	add	cx, ds:[bp].CI_circleRadius.WWF_int
	add	dx, ds:[bp].CI_circleRadius.WWF_int

	call	GrDrawEllipse

	.leave
	ret
CircleVisDraw	endm





COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		CircleSetNewSizeAndPosition
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

SYNOPSIS:	Set the size and position of the circle.

CALLED BY:	MSG_CIRCLE_SET_NEW_SIZE_AND_POSITION
PASS:		*ds:si	= CircleClass object
		ds:di	= CircleClass instance data
		ds:bx	= CircleClass object (same as *ds:si)
		es 	= segment of CircleClass
		ax	= message #
RETURN:		nothing
DESTROYED:	ax, cx, dx, bp

SIDE EFFECTS:
PSEUDO CODE/STRATEGY:

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	dlitwin	6/13/94   	Initial version

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@
CircleSetNewSizeAndPosition	method dynamic CircleClass, 
					MSG_CIRCLE_SET_NEW_SIZE_AND_POSITION
	.enter

	;
	;	Part II: (object messaging)
	; Code should be added here to call back to the UI gadgetry
	; for the new origin and radius, and set our instance data
	; appropriately.
	;

	;
	; Also, code should be added to redraw the circle.  Look at 
	; MSG_VIS_INVALIDATE as a way to accomplish this.
	;

	.leave
	ret
CircleSetNewSizeAndPosition	endm


CircleCode ends
