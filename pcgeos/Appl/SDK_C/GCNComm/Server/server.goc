/********************************************************************
 *
 *      Copyright (c) Geoworks, Inc. 1996 -- All Rights Reserved.
 *
 * PROJECT:     GEOS Sample Applications
 * MODULE:      GCNComm/Server App
 * FILE:        server.goc
 *
 * AUTHOR:      Nathan Fiedler: December 13, 1996
 *
 * REVISION HISTORY:
 *      Name    Date            Description
 *      ----    ----            -----------
 *      NF      12/13/96        Initial version
 *
 * DESCRIPTION:
 *      This sample application demonstrates how to use GCN lists
 *      to establish a way to communicate between two applications.
 *      For a complete description of this sample, see the
 *      gcncomm.h file.
 *
 * RCS STAMP:
 *      $Id: server.goc,v 1.1 97/04/04 16:41:50 newdeal Exp $
 *
 *******************************************************************/

/********************************************************************
 *              Headers
 *******************************************************************/
    @include <stdapp.goh>
    #include <Ansi/stdio.h>
    #include "../gcncomm.h"

/********************************************************************
 *              Class Definitions
 *******************************************************************/
    @class ServerProcessClass, GenProcessClass;
    @endc;

/********************************************************************
 *              Class Definitions
 *******************************************************************/
    @classdecl ServerProcessClass, neverSaved;

/********************************************************************
 *              UI Object Resources
 *******************************************************************/

/********************************************************************
 *              AppResource Resource
 *******************************************************************/
@start AppResource;

@object GenApplicationClass ServerApp = {
    GI_visMoniker = list { @ServerTextMoniker };
    GI_comp = @ServerPrimary;
    gcnList( MANUFACTURER_ID_GEOWORKS, GAGCNLT_WINDOWS ) =
        @ServerPrimary;
}

@visMoniker ServerTextMoniker = "GCNComm Server";

@end AppResource;

/********************************************************************
 *              Interface Resource
 *******************************************************************/
@start Interface;

@object GenPrimaryClass ServerPrimary = {
    GI_comp = @ServerAboutText;
    HINT_SIZE_WINDOW_AS_DESIRED;
}

@object GenTextClass ServerAboutText = {
    GI_attrs = @default | GA_READ_ONLY;
    GTXI_text = "This program is the server that receives GCN \
notifications from the client program.";
}

@end Interface;

/********************************************************************
 *              Strings Resource
 *******************************************************************/
@start Strings, data;

@chunk char ServerReceivedMsg[] = "Server received notification.";

@end Strings;

/********************************************************************
 *              Code for ServerProcessClass
 *******************************************************************/

/********************************************************************
 *              MSG_GEN_PROCESS_OPEN_APPLICATION
 ********************************************************************
 * SYNOPSIS:     Start the application to begin execution.
 * CALLED BY:    GEOS
 * PARAMETERS:   AppAttachFlags attachFlags
 *               MemHandle      launchBlock
 *               MemHandle      extraState
 * RETURNS:      void
 * SIDE EFFECTS: none
 * STRATEGY:     First call the superclass, then add our process
 *               object to our new GCN list.
 * REVISION HISTORY:
 *      Name    Date            Description
 *      ----    ----            -----------
 *      NF      12/13/96        Initial version
 *******************************************************************/
@method ServerProcessClass, MSG_GEN_PROCESS_OPEN_APPLICATION
{
      /*
       * procObj - Process object optr.
       */
    optr procObj;

    @callsuper();

      /*
       * Build an optr to our process object. Add
       * this object to the sample GCN list so it will
       * receive notifications sent to that list.
       */
    procObj = ConstructOptr( GeodeGetProcessHandle(), NullChunk );
    GCNListAdd( procObj,
                MANUFACTURER_ID_MY_COMPANY,
                MY_COMPANY_GCNLT_SAMPLE_LIST );
} /* MSG_GEN_PROCESS_OPEN_APPLICATION */

/********************************************************************
 *              MSG_META_NOTIFY_WITH_DATA_BLOCK
 ********************************************************************
 * SYNOPSIS:     Someone sent a notification to our sample GCN list.
 *               Let's see what it says.
 * CALLED BY:    GCN list mechanism
 * PARAMETERS:   ManufacturerID manufID
 *               word           notificationType
 *               MemHandle      data
 * RETURNS:      void
 * SIDE EFFECTS: none
 * STRATEGY:     Check the type of the notification to see if it's
 *               ours. If it is, send a message to ourselves to bring
 *               us to the top (above other running apps) and display
 *               a note to the user.
 *               When we call the superclass, it will decrement the
 *               reference count on the data block. When the count
 *               reaches zero it will be freed.
 * REVISION HISTORY:
 *      Name    Date            Description
 *      ----    ----            -----------
 *      NF      12/13/96        Initial version
 *******************************************************************/
@method ServerProcessClass, MSG_META_NOTIFY_WITH_DATA_BLOCK
{

    if ( ( MANUFACTURER_ID_MY_COMPANY == manufID ) &&
         ( MY_COMPANY_NT_SAMPLE_NOTIFICATION == notificationType ) ) {
        @send application::MSG_GEN_BRING_TO_TOP();
        UserStandardDialogOptr(
            NullOptr,
            NullOptr,
            NullOptr,
            NullOptr,
            @ServerReceivedMsg,
            ( CDT_NOTIFICATION << CDBF_DIALOG_TYPE_OFFSET ) |
            ( GIT_NOTIFICATION << CDBF_INTERACTION_TYPE_OFFSET ) );
EC(     ECCheckMemHandle( data ); )
        MemLock( data );
        /* Access data in block here. */
        MemUnlock( data );
    }

      /*
       * The superclass will free the data block by calling
       * MemDecRefCount on the data block.
       */
    @callsuper();
} /* MSG_META_NOTIFY_WITH_DATA_BLOCK */

/********************************************************************
 *              MSG_GEN_PROCESS_CLOSE_APPLICATION
 ********************************************************************
 * SYNOPSIS:     Start the application to begin execution.
 * CALLED BY:    GEOS
 * PARAMETERS:   void
 * RETURNS:      MemHandle
 * SIDE EFFECTS: none
 * STRATEGY:     Remove our process object from the GCN list so the
 *               system won't crash when it sends out notifications
 *               to the objects on that list. Then call the superclass
 *               to get default shutdown behavior.
 * REVISION HISTORY:
 *      Name    Date            Description
 *      ----    ----            -----------
 *      NF      12/13/96        Initial version
 *******************************************************************/
@method ServerProcessClass, MSG_GEN_PROCESS_CLOSE_APPLICATION
{
      /*
       * procObj - Process object optr.
       */
    optr procObj;

      /*
       * Build an optr to our process object. Remove
       * this object from the sample GCN list so it will
       * not receive notifications sent to that list.
       *
       * We need to do this, otherwise the system will
       * try to send messages to the object and will
       * crash because the object has exited the system.
       */
    procObj = ConstructOptr( GeodeGetProcessHandle(), NullChunk );
    GCNListRemove( procObj,
                   MANUFACTURER_ID_MY_COMPANY,
                   MY_COMPANY_GCNLT_SAMPLE_LIST );

    return( @callsuper() );
} /* MSG_GEN_PROCESS_CLOSE_APPLICATION */

