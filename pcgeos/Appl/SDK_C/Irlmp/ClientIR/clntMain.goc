/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) Geoworks 1996 -- All Rights Reserved

PROJECT:	GEOS
MODULE:		Client IR
FILE:		clntMain.goc

AUTHOR:		Andy Chiu, Mar 11, 1996

ROUTINES:
	Name			Description
	----			-----------

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	AC	3/11/96   	Initial version.

DESCRIPTION:
	

	$Id: clntMain.goc,v 1.1 97/04/04 16:40:44 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

@include <stdapp.goh>
@include "clientir.goh"


@classdecl ClientirProcessClass, neverSaved;

dword  irlapAddr	= 0;
Handle hugeLMemHandle   = 0;
Handle clientHandle	= 0;

extern IrlmpCallbackType ClientirIrlmpDiscoveryCallback;
extern IrlmpCallbackType ClientirIrlmpCallback;

IrlmpCallbackType *discoveryCallback = &ClientirIrlmpDiscoveryCallback;
IrlmpCallbackType *clientirCallback = &ClientirIrlmpCallback;



/***********************************************************************
 *		MSG_GEN_PROCESS_OPEN_APPLICATION for ClientirProcessClass
 ***********************************************************************
 * SYNOPSIS:	Where it all starts
 * PARAMETERS:	AppAttachFlags attachFlags = cx
 *       	MemHandle launchBlock = dx
 *		MemHandle extraState = bp
 * SIDE EFFECTS:    
 *
 * STRATEGY:
 *
 * REVISION HISTORY:
 *	Name	Date		Description
 *	----	----		-----------
 *	AC	3/11/96   	Initial Revision
 *
 ***********************************************************************/
@method ClientirProcessClass, MSG_GEN_PROCESS_OPEN_APPLICATION
{
    @callsuper();

    hugeLMemHandle = HugeLMemCreate(0,          /* default value */
				    100,        /* min size      */
				    4000);      /* max size      */

}	/* End of MSG_GEN_PROCESS_OPEN_APPLICATION.	*/


/***********************************************************************
 *		MSG_GEN_PROCESS_CLOSE_APPLICATION for ClientirProcessClass
 ***********************************************************************
 * SYNOPSIS:	    Where it all ends
 * PARAMETERS:	    returns extra block handle
 * SIDE EFFECTS:    
 *
 * STRATEGY:
 *
 * REVISION HISTORY:
 *	Name	Date		Description
 *	----	----		-----------
 *	AC	3/15/96   	Initial Revision
 *
 ***********************************************************************/
@method ClientirProcessClass, MSG_GEN_PROCESS_CLOSE_APPLICATION
{
    Boolean retVal;
    retVal = HugeLMemDestroy(hugeLMemHandle);
    EC_ERROR_IF(retVal, -1);
    return @callsuper();
}	/* End of MSG_GEN_PROCESS_CLOSE_APPLICATION.	*/




/***********************************************************************
 *		MSG_CP_DISCOVER_REQUEST for ClientirProcessClass
 ***********************************************************************
 * SYNOPSIS:	    Do the whole discovery bit.
 * PARAMETERS:	    nothing
 * SIDE EFFECTS:    
 *
 * STRATEGY:
 *
 * REVISION HISTORY:
 *	Name	Date		Description
 *	----	----		-----------
 *	AC	3/11/96   	Initial Revision
 *
 ***********************************************************************/
@method ClientirProcessClass, MSG_CP_DISCOVER_REQUEST
{
    IrlmpError   retVal;
    IrlmpLsapSel localLsap;

    /* Register ourselves with Irlmp.  We pass the geode handle */
    /* of this application because we will want to restore      */
    /* ds as dgroup in our callback when we get back.           */
    /* We need to change dgroup because the callback will be    */
    /* under the irlmp thread.                                  */
    /* It's not necessary to pass it as we can call this routine*/
    /* under any thread.                                        */
    /*----------------------------------------------------------*/
    localLsap = IRLMP_ANY_LSAP_SEL;
    retVal = IrlmpRegister(&localLsap, GeodeGetCodeProcessHandle(),
			   discoveryCallback, &clientHandle);

    EC_ERROR_IF(retVal, -1);

    /* Show which lsap we are on */
    CUSetLocalLsap(localLsap);

    /* Do the discovery */
    IrlmpDiscoverDevicesRequest(clientHandle, IUTS_6_SLOT);

}	/* End of MSG_CP_DISCOVER_REQUEST.	*/



/***********************************************************************
 *		MSG_CP_CONNECT_REQUEST for ClientirProcessClass
 ***********************************************************************
 * SYNOPSIS:	Initiate a connection to the remote LSAP-ID    
 * PARAMETERS:	nothing
 * SIDE EFFECTS:    
 *
 * STRATEGY:
 *
 * REVISION HISTORY:
 *	Name	Date		Description
 *	----	----		-----------
 *	AC	3/11/96   	Initial Revision
 *
 ***********************************************************************/
@method ClientirProcessClass, MSG_CP_CONNECT_REQUEST
{
    IrlmpError       retVal;
    IrlmpLsapSel     localLsap;
    IrlmpConnectArgs connectArgs;

    localLsap = CUGetLocalLsap();

    retVal = IrlmpRegister(&localLsap, GeodeGetCodeProcessHandle(),
			   clientirCallback, &clientHandle);

    CUSetLocalLsap(localLsap);

    connectArgs.ICA_lsapID.ILI_irlapAddr = irlapAddr;
    connectArgs.ICA_lsapID.ILI_lsapSel   = CUGetRemoteLsap();

    /* Since the begining of IrlmpConnectArgs is the same as   */
    /* IrlmpDataArgs, we're goint to pass the IrlmpConnectArgs */
    /* as IrlmpDataArgs                                        */
    /* ------------------------------------------------------- */
    CUGetSendText((IrlmpDataArgs *)&connectArgs);
    
    CUClearSendText();

    /* Use default QOS */
    /* --------------- */
    connectArgs.ICA_QoS.QOS_flags = QOSF_DEFAULT_PARAMS;
    
    /* Sen the connect request */
    retVal = IrlmpConnectRequest(clientHandle, &connectArgs);

    EC_ERROR_IF(retVal, -1);

}	/* End of MSG_CP_CONNECT_REQUEST.	*/


/***********************************************************************
 *		MSG_CP_DATA_REQUEST for ClientirProcessClass
 ***********************************************************************
 * SYNOPSIS:	Transmit data    
 * PARAMETERS:	nothing
 * SIDE EFFECTS:    
 *
 * STRATEGY:
 *
 * REVISION HISTORY:
 *	Name	Date		Description
 *	----	----		-----------
 *	AC	3/11/96   	Initial Revision
 *
 ***********************************************************************/
@method ClientirProcessClass, MSG_CP_DATA_REQUEST
{
    IrlmpDataArgs dataArgs;

    CUGetSendText(&dataArgs);
    CUClearSendText();

    IrlmpDataRequest(clientHandle, &dataArgs);

}	/* End of MSG_CP_DATA_REQUEST.	*/


/***********************************************************************
 *		MSG_CP_UDATA_REQUEST for ClientirProcessClass
 ***********************************************************************
 * SYNOPSIS:	    Transmit UData
 * PARAMETERS:	    nothing
 * SIDE EFFECTS:    
 *
 * STRATEGY:
 *
 * REVISION HISTORY:
 *	Name	Date		Description
 *	----	----		-----------
 *	AC	3/11/96   	Initial Revision
 *
 ***********************************************************************/
@method ClientirProcessClass, MSG_CP_UDATA_REQUEST
{
    IrlmpDataArgs dataArgs;

    CUGetSendText(&dataArgs);
    CUClearSendText();

    IrlmpUDataRequest(clientHandle, &dataArgs);

}	/* End of MSG_CP_UDATA_REQUEST.	*/


/***********************************************************************
 *		MSG_CP_DISCONNECT_REQUEST for ClientirProcessClass
 ***********************************************************************
 * SYNOPSIS:	    Disconnect request
 * PARAMETERS:	    nothing
 * SIDE EFFECTS:    
 *
 * STRATEGY:
 *
 * REVISION HISTORY:
 *	Name	Date		Description
 *	----	----		-----------
 *	AC	3/11/96   	Initial Revision
 *
 ***********************************************************************/
@method ClientirProcessClass, MSG_CP_DISCONNECT_REQUEST
{
    IrlmpDataArgs  dataArgs;
    CUGetSendText(&dataArgs);

    IrlmpDisconnectRequest(clientHandle, &dataArgs, IDR_USER_REQUEST);

    IrlmpUnregister(clientHandle);
}	/* End of MSG_CP_DISCONNECT_REQUEST.	*/


/***********************************************************************
 *		MSG_CP_STATUS_REQUEST for ClientirProcessClass
 ***********************************************************************
 * SYNOPSIS:	    LM_Status.request
 * PARAMETERS:	    nothing
 * SIDE EFFECTS:    
 *
 * STRATEGY:
 *
 * REVISION HISTORY:
 *	Name	Date		Description
 *	----	----		-----------
 *	AC	3/11/96   	Initial Revision
 *
 ***********************************************************************/
@method ClientirProcessClass, MSG_CP_STATUS_REQUEST
{
    IrlmpError retVal;
    optr    statusOptr;

    retVal = IrlmpStatusRequest(clientHandle);

    if (retVal)
	statusOptr = @statusRequestNoData;
    else
	statusOptr = @statusRequestData;

    CUShowStatusOptr(statusOptr);

}	/* End of MSG_CP_STATUS_REQUEST.	*/



/***********************************************************************
 *		MSG_CP_GET_VALUE_REQUEST for ClientirProcessClass
 ***********************************************************************
 * SYNOPSIS:	    LM_GetValueByClass.request
 * PARAMETERS:	    nothing
 * SIDE EFFECTS:    
 *
 * STRATEGY:
 *
 * REVISION HISTORY:
 *	Name	Date		Description
 *	----	----		-----------
 *	AC	3/11/96   	Initial Revision
 *
 ***********************************************************************/
@method ClientirProcessClass, MSG_CP_GET_VALUE_REQUEST
{
    IrlmpError                      retVal;
    IrlmpGetValueByClassRequestArgs requestArgs;
    IrlmpLsapSel                    localLsap;

    MemLock(HandleOf(@className));
    
    requestArgs.IGVBCRA_irlapAddr = irlapAddr;
    requestArgs.IGVBCRA_className = LMemDeref(@className);
    requestArgs.IGVBCRA_attributeName = LMemDeref(@attributeName);

    localLsap = IRLMP_ANY_LSAP_SEL;

    retVal = IrlmpRegister(&localLsap, GeodeGetCodeProcessHandle(),
			   clientirCallback, &clientHandle);

    EC_ERROR_IF(retVal, -1);

    IrlmpGetValueByClassRequest(clientHandle, &requestArgs);
    
    MemUnlock(HandleOf(@className));


}	/* End of MSG_CP_GET_VALUE_REQUEST.	*/


/***********************************************************************
 *		MSG_CP_UNREGISTER for ClientirProcessClass
 ***********************************************************************
 * SYNOPSIS:	    Unregister our client
 * PARAMETERS:	    nothing
 * SIDE EFFECTS:    
 *
 * STRATEGY:
 *
 * REVISION HISTORY:
 *	Name	Date		Description
 *	----	----		-----------
 *	AC	3/21/96   	Initial Revision
 *
 ***********************************************************************/
@method ClientirProcessClass, MSG_CP_UNREGISTER
{
    IrlmpUnregister(clientHandle);

}	/* End of MSG_CP_UNREGISTER.	*/

