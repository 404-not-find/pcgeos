/***********************************************************************
 *
 *	Copyright (c) Geoworks 1991-95 -- All Rights Reserved
 *
 * PROJECT:	  GEOS
 * MODULE:	  Custom Float Keyboard (Sample GEOS application)
 * FILE:	  FloatKbd.goc
 *
 * AUTHOR:	  Ed Ballot	2/95
 *
 * REVISION HISTORY:
 *	Date	  Name	    Description
 *	----	  ----	    -----------
 *	2/95	  EB	    Initial version
 *
 * DESCRIPTION:
 *	Sample application showing how an application can create a
 *	custom floating	keyboard to be used on PDA devices.
 *
 *	To compile this application, make these additions to the header
 *	files by adding the following @reloc's after the corresponding
 *	@vardata declaration.
 *
 *	Objects\GenAppC.goh
 *	@reloc ATTR_GEN_APPLICATION_KBD_OBJ, 0, optr;
 *
 *	Objects\gPenICC.goh
 *	@reloc ATTR_GEN_PEN_INPUT_CONTROL_CUSTOM_CHAR_TABLE_MONIKER, 0, optr;
 *      @reloc ATTR_GEN_PEN_INPUT_CONTROL_CUSTOM_CHAR_TABLE_DATA, (1,CharTableData), optr;
 *
 *	$Id: floatkbd.goc,v 1.1 97/04/04 16:38:39 newdeal Exp $
 *
 ***********************************************************************/

/*
 ***************************************************************************
 *		Include files
 ***************************************************************************
 */

@include <stdapp.goh>
@include <Objects\gPenICC.goh>
/*
 ***************************************************************************
 *		Class & Message Definitions
 ***************************************************************************
 */

@class	FloatKbdProcessClass, GenProcessClass;
@endc;
@classdecl	FloatKbdProcessClass, neverSaved;

/*
 ***************************************************************************
 *		UI Objects
 ***************************************************************************
 */

@start	AppResource;

@object GenApplicationClass FloatKbdApp = {
    GI_visMoniker = list { @FloatKbdTextMoniker }
    GI_comp = @FloatKbdPrimary, @MyPenInputControl;

    gcnList(MANUFACTURER_ID_GEOWORKS,GAGCNLT_WINDOWS) =
						@FloatKbdPrimary;

    /*
     * The GenPenInputControl object needs to be on the active list
     * and you need to tell GenApp about the new floating keyboard.
     */
    gcnList(MANUFACTURER_ID_GEOWORKS, MGCNLT_ACTIVE_LIST) =
						@MyPenInputControl;
    ATTR_GEN_APPLICATION_KBD_OBJ = @MyPenInputControl;
}

@visMoniker FloatKbdTextMoniker = "Custom Float Keyboard App";


@object GenPenInputControlClass MyPenInputControl = {
    GII_visibility = GIV_DIALOG;
    GII_attrs = (@default | GIA_NOT_USER_INITIATABLE);

    ATTR_GEN_PEN_INPUT_CONTROL_IS_FLOATING_KEYBOARD;
    ATTR_GEN_PEN_INPUT_CONTROL_CUSTOM_CHAR_TABLE_DATA = {
				@Line1Data,
				@Line2Data,
				@Line3Data,
				@Line4Data,
				@Line5Data };

    ATTR_GEN_PEN_INPUT_CONTROL_CUSTOM_CHAR_TABLE_MONIKER =
				@CustomMoniker;

    /*
     * Turns on all the features, including the app custom
     * keyboard
     */
    ATTR_GEN_CONTROL_REQUIRE_UI = (
			GPICF_KEYBOARD |
			GPICF_CHAR_TABLE |
			GPICF_CHAR_TABLE_SYMBOLS |
			GPICF_CHAR_TABLE_INTERNATIONAL |
			GPICF_CHAR_TABLE_MATH |
			GPICF_CHAR_TABLE_CUSTOM |
			GPICF_HWR_ENTRY_AREA);

    /*
     * This makes the custom keyboard become the default keyboard for
     * this appliation.
     */
    ATTR_GEN_PEN_INPUT_CONTROL_STARTUP_DISPLAY_TYPE = PIDT_CHAR_TABLE_CUSTOM;
    HINT_DONT_KEEP_INITIALLY_ONSCREEN;
}

/* The custom keyboard's vis moniker */
@visMoniker CustomMoniker = "Custom Float Kbd";

/*
 * If the application wants a custom layout, it can put in
 * blank areas by using CHAR_TABLE_SPACE_FILLER_CHAR
 */
@chunk	char Line1Data[] =  {'@', CHAR_TABLE_SPACE_FILLER_CHAR, '@', CHAR_TABLE_SPACE_FILLER_CHAR, '@', 0};
@chunk	char Line2Data[] = "***";
@chunk	char Line3Data[] = "$$$";
@chunk	char Line4Data[] = "###";
@chunk	char Line5Data[] = "!!!";

@end	AppResource;


@start	Interface;

@object GenPrimaryClass FloatKbdPrimary  = {
    GI_comp = @GenText;
}

@object GenTextClass GenText = {
};

@end Interface;
