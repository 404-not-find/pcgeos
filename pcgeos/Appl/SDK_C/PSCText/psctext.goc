/********************************************************************
 *
 * 	Copyright (c) Geoworks 1992-96 -- All Rights Reserved.
 *
 * PROJECT:	GEOS Sample Applications
 * MODULE:	PointSize controller test
 * FILE:	psctext.goc
 *
 * AUTHOR:	Tom Manshreck: Oct 7, 1992
 *
 * REVISION HISTORY:
 * 	Name	Date		Description
 * 	----	----		-----------
 * 	TM	10/7/92   	Initial version.
 *
 * DESCRIPTION:
 *      This sample app demonstrates the use of a
 *	PointSizeControl object in manipulating the point size
 *	exhibited within text objects. Merely including a
 *	single controller object within the UI provides an
 * 	the entire mechanism to alter the point size of a text
 * 	object including selections, the action to send out
 * 	and the destination to send a selected action to.
 *
 * 	Any text controller operates in essentially the same
 * 	manner as the PointSizeControl object in this
 * 	application.
 *
 * RCS STAMP:
 * 	$Id: psctext.goc,v 1.1 97/04/04 16:39:04 newdeal Exp $
 *
 *******************************************************************/

/********************************************************************
 *              Headers
 *******************************************************************/
    @include <stdapp.goh>
      /* Needed to include text controllers. */
    @include <Objects/Text/tCtrlC.goh>

/********************************************************************
 *              Class Definitions
 *******************************************************************/
    @class PSCTextProcessClass, GenProcessClass;
    @endc;

/********************************************************************
 *              Class Declarations
 *******************************************************************/
    @classdecl PSCTextProcessClass;

/********************************************************************
 *              UI Object Resources
 *******************************************************************/

/********************************************************************
 *              AppResource Resource
 *******************************************************************/
@start AppResource;

@object GenApplicationClass PSCTextApp = {
    GI_visMoniker = "Point Size Control Sample Application";
    GI_comp = @PSCTPrimary;
    gcnList( MANUFACTURER_ID_GEOWORKS, GAGCNLT_WINDOWS ) =
        @PSCTPrimary;
      /*
       * Objects of class PointSizeControlClass must appear on the
       * GAGCNLT_SELF_LOAD_OPTIONS GCN list.
       */
    gcnList( MANUFACTURER_ID_GEOWORKS, GAGCNLT_SELF_LOAD_OPTIONS ) =
	@PSCTSizeControl;
}

@end AppResource;

/********************************************************************
 *              Interface Resource
 *******************************************************************/
@start Interface;

@object GenPrimaryClass PSCTPrimary = {
    GI_comp = @PSCTSizeControl,
	      @PSCTopTextObj,
	      @PSCBotTextObj;
    HINT_SIZE_WINDOW_AS_DESIRED;
    HINT_ORIENT_CHILDREN_VERTICALLY;
    HINT_DIVIDE_HEIGHT_EQUALLY;
}

  /****************************
   *  PointSizeControl
   ***************************/
  /* Including a PointSizeControl object automatically includes all the
   * relevant UI and functionality attached to that controller. In this
   * case, including this controller will create a menu with Point Size
   * selections within the menu. Whenever the user makes a selection
   * within this controller, the default behavior is to send out a
   * notification message to the current target (the TravelOption
   * TO_APP_TARGET).
   *
   * Note that there is no need to declare any children to create this
   * controller. The items are created automatically. If you wish to
   * supplement a controller's behavior by adding your own UI objects,
   * you *cannot* add these children in the objects GI_comp field. You
   * should instead use the vardata ATTR_GEN_CONTROL_APP_UI.
   */
@object PointSizeControlClass PSCTSizeControl = {
    GI_visMoniker = 'z', "Sizes";
    GII_visibility = GIV_POPUP;
      /*
       * This vardata adds the UI object 'NewTrigger' to the controller
       * without upsetting the other automatically-created children.
       */
    ATTR_GEN_CONTROL_APP_UI = ( @NewTrigger );
}

@object GenTriggerClass NewTrigger = {
    GI_visMoniker = "New Trigger";
    GI_states = @default & ~GS_USABLE;
}

  /****************************
   *  GenText Objects
   ***************************/
@object GenTextClass PSCTopTextObj = {
      /*
       * Text objects must be declared GA_TARGETABLE to receive
       * controller actions. (Controller actions are, by default, sent
       * to the current application target.)
       */
    GI_attrs = @default | GA_TARGETABLE;
      /*
       * Initially, this text object uses the VisTextDefaultSize VTDS_12
       * (12 pts) and the VisTextDefaultFont VTDF_URW_SANS. You can use
       * the PointSizeControl object to change this point size.
       */
    ATTR_GEN_TEXT_DEFAULT_CHAR_ATTR = (
        ( VTDS_12 << VTDCA_SIZE_OFFSET ) |
        ( VTDF_URW_SANS << VTDCA_FONT_OFFSET )
    );
      /*
       * This text object grabs the default focus and target at this
       * level.
       */
    HINT_DEFAULT_FOCUS;
    HINT_DEFAULT_TARGET;
    HINT_EXPAND_WIDTH_TO_FIT_PARENT;
    HINT_EXPAND_HEIGHT_TO_FIT_PARENT;
}

  /*
   * You can switch the application target between PSCTopTextObj and
   * PSCBotTextObj by clicking in the text objects. Point size changes
   * will, of course, only be sent to the current target.
   */
@object GenTextClass PSCBotTextObj = {
    GI_attrs = @default | GA_TARGETABLE;
    ATTR_GEN_TEXT_DEFAULT_CHAR_ATTR = (
        ( VTDS_12 << VTDCA_SIZE_OFFSET ) |
        ( VTDF_URW_SANS << VTDCA_FONT_OFFSET )
    );
    HINT_EXPAND_WIDTH_TO_FIT_PARENT;
    HINT_EXPAND_HEIGHT_TO_FIT_PARENT;
}

@end Interface;

