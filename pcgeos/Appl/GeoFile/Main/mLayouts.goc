/***********************************************************************
 *
 *	Copyright (c) Geoworks 1992 -- All Rights Reserved
 *
 * PROJECT:	GEOS
 * MODULE:	mLayouts.goc
 * FILE:	mLayouts.goc
 *
 * AUTHOR:  	Jeremy Dashe : Sep 14, 1992
 *
 * DESCRIPTION:
 *	This file contains code and handlers that deal with layouts
 *	in GeoFile.
 *
 * RCS STAMP:
 *	$Id: mLayouts.goc,v 1.1 97/04/04 15:54:02 newdeal Exp $
 *
 ***********************************************************************/

@include <stdapp.goh>		/* PC/GEOS Standard Applications.	*/
#include <geoworks.h>

#include <Ansi/string.h>	/* Standard C.	    	    	    	*/

@include <gcnlist.goh>		/* PC/GEOS Libraries.	    	    	*/
@include <grobj.goh>
#include <token.h>
@include <Objects/FlatFile/ffDbaseC.goh>
@include <Objects/FlatFile/ffFldPr.goh>
@include <Objects/FlatFile/ffFldPrC.goh>
@include <Objects/FlatFile/ffTChstC.goh>
@include <Objects/FlatFile/ffRecC.goh>
@include <Objects/gDListC.goh>
@include <Objects/gDocC.goh>

@define	__GF_MAIN_LAYOUTS_GOC	/* Don't over-define.	    	    	*/
@include <geofile.goh>		/* GeoFile Application.	    	    	*/

/*
 * Localizable strings
 */
@extern chunk @TreasureChestMoniker;
@extern chunk @RecordControlPanelMoniker;
@extern chunk @LayoutNotesMoniker;

@extern chunk @GFRenameLayoutError;
@extern chunk @GFCantDeleteLastLayoutError;

/*
 ***************************************************************************
 *		 Forward routine declarations 
 ***************************************************************************
 */
void DisplayCurrentLayoutName(); 
void DisplayLayoutNotes(byte layoutIndex);
void SetLayoutTypeUI(LayoutType layoutType);

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		MSG_GF_CHOOSE_LAYOUT_INITIATE
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

DESCRIPTION:	Perform any initialization of the Choose Layout
		dialog box

PASS: 		Void.

RETURN:		Void.

PSEUDO CODE/STRATEGY:
	Initiate the Choose Layout dialog box.
	Figure out how many layouts are in the current database.
	Set the ChooseLayoutList's number of items

WHY:	Allow the easy performing of one-shot initializations.

CHECKS:		None.

KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:	???

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	AML	7/6/92		Initial version.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

@extern method GeoFileProcessClass, MSG_GF_CHOOSE_LAYOUT_INITIATE
{
    optr databaseObject;
    byte numLayouts;

    /* Now get hold of the database handle.	*/
    databaseObject = GetTargetDatabaseObject();

    /* Get the number of layouts in the current database.	*/
    numLayouts = @call databaseObject::MSG_FFD_GET_NUMBER_OF_LAYOUTS();

    /*
     *	This is a discardable dialog, so tell the interaction that we are
     *  about to bring it onscreen, so it shouldn't allow itself to be
     *  discarded.
     */
    @call GeodeGetOptrNS (@ChooseLayoutDialog)::
	    	    	MSG_GEN_INTERACTION_DISABLE_DISCARDING ();
    
    @call GeodeGetOptrNS(@LayoutNameList)::
	MSG_GEN_DYNAMIC_LIST_INITIALIZE(numLayouts);

    /*
     * Display Name & Notes for current layout
     */
    DisplayCurrentLayoutName();

    /* Initiate the ChooseLayout box.	*/
    @call GeodeGetOptrNS(@ChooseLayoutDialog)::MSG_GEN_INTERACTION_INITIATE();
}

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		MSG_GF_LAYOUT_NAME_SELECTED
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

DESCRIPTION:	Update the ChooseLayout dialog box in response to the user
		selecting a field in the Layout Name list.

PASS: 		word	selection	= Currently selected item.
		word	numSelections	= 1 if a selection, otherwise 0.
		byte	stateFlags	= GenItemGroup state flags.

RETURN:		Void.

PSEUDO CODE/STRATEGY:
	If the user selected anything, enable the "OK" trigger; otherwise
	disable it. Also update the Notes field.

CHECKS:		None.

KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	AML	7/6/92		Initial version.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

@extern method GeoFileProcessClass, MSG_GF_LAYOUT_NAME_SELECTED
{
  DisplayLayoutNotes(selection);
}


/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		MSG_GF_LAYOUT_NAME_LIST_QUERY
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

DESCRIPTION:	Retrieve a moniker for the layout names' dynamic list.

PASS:		optr	list	= List that is being requested for.
 		word	item	= Currently selected item.

RETURN:		Void.

PSEUDO CODE/STRATEGY:
	Get hold of the current database.
	Get the database to retrieve and set the appropriate moniker in the
	given list.

CHECKS:		None.

KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:	???

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	AML	7/6/92		Initial version.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

@extern method GeoFileProcessClass, MSG_GF_LAYOUT_NAME_LIST_QUERY
{
  optr	databaseObject;
  TCHAR layoutNameBuffer[MAX_LAYOUT_NAME_LENGTH + 1];
  byte 	currentLayoutIndex;

  /* First, get hold of the database handle.*/
  databaseObject = GetTargetDatabaseObject();

  /* Get the moniker from the database.	*/
  (void) @call databaseObject::
      MSG_FFD_GET_INDEXED_LAYOUT_NAME(item, layoutNameBuffer);
  @call list::MSG_GEN_DYNAMIC_LIST_REPLACE_ITEM_TEXT(item, layoutNameBuffer);

  /*
   * Find out if we are displaying the name for the current layout;
   * if so, select it, and display its name & notes
   */
  currentLayoutIndex = @call databaseObject::MSG_FFD_GET_CURRENT_LAYOUT_INDEX(); 
  if (item == (word) currentLayoutIndex) {
      @call list::MSG_GEN_ITEM_GROUP_SET_SINGLE_SELECTION(item, FALSE);
      DisplayLayoutNotes(item);
  }

}

/***********************************************************************
 *
 * MESSAGE:	MSG_GF_NEW_LAYOUT for GeoFileProcessClass
 *
 * DESCRIPTION:	Brings up box for user to choose layout type.
 *
 * PARAMETERS:
 *	void ()
 *
 * KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:
 *
 * REVISION HISTORY:
 *	Name	Date		Description
 *	----	----		-----------
 *	anna	6/30/92		Initial version
 *
 ***********************************************************************/
@extern method GeoFileProcessClass, MSG_GF_NEW_LAYOUT
{
    optr currentDatabase;
    MemHandle singleRecordGrObjBodyHandle, multiRecordGrObjBodyHandle;
    optr appObject;

    /*
     * Mark the app busy until we're done
     */
    appObject = GeodeGetAppObject(0);
    @call appObject::MSG_GEN_APPLICATION_MARK_BUSY();
    @call appObject::MSG_GEN_APPLICATION_HOLD_UP_INPUT();

    /*
     * No matter what type of layout this is, we want to edit
     * the single-record layout first
     */
    @call GeodeGetOptrNS(@DesignOptionsList)::
		MSG_GEN_ITEM_GROUP_SET_SINGLE_SELECTION(LT_SINGLE_RECORD,
							FALSE);
    @send GeodeGetOptrNS (@TreasureChest)::MSG_GEN_SET_ENABLED(VUM_NOW);

    /*
     * Create another GrObj body
     */
    singleRecordGrObjBodyHandle = ObjDuplicateResource(
					OptrToHandle(@ffGrObjBody), 0, 0);

    currentDatabase = GetTargetDatabaseObject();

    multiRecordGrObjBodyHandle = ObjDuplicateResource(
					OptrToHandle(@ffGrObjBody), 0, 0);

    (void) @call currentDatabase::
	MSG_FFD_CREATE_NEW_LAYOUT(singleRecordGrObjBodyHandle,
				  multiRecordGrObjBodyHandle,
				  OptrToChunk(@ffGrObjBody),
				  GeodeGetOptrNS(@ffGrObjHead));

    /*
     * Change the visMoniker for the Treasure Chest
     */
    @call self::MSG_GF_SET_TREASURE_CHEST_VIS_MONIKER((optr) 0);

   /*
    * We're in single-record mode; make sure the appropriate UI items
    * are enabled/disabled
    */
    @send GeodeGetOptrNS(@InsertPageNumberTrigger)::
				MSG_GEN_SET_NOT_ENABLED(VUM_NOW);
    @send GeodeGetOptrNS(@TreasureChest)::
				MSG_GEN_SET_ENABLED(VUM_NOW);
    @send GeodeGetOptrNS(@FieldPropUIController)::
				MSG_GEN_SET_ENABLED(VUM_NOW);

    /*
     * Update the page size controller sizes.
     */
    GFResetPrintControllerSizes(currentDatabase);

    /*
     * We're done; mark the app not busy
     */
    @call appObject::MSG_GEN_APPLICATION_RESUME_INPUT();
    @call appObject::MSG_GEN_APPLICATION_MARK_NOT_BUSY();
}

/***********************************************************************
 *
 * MESSAGE:	MSG_GF_SWITCH_LAYOUT_DISPLAY for GeoFileProcessClass
 *
 * DESCRIPTION:	This routine is called when the user selects a new
 *		design option. It changes the display to either
 *		Single-Record or Multi-Record 
 *
 * PARAMETERS:
 *		void (word selection,
 *		      word numSelections,
 *		      byte stateFlags);
 *
 * KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:
 *
 * REVISION HISTORY:
 *	Name	Date		Description
 *	----	----		-----------
 *	anna	7/29/92		Initial version
 *	JDM	92.12.17	Updated to use MSG_GF_SET_UI.
 *
 ***********************************************************************/
@extern method GeoFileProcessClass, MSG_GF_SWITCH_LAYOUT_DISPLAY
{
    optr databaseObject;
    byte currentLayoutNum;
    ModeType curMode;
    LayoutType curLayoutType;

    /* Get ahold of the database handle.	*/
    databaseObject = GetTargetDatabaseObject();

    /* Get the current layout.	*/
    currentLayoutNum = @call databaseObject::MSG_FFD_GET_CURRENT_LAYOUT();

    /* 
     * If we're switching to multi-record, we want the first field
     * to grab the focus & target. If a different field has the target,
     * then drawing in multi-record gets dorked 
     */
    if (selection == LT_MULTI_RECORD) {
        @call databaseObject::MSG_FFD_GRAB_TARGET_ON_FIRST_FIELD();
    }

    /* Switch to the new layout and reset the database's UI objects.	*/
    (void) @call databaseObject::MSG_FFD_SWITCH_TO_LAYOUT
		(currentLayoutNum,
		 GeodeGetOptrNS(@ffGrObjHead),
		 selection,
		 FALSE);

    /*
     * Update the page size controller sizes.
     */
    GFResetPrintControllerSizes (databaseObject);

    /* Set the UI for the current mode.	*/
    curMode = MT_CURRENT;
    curLayoutType = selection;
    @call self::MSG_GF_SET_UI (&curMode, NullOptr, 
					NullOptr, &curLayoutType, 0, 0);
}

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		MSG_GF_CHOOSE_LAYOUT
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

DESCRIPTION:	Display the chosen layout.

PASS:		

RETURN:		Void.

PSEUDO CODE/STRATEGY:

CHECKS:		None.

KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:	???

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	AML	7/6/92		Initial version.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

@extern method GeoFileProcessClass, MSG_GF_CHOOSE_LAYOUT
{
    optr databaseObject, appObject;
    word item, currentLayoutIndex;
    LayoutType layoutType;

    /*
     * Get the current selection
     */
    item = @call GeodeGetOptrNS(@LayoutNameList)::
			MSG_GEN_ITEM_GROUP_GET_SELECTION();

    /* Get the database handle */
    databaseObject = GetTargetDatabaseObject();

    currentLayoutIndex = @call databaseObject::
				MSG_FFD_GET_CURRENT_LAYOUT_INDEX(); 
    /*
     * If they've chosen the current layout, just dismiss the box.
     */
    if (item == currentLayoutIndex) {
	return;
    }

    /*
     * Mark the app busy until we're done
     */
    appObject = GeodeGetAppObject(0);
    @call appObject::MSG_GEN_APPLICATION_MARK_BUSY();
    @call appObject::MSG_GEN_APPLICATION_HOLD_UP_INPUT();

    /*
     * Switch to the chosen layout
     */
    layoutType = @call databaseObject::MSG_FFD_SWITCH_TO_INDEXED_LAYOUT(item,
					GeodeGetOptrNS(@ffGrObjHead));	
    /*
     * Set the UI for the appropriate layout type. 
     */
    if (layoutType == LT_SINGLE_RECORD) {
        @call GeodeGetOptrNS(@DesignOptionsList)::
	    MSG_GEN_ITEM_GROUP_SET_SINGLE_SELECTION(LT_SINGLE_RECORD, FALSE);
        @send GeodeGetOptrNS(@InsertPageNumberTrigger)::
				MSG_GEN_SET_NOT_ENABLED(VUM_NOW);
	@send GeodeGetOptrNS (@TreasureChest)::
				MSG_GEN_SET_ENABLED(VUM_NOW);
	@send GeodeGetOptrNS (@FieldPropUIController)::
				MSG_GEN_SET_ENABLED(VUM_NOW);
    }
    else {
        @call GeodeGetOptrNS(@DesignOptionsList)::
		MSG_GEN_ITEM_GROUP_SET_SINGLE_SELECTION(LT_MULTI_RECORD, FALSE);
	@send GeodeGetOptrNS (@TreasureChest)::
				MSG_GEN_SET_NOT_ENABLED(VUM_NOW);
        @send GeodeGetOptrNS(@InsertPageNumberTrigger)::
				MSG_GEN_SET_ENABLED(VUM_NOW);
	@send GeodeGetOptrNS (@FieldPropUIController)::
				MSG_GEN_SET_NOT_ENABLED(VUM_NOW);
    }

    /*
     * Change the visMoniker for the Treasure Chest & RCP
     */
    @call self::MSG_GF_SET_TREASURE_CHEST_VIS_MONIKER((optr) 0);
    @call self::MSG_GF_SET_RECORD_CONTROL_PANEL_VIS_MONIKER((optr) 0);

    /*
     * Update the page size controller sizes.
     */
    GFResetPrintControllerSizes(databaseObject);

    /*
     * Done: Mark the app not busy
     */
    @call appObject::MSG_GEN_APPLICATION_RESUME_INPUT();
    @call appObject::MSG_GEN_APPLICATION_MARK_NOT_BUSY();
}

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		MSG_GF_BRING_UP_RENAME_LAYOUT_BOX
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

DESCRIPTION:	Bring up the Rename Layout dialog box and perform
		any initialization necessary 
		dialog box

PASS: 		Void.

RETURN:		Void.

PSEUDO CODE/STRATEGY:

WHY:	Allow the easy performing of one-shot initializations.

CHECKS:		None.

KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:	???

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	AML	7/9/92		Initial version.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

@extern method GeoFileProcessClass, MSG_GF_BRING_UP_RENAME_LAYOUT_BOX
{
  optr databaseObject;
  TCHAR oldLayoutName[MAX_LAYOUT_NAME_LENGTH + 1];
  byte layoutNum;

    /*
     *	This is a discardable dialog, so tell the interaction that we are
     *  about to bring it onscreen, so it shouldn't allow itself to be
     *  discarded.
     */
    @call GeodeGetOptrNS (@RenameLayoutDialog)::
	    	    	MSG_GEN_INTERACTION_DISABLE_DISCARDING ();

  /* Get hold of the database handle */
  databaseObject = GetTargetDatabaseObject ();

  layoutNum = @call databaseObject::MSG_FFD_GET_CURRENT_LAYOUT();

  /* Get the name of the chosen layout in the current database */
  (void) @call databaseObject::MSG_FFD_GET_LAYOUT_NAME(layoutNum,
						       oldLayoutName);

  /* Display the name */
  @call GeodeGetOptrNS(@RenameLayoutOldName)::
			MSG_VIS_TEXT_REPLACE_ALL_PTR(oldLayoutName, 0);

  /* Display the old name in the "new name" area, and highlight it */
  @call GeodeGetOptrNS(@RenameLayoutNewName)::
			MSG_VIS_TEXT_REPLACE_ALL_PTR(oldLayoutName, 0);

  @call GeodeGetOptrNS(@RenameLayoutNewName)::
			MSG_VIS_TEXT_SELECT_RANGE(TEXT_ADDRESS_PAST_END, 0);

  /* Initiate the RenameLayout box.	*/
  @call GeodeGetOptrNS(@RenameLayoutDialog)::MSG_GEN_INTERACTION_INITIATE();

}

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		MSG_GF_RENAME_LAYOUT
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

DESCRIPTION:	Rename the layout, to the name entered by the user

PASS: 		Void.

RETURN:		Void.

PSEUDO CODE/STRATEGY:

WHY:	Allow the easy performing of one-shot initializations.

CHECKS:		None.

KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:	???

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	AML	7/9/92		Initial version.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

@extern method GeoFileProcessClass, MSG_GF_RENAME_LAYOUT
{
    optr databaseObject;
    byte currentLayout;
    TCHAR newName[MAX_LAYOUT_NAME_LENGTH + 1], 
	 oldName[MAX_LAYOUT_NAME_LENGTH + 1];
    TCHAR *errorString;

    databaseObject = GetTargetDatabaseObject ();

    @call GeodeGetOptrNS(@RenameLayoutNewName)::MSG_VIS_TEXT_GET_ALL_PTR(
					newName);

    @call GeodeGetOptrNS(@RenameLayoutOldName)::MSG_VIS_TEXT_GET_ALL_PTR(
					oldName);
    currentLayout = @call databaseObject::MSG_FFD_GET_CURRENT_LAYOUT();

    /*
     * Check if new name is the same; if it is, don't do anything
     */
    if (strcmp(oldName, newName) != 0) {
	/* The new name is different */

	/*
	 * Rename it and check for error
	 */
	if (@call databaseObject::MSG_FFD_RENAME_LAYOUT(
		currentLayout, newName) == FFD_DUPLICATE_LAYOUT_NAME) {
	    /* 
	     * Name already exists! Display error.
	     */
	    MemLock(OptrToHandle(@GFRenameLayoutError));
	    errorString = LMemDeref(@GFRenameLayoutError);

	    UserStandardDialog(
		(TCHAR *)0, 
                /* not GIT_MULTIPLE_RESPONSE, so no custom triggers  */
                (TCHAR *)0,
                /* One string argument: the layout name */
                (TCHAR *)0, (TCHAR *)newName,
                /* dialog string */
		errorString,
                /* dialog type */
                (CDT_WARNING << CDBF_DIALOG_TYPE_OFFSET) |
                /* interaction type */
                (GIT_NOTIFICATION << CDBF_INTERACTION_TYPE_OFFSET));
	    
	    /* Release the error string */
	    MemUnlock(OptrToHandle(@GFRenameLayoutError));
  	}
	else {
	    /*
	     * Everything's OK; dismiss box and reset the layout list
	     */
	    @call GeodeGetOptrNS(@RenameLayoutDialog)::
			MSG_GEN_GUP_INTERACTION_COMMAND (IC_DISMISS);

    	    /*
     	     * Change the visMoniker for the Treasure Chest
     	     */
    	    @call self::MSG_GF_SET_TREASURE_CHEST_VIS_MONIKER((optr) 0);
	}
    }

}

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		MSG_GF_DELETE_LAYOUT
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

DESCRIPTION:	Delete the layout selected in the layout list

PASS: 		Void.

RETURN:		Void.

PSEUDO CODE/STRATEGY:

CHECKS:		None.

KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:	???

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	AML	7/14/92		Initial version.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

@extern method GeoFileProcessClass, MSG_GF_DELETE_LAYOUT
{
  optr databaseObject;
  byte layoutNum;
  FFDeleteLayoutResult deleteResult;
  optr appObject;
  TCHAR *errorString;

  /* Get hold of the database handle */
  databaseObject = GetTargetDatabaseObject ();

  layoutNum = @call databaseObject::MSG_FFD_GET_CURRENT_LAYOUT();

  /*
   * Mark the app busy until we're done
   */
  appObject = GeodeGetAppObject(0);
  @call appObject::MSG_GEN_APPLICATION_MARK_BUSY();
  @call appObject::MSG_GEN_APPLICATION_HOLD_UP_INPUT();

  /* 
   * Delete the beast; if successful, re-display the list;
   * if not, it means we tried to delete the last layout, so put
   * up a message. 
   */
  deleteResult = @call databaseObject::MSG_FFD_DELETE_LAYOUT(
					layoutNum, 
					GeodeGetOptrNS(@ffGrObjHead)); 

  /*
   * We're done; mark the app not busy
   */
  @call appObject::MSG_GEN_APPLICATION_RESUME_INPUT();
  @call appObject::MSG_GEN_APPLICATION_MARK_NOT_BUSY();

  if (deleteResult == FFD_ATTEMPTED_TO_DELETE_LAST_LAYOUT) {

      MemLock(OptrToHandle(@GFCantDeleteLastLayoutError));
      errorString = LMemDeref(@GFCantDeleteLastLayoutError);

      UserStandardDialog(
		(TCHAR *)0, 
                /* not GIT_MULTIPLE_RESPONSE, so no custom triggers  */
                (TCHAR *)0,
                /* No string arguments */
                (TCHAR *) 0, (TCHAR *)0,
                /* dialog string */
		errorString,
                /* dialog type */
                (CDT_WARNING << CDBF_DIALOG_TYPE_OFFSET) |
                /* interaction type */
                (GIT_NOTIFICATION << CDBF_INTERACTION_TYPE_OFFSET));

      /* Release the error string */
      MemUnlock(OptrToHandle(@GFCantDeleteLastLayoutError));
  }
  else {
      if (deleteResult == FFD_DELETE_LAYOUT_OK) {
	SetLayoutTypeUI(@call databaseObject::
			MSG_FFD_GET_LAYOUT_TYPE(0, TRUE));

        /*
         * Change the visMoniker for the Treasure Chest
         */
        @call self::MSG_GF_SET_TREASURE_CHEST_VIS_MONIKER((optr) 0);

      }
  }
}

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		MSG_GF_SAVE_LAYOUT_NOTES
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

DESCRIPTION:	Save the notes displayed (for the layout selected). 

PASS: 		Void.

RETURN:		Void.

PSEUDO CODE/STRATEGY:

CHECKS:		None.

KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:	???

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	AML	7/14/92		Initial version.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

@extern method GeoFileProcessClass, MSG_GF_SAVE_LAYOUT_NOTES
{
  optr databaseObject;
  word layoutNum, layoutIndex;
  TCHAR layoutNotes[MAX_LAYOUT_NOTES_LENGTH + 1];

  /*
   * If dirty, save notes
   */
  if (@call GeodeGetOptrNS(@EditLayoutNotes)::
				MSG_VIS_TEXT_GET_USER_MODIFIED_STATE() != 0) {

      /* Get hold of the database handle */
      databaseObject = GetTargetDatabaseObject ();

      /*
       * Get the layout number
       */
      layoutIndex = @call GeodeGetOptrNS(@LayoutNameList)::
			MSG_GEN_ITEM_GROUP_GET_SELECTION();

      /* Get the layout number corresponding to this index */
      layoutNum = @call databaseObject::
	MSG_FFD_GET_LAYOUT_NUM_FROM_INDEX(layoutIndex)		;
    
      @call GeodeGetOptrNS(@EditLayoutNotes)::MSG_VIS_TEXT_GET_ALL_PTR(
							layoutNotes);
      /*
       * Store the notes
       */
      @call databaseObject::MSG_FFD_STORE_LAYOUT_NOTES(layoutNum, layoutNotes);

      DisplayLayoutNotes(layoutIndex);
  }
}

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		MSG_GF_EDIT_LAYOUT_NOTES
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

DESCRIPTION:	Bring up the box to edit notes

PASS: 		Void.

RETURN:		Void.

PSEUDO CODE/STRATEGY:

CHECKS:		None.

KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:	???

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	AML	12/22/92	Initial version.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

@extern method GeoFileProcessClass, MSG_GF_EDIT_LAYOUT_NOTES
{
    word layoutIndex, layoutNum;
    TCHAR layoutNotes[MAX_LAYOUT_NOTES_LENGTH + 1];
    optr databaseObject;

    /*
     *	This is a discardable dialog, so tell the interaction that we are
     *  about to bring it onscreen, so it shouldn't allow itself to be
     *  discarded.
     */
    @call GeodeGetOptrNS (@EditLayoutNotesInteraction)::
	    	    	MSG_GEN_INTERACTION_DISABLE_DISCARDING ();
    
    /* Get the database handle.	*/
    databaseObject = GetTargetDatabaseObject();

    layoutIndex = @call GeodeGetOptrNS(@LayoutNameList)::
			MSG_GEN_ITEM_GROUP_GET_SELECTION();

    /* Get the layout number corresponding to this index */
    layoutNum = @call databaseObject::
	MSG_FFD_GET_LAYOUT_NUM_FROM_INDEX(layoutIndex);
    
    @call databaseObject::MSG_FFD_GET_LAYOUT_NOTES(layoutNum, 
						   layoutNotes);
    
    @call GeodeGetOptrNS(@EditLayoutNotes)::
	MSG_VIS_TEXT_REPLACE_ALL_PTR(layoutNotes, 0);
    	
    /* Initiate the ChooseLayout box.	*/
    @call GeodeGetOptrNS(@EditLayoutNotesInteraction)::
				MSG_GEN_INTERACTION_INITIATE();
}

/***********************************************************************
 *
 * MESSAGE:	MSG_GF_RECORD_NAVIGATION_ORDER_INITIATE for GeoFileProcessClass
 *
 * DESCRIPTION:	Bring up the box with the different options for Record
 *		Order Navigation. Set the appropriate option for the 
 *		current layout.
 *
 * PARAMETERS:
 *	void ()
 *
 * KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:
 *
 * REVISION HISTORY:
 *	Name	Date		Description
 *	----	----		-----------
 *	anna	9/2/92		Initial version
 *
 ***********************************************************************/
@extern method GeoFileProcessClass, MSG_GF_RECORD_NAVIGATION_ORDER_INITIATE
{
    optr databaseObject;
    RecordOrderOption recordOrder;
  
    /*
     *	This is a discardable dialog, so tell the interaction that we are
     *  about to bring it onscreen, so it shouldn't allow itself to be
     *  discarded.
     */
    @call GeodeGetOptrNS (@RecordNavigationOrderBox)::
	    	    	MSG_GEN_INTERACTION_DISABLE_DISCARDING ();
    
    /* Get the database handle.	*/
    databaseObject = GetTargetDatabaseObject();

    recordOrder = @call databaseObject::
			MSG_FFD_GET_RECORD_ORDER_FOR_CURRENT_LAYOUT();
    
    /* Set the correct option */
    @call GeodeGetOptrNS (@RNOBOptionsList)::
		MSG_GEN_ITEM_GROUP_SET_SINGLE_SELECTION(recordOrder,
							 FALSE);
    /* Initiate the dialog box.	*/
    @call GeodeGetOptrNS(@RecordNavigationOrderBox)::
			MSG_GEN_INTERACTION_INITIATE(); 
}

/***********************************************************************
 *
 * MESSAGE:	MSG_GF_ENABLE_RECORD_ORDER_OK for GeoFileProcessClass
 *
 * DESCRIPTION:	This is called when the user changes the record order.
 *		Enable the OK button.
 *
 * PARAMETERS:
 *	void ()
 *
 * KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:
 *
 * REVISION HISTORY:
 *	Name	Date		Description
 *	----	----		-----------
 *	anna	12/1/92		Initial version
 *
 ***********************************************************************/
@extern method GeoFileProcessClass, MSG_GF_ENABLE_RECORD_ORDER_OK
{
    @call GeodeGetOptrNS(@RNOBOKTrigger)::MSG_GEN_SET_ENABLED(VUM_NOW);
}

/***********************************************************************
 *
 * MESSAGE:	MSG_GF_CANCEL_RECORD_ORDER_CHANGE for GeoFileProcessClass
 *
 * DESCRIPTION:	This is called when the user cancels the record order box.
 *		We want to disable the OK button, so the next time it
 *		comes up, it will be disabled.
 *
 * PARAMETERS:
 *	void ()
 *
 * KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:
 *
 * REVISION HISTORY:
 *	Name	Date		Description
 *	----	----		-----------
 *	anna	12/1/92		Initial version
 *
 ***********************************************************************/
@extern method GeoFileProcessClass, MSG_GF_CANCEL_RECORD_ORDER_CHANGE
{
    @call GeodeGetOptrNS(@RNOBOKTrigger)::MSG_GEN_SET_NOT_ENABLED(VUM_NOW);

    /* Dismiss the dialog box */
    @call GeodeGetOptrNS (@RecordNavigationOrderBox)::
		MSG_GEN_GUP_INTERACTION_COMMAND (IC_DISMISS);
}

/***********************************************************************
 *
 * MESSAGE:	MSG_GF_CHANGE_RECORD_ORDER for GeoFileProcessClass
 *
 * DESCRIPTION:	Change the record order for the current layout.
 *
 * PARAMETERS:
 *	void ()
 *
 * KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:
 *
 * REVISION HISTORY:
 *	Name	Date		Description
 *	----	----		-----------
 *	anna	9/2/92		Initial version
 *
 ***********************************************************************/
@extern method GeoFileProcessClass, MSG_GF_CHANGE_RECORD_ORDER
{
    RecordOrderOption recordOrder;
    optr databaseObject;
    EventHandle event;
    ModeType modeType;
    LayoutType layoutType;

    /* Get the current selection */
    recordOrder = @call GeodeGetOptrNS(@RNOBOptionsList)::
			    	MSG_GEN_ITEM_GROUP_GET_SELECTION();

    /* Get the database handle.	*/
    databaseObject = GetTargetDatabaseObject();

    /* Set it */
    @call databaseObject::
		MSG_FFD_SET_RECORD_ORDER_FOR_CURRENT_LAYOUT(recordOrder);

    /* Dismiss the dialog box */
    @call GeodeGetOptrNS (@RecordNavigationOrderBox)::
		MSG_GEN_GUP_INTERACTION_COMMAND (IC_DISMISS);

    /* Disable the OK button again */
    @call GeodeGetOptrNS(@RNOBOKTrigger)::MSG_GEN_SET_NOT_ENABLED(VUM_NOW);

    /*
     * Force the view to redraw, if we're in data entry mode, and the
     * layout is multi-record.
     */
    modeType = @call GeodeGetOptrNS(@ModeList)::
			    	MSG_GEN_ITEM_GROUP_GET_SELECTION();

    layoutType = @call GeodeGetOptrNS(@DesignOptionsList)::
			    	MSG_GEN_ITEM_GROUP_GET_SELECTION();

    if ((modeType == MT_DATA_ENTRY) && (layoutType == LT_MULTI_RECORD)) {
        event = @record GenViewClass::MSG_GEN_VIEW_REDRAW_CONTENT();

        @send databaseObject::MSG_VIS_VUP_CALL_OBJECT_OF_CLASS(event);
    }
}

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		DisplayCurrentLayoutName
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

DESCRIPTION:	Display the name of the current layout in the "Current
		Layout" text display.

PASS: 		Void.

RETURN:		Void.

CHECKS:		None.

KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:	???

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	AML	7/14/92		Initial version.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/
void DisplayCurrentLayoutName() 
{
    optr databaseObject;
    byte currentLayout;
    TCHAR layoutName[MAX_LAYOUT_NAME_LENGTH + 1];

    /* Get hold of the database handle.	*/
    databaseObject = GetTargetDatabaseObject ();

    /* Get the current layout */
    currentLayout = @call databaseObject::MSG_FFD_GET_CURRENT_LAYOUT();

    @call databaseObject::MSG_FFD_GET_LAYOUT_NAME(currentLayout, layoutName);
    
    @call GeodeGetOptrNS(@CurrentLayoutName)::
	MSG_VIS_TEXT_REPLACE_ALL_PTR(layoutName, 0);
}

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		DisplayLayoutNotes
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

DESCRIPTION:	Display the notes corresponding to the given item
		(i.e. index into the sorted list of layout names)

PASS: 		byte: layoutIndex - index into the sorted list of names

RETURN:		Void.

CHECKS:		None.

KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:	???

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	AML	7/14/92		Initial version.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/
void DisplayLayoutNotes(byte layoutIndex)
{
    optr databaseObject;
    TCHAR layoutNotes[MAX_LAYOUT_NOTES_LENGTH + 1],
    	 layoutName[MAX_LAYOUT_NAME_LENGTH + 1];
    byte layoutNum;
    TCHAR *oldMoniker;
    byte oldStringLength, addedStringLength;
    TCHAR newMoniker[MAX_LAYOUT_NAME_LENGTH + 1];

    /* Get hold of the database handle.	*/
    databaseObject = GetTargetDatabaseObject ();

    /* Get the layout number corresponding to this index */
    layoutNum = @call databaseObject::
	MSG_FFD_GET_LAYOUT_NUM_FROM_INDEX(layoutIndex);
    
    @call databaseObject::MSG_FFD_GET_LAYOUT_NOTES(layoutNum, 
						   layoutNotes);
    
    @call GeodeGetOptrNS(@SelectedLayoutNotes)::
	MSG_VIS_TEXT_REPLACE_ALL_PTR(layoutNotes, 0);
    	
    /* 
     * Get the layout name, and place it in the "notes for:" field
     */
    @call databaseObject::MSG_FFD_GET_LAYOUT_NAME(layoutNum, layoutName);
    
    (void) MemLock(OptrToHandle(@LayoutNotesMoniker));
    oldMoniker = LMemDeref(@LayoutNotesMoniker);

    oldStringLength = strlen(oldMoniker);
    memcpy(newMoniker, oldMoniker, oldStringLength*sizeof(TCHAR));

    MemUnlock(OptrToHandle(@LayoutNotesMoniker));

    /*
     * Make sure that the total string length isn't beyond the maximum
     * we've allocated
     */
    addedStringLength = strlen(layoutName);
    if ((oldStringLength + addedStringLength) > MAX_LAYOUT_NAME_LENGTH) {
	addedStringLength = MAX_LAYOUT_NAME_LENGTH - oldStringLength;
    }

    /* Add the passed string */
    memcpy((TCHAR *) (newMoniker+oldStringLength), layoutName, addedStringLength*sizeof(TCHAR));

    /* null-terminate the thing */
    newMoniker[addedStringLength + oldStringLength] = _TEXT('\0');

    @call GeodeGetOptrNS(@SelectedLayoutNotesName)::
			MSG_VIS_TEXT_REPLACE_ALL_PTR(newMoniker, 0);

    /*
     * Put the cursor at the beginning of the text.
     */
    (void) @call GeodeGetOptrNS(@SelectedLayoutNotesName)::
					MSG_VIS_TEXT_SELECT_RANGE(0, 0);
}

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		SetLayoutTypeUI
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

DESCRIPTION:	Sets the Design Options (Record/Page) and Treasure Chest
		appropriate to the layout type

PASS: 		layoutType -- LT_SINGLE_RECORD, LT_MULTI_RECORD 

RETURN:		Void.

CHECKS:		None.

KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:	???

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	AML	8/18/92		Initial version.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/
void SetLayoutTypeUI(LayoutType layoutType)
{
    switch (layoutType) {
	case LT_SINGLE_RECORD:
            @call GeodeGetOptrNS(@DesignOptionsList)::
		MSG_GEN_ITEM_GROUP_SET_SINGLE_SELECTION(LT_SINGLE_RECORD,
							FALSE);
    	    @send GeodeGetOptrNS (@TreasureChest)::
		MSG_GEN_SET_ENABLED(VUM_NOW);
    	    @send GeodeGetOptrNS (@InsertPageNumberTrigger)::
		MSG_GEN_SET_NOT_ENABLED(VUM_NOW);
	    break;
	case LT_MULTI_RECORD:
            @call GeodeGetOptrNS(@DesignOptionsList)::
		MSG_GEN_ITEM_GROUP_SET_SINGLE_SELECTION(LT_MULTI_RECORD,
							FALSE);
    	    @send GeodeGetOptrNS (@TreasureChest)::
		MSG_GEN_SET_NOT_ENABLED(VUM_NOW);
    	    @send GeodeGetOptrNS (@InsertPageNumberTrigger)::
		MSG_GEN_SET_ENABLED(VUM_NOW);
	    break;
    }
}

/***********************************************************************
 *
 * MESSAGE:	MSG_GF_SET_TREASURE_CHEST_VIS_MONIKER 
 *		for GeoFileProcessClass
 *
 * DESCRIPTION:	Add layoutname to the Treasure Chest's moniker; it appends
 *		the layout name to "Field Organizer - ".
 *		If the layout name is "Layout 1",
 *		this message changes the vismoniker to
 *		Field Organizer - Layout 1
 *
 * PARAMETERS:
 *		Pass: optr currentDatabase -- OPTIONAL. If 0, the
 *						current database is figured
 *						out from the target.
 *						This message is
 *						called from ATTACH_UI, at
 *						which point the database
 *						isn't the target yet, so
 *						we had to provide a way
 *						to pass the optr
 *		Returns: nothing
 *
 * KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:
 *
 * REVISION HISTORY:
 *	Name	Date		Description
 *	----	----		-----------
 *	anna	10/29/92	Initial version
 *
 ***********************************************************************/
@extern method GeoFileProcessClass, MSG_GF_SET_TREASURE_CHEST_VIS_MONIKER
{
    TCHAR *oldMoniker;
    TCHAR newMoniker[MAX_LENGTH_TREASURE_CHEST_MONIKER + 1];
    byte oldStringLength, addedStringLength;
    TCHAR layoutName[MAX_LAYOUT_NAME_LENGTH + 1];

    if (!currentDatabase) {
        currentDatabase = GetTargetDatabaseObject();
    }

    @call currentDatabase::MSG_FFD_GET_CURRENT_LAYOUT_NAME(layoutName);

    (void) MemLock(OptrToHandle(@TreasureChestMoniker));
    oldMoniker = LMemDeref(@TreasureChestMoniker);

    oldStringLength = strlen(oldMoniker);
    memcpy(newMoniker, oldMoniker, oldStringLength*sizeof(TCHAR));

    /* Add the ' - ' */
    newMoniker[oldStringLength] = _TEXT(' ');
    oldStringLength++;
    newMoniker[oldStringLength] = _TEXT('-');
    oldStringLength++;
    newMoniker[oldStringLength] = _TEXT(' ');
    oldStringLength++;

    /*
     * Make sure that the total string length isn't beyond the maximum
     * we've allocated
     */
    addedStringLength = strlen(layoutName);
    if ((oldStringLength + addedStringLength) > 
			MAX_LENGTH_TREASURE_CHEST_MONIKER) {
	addedStringLength = MAX_LENGTH_TREASURE_CHEST_MONIKER -
						oldStringLength;
    }

    /* Add the passed string */
    memcpy((TCHAR *) (newMoniker+oldStringLength), layoutName, addedStringLength*sizeof(TCHAR));

    /* null-terminate the thing */
    newMoniker[addedStringLength + oldStringLength] = _TEXT('\0');

    @call GeodeGetOptrNS(@TreasureChest)::
			MSG_GEN_REPLACE_VIS_MONIKER_TEXT(newMoniker, VUM_NOW);

    MemUnlock(OptrToHandle(@TreasureChestMoniker));
}

/***********************************************************************
 *
 * MESSAGE:	MSG_GF_SET_RECORD_CONTROL_PANEL_VIS_MONIKER 
 *		for GeoFileProcessClass
 *
 * DESCRIPTION:	Add layoutname to the Record Control Panel's moniker; 
 *		it appends the layout name to "Record Control Panel - ".
 *		If the layout name is "Layout 1",
 *		this message changes the vismoniker to
 *		Record Control Panel - Layout 1
 *
 * PARAMETERS:
 *		Pass: optr currentDatabase -- OPTIONAL. If 0, the
 *						current database is figured
 *						out from the target.
 *						This message is
 *						called from ATTACH_UI, at
 *						which point the database
 *						isn't the target yet, so
 *						we had to provide a way
 *						to pass the optr
 *		Returns: nothing
 *
 * KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:
 *
 * REVISION HISTORY:
 *	Name	Date		Description
 *	----	----		-----------
 *	anna	10/30/92	Initial version
 *
 ***********************************************************************/
@extern method GeoFileProcessClass, MSG_GF_SET_RECORD_CONTROL_PANEL_VIS_MONIKER
{
    TCHAR *oldMoniker;
    TCHAR newMoniker[MAX_LENGTH_RECORD_CONTROL_PANEL_MONIKER + 1];
    byte oldStringLength, addedStringLength;
    TCHAR layoutName[MAX_LAYOUT_NAME_LENGTH + 1];

    if (!currentDatabase) {
        currentDatabase = GetTargetDatabaseObject();
    }

    @call currentDatabase::MSG_FFD_GET_CURRENT_LAYOUT_NAME(layoutName);

    (void) MemLock(OptrToHandle(@RecordControlPanelMoniker));
    oldMoniker = LMemDeref(@RecordControlPanelMoniker);

    oldStringLength = strlen(oldMoniker);
    memcpy(newMoniker, oldMoniker, oldStringLength*sizeof(TCHAR));

    /* Add the ' - ' */
    newMoniker[oldStringLength] = _TEXT(' ');
    oldStringLength++;
    newMoniker[oldStringLength] = _TEXT('-');
    oldStringLength++;
    newMoniker[oldStringLength] = _TEXT(' ');
    oldStringLength++;

    /*
     * Make sure that the total string length isn't beyond the maximum
     * we've allocated
     */
    addedStringLength = strlen(layoutName);
    if ((oldStringLength + addedStringLength) > 
			MAX_LENGTH_RECORD_CONTROL_PANEL_MONIKER) {
	addedStringLength = MAX_LENGTH_RECORD_CONTROL_PANEL_MONIKER -
						oldStringLength;
    }

    /* Add the passed string */
    memcpy((TCHAR *) (newMoniker+oldStringLength), layoutName, addedStringLength*sizeof(TCHAR));

    /* null-terminate the thing */
    newMoniker[addedStringLength + oldStringLength] = _TEXT('\0');

    @call GeodeGetOptrNS(@RCPController)::
			MSG_GEN_REPLACE_VIS_MONIKER_TEXT(newMoniker, VUM_NOW);

    MemUnlock(OptrToHandle(@RecordControlPanelMoniker));
}
