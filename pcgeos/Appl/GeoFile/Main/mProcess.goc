/***********************************************************************
 *
 *	Copyright (c) GeoWorks 1991 -- All Rights Reserved
 *
 * PROJECT:	PC/GEOS
 * MODULE:	GeoFile 
 * FILE:	mProcess.goc
 * AUTHOR:	Anna Lijphart: December, 1991
 *
 * DESCRIPTION:
 *	This file contains the UI objects and definitions for
 *	the GeoFile application. It also contains simple routines related
 *	to the UI.
 *
 * RCS STAMP:
 *	$Id: mProcess.goc,v 1.1 97/04/04 15:54:08 newdeal Exp $
 *
 ***********************************************************************/


/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		Include Files
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

@include <stdapp.goh>			/* GEOS Standard Applications.	*/

#include <Ansi/string.h>		/* Standard C.	*/

@include <gcnlist.goh>			/* PC/GEOS Libraries.	*/
@include <grobj.goh>
@include <impex.goh>
#include <token.h>
@include <Objects/FlatFile/ffDbaseC.goh>
#include <Objects/FlatFile/ffExBld.h>
@include <Objects/FlatFile/ffFldPr.goh>
@include <Objects/FlatFile/ffFldPrC.goh>
@include <Objects/FlatFile/ffRecC.goh>
@include <Objects/gDListC.goh>
@include <Objects/gDocC.goh>
@include <Objects/gViewCC.goh>

@define	__GF_MAIN_PROCESS_GOC		/* Don't over-define.	*/
@include <geofile.goh>			/* GeoFile Application.	*/


/*
 ***************************************************************************
 *		 External routine declarations 
 ***************************************************************************
 */

/*
 ***************************************************************************
 *		 Forward routine declarations 
 ***************************************************************************
 */
optr GetTargetDatabaseObject ();
void DisplayCurrentLayoutName ();
void DisplayLayoutNotes (byte layoutIndex);
void DisableChooseLayoutDialogTriggers ();
void SetDesignOptions(LayoutType layoutType);
void SetLayoutTypeUI(LayoutType layoutType);


/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		GeoFileProcessClass Declaration
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

/*
 * This class definition must be stored in memory at runtime, so that
 * the PC/GEOS messaging system can examine it.
 *
 * The neverSaved flag is necessary because ProcessClass objects are
 * hybrid objects.
 */

@classdecl	GeoFileProcessClass, neverSaved;


/*
 ***************************************************************************
 *		 External method declarations 
 ***************************************************************************
 */

/* The following methods are defined in UI/uiMenus.goc */
@extern method GeoFileProcessClass, MSG_GF_SET_MODE_MENUS;
@extern method GeoFileProcessClass, MSG_GF_RENAME_LAYOUT;

/* The following methode are defined in Main/mainFieldOrder.goc.	*/
@extern method GeoFileProcessClass, MSG_GF_FIELD_NAVIGATION_ORDER_INITIATE;
@extern method GeoFileProcessClass, MSG_GF_FNO_FIELDS_LIST_QUERY;
@extern method GeoFileProcessClass, MSG_GF_FNO_ITEM_SELECTED;
@extern method GeoFileProcessClass, MSG_GF_FNO_INCREASE_PRIORITY;
@extern method GeoFileProcessClass, MSG_GF_FNO_DECREASE_PRIORITY;
@extern method GeoFileProcessClass, MSG_GF_FNO_APPLY;
@extern method GeoFileProcessClass, MSG_GF_FNO_RESET;
@extern method GeoFileProcessClass, MSG_GF_FNO_CANCEL;

/* The following methods are defined in Main/mainLayouts.goc */
@extern method GeoFileProcessClass, MSG_GF_CHOOSE_LAYOUT_INITIATE;
@extern method GeoFileProcessClass, MSG_GF_LAYOUT_NAME_SELECTED;
@extern method GeoFileProcessClass, MSG_GF_LAYOUT_NAME_LIST_QUERY;
@extern method GeoFileProcessClass, MSG_GF_NEW_LAYOUT;
@extern method GeoFileProcessClass, MSG_GF_SWITCH_LAYOUT_DISPLAY;
@extern method GeoFileProcessClass, MSG_GF_CHOOSE_LAYOUT;
@extern method GeoFileProcessClass, MSG_GF_BRING_UP_RENAME_LAYOUT_BOX;
@extern method GeoFileProcessClass, MSG_GF_RENAME_LAYOUT;
@extern method GeoFileProcessClass, MSG_GF_DELETE_LAYOUT;
@extern method GeoFileProcessClass, MSG_GF_EDIT_LAYOUT_NOTES;
@extern method GeoFileProcessClass, MSG_GF_SAVE_LAYOUT_NOTES;
@extern method GeoFileProcessClass, MSG_GF_RECORD_NAVIGATION_ORDER_INITIATE;
@extern method GeoFileProcessClass, MSG_GF_CHANGE_RECORD_ORDER;
@extern method GeoFileProcessClass, MSG_GF_ENABLE_RECORD_ORDER_OK;
@extern method GeoFileProcessClass, MSG_GF_CANCEL_RECORD_ORDER_CHANGE;
@extern method GeoFileProcessClass, MSG_GF_SET_TREASURE_CHEST_VIS_MONIKER;
@extern method GeoFileProcessClass,
			MSG_GF_SET_RECORD_CONTROL_PANEL_VIS_MONIKER;

/* The following methods are defined in Main/mainModes.goc.	*/
@extern method GeoFileProcessClass, MSG_GF_SET_UI;

/* The following methods are defined in Main/mainSorting.goc.	*/
@extern method GeoFileProcessClass, MSG_GF_QUICK_SORT_DIALOG_INITIATE;
@extern method GeoFileProcessClass, MSG_GF_QUICK_SORT_SORT;
@extern method GeoFileProcessClass, MSG_GF_QUICK_SORT_CANCEL;
@extern method GeoFileProcessClass, MSG_GF_QUICK_SORT_DIRECTION_CHANGED;
@extern method GeoFileProcessClass, MSG_GF_QUICK_SORT_FIELDS_LIST_QUERY;
@extern method GeoFileProcessClass, MSG_GF_QUICK_SORT_FIELD_SELECTED;
@extern method GeoFileProcessClass, MSG_GF_SORT_DIALOG_INITIATE;
@extern method GeoFileProcessClass, MSG_GF_SORT_SORT;
@extern method GeoFileProcessClass, MSG_GF_SORT_CLEAR;
@extern method GeoFileProcessClass, MSG_GF_SORT_CANCEL;
@extern method GeoFileProcessClass, MSG_GF_SORT_FDB_TO_SK;
@extern method GeoFileProcessClass, MSG_GF_SORT_SK_TO_FDB;
@extern method GeoFileProcessClass, MSG_GF_SORT_DIRECTION_CHANGED;
@extern method GeoFileProcessClass, MSG_GF_SORT_INCREASE_PRIORITY;
@extern method GeoFileProcessClass, MSG_GF_SORT_DECREASE_PRIORITY;
@extern method GeoFileProcessClass, MSG_GF_SORT_FIELDS_LIST_QUERY;
@extern method GeoFileProcessClass, MSG_GF_SORT_FIELD_SELECTED;
@extern method GeoFileProcessClass, MSG_GF_SORT_KEY_LIST_QUERY;
@extern method GeoFileProcessClass, MSG_GF_SORT_KEY_SELECTED;
@extern method GeoFileProcessClass, MSG_GF_SORT_SET_SORT_OPTIONS;

/* The following methods are defined in Main/mainSubsets.goc.	*/
@extern	method GeoFileProcessClass, MSG_GF_QUICK_MARK_DIALOG_INITIATE;
@extern	method GeoFileProcessClass, MSG_GF_QUICK_MARK_FIELDS_LIST_QUERY;
@extern	method GeoFileProcessClass, MSG_GF_QUICK_MARK_FIELD_SELECTED;
@extern	method GeoFileProcessClass, MSG_GF_QUICK_MARK_MARK;
@extern	method GeoFileProcessClass, MSG_GF_QUICK_MARK_CANCEL;
@extern method GeoFileProcessClass, MSG_GF_SUBSET_FORMULA_INITIATE;
@extern method GeoFileProcessClass, MSG_GF_SUBSET_FORMULA_CALLBACK;
@extern method GeoFileProcessClass, MSG_GF_SUBSET_MARK_ALL;
@extern method GeoFileProcessClass, MSG_GF_SUBSET_UNMARK_ALL;
@extern method GeoFileProcessClass, MSG_GF_SUBSET_INVERT_MARKS;
@extern method GeoFileProcessClass, MSG_GF_SUBSET_DISPLAY_ALL;
@extern method GeoFileProcessClass, MSG_GF_SUBSET_DISPLAY_MARKED;
@extern method GeoFileProcessClass, MSG_GF_SUBSET_DELETE_ALL_MARKED;
@extern method GeoFileProcessClass, MSG_GF_SUBSET_OPTIONS_DIALOG_INITIATE;
@extern method GeoFileProcessClass, MSG_GF_SUBSET_OPTIONS_SELECTED;
@extern method GeoFileProcessClass, MSG_GF_SUBSET_OPTIONS_CANCEL;


/***********************************************************************
 *
 * MESSAGE:	MSG_GF_FIELD_CREATION for GeoFileProcessClass
 *
 * DESCRIPTION:	This method is sent by a number of triggers
 *		to bring up the Field Properties UI controller (non-modal).
 *
 * PARAMETERS:
 *
 * STRATEGY:
 *
 * KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:
 *
 * REVISION HISTORY:
 *	Name	Date		Description
 *	----	----		-----------
 *	anna	3/92		Initial Revision
 *
 ***********************************************************************/
@method GeoFileProcessClass, MSG_GF_FIELD_CREATION
{
    optr creationBox;
    optr appObject = GeodeGetAppObject(0);

    @call appObject::MSG_GEN_APPLICATION_MARK_BUSY();
    @call appObject::MSG_GEN_APPLICATION_IGNORE_INPUT();

    /*
     * Set the field properties' "count of Mark Busy"; the application
     * has been marked busy if this is a new document (then the user
     * has to wait for the various controllers to be displayed)
     */
    creationBox = GeodeGetOptrNS(@CreateNewFieldUIController);
    @call creationBox::MSG_FFFP_INC_MARK_BUSY_COUNT();

    /*
     * Bring up the Field Properties box. 
     */
    @send creationBox::MSG_FFFP_INITIATE_NEW_FIELD_INTERACTION();
}


/***********************************************************************
 *
 * MESSAGE:	MSG_GEN_PROCESS_INSTALL_TOKEN for GeoFileProcessClass
 *
 * DESCRIPTION:	Install tokens.
 *
 * PARAMETERS:
 *	void ()
 *
 * KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:
 *
 * REVISION HISTORY:
 *	Name	Date		Description
 *	----	----		-----------
 *	anna	6/22/92		Initial version
 *
 ***********************************************************************/
@method GeoFileProcessClass, MSG_GEN_PROCESS_INSTALL_TOKEN
{
    dword GFtokenChars;
    TokenFlags GFtokenFlags;

    @callsuper();
    GFtokenChars = TOKEN_CHARS('G', 'F', (dword)'D', (dword)'a');

    if (!TokenGetTokenInfo(GFtokenChars, MANUFACTURER_ID_GEOWORKS, 
						&GFtokenFlags)) {
	TokenDefineToken(GFtokenChars, 
			 MANUFACTURER_ID_GEOWORKS, 
			 @GFDatafileMonikerList,
			 0);	/* Moniker list is in data resource, so no
				 * object relocation required */
    }
}

/***********************************************************************
 *
 * MESSAGE:	MSG_GEN_PROCESS_CLOSE_APPLICATION for GeoFileProcessClass
 *
 * DESCRIPTION: destroys floating point stack
 *
 * PARAMETERS:
 *		none 
 *
 * STRATEGY:
 *
 * KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:
 *
 * REVISION HISTORY:
 *	Name	Date		Description
 *	----	----		-----------
 *	anna	2/92		Initial Revision
 *
 ***********************************************************************/
@method GeoFileProcessClass, MSG_GEN_PROCESS_CLOSE_APPLICATION
{
    @call oself::MSG_GEN_PROCESS_UNDO_ACCEPT_ACTIONS();

    @callsuper();

    return(0);
}


/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		ImpEx
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		MSG_GF_EXPORT_TRANSFER_FILE
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

DESCRIPTION:	Export transfer file.

PASS: 		(ImpexTranslationParams *itParams)

RETURN:		(ImpexTranslationParams *itParams)

PSEUDO CODE/STRATEGY:

CHECKS:		None.

KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:	???

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	THK	8/24/92		Initial version.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

@method GeoFileProcessClass, MSG_GF_EXPORT_TRANSFER_FILE
{
    optr databaseObject;
    word begRecord;
    word endRecord;
    word selection;

    /* Get ahold of the database handle.	*/
    databaseObject = GetTargetDatabaseObject ();

    /* Get the identifier of selected item */
    selection = @call GeodeGetOptrNS (@ExportChoices)::
	MSG_GEN_ITEM_GROUP_GET_SELECTION ();

    /* Do the following only if "From/To" option is selected */
    if (selection) {

        /* Get the current value of GenValue of 'ExportFrom' object */
        begRecord = @call GeodeGetOptrNS (@ExportFrom)::
	    MSG_GEN_VALUE_GET_INTEGER_VALUE();

	/* Get the current value of GenValue of 'ExportTo' object */
        endRecord = @call GeodeGetOptrNS (@ExportTo)::
	    MSG_GEN_VALUE_GET_INTEGER_VALUE();
	
	begRecord = begRecord - 1;

    /* Do the following if "All" option is selected */
    } else {
	begRecord = 0;
        /* check to see if we are in "show only marked" records mode  */
        if (@call databaseObject::MSG_FFD_GET_SHOW_ONLY_MARKED()) {

            /* if so, get the number of marked records in database file */
            endRecord = @call databaseObject::MSG_FFD_GET_NUM_MARKED_RECORDS();
        } else {

            /* else, get the number of records in database file */
            endRecord = @call databaseObject::MSG_FFD_GET_NUM_RECORDS();
        }
    }

    /* Call FlatFile library for export operation */
    @call databaseObject::MSG_FFD_EXPORT_TRANSFER_FILE(itParams, 
						       begRecord,
						       endRecord);
    ImpexImportExportCompleted(itParams);
}


/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		MSG_GF_EXPORT_TO_CLIPBOARD
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

DESCRIPTION:	Export transfer file.

PASS: 		none

RETURN:		none

PSEUDO CODE/STRATEGY:

CHECKS:		None.

KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:	???

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	THK	10/20/92	Initial version.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

@method GeoFileProcessClass, MSG_GF_EXPORT_TO_CLIPBOARD
{
    optr databaseObject;
    word begRecord;
    word endRecord;
    word selection;

    /* Get ahold of the database handle.	*/
    databaseObject = GetTargetDatabaseObject ();

    /* Get the identifier of selected item */
    selection = @call GeodeGetOptrNS (@ExportChoices)::
	MSG_GEN_ITEM_GROUP_GET_SELECTION ();

    /* Do the following only if "From/To" option is selected */
    if (selection) {

        /* Get the current value of GenValue of 'ExportFrom' object */
        begRecord = @call GeodeGetOptrNS (@ExportFrom)::
	    MSG_GEN_VALUE_GET_INTEGER_VALUE();

	/* Get the current value of GenValue of 'ExportTo' object */
        endRecord = @call GeodeGetOptrNS (@ExportTo)::
	    MSG_GEN_VALUE_GET_INTEGER_VALUE();
	
	begRecord = begRecord - 1;

    /* Do the following if "All" option is selected */
    } else {
	begRecord = 0;
        /* check to see if we are in "show only marked" records mode  */
        if (@call databaseObject::MSG_FFD_GET_SHOW_ONLY_MARKED()) {

            /* if so, get the number of marked records in database file */
            endRecord = @call databaseObject::MSG_FFD_GET_NUM_MARKED_RECORDS();
        } else {

            /* else, get the number of records in database file */
            endRecord = @call databaseObject::MSG_FFD_GET_NUM_RECORDS();
        }
    }

    /* Call FlatFile library for export operation */
    @call databaseObject::MSG_FFD_EXPORT_TO_CLIPBOARD(begRecord, endRecord);
}


/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		MSG_GF_EXPORT_SET_PAGE_SELECTION
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

DESCRIPTION:	Update the value of 'ExportTo' and 'ExportFrom' objects
		if necessary.

PASS: 		(word selection, word numSelections, byte stateFlags)

RETURN:		nothing

PSEUDO CODE/STRATEGY:

CHECKS:		None.

KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:	???

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	THK	10/19/92	Initial version.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

@method GeoFileProcessClass, MSG_GF_EXPORT_SET_PAGE_SELECTION
{
    optr databaseObject;
    word numRecord;

    /* Do the following only if "All" option is selected */
    if (!selection) {

	/* Get ahold of the database handle.	*/
	databaseObject = GetTargetDatabaseObject ();

	/* check to see if we are in "show only marked" records mode  */
	if (@call databaseObject::MSG_FFD_GET_SHOW_ONLY_MARKED()) {

            /* if so, get the number of marked records in database file */
            numRecord = @call databaseObject::MSG_FFD_GET_NUM_MARKED_RECORDS();
        } else {

            /* else, get the number of records in database file */
            numRecord = @call databaseObject::MSG_FFD_GET_NUM_RECORDS();
        }

	/* Set the current value for 'ExportFrom' object */
        @call GeodeGetOptrNS(@ExportFrom)::
	    MSG_GEN_VALUE_SET_VALUE(MakeWWFixed(1.0), FALSE);

	/* Set the current value for 'ExportTo' object */
        @call GeodeGetOptrNS(@ExportTo)::
	    MSG_GEN_VALUE_SET_VALUE(MakeWWFixed(numRecord), FALSE);
    } 
}


/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		MSG_GF_EXPORT_SET_PAGE_FROM
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

DESCRIPTION:	Update the value of 'ExportTo' object if necessary.

PASS: 		(WWFixedAsDWord value, word stateFlags)

RETURN:		nothing

PSEUDO CODE/STRATEGY:

CHECKS:		None.

KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:	???

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	THK	10/19/92	Initial version.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

@method GeoFileProcessClass, MSG_GF_EXPORT_SET_PAGE_FROM
{
    word endRecord;
    WWFixedAsDWord min, max;

    /* Get the current value of GenValue of 'ExportTo' object */
    endRecord = @call GeodeGetOptrNS (@ExportTo)::
	MSG_GEN_VALUE_GET_INTEGER_VALUE();

    /* Adjust the value of 'ExportTo' if necessary */

    if (IntegerOf(value) > endRecord) {
        @call GeodeGetOptrNS(@ExportTo)::MSG_GEN_VALUE_SET_VALUE(value, FALSE);
    } 

    /* Get the minimum value of 'ExportFrom' object */
    min = @call GeodeGetOptrNS(@ExportFrom)::MSG_GEN_VALUE_GET_MINIMUM();

    /* Get the maximum value of 'ExportTo' object */
    max = @call GeodeGetOptrNS(@ExportTo)::MSG_GEN_VALUE_GET_MAXIMUM();

    /* if export all of the records, then change GenItem to "All" */
    if ((min == value) && (IntegerOf(max) == endRecord)) {
	@call GeodeGetOptrNS(@ExportChoices)::
	    MSG_GEN_ITEM_GROUP_SET_SINGLE_SELECTION(0, FALSE);
    } else {

    /* otherwise, change GenItem to "From" */
	@call GeodeGetOptrNS(@ExportChoices)::
	    MSG_GEN_ITEM_GROUP_SET_SINGLE_SELECTION(1, FALSE);
    }
}


/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		MSG_GF_EXPORT_SET_PAGE_TO
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

DESCRIPTION:	Update the value of 'ExportFrom' object if necessary.

PASS: 		(WWFixedAsDWord value, word stateFlags)

RETURN:		nothing

PSEUDO CODE/STRATEGY:

CHECKS:		None.

KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:	???

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	THK	10/19/92	Initial version.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

@method GeoFileProcessClass, MSG_GF_EXPORT_SET_PAGE_TO
{
    word begRecord;
    WWFixedAsDWord min, max;

    /* Get the current value of GenValue of 'ExportFrom' object */
    begRecord = @call GeodeGetOptrNS (@ExportFrom)::
	MSG_GEN_VALUE_GET_INTEGER_VALUE();

    /* Update the value of 'ExportFrom' if necessary */
    if (IntegerOf(value) < begRecord) {
        @call GeodeGetOptrNS(@ExportFrom)::
	    MSG_GEN_VALUE_SET_VALUE(value, FALSE);
    } 
    /* Get the minimum value of 'ExportFrom' object */
    min = @call GeodeGetOptrNS(@ExportFrom)::MSG_GEN_VALUE_GET_MINIMUM();

    /* Get the maximum value of 'ExportTo' object */
    max = @call GeodeGetOptrNS(@ExportTo)::MSG_GEN_VALUE_GET_MAXIMUM();

    /* if export all of the records, then change GenItem to "All" */
    if ((IntegerOf(min) == begRecord) && (max == value)) {
	@call GeodeGetOptrNS(@ExportChoices)::
	    MSG_GEN_ITEM_GROUP_SET_SINGLE_SELECTION(0, FALSE);
    } else {

    /* otherwise, change GenItem to "From" */
	@call GeodeGetOptrNS(@ExportChoices)::
	    MSG_GEN_ITEM_GROUP_SET_SINGLE_SELECTION(1, FALSE);
    }
}


/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		Utility Functions
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

/***********************************************************************
*
* FUNCTION:    GetTargetDatabaseObject
*
* DESCRIPTION:  Returns optr to target database object.
*		Right now the strategy used for doing this is a gross
*		hack, and should be changed!!!
*
* CALLED BY:   several message handlers
*
* PARAMETERS:	optr()
*
* STRATEGY:
*
* KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:
*
* REVISION HISTORY:
*      Name    Date            Description
*      ----    ----            -----------
*      anna    4/17/92         Initial Revision
*
***********************************************************************/
optr 
GetTargetDatabaseObject()
{
    GetTargetParams targetParams;

    /*
     * NOTE: USING MSG_META_GET_TARGET_AT_TARGET_LEVEL HERE IS A GROSS
     * HACK AND MUST BE CHANGED AT A LATER DATE
     */
    @call GeodeGetOptrNS(@GFDisplayGroup)::
		MSG_META_GET_TARGET_AT_TARGET_LEVEL (&targetParams,
						     TL_TARGET);

    return(targetParams.GTP_target);
}


/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		MSG_GEN_PROCESS_OPEN_APPLICATION
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

DESCRIPTION:	Perform geode startup time tasks.

PASS: 		AppAttachFlags	attachFlags	= What this invocation
						  means to us.
		MemHandle	launchBlock	= Handle of AppLaunchBlock
						  or 0 if none.
		MemHandle	extraState	= Handle of extra state
						  block or 0 if none.

RETURN:		Void.

PSEUDO CODE/STRATEGY:
	If not restoring from state file then
		Attach the Graphics and Properties menu trees to the main level
		menu tree (under the primary).

		Add all of the UI controllers to the active list of the top
		level primary so that the can do their thing.

		Set the Graphics and Properties menus usable.

	Call super-class to finish bringing everything up.

PRE-CONDITIONS:
	If restoring from state then
		Graphics/Properties menus assumed hooked up to main level
	        menu and usable. 
	Otherwise,
		Graphics/Properties menus assumed to be set not usable and
		unattached to any parent.

POST-CONDITIONS:
	Graphics/Properties menus attached to main level menu tree and usable.

CHECKS:		None.

KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:	???

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	Anna	12/91		Initial version.
	JDM	92.06.15	Added modify menu support.
	jeremy	10/8/92	    	Added Graphics/Properties menus.
	JDM	92.10.26	Added Layout and Mark menus.
	JDM	92.11.15	More changes for user interface level.
	JDM	93.01.11	Record marking update.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

@method GeoFileProcessClass, MSG_GEN_PROCESS_OPEN_APPLICATION
{
    optr	primary;
    optr	graphicsMenu;
    optr	propertiesMenu;
    optr	layoutMenu;
    optr	markMenu;
@if 	0
    /*
     * These now are left in the generic tree permanently with an upward link
     */
    optr	renameLayoutDialog;
    optr	chooseLayoutDialog;
    optr	editLayoutNotesInteraction;
    optr	recordOrderDialog;
    optr	fieldOrderDialog;
    optr	quickMarkDialog;
    optr	markOptionsDialog;
@endif    
    optr	subsetExprBuilder;
    optr	app;

    @call oself::MSG_GEN_PROCESS_UNDO_IGNORE_ACTIONS(TRUE);

    /* Are we restoring from state?	*/
    if (! (attachFlags & AAF_RESTORING_FROM_STATE))
	{
	/* Not restoring from state.	*/

	/* Add the various broken out main menu items into main tree.	*/
	app = GeodeGetOptrNS (@GeoFileApp);
	primary = GeodeGetOptrNS (@GeoFilePrimary);

	/*
	 * Note that the order of the following MSG_GEN_ADD_CHILD
	 * insertions is critical and corresponds to the ordering of the
	 * children of GeoFilePrimary.  You have been warned.
	 */
	layoutMenu = GeodeGetOptrNS (@LayoutMenu);
	@call primary::MSG_GEN_ADD_CHILD (layoutMenu,
					  CCF_MARK_DIRTY | 4);
	markMenu = GeodeGetOptrNS (@MarkMenu);
	@call primary::MSG_GEN_ADD_CHILD (markMenu,
					  CCF_MARK_DIRTY | 5);
	graphicsMenu = GeodeGetOptrNS (@GraphicsMenu);
	@call primary::MSG_GEN_ADD_CHILD (graphicsMenu,
					  CCF_MARK_DIRTY | 6);
	propertiesMenu = GeodeGetOptrNS (@PropertiesMenu);
	@call primary::MSG_GEN_ADD_CHILD (propertiesMenu,
					  CCF_MARK_DIRTY | 7);

	/*
	 * The following are not user initiatable so they are not
	 * dependent on the order so they are added in at the end.
	 *   
	 * They are also added with static upward links only, because they have
	 * HINT_INTERACTION_DISCARD_WHEN_CLOSED, so we don't have to add them
	 * here.
	 */
@if	0	
	renameLayoutDialog = GeodeGetOptrNS (@RenameLayoutDialog);
	@call primary::MSG_GEN_ADD_CHILD_UPWARD_LINK_ONLY (renameLayoutDialog);

	chooseLayoutDialog = GeodeGetOptrNS (@ChooseLayoutDialog);
	@call primary::MSG_GEN_ADD_CHILD_UPWARD_LINK_ONLY (chooseLayoutDialog);
	
	editLayoutNotesInteraction = GeodeGetOptrNS (@EditLayoutNotesInteraction);
	@call primary::MSG_GEN_ADD_CHILD_UPWARD_LINK_ONLY (editLayoutNotesInteraction);
	recordOrderDialog = GeodeGetOptrNS (@RecordNavigationOrderBox);
	@call primary::MSG_GEN_ADD_CHILD_UPWARD_LINK_ONLY (recordOrderDialog);
	fieldOrderDialog = GeodeGetOptrNS (@FieldNavigationOrderBox);
	@call primary::MSG_GEN_ADD_CHILD_UPWARD_LINK_ONLY (fieldOrderDialog);
	quickMarkDialog = GeodeGetOptrNS (@QuickMarkDialog);
	@call primary::MSG_GEN_ADD_CHILD_UPWARD_LINK_ONLY (quickMarkDialog);
	markOptionsDialog = GeodeGetOptrNS (@MarkOptionsDialog);
	@call primary::MSG_GEN_ADD_CHILD_UPWARD_LINK_ONLY (markOptionsDialog);
@endif
	
	/*
	 * The SubsetExpressionBuilder object is a controller, which is fairly
	 * well-behaved in its memory usage, so it isn't "DISCARD_WHEN_CLOSED".
	 */
	subsetExprBuilder = GeodeGetOptrNS (@SubsetExpressionBuilder);
	@call primary::MSG_GEN_ADD_CHILD (subsetExprBuilder,
					  CCF_MARK_DIRTY | CCO_LAST);
	/*
	 * Add all of the controllers in the just added sub-trees to the
	 * GenControl list and, if necessary, to the active list.
	 */
	@call app::
	    MSG_META_GCN_LIST_ADD (subsetExprBuilder,
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFCustomShapeControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFDuplicateControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFPasteInsideControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFMoveInsideControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFHandleControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFFlipControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFScaleControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFRotateControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFSkewControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFTransformControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFDepthControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFNudgeControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFAlignDistributeControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFGradientFillControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFArcsControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
@ifdef DO_PIZZA
@else
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFAreaAttributesControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
@endif
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFLineAttributesControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFFontControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFStyleControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFTextSizeControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD
			(GeodeGetOptrNS (@GFTextJustificationControl),
			 GAGCNLT_SELF_LOAD_OPTIONS,
			 MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFTextColorControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFTextAttributesControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFNumberFormatControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFFieldEdgeControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFBackgroundColorSelector), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS(
					     @GFBackgroundAttributesControl),
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS(
					     @GFStartingGradientColorSelector), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS(
					     @GFEndingGradientColorSelector),
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFAreaColorSelector), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFLineColorSelector), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFCreateControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);

	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFMultiDuplicateControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFCustomDuplicateControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFHideShowControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFDraftModeControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFSplineOpenCloseControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFSplinePointControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFSplineSmoothnessControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFConvertControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFGrObjStyleSheetControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFGrObjObscureAttrControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFGrObjLocksControl), 
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFDefaultAttributesControl),
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);

	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFGroupControl),
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);

	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFLineSpacingControl),
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFParaSpacingControl),
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFParaBGColorControl),
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFTextStyleSheetControl),
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);
	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFMarginControl),
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);

	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFTabControl),
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);

	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFDefaultTabsControl),
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);

	@call app::
	    MSG_META_GCN_LIST_ADD (GeodeGetOptrNS (@GFBorderControl),
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);

	@call app::
	    MSG_META_GCN_LIST_ADD(GeodeGetOptrNS(@GFTextBackgroundColorControl),
				   GAGCNLT_SELF_LOAD_OPTIONS,
				   MANUFACTURER_ID_GEOWORKS);

	/* Mark the top level object in the just added sub-tree as usable. */
	@call graphicsMenu::MSG_GEN_SET_USABLE (VUM_NOW);
	@call propertiesMenu::MSG_GEN_SET_USABLE (VUM_NOW);
	@call layoutMenu::MSG_GEN_SET_USABLE (VUM_NOW);
@if	0
	    /* These are usable, and are in the generic tree now */
	
	@call renameLayoutDialog::MSG_GEN_SET_USABLE (VUM_NOW);
	@call chooseLayoutDialog::MSG_GEN_SET_USABLE (VUM_NOW);
	@call editLayoutNotesInteraction::MSG_GEN_SET_USABLE (VUM_NOW);
	@call recordOrderDialog::MSG_GEN_SET_USABLE (VUM_NOW);
	@call fieldOrderDialog::MSG_GEN_SET_USABLE (VUM_NOW);
	@call quickMarkDialog::MSG_GEN_SET_USABLE (VUM_NOW);
	@call markOptionsDialog::MSG_GEN_SET_USABLE (VUM_NOW);
@endif	
	@call subsetExprBuilder::MSG_GEN_SET_USABLE (VUM_NOW);
	}

    /* Call the super-class to finish making everything usable.	*/
    @callsuper();
}

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		MSG_GF_DATA_RECALCULATE
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

DESCRIPTION:	recalculate all of the records

PASS: 		Void.

RETURN:		Void.

SIDE EFFECTS:
	Requires:	???

	Asserts:	???

CHECKS:		None.

PSEUDO CODE/STRATEGY:
	Instruct the databasse to recalculate all of the records.

KNOWN DEFECTS/CAVEATS/IDEAS:	???

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	jfh	3/10/04	Initial version.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

@method GeoFileProcessClass, MSG_GF_DATA_RECALCULATE
{
    optr dbase = GetTargetDatabaseObject();
    
	 @call dbase::MSG_FFD_DATA_RECALCULATE();

}



