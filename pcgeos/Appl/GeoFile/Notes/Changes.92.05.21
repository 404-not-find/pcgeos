/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1992 -- All Rights Reserved

PROJECT:	PC/GEOS
MODULE:		Not!
FILE:		Changes.92.05.21

AUTHOR:		John D. Mitchell

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	JDM	92.05.21	Initial version.

DESCRIPTION:
	This file contains a summary of all of the changes made in breaking
	up the old mainProcess.goc file and other assorted tidying up
	things. 

	$Id: Changes.92.05.21,v 1.1.5.1 97/03/29 09:29:22 canavese Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/


Completely Nuked Files:

	GFDocControlobj.goh,
	GFDocumentClass.goh,
	GFDocumentobj.goh,
	GFFlatFileClass.goh,
	GFProcessClass.goh,
	externobj.goh,
	externTemplate.goh,
	constants.h.

	All of the stuff from these files has been incorporated into the
	new geofile.goh (see below).

Completely Changed Files:

	geofile.goh.

Modified Files:

	Everything left over from above.

Moved/Renamed Files:

	Document/document.goc -> UI/documentGroup.goc,

Completely New Files:

	Document/document.goc (trust me),
	UI/uiMain.goc.


There were two main motivations behind this massive reorganization.  First,
the need to break up mainProcess.goc into multiple files because it was
getting to unwieldly for the Metaware compiler.  The second was the
overwhelming need to force a little ordering on the wild profusion of .goh
files and all of the attendent confusing interrelationships.  Both problems
showed up as hard to modify code and (of course) compilation death.

Instead of the wild profusion of .goh files all of that functionality was
combined into one nice, tidy file (the aforementioned geofile.goh).  You
can read geofile.goh's header for specific implementation issues.  Suffice
it to say that all of the objects that are exported from a file are
declared @extern object in an #ifndef protected section.  This keeps goc
from barfing (which it will do because you can't have an @extern on an
object that's declared in the same file).  All of the various class
*definitions* are in their own #ifdef protected sections.  This allows for
those classes to only be seen in the files that actually care about them.
Oh yeah, all of the constants and type definitions that was in constants.h
was moved into an unprotected section of geofile.goh (this is something
that currently doesn't make any difference but it might be a consideration
in the future to selectively protect some or all of it as necessary).

mainProcess.goc has been split into four major files...  All of the class
definitions were moved into the new geofile.goh (see above).  All of the UI
object definitions were moved into the brand new UI/uiMain.goc.  All of the
GeoFileDocumentClass handlers and helpers were moved in a brand new
Document/document.goc (this prompted the move of the old document.goc to
documentGroup.goc (being that it handles GeoFileDocumentGroup :-)).  All of
the GeoFileProcess class handlers and helpers became the new
mainProcess.goc.

A majore benefit of this reorganization is that the #include file situation
is much cleaner.  Instead of tons of nested includes (and even uneeded
#includes too) each of the files is fully self-contained in the #include
category.  (Doing this part was a major time sink.  I turned up bugs not
only in GF but in a fair number of installed library headers.  :-)

Well that's all I can think of at the moment... :-)

John
