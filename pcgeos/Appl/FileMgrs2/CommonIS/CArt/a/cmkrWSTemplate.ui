/*
 * Moniker generated from PCX/ws.pcx with pixel 13 masked out
 */
start WSStandardSCMonikerResource, data;
visMoniker WSTemplateSCMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color4;
	cachedSize = 48, 30;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 906
		Bitmap <48,30,0,BMF_4BIT or mask BMT_MASK>
	db	0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00
	db	0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x88, 0x88, 0x88, 
		0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 
		0x88, 0x88, 0x88, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd
	db	0x00, 0x3f, 0xff, 0xff, 0xfe, 0x00
	db	0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x8f, 0xef, 0xef, 
		0xef, 0xef, 0xef, 0xef, 0xef, 0xef, 0xef, 0xef, 
		0xef, 0xef, 0xe8, 0x8d, 0xdd, 0xdd, 0xdd, 0xdd
	db	0x00, 0x3f, 0xff, 0xff, 0xff, 0x00
	db	0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x8e, 0xfe, 0xfe, 
		0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 
		0xfe, 0xfe, 0xf8, 0x78, 0xdd, 0xdd, 0xdd, 0xdd
	db	0x00, 0x3f, 0xff, 0xff, 0xff, 0x00
	db	0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x8f, 0xef, 0xef, 
		0xef, 0xef, 0xef, 0xef, 0xef, 0xef, 0xef, 0xef, 
		0xef, 0xef, 0xe8, 0x78, 0xdd, 0xdd, 0xdd, 0xdd
	db	0x00, 0x3f, 0xff, 0xff, 0xff, 0x00
	db	0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x8e, 0xfe, 0xfe, 
		0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 
		0xfe, 0xfe, 0xf8, 0x78, 0xdd, 0xdd, 0xdd, 0xdd
	db	0x00, 0x3f, 0xff, 0xff, 0xff, 0x00
	db	0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x8f, 0xef, 0xef, 
		0xef, 0xef, 0xef, 0xef, 0xef, 0xef, 0xef, 0xef, 
		0xef, 0xef, 0xe8, 0x78, 0xdd, 0xdd, 0xdd, 0xdd
	db	0x00, 0x3f, 0xff, 0xff, 0xff, 0x00
	db	0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x8e, 0xfe, 0xfe, 
		0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 
		0xfe, 0xfe, 0xf8, 0x78, 0xdd, 0xdd, 0xdd, 0xdd
	db	0x00, 0x3f, 0xff, 0xff, 0xff, 0x00
	db	0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x8f, 0xef, 0xef, 
		0xef, 0xef, 0xef, 0xef, 0xef, 0xef, 0xef, 0xef, 
		0xef, 0xef, 0xe8, 0x78, 0xdd, 0xdd, 0xdd, 0xdd
	db	0x00, 0x3f, 0xff, 0xff, 0xff, 0x00
	db	0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x8e, 0xfe, 0xfe, 
		0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 
		0xfe, 0xfe, 0xf8, 0x78, 0xdd, 0xdd, 0xdd, 0xdd
	db	0x00, 0x3f, 0xff, 0xff, 0xff, 0x00
	db	0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x8f, 0xef, 0xef, 
		0xef, 0xef, 0xef, 0xef, 0xef, 0xef, 0xef, 0xef, 
		0xef, 0xef, 0xe8, 0x78, 0xdd, 0xdd, 0xdd, 0xdd
	db	0x00, 0x3f, 0xff, 0xff, 0xff, 0x00
	db	0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x8e, 0xfe, 0xfe, 
		0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 
		0xfe, 0xfe, 0xf8, 0x78, 0xdd, 0xdd, 0xdd, 0xdd
	db	0x00, 0x3f, 0xff, 0xff, 0xff, 0x00
	db	0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x8f, 0xef, 0xef, 
		0xef, 0xef, 0xef, 0xef, 0xef, 0xef, 0xef, 0xef, 
		0xef, 0xef, 0xe8, 0x78, 0xdd, 0xdd, 0xdd, 0xdd
	db	0x00, 0x3f, 0xff, 0xff, 0xff, 0x00
	db	0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x8e, 0xfe, 0xfe, 
		0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 
		0xfe, 0xfe, 0xf8, 0x78, 0xdd, 0xdd, 0xdd, 0xdd
	db	0x00, 0x3f, 0xff, 0xff, 0xff, 0x00
	db	0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x8f, 0xef, 0xef, 
		0xef, 0xef, 0xef, 0xef, 0xef, 0xef, 0xef, 0xef, 
		0xef, 0xef, 0xe8, 0x78, 0xdd, 0xdd, 0xdd, 0xdd
	db	0x00, 0x3f, 0xff, 0xff, 0xff, 0x00
	db	0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x8e, 0xfe, 0xfe, 
		0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 
		0xfe, 0xfe, 0xf8, 0x78, 0xdd, 0xdd, 0xdd, 0xdd
	db	0x00, 0x3f, 0xff, 0xff, 0xff, 0x00
	db	0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x8f, 0xef, 0xef, 
		0xef, 0xef, 0xef, 0xef, 0xef, 0xef, 0xef, 0xef, 
		0xef, 0xef, 0xe8, 0x78, 0xdd, 0xdd, 0xdd, 0xdd
	db	0x00, 0x3f, 0xff, 0xff, 0xff, 0x00
	db	0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x8e, 0xfe, 0xfe, 
		0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 
		0xfe, 0xfe, 0xf8, 0x78, 0xdd, 0xdd, 0xdd, 0xdd
	db	0x00, 0x3f, 0xff, 0xff, 0xff, 0x00
	db	0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x8f, 0xef, 0xef, 
		0xef, 0xef, 0xef, 0xef, 0xef, 0xef, 0xef, 0xef, 
		0xef, 0xef, 0xe8, 0x78, 0xdd, 0xdd, 0xdd, 0xdd
	db	0x00, 0x3f, 0xff, 0xff, 0xff, 0x00
	db	0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x8e, 0xfe, 0xfe, 
		0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 
		0xfe, 0xfe, 0xf8, 0x78, 0xdd, 0xdd, 0xdd, 0xdd
	db	0x00, 0x3f, 0xff, 0xff, 0xff, 0x00
	db	0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x8f, 0xef, 0xef, 
		0xef, 0xef, 0xef, 0xef, 0xef, 0xef, 0xe8, 0x88, 
		0x88, 0x88, 0x88, 0x88, 0xdd, 0xdd, 0xdd, 0xdd
	db	0x00, 0x3f, 0xff, 0xff, 0xff, 0x00
	db	0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x8e, 0xfe, 0xfe, 
		0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0x88, 0xef, 
		0xef, 0xe8, 0x8e, 0x88, 0xdd, 0xdd, 0xdd, 0xdd
	db	0x00, 0x3f, 0xff, 0xff, 0xff, 0x00
	db	0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x8f, 0xef, 0xef, 
		0xef, 0xef, 0xef, 0xef, 0xef, 0xef, 0x88, 0xfe, 
		0xfe, 0x88, 0xee, 0x88, 0xdd, 0xdd, 0xdd, 0xdd
	db	0x00, 0x3f, 0xff, 0xff, 0xff, 0x00
	db	0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x8e, 0xfe, 0xfe, 
		0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0x88, 0xef, 
		0xe8, 0x8e, 0xee, 0x88, 0xdd, 0xdd, 0xdd, 0xdd
	db	0x00, 0x3f, 0xff, 0xff, 0xff, 0x00
	db	0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x8f, 0xef, 0xef, 
		0xef, 0xef, 0xef, 0xef, 0xef, 0xef, 0x88, 0xfe, 
		0x88, 0xee, 0xee, 0x88, 0xdd, 0xdd, 0xdd, 0xdd
	db	0x00, 0x3f, 0xff, 0xff, 0xff, 0x00
	db	0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x8e, 0xfe, 0xfe, 
		0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0x88, 0xe8, 
		0x8e, 0xee, 0xee, 0x88, 0xdd, 0xdd, 0xdd, 0xdd
	db	0x00, 0x3f, 0xff, 0xff, 0xff, 0x00
	db	0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x8f, 0xef, 0xef, 
		0xef, 0xef, 0xef, 0xef, 0xef, 0xef, 0x88, 0x88, 
		0xee, 0xee, 0xee, 0x88, 0xdd, 0xdd, 0xdd, 0xdd
	db	0x00, 0x3f, 0xff, 0xff, 0xff, 0x00
	db	0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x8e, 0xfe, 0xfe, 
		0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0x88, 0x8e, 
		0xee, 0xee, 0xee, 0x88, 0xdd, 0xdd, 0xdd, 0xdd
	db	0x00, 0x3f, 0xff, 0xff, 0xff, 0x00
	db	0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x88, 0x88, 0x88, 
		0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0xe8, 
		0xe8, 0xe8, 0xe8, 0x88, 0xdd, 0xdd, 0xdd, 0xdd
	db	0x00, 0x1f, 0xff, 0xff, 0xff, 0x00
	db	0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd8, 0x77, 0x77, 
		0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x78, 0x88, 
		0x88, 0x88, 0x88, 0x88, 0xdd, 0xdd, 0xdd, 0xdd
	db	0x00, 0x0f, 0xff, 0xff, 0xff, 0x00
	db	0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x88, 0x88, 
		0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 
		0x88, 0x88, 0x88, 0x88, 0xdd, 0xdd, 0xdd, 0xdd
		GSEndString
	}
}
end WSStandardSCMonikerResource;
/*
 * Moniker generated from PCX/ws.pcx with pixel 13 masked out
 */
start WSStandardSMMonikerResource, data;
visMoniker WSTemplateSMMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 48, 30;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 186
		Bitmap <48,30,0,BMF_MONO>
	db	0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00
	db	0x00, 0x20, 0x00, 0x00, 0x06, 0x00
	db	0x00, 0x20, 0x00, 0x00, 0x05, 0x00
	db	0x00, 0x20, 0x00, 0x00, 0x05, 0x00
	db	0x00, 0x20, 0x00, 0x00, 0x05, 0x00
	db	0x00, 0x20, 0x00, 0x00, 0x05, 0x00
	db	0x00, 0x20, 0x00, 0x00, 0x05, 0x00
	db	0x00, 0x20, 0x00, 0x00, 0x05, 0x00
	db	0x00, 0x20, 0x00, 0x00, 0x05, 0x00
	db	0x00, 0x20, 0x00, 0x00, 0x05, 0x00
	db	0x00, 0x20, 0x00, 0x00, 0x05, 0x00
	db	0x00, 0x20, 0x00, 0x00, 0x05, 0x00
	db	0x00, 0x20, 0x00, 0x00, 0x05, 0x00
	db	0x00, 0x20, 0x00, 0x00, 0x05, 0x00
	db	0x00, 0x20, 0x00, 0x00, 0x05, 0x00
	db	0x00, 0x20, 0x00, 0x00, 0x05, 0x00
	db	0x00, 0x20, 0x00, 0x00, 0x05, 0x00
	db	0x00, 0x20, 0x00, 0x00, 0x05, 0x00
	db	0x00, 0x20, 0x00, 0x00, 0x05, 0x00
	db	0x00, 0x20, 0x00, 0x07, 0xff, 0x00
	db	0x00, 0x20, 0x00, 0x0c, 0x0b, 0x00
	db	0x00, 0x20, 0x00, 0x0c, 0x13, 0x00
	db	0x00, 0x20, 0x00, 0x0c, 0x23, 0x00
	db	0x00, 0x20, 0x00, 0x0c, 0x43, 0x00
	db	0x00, 0x20, 0x00, 0x0c, 0x83, 0x00
	db	0x00, 0x20, 0x00, 0x0d, 0x03, 0x00
	db	0x00, 0x20, 0x00, 0x0e, 0x03, 0x00
	db	0x00, 0x3f, 0xff, 0xfd, 0x57, 0x00
	db	0x00, 0x10, 0x00, 0x07, 0xff, 0x00
	db	0x00, 0x0f, 0xff, 0xff, 0xff, 0x00
		GSEndString
	}
}
end WSStandardSMMonikerResource;
/*
 * Moniker generated from PCX/ws.pcx with pixel 13 masked out
 */
start WSStandardSCGAMonikerResource, data;
visMoniker WSTemplateSCGAMoniker = {
	size = tiny;
	style = icon;
	aspectRatio = verySquished;
	color = gray1;
	cachedSize = 48, 14;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 90
		Bitmap <48,14,0,BMF_MONO>
	db	0x00, 0xff, 0xff, 0xff, 0xf8, 0x00
	db	0x00, 0x80, 0x00, 0x00, 0x06, 0x00
	db	0x00, 0x80, 0x00, 0x00, 0x05, 0x00
	db	0x00, 0x80, 0x00, 0x00, 0x05, 0x00
	db	0x00, 0x80, 0x00, 0x00, 0x05, 0x00
	db	0x00, 0x80, 0x00, 0x00, 0x05, 0x00
	db	0x00, 0x80, 0x00, 0x00, 0x05, 0x00
	db	0x00, 0x80, 0x00, 0x1f, 0xff, 0x00
	db	0x00, 0x80, 0x00, 0x10, 0x33, 0x00
	db	0x00, 0x80, 0x00, 0x10, 0xc3, 0x00
	db	0x00, 0x80, 0x00, 0x13, 0x03, 0x00
	db	0x00, 0xff, 0xff, 0xfc, 0x03, 0x00
	db	0x00, 0x30, 0x00, 0x1f, 0xff, 0x00
	db	0x00, 0x0f, 0xff, 0xff, 0xff, 0x00
		GSEndString
	}
}
end WSStandardSCGAMonikerResource;
/*
 * Moniker generated from PCX/ws.pcx with pixel 13 masked out
 */
start WSStandardTMMonikerResource, data;
visMoniker WSTemplateTMMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 15, 15;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 36
		Bitmap <15,15,0,BMF_MONO>
	db	0x00, 0x00
	db	0x7f, 0xfc
	db	0x40, 0x04
	db	0x40, 0x04
	db	0x40, 0x04
	db	0x40, 0x04
	db	0x40, 0x04
	db	0x40, 0x04
	db	0x40, 0xfc
	db	0x40, 0x8c
	db	0x40, 0x94
	db	0x40, 0xa4
	db	0x40, 0xc4
	db	0x7f, 0xfc
	db	0x00, 0x00
		GSEndString
	}
}
end WSStandardTMMonikerResource;
/*
 * Moniker generated from PCX/ws.pcx with pixel 13 masked out
 */
start WSStandardTCGAMonikerResource, data;
visMoniker WSTemplateTCGAMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = verySquished;
	color = gray1;
	cachedSize = 15, 10;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 26
		Bitmap <15,10,0,BMF_MONO>
	db	0x00, 0x00
	db	0x7f, 0xfc
	db	0x40, 0x04
	db	0x40, 0x04
	db	0x40, 0x04
	db	0x40, 0xfc
	db	0x40, 0x9c
	db	0x40, 0xe4
	db	0x7f, 0xfc
	db	0x00, 0x00
		GSEndString
	}
}
end WSStandardTCGAMonikerResource;
