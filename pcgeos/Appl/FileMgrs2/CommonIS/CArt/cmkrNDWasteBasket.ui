/*
 * Moniker generated from PCX/nd.pcx with pixel 13 masked out
 */
start NDStandardSCMonikerResource, data;
visMoniker NDWasteBasketSCMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color4;
	cachedSize = 48, 30;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 679
		Bitmap <48,30,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0x05, 0x00, 0x0f, 0xff, 0xff, 0xf0, 0x00
	db	0xfb, 0xdd, 0xf5, 0x33, 0xfb, 0xdd
	db	0x05, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00
	db	0xfc, 0xdd, 0x0d, 0xd3, 0x3b, 0x33, 0x33, 0xb3, 
		0x33, 0x33, 0x3b, 0x33, 0x33, 0x3b, 0x33, 0xb3, 
		0x8d, 0xfc, 0xdd
	db	0x05, 0x00, 0x1f, 0xff, 0xff, 0xfc, 0x00
	db	0xfc, 0xdd, 0x0d, 0xd3, 0xfb, 0x83, 0x3b, 0xb8, 
		0x33, 0x33, 0xfb, 0x83, 0x33, 0xbb, 0x8f, 0xb3, 
		0x88, 0xfc, 0xdd
	db	0x05, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00
	db	0xfc, 0xdd, 0x0d, 0x3f, 0xb8, 0x83, 0x3f, 0xb8, 
		0x33, 0x33, 0xfb, 0x83, 0x33, 0xfb, 0x83, 0xfb, 
		0x38, 0xfc, 0xdd
	db	0x05, 0x00, 0x3f, 0xff, 0xff, 0xfe, 0x00
	db	0xfc, 0xdd, 0x0e, 0x3f, 0xb8, 0x88, 0xbf, 0xb8, 
		0x88, 0x8b, 0xfb, 0x88, 0x88, 0xfb, 0x88, 0x8b, 
		0x38, 0x8d, 0xfd, 0xdd
	db	0x01, 0x00, 0x1f, 0xfe, 0xff, 0x00, 0x00
	db	0xfc, 0xdd, 0x09, 0xd8, 0x88, 0xff, 0x88, 0x8f, 
		0x7f, 0x78, 0x88, 0x77, 0x87, 0xfc, 0x88, 0xfd, 
		0xdd
	db	0x01, 0x00, 0x0f, 0xfe, 0xff, 0x00, 0x00
	db	0xfb, 0xdd, 0x04, 0x8f, 0xff, 0xff, 0xf7, 0xf7, 
		0xfe, 0x77, 0x00, 0x78, 0xfc, 0x88, 0xfd, 0xdd
	db	0x05, 0x00, 0x0f, 0xff, 0xff, 0xfe, 0x00
	db	0xfb, 0xdd, 0x00, 0x8f, 0xfc, 0x7f, 0x03, 0x77, 
		0x77, 0x87, 0x87, 0xfe, 0x88, 0x00, 0x8d, 0xfd, 
		0xdd
	db	0x05, 0x00, 0x0f, 0xff, 0xff, 0xfc, 0x00
	db	0xfb, 0xdd, 0x03, 0x8f, 0xff, 0xf7, 0xf7, 0xfe, 
		0x77, 0x02, 0x87, 0x78, 0x78, 0xfe, 0x88, 0xfc, 
		0xdd
	db	0x05, 0x00, 0x0f, 0xff, 0xff, 0xfc, 0x00
	db	0xfb, 0xdd, 0x01, 0x8f, 0xff, 0xfe, 0x7f, 0xfe, 
		0x77, 0x01, 0x87, 0x87, 0xfe, 0x88, 0xfc, 0xdd
	db	0x05, 0x00, 0x07, 0xff, 0xff, 0xfc, 0x00
	db	0xfb, 0xdd, 0x03, 0xd8, 0xff, 0xff, 0xf7, 0xfe, 
		0x77, 0x02, 0x87, 0x78, 0x78, 0xfe, 0x88, 0xfc, 
		0xdd
	db	0x05, 0x00, 0x07, 0xff, 0xff, 0xfc, 0x00
	db	0xfb, 0xdd, 0x01, 0xd8, 0xff, 0xfd, 0x7f, 0x01, 
		0x77, 0x77, 0xfe, 0x87, 0x01, 0x88, 0x88, 0xfc, 
		0xdd
	db	0x05, 0x00, 0x07, 0xff, 0xff, 0xf8, 0x00
	db	0xfb, 0xdd, 0x03, 0xd8, 0xff, 0xf7, 0xf7, 0xfe, 
		0x77, 0x05, 0x87, 0x78, 0x78, 0x88, 0x88, 0x8d, 
		0xfc, 0xdd
	db	0x05, 0x00, 0x07, 0xff, 0xff, 0xf8, 0x00
	db	0xfb, 0xdd, 0x01, 0xd8, 0xff, 0xfe, 0x7f, 0xfe, 
		0x77, 0x04, 0x87, 0x87, 0x88, 0x88, 0x8d, 0xfc, 
		0xdd
	db	0x05, 0x00, 0x07, 0xff, 0xff, 0xf8, 0x00
	db	0xfb, 0xdd, 0x04, 0xd8, 0xff, 0xff, 0xf7, 0xf7, 
		0xfe, 0x77, 0x00, 0x78, 0xfe, 0x88, 0x00, 0x8d, 
		0xfc, 0xdd
	db	0x05, 0x00, 0x07, 0xff, 0xff, 0xf8, 0x00
	db	0xfb, 0xdd, 0x00, 0xd8, 0xfc, 0x7f, 0x06, 0x77, 
		0x77, 0x87, 0x87, 0x88, 0x88, 0x8d, 0xfc, 0xdd
	db	0x05, 0x00, 0x03, 0xff, 0xff, 0xf8, 0x00
	db	0xfa, 0xdd, 0x02, 0x8f, 0xf7, 0xf7, 0xfe, 0x77, 
		0x05, 0x87, 0x78, 0x78, 0x88, 0x88, 0x8d, 0xfc, 
		0xdd
	db	0x05, 0x00, 0x03, 0xff, 0xff, 0xf8, 0x00
	db	0xfa, 0xdd, 0x00, 0x8f, 0xfe, 0x7f, 0xfe, 0x77, 
		0x04, 0x87, 0x87, 0x88, 0x88, 0x8d, 0xfc, 0xdd
	db	0x05, 0x00, 0x03, 0xff, 0xff, 0xf0, 0x00
	db	0xfa, 0xdd, 0x02, 0x8f, 0xff, 0xf7, 0xfe, 0x77, 
		0x04, 0x87, 0x78, 0x78, 0x88, 0x88, 0xfb, 0xdd
	db	0x05, 0x00, 0x03, 0xff, 0xff, 0xf0, 0x00
	db	0xfa, 0xdd, 0x00, 0x8f, 0xfd, 0x7f, 0x05, 0x77, 
		0x77, 0x87, 0x87, 0x88, 0x88, 0xfb, 0xdd
	db	0x05, 0x00, 0x03, 0xff, 0xff, 0xf0, 0x00
	db	0xfa, 0xdd, 0x02, 0x8f, 0xf7, 0xf7, 0xfe, 0x77, 
		0x04, 0x87, 0x78, 0x78, 0x88, 0x88, 0xfb, 0xdd
	db	0x05, 0x00, 0x03, 0xff, 0xff, 0xf0, 0x00
	db	0xfa, 0xdd, 0x00, 0x8f, 0xfe, 0x7f, 0xfe, 0x77, 
		0x03, 0x87, 0x87, 0x88, 0x88, 0xfb, 0xdd
	db	0x05, 0x00, 0x03, 0xff, 0xff, 0xf0, 0x00
	db	0xfa, 0xdd, 0x03, 0x8f, 0xff, 0xf7, 0xf7, 0xfe, 
		0x77, 0x00, 0x78, 0xfe, 0x88, 0xfb, 0xdd
	db	0x05, 0x00, 0x01, 0xff, 0xff, 0xf0, 0x00
	db	0xfa, 0xdd, 0x00, 0xd8, 0xfd, 0x7f, 0x05, 0x77, 
		0x77, 0x87, 0x87, 0x88, 0x88, 0xfb, 0xdd
	db	0x05, 0x00, 0x01, 0xff, 0xff, 0xf0, 0x00
	db	0xfa, 0xdd, 0x02, 0xd8, 0xf7, 0xf7, 0xfe, 0x77, 
		0x04, 0x87, 0x78, 0x78, 0x88, 0x88, 0xfb, 0xdd
	db	0x05, 0x00, 0x01, 0xff, 0xff, 0xe0, 0x00
	db	0xfa, 0xdd, 0x00, 0xd8, 0xfe, 0x7f, 0xfe, 0x77, 
		0x03, 0x87, 0x87, 0x88, 0x8d, 0xfb, 0xdd
	db	0x05, 0x00, 0x01, 0xff, 0xff, 0xe0, 0x00
	db	0xfa, 0xdd, 0x02, 0xd8, 0xff, 0xf7, 0xfe, 0x77, 
		0x04, 0x87, 0x78, 0x78, 0x88, 0x8d, 0xfb, 0xdd
	db	0x05, 0x00, 0x00, 0xff, 0xff, 0xe0, 0x00
	db	0xf9, 0xdd, 0xf8, 0x88, 0x00, 0x8d, 0xfb, 0xdd
	db	0x05, 0x00, 0x00, 0x3f, 0xff, 0xe0, 0x00
	db	0xf8, 0xdd, 0xf9, 0x88, 0x00, 0x8d, 0xfb, 0xdd
	db	0x05, 0x00, 0x00, 0x3f, 0xff, 0xc0, 0x00
	db	0xf8, 0xdd, 0xf9, 0x88, 0xfa, 0xdd
		GSEndString
	}
}
end NDStandardSCMonikerResource;
/*
 * Moniker generated from PCX/nd.pcx with pixel 13 masked out
 */
start NDStandardSMMonikerResource, data;
visMoniker NDWasteBasketSMMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 48, 30;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 186
		Bitmap <48,30,0,BMF_MONO>
	db	0x00, 0x0f, 0xff, 0xff, 0xf0, 0x00
	db	0x00, 0x18, 0x00, 0x00, 0x08, 0x00
	db	0x00, 0x16, 0x30, 0x61, 0x8c, 0x00
	db	0x00, 0x26, 0x30, 0xe1, 0x8c, 0x00
	db	0x00, 0x2f, 0x7e, 0xfd, 0xee, 0x00
	db	0x00, 0x1c, 0xe1, 0xeb, 0xff, 0x00
	db	0x00, 0x08, 0x00, 0x03, 0x5f, 0x00
	db	0x00, 0x08, 0x00, 0x02, 0xae, 0x00
	db	0x00, 0x08, 0x00, 0x01, 0x5c, 0x00
	db	0x00, 0x08, 0x00, 0x02, 0xac, 0x00
	db	0x00, 0x04, 0x00, 0x01, 0x5c, 0x00
	db	0x00, 0x04, 0x00, 0x02, 0xbc, 0x00
	db	0x00, 0x04, 0x00, 0x05, 0x58, 0x00
	db	0x00, 0x04, 0x00, 0x02, 0xb8, 0x00
	db	0x00, 0x04, 0x00, 0x05, 0x58, 0x00
	db	0x00, 0x04, 0x00, 0x02, 0xb8, 0x00
	db	0x00, 0x02, 0x00, 0x05, 0x78, 0x00
	db	0x00, 0x02, 0x00, 0x02, 0xb8, 0x00
	db	0x00, 0x02, 0x00, 0x05, 0x70, 0x00
	db	0x00, 0x02, 0x00, 0x02, 0xb0, 0x00
	db	0x00, 0x02, 0x00, 0x05, 0x70, 0x00
	db	0x00, 0x02, 0x00, 0x0a, 0xb0, 0x00
	db	0x00, 0x02, 0x00, 0x05, 0x70, 0x00
	db	0x00, 0x01, 0x00, 0x0a, 0xf0, 0x00
	db	0x00, 0x01, 0x00, 0x05, 0x70, 0x00
	db	0x00, 0x01, 0x00, 0x0a, 0xe0, 0x00
	db	0x00, 0x01, 0x00, 0x05, 0x60, 0x00
	db	0x00, 0x00, 0xff, 0xff, 0xe0, 0x00
	db	0x00, 0x00, 0x3f, 0xff, 0xe0, 0x00
	db	0x00, 0x00, 0x3f, 0xff, 0xc0, 0x00
		GSEndString
	}
}
end NDStandardSMMonikerResource;
/*
 * Moniker generated from PCX/nd.pcx with pixel 13 masked out
 */
start NDStandardSCGAMonikerResource, data;
visMoniker NDWasteBasketSCGAMoniker = {
	size = tiny;
	style = icon;
	aspectRatio = verySquished;
	color = gray1;
	cachedSize = 48, 14;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 90
		Bitmap <48,14,0,BMF_MONO>
	db	0x00, 0x1f, 0xff, 0xff, 0xe0, 0x00
	db	0x00, 0x2c, 0x60, 0xc3, 0x18, 0x00
	db	0x00, 0x5e, 0xfd, 0xfb, 0xdc, 0x00
	db	0x00, 0x10, 0x00, 0x05, 0x50, 0x00
	db	0x00, 0x10, 0x00, 0x02, 0xb0, 0x00
	db	0x00, 0x08, 0x00, 0x05, 0x60, 0x00
	db	0x00, 0x08, 0x00, 0x0a, 0xa0, 0x00
	db	0x00, 0x08, 0x00, 0x05, 0x60, 0x00
	db	0x00, 0x04, 0x00, 0x0a, 0xc0, 0x00
	db	0x00, 0x04, 0x00, 0x05, 0x40, 0x00
	db	0x00, 0x04, 0x00, 0x0a, 0xc0, 0x00
	db	0x00, 0x04, 0x00, 0x15, 0x40, 0x00
	db	0x00, 0x02, 0x00, 0x0a, 0x80, 0x00
	db	0x00, 0x01, 0xff, 0xff, 0x00, 0x00
		GSEndString
	}
}
end NDStandardSCGAMonikerResource;
/*
 * Moniker generated from PCX/nd.pcx with pixel 13 masked out
 */
start NDStandardTMMonikerResource, data;
visMoniker NDWasteBasketTMMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 15, 15;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 36
		Bitmap <15,15,0,BMF_MONO>
	db	0x00, 0x00
	db	0x3f, 0xf8
	db	0x48, 0x94
	db	0x77, 0x6c
	db	0x40, 0x04
	db	0x20, 0x08
	db	0x20, 0x08
	db	0x20, 0x08
	db	0x20, 0x08
	db	0x20, 0x08
	db	0x10, 0x10
	db	0x10, 0x10
	db	0x10, 0x10
	db	0x10, 0x10
	db	0x0f, 0xe0
		GSEndString
	}
}
end NDStandardTMMonikerResource;
/*
 * Moniker generated from PCX/nd.pcx with pixel 13 masked out
 */
start NDStandardTCGAMonikerResource, data;
visMoniker NDWasteBasketTCGAMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = verySquished;
	color = gray1;
	cachedSize = 15, 10;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 26
		Bitmap <15,10,0,BMF_MONO>
	db	0x1f, 0xf8
	db	0x24, 0x94
	db	0x3b, 0x6c
	db	0x20, 0x04
	db	0x10, 0x08
	db	0x10, 0x08
	db	0x10, 0x08
	db	0x08, 0x10
	db	0x08, 0x10
	db	0x0f, 0xf0
		GSEndString
	}
}
end NDStandardTCGAMonikerResource;
