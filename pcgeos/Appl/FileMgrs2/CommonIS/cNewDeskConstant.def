COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1992 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:
FILE:		cNewDeskConstant.def

AUTHOR:		Dave Litwin

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	dlitwin	7/31		Initial version

DESCRIPTION:
	This file contains contains global constants for the desktop.

	$Id: cNewDeskConstant.def,v 1.3 98/06/03 13:01:16 joon Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

;------------------------------------------------------------------------------
;	NDPrimaryClass
;------------------------------------------------------------------------------

NDPrimaryClass	class	GenPrimaryClass

MSG_ND_PRIMARY_INITIALIZE		message
;
;  SYNOPSIS:	Store the icon bounds from which the GenPrimary is
; 		opened from, and load bounds from DIRINFO file.
;
;  PASS:		cx:dx	= fptr to icon bounds
;  RETURN:		nothing
;  DESTROYED:		ax, cx, dx
;

MSG_ND_PRIMARY_SET_TOKEN		message
;
; Set token from associated folder object.
;
; Pass: cx:dx = TokenChars
;       bp = manufacturer ID
;

ifdef SMARTFOLDERS
NDPSavedDisplayOptions	struct
	NDPSDO_types	byte
	NDPSDO_attrs	byte
	NDPSDO_sort	byte
	NDPSDO_mode	byte
NDPSavedDisplayOptions	ends

ATTR_ND_PRIMARY_SAVED_DISPLAY_OPTIONS	vardata	NDPSavedDisplayOptions
;
; Holds folder display and sort options.
;
endif

;-----------------------------------------------------------------------------
;	INSTANCE DATA		
;-----------------------------------------------------------------------------

	NDPI_token	GeodeToken <>

NDPrimaryClass	endc

if _NEWDESKONLY
NDDesktopPrimaryClass	class NDPrimaryClass
NDDesktopPrimaryClass	endc
endif		; if _NEWDESKONLY
;------------------------------------------------------------------------------
;	GlobalMenu constants
;------------------------------------------------------------------------------

GlobalMenuBitfieldHigh	record
if _NEWDESKBA
	GMBH_REMOVE_FILES:1
	GMBH_DISTRIBUTE:1
	GMBH_BOOKMARKS:1
	GMBH_MAKE_STD_DRIVE:1
	GMBH_ADD_STUDENT:1
	GMBH_CLASS:1
	GMBH_CLASSES:1
	GMBH_CHANGE_ICON:1
	GMBH_HOME:1
	GMBH_GENERIC_DELETE:1
	GMBH_DEL_CLASS:1
	GMBH_DEL_STUDENT:1		; ONLY BA ITEMS ABOVE HERE
else
	:12
endif
	GMBH_RECOVER:1			; ONLY NEWDESK GENERAL ITEMS BELOW HERE
	GMBH_DUPLICATE:1
	GMBH_PRINT:1
	GMBH_CLOSE:1
GlobalMenuBitfieldHigh	end

GlobalMenuBitfieldLow	record		; a record's bits go from bottom
					;  (low bit) to top (high bit)
	GMBL_CREATE_FOLDER:1
	GMBL_SORT:1
	GMBL_SELECT_ALL:1
	GMBL_THROW_AWAY:1
	GMBL_DELETE:1
	GMBL_RENAME:1
	GMBL_MOVE:1
	GMBL_COPY:1
	GMBL_OPTIONS:1
	GMBL_LOGOUT:1
	GMBL_PRINTER:1
	GMBL_RESCAN_DRIVE:1
	GMBL_DRIVE:1
	GMBL_WASTEBASKET:1
	GMBL_HELP:1
	GMBL_OPEN:1
GlobalMenuBitfieldLow	end


GlobalMenuBitfield	struct
	GMB_low		GlobalMenuBitfieldLow
	GMB_high	GlobalMenuBitfieldHigh
GlobalMenuBitfield	ends


; allow OPEN, HELP, RENAME; RENAME will just do first, though
NON_MULTIPLE_MENU_ITEMS_LOW	equ	mask GMBL_DRIVE		or	\
					mask GMBL_CREATE_FOLDER
if _NEWDESKBA
NON_MULTIPLE_MENU_ITEMS_HIGH	equ	mask GMBH_CLASS		or	\
					mask GMBH_BOOKMARKS	or	\
					mask GMBH_REMOVE_FILES	or	\
					mask GMBH_MAKE_STD_DRIVE
else
NON_MULTIPLE_MENU_ITEMS_HIGH	equ	0
endif



UNOPENED_MENU_ITEMS_LOW		equ	mask GMBL_RESCAN_DRIVE	or	\
					mask GMBL_SELECT_ALL	or	\
					mask GMBL_SORT		or	\
					mask GMBL_CREATE_FOLDER
UNOPENED_MENU_ITEMS_HIGH	equ	mask GMBH_CLOSE


NON_WASTEBASKET_MENU_ITEMS_LOW	equ	mask GMBL_OPTIONS	or	\
					mask GMBL_COPY		or	\
					mask GMBL_RENAME	or	\
					mask GMBL_THROW_AWAY	or	\
					mask GMBL_CREATE_FOLDER
if _NEWDESKBA
NON_WASTEBASKET_MENU_ITEMS_HIGH	equ	mask GMBH_DISTRIBUTE	or	\
					mask GMBH_DUPLICATE
else
NON_WASTEBASKET_MENU_ITEMS_HIGH	equ	mask GMBH_DUPLICATE
endif

WASTEBASKET_MENU_ITEMS_LOW	equ	mask GMBL_OPTIONS
WASTEBASKET_MENU_ITEMS_HIGH	equ	mask GMBH_RECOVER


;---------------------------------------------------------------------------
;			Object Global Menu Constants
;---------------------------------------------------------------------------

GM_DESKTOP_MENUS_LOW		equ	mask GMBL_HELP		or	\
					mask GMBL_SELECT_ALL	or	\
					mask GMBL_CREATE_FOLDER or	\
					mask GMBL_SORT
GM_DESKTOP_MENUS_HIGH		equ	0


GM_HELP_MENUS_LOW		equ	mask GMBL_OPEN
GM_HELP_MENUS_HIGH		equ	0


;GM_LOGOUT_MENUS_LOW		equ	mask GMBL_OPEN or mask GMBL_HELP
GM_LOGOUT_MENUS_LOW		equ	mask GMBL_HELP		or	\
					mask GMBL_LOGOUT
GM_LOGOUT_MENUS_HIGH		equ	0


GM_WASTEBASKET_MENUS_LOW 	equ	mask GMBL_OPEN		or	\
					mask GMBL_HELP		or	\
					mask GMBL_WASTEBASKET	or	\
					mask GMBL_SELECT_ALL	or	\
					mask GMBL_SORT
GM_WASTEBASKET_MENUS_HIGH	equ	mask GMBH_CLOSE


GM_PRINTER_MENUS_LOW		equ	mask GMBL_OPEN		or	\
					mask GMBL_HELP		or	\
					mask GMBL_PRINTER
GM_PRINTER_MENUS_HIGH		equ	mask GMBH_CLOSE


GM_EXECUTABLE_MENUS_LOW		equ	mask GMBL_OPEN		or	\
					mask GMBL_HELP		or	\
					mask GMBL_OPTIONS	or	\
					mask GMBL_COPY		or	\
					mask GMBL_MOVE		or	\
					mask GMBL_RENAME	or	\
					mask GMBL_THROW_AWAY
GM_EXECUTABLE_MENUS_HIGH	equ	mask GMBH_DUPLICATE


if _NEWDESKBA
TEACHER_EXECUTABLE_MENUS_LOW	equ	GM_EXECUTABLE_MENUS_LOW
TEACHER_EXECUTABLE_MENUS_HIGH	equ	mask GMBH_DISTRIBUTE
endif


GM_DOCUMENT_MENUS_LOW		equ	GM_EXECUTABLE_MENUS_LOW
GM_DOCUMENT_MENUS_HIGH		equ	GM_EXECUTABLE_MENUS_HIGH	or \
					mask GMBH_PRINT

if _NEWDESKBA
TEACHER_DOCUMENT_MENUS_LOW	equ	GM_DOCUMENT_MENUS_LOW
TEACHER_DOCUMENT_MENUS_HIGH	equ	mask GMBH_DISTRIBUTE


GM_STUDENT_MENUS_LOW		equ	mask GMBL_OPEN		or	\
					mask GMBL_HELP		or	\
					mask GMBL_SELECT_ALL	or	\
					mask GMBL_SORT		or	\
					mask GMBL_CREATE_FOLDER
GM_STUDENT_MENUS_HIGH 		equ	mask GMBH_CLOSE		or	\
					mask GMBH_DEL_STUDENT	or	\
					mask GMBH_MAKE_STD_DRIVE or	\
					mask GMBH_REMOVE_FILES

GM_STUDENT_UTILITY_MENUS_LOW	equ	mask GMBL_OPEN		or	\
					mask GMBL_HELP		or	\
					mask GMBL_SELECT_ALL	or	\
					mask GMBL_SORT		or	\
					mask GMBL_CREATE_FOLDER or	\
					mask GMBL_DELETE
GM_STUDENT_UTILITY_MENUS_HIGH 	equ	mask GMBH_CLOSE		or	\
					mask GMBH_REMOVE_FILES


GM_TEACHER_HOME_MENUS_LOW	equ	mask GMBL_OPEN		or	\
					mask GMBL_HELP		or	\
					mask GMBL_SELECT_ALL	or	\
					mask GMBL_SORT		or	\
					mask GMBL_CREATE_FOLDER
GM_TEACHER_HOME_MENUS_HIGH	equ	mask GMBH_CLOSE		or	\
					mask GMBH_HOME		or	\
					mask GMBH_REMOVE_FILES


GM_OFFICE_HOME_MENUS_LOW	equ	GM_TEACHER_HOME_MENUS_LOW
GM_OFFICE_HOME_MENUS_HIGH	equ	GM_TEACHER_HOME_MENUS_HIGH


GM_STUDENT_HOME_MENUS_LOW	equ	mask GMBL_OPEN		or	\
					mask GMBL_HELP		or	\
					mask GMBL_SELECT_ALL	or	\
					mask GMBL_SORT		or	\
					mask GMBL_CREATE_FOLDER
GM_STUDENT_HOME_MENUS_HIGH	equ	mask GMBH_CLOSE		or	\
					mask GMBH_REMOVE_FILES


GM_TEACHER_CLASSES_MENUS_LOW	equ	mask GMBL_OPEN		or	\
					mask GMBL_HELP		or	\
					mask GMBL_SELECT_ALL	or	\
					mask GMBL_SORT
GM_TEACHER_CLASSES_MENUS_HIGH	equ	mask GMBH_CLOSE		or	\
					mask GMBH_CLASSES	or	\
					mask GMBH_REMOVE_FILES


GM_STUDENT_CLASSES_MENUS_LOW	equ	mask GMBL_OPEN		or	\
					mask GMBL_HELP		or	\
					mask GMBL_SELECT_ALL	or	\
					mask GMBL_SORT
GM_STUDENT_CLASSES_MENUS_HIGH	equ	mask GMBH_CLOSE


GM_TEACHER_CLASS_MENUS_LOW	equ	mask GMBL_OPEN		or	\
					mask GMBL_HELP		or	\
					mask GMBL_SELECT_ALL	or	\
					mask GMBL_SORT		or	\
					mask GMBL_CREATE_FOLDER
GM_TEACHER_CLASS_MENUS_HIGH	equ	mask GMBH_CLOSE		or	\
					mask GMBH_CLASS		or	\
					mask GMBH_DEL_CLASS


GM_STUDENT_CLASS_MENUS_LOW	equ	mask GMBL_OPEN		or	\
					mask GMBL_HELP		or	\
					mask GMBL_SORT		or	\
					mask GMBL_SELECT_ALL
GM_STUDENT_CLASS_MENUS_HIGH	equ	mask GMBH_CLOSE


GM_ROSTER_MENUS_LOW		equ	mask GMBL_OPEN		or	\
					mask GMBL_HELP		or	\
					mask GMBL_SELECT_ALL	or	\
					mask GMBL_SORT
GM_ROSTER_MENUS_HIGH		equ	mask GMBH_CLOSE		or	\
					mask GMBH_ADD_STUDENT	or	\
					mask GMBH_REMOVE_FILES


GM_TEACHER_COMMON_MENUS_LOW	equ	mask GMBL_OPEN		or	\
					mask GMBL_HELP		or	\
					mask GMBL_SELECT_ALL	or	\
					mask GMBL_SORT		or	\
					mask GMBL_CREATE_FOLDER
GM_TEACHER_COMMON_MENUS_HIGH	equ	mask GMBH_CLOSE
					


GM_OFFICE_COMMON_MENUS_LOW		equ	GM_TEACHER_COMMON_MENUS_LOW
GM_OFFICE_COMMON_MENUS_HIGH		equ	GM_TEACHER_COMMON_MENUS_HIGH
endif

GM_DRIVE_MENUS_LOW		equ	mask GMBL_OPEN		or	\
					mask GMBL_HELP		or	\
					mask GMBL_DRIVE		or	\
					mask GMBL_RESCAN_DRIVE	or	\
					mask GMBL_SELECT_ALL	or	\
					mask GMBL_SORT		or	\
					mask GMBL_CREATE_FOLDER
GM_DRIVE_MENUS_HIGH		equ	mask GMBH_CLOSE


GM_FOLDER_MENUS_LOW		equ	mask GMBL_OPEN		or	\
					mask GMBL_HELP		or	\
					mask GMBL_OPTIONS	or	\
					mask GMBL_COPY		or	\
					mask GMBL_MOVE		or	\
					mask GMBL_RENAME	or	\
					mask GMBL_THROW_AWAY	or	\
					mask GMBL_SELECT_ALL	or	\
					mask GMBL_SORT		or	\
					mask GMBL_CREATE_FOLDER
GM_FOLDER_MENUS_HIGH		equ	mask GMBH_CLOSE		or	\
					mask GMBH_DUPLICATE

GM_SYSTEM_FOLDER_MENUS_LOW	equ	mask GMBL_OPEN		or	\
					mask GMBL_HELP		or	\
					mask GMBL_OPTIONS	or	\
					mask GMBL_SELECT_ALL	or	\
					mask GMBL_SORT		or	\
					mask GMBL_CREATE_FOLDER
GM_SYSTEM_FOLDER_MENUS_HIGH	equ	mask GMBH_CLOSE


if _NEWDESKBA
TEACHER_FOLDER_MENUS_LOW	equ	GM_FOLDER_MENUS_LOW
TEACHER_FOLDER_MENUS_HIGH	equ	mask GMBH_CLOSE		or	\
					mask GMBH_DISTRIBUTE


GM_STUDENT_BODY_LIST_MENUS_LOW	equ	mask GMBL_OPEN		or	\
					mask GMBL_HELP
GM_STUDENT_BODY_LIST_MENUS_HIGH	equ	mask GMBH_CLOSE


GM_COURSEWARE_LIST_MENUS_LOW	equ	GM_STUDENT_BODY_LIST_MENUS_LOW
GM_COURSEWARE_LIST_MENUS_HIGH	equ	GM_STUDENT_BODY_LIST_MENUS_HIGH

GM_OFFICE_APP_LIST_MENUS_LOW	equ	GM_STUDENT_BODY_LIST_MENUS_LOW
GM_OFFICE_APP_LIST_MENUS_HIGH	equ	GM_STUDENT_BODY_LIST_MENUS_HIGH


GM_SPECIALS_LIST_MENUS_LOW	equ	GM_STUDENT_BODY_LIST_MENUS_LOW
GM_SPECIALS_LIST_MENUS_HIGH	equ	GM_STUDENT_BODY_LIST_MENUS_HIGH



GM_GEOS_COURSEWARE_MENUS_LOW	equ	mask GMBL_OPEN		or	\
					mask GMBL_HELP
GM_GEOS_COURSEWARE_MENUS_HIGH	equ	0


GM_DOS_COURSEWARE_MENUS_LOW	equ	GM_GEOS_COURSEWARE_MENUS_LOW
GM_DOS_COURSEWARE_MENUS_HIGH	equ	GM_GEOS_COURSEWARE_MENUS_HIGH


	; This uses GMBH_DEL_STUDENT because the trigger it enables sends
	; the MSG_FM_START_THROW_AWAY, but has the "Remove" moniker.
	; if either of these change, re-evaluate this constant.  The trigger
	; is defined in ./Appl/FileMgrs/CommonND/CUI/cuiNDGlobalMenu.ui
TEACHER_GEOS_COURSEWARE_LOW	equ	mask GMBL_OPEN		or	\
					mask GMBL_HELP
TEACHER_GEOS_COURSEWARE_HIGH	equ	mask GMBH_DEL_STUDENT

TEACHER_DOS_COURSEWARE_LOW	equ	TEACHER_GEOS_COURSEWARE_LOW
TEACHER_DOS_COURSEWARE_HIGH	equ	TEACHER_GEOS_COURSEWARE_HIGH or	\
					mask GMBH_BOOKMARKS	or	\
					mask GMBH_CHANGE_ICON 

OFFICE_GEOS_COURSEWARE_LOW	equ	TEACHER_GEOS_COURSEWARE_LOW
OFFICE_GEOS_COURSEWARE_HIGH	equ	TEACHER_GEOS_COURSEWARE_HIGH

OFFICE_DOS_COURSEWARE_LOW	equ	OFFICE_GEOS_COURSEWARE_LOW
OFFICE_DOS_COURSEWARE_HIGH	equ	OFFICE_GEOS_COURSEWARE_HIGH or	\
					mask GMBH_CHANGE_ICON
endif

NewDeskPopUpType	etype	byte
WPUT_WHITESPACE	enum	NewDeskPopUpType
WPUT_OBJECT	enum	NewDeskPopUpType
WPUT_SELECTION	enum	NewDeskPopUpType


;------------------------------------------------------------------------------
;	NDDesktopViewClass
;------------------------------------------------------------------------------

NDDesktopViewClass	class	DesktopViewClass
;------------------------------------------------------------------------------
;	MESSAGES
;------------------------------------------------------------------------------

MSG_ND_DESKTOP_VIEW_UPDATE_BG_COLOR		message
;	This message tells the desktop view to check the background color
;	key in the .ini file and update the view background color as needed.
;
; pass:		nothing
; return:	nothing
; destroyed:	ax, cx, dx, bp
;

NDDesktopViewClass	endc


;------------------------------------------------------------------------------
;	NDFolderClass
;------------------------------------------------------------------------------

NDFolderClass	class FolderClass
;-----------------------------------------------------------------------------
;	MESSAGES		
;-----------------------------------------------------------------------------
 
MSG_ND_FOLDER_SETUP				message
;	This is a hook that allows a folder object to set up its folder
;	window dynamically if it needs to do things that it can't do in the 
;	.ui file.
; pass:		^lcx:dx - NDPrimary this folder object is attached to
; return:	nothing
; destroyed:	all but bp
;

MSG_ND_FOLDER_SEND_FROM_POPUP	message MetaApplicationMessages
;	This is a message that enumerates through the selected files
; of a folder (this selection may not be the true selection, but the false
; selection built out because of a WPUT_OBJECT or WPUT_WHITESPACE).  This is
; called only from triggers in the popUp menu (the GlobalMenu,  in which case
; the popUpType will be set correctly, meaning that there will be a selection
; if the popUpType is WPUT_SELECTION) or if sent as data to a
; MSG_ND_FOLDER_SEND_AS_SELECTED_ITEMS or MSG_ND_FOLDER_SEND_AS_SINGLE_SELECTION
; in which case the WPUT_SELECTION will be set as well.
;	For each item it sends a passed in message (and data in cx) to the
; object or (if the object is not open) the dummy object corresponding to
; the type of the selection (after stuffing the path of the dummy object with
; the path of the selection).
;
;	PASS:	cx = message to send (usually set in the ui's trigger data)
;		dx = data to pass in cx when sending message
;
;	RETURN:	none
;


MSG_ND_FOLDER_SEND_AS_WHITESPACE	message
;	This is a message that is used by the drop-down template menus of
; each folderwindow's primary.  These messages go directly to the folder
; object by because they are  sent to TO_OBJ_BLOCK_OUTPUT which is connected
; to their personal folder object.  This sets the folder's popUpType to
; whitespace (because dropdown menus are the same as whitespace menus) and
; then sends the message, so the folder thinks it received it from a
; whitespace click.
;
; pass:		*ds:si	- NDFolderClass object
;		ds:bx	- NDFolderClass instance data
;		cx	- message to send
;		dx	- message data to pass in cx when sending message
;
; return:	nothing 
;
; destroyed:	all
;

MSG_ND_FOLDER_SEND_AS_SELECTED_ITEMS	message
;	This is a message that is used by those wanting to send a message
; to a folder as if it were sent by a popup from a selected list of files.
; It takes bp as a DesktopErrors error to display in the event that no files
; were selected.  If bp is zero, it will procede with sending the message
; despite its better judgement in the case of nothing selected.  It sets the
; popUpType of the folder to WPUT_SELECTION to fool the folder into thinking
; that the message came from a selection popup.
;
; pass:		cx	- message to send
;		dx	- message data to pass in cx when sending message
;		bp	- error code (DesktopErrors) to display if no file
;				is selected
; return:	nothing 
; destroyed:	ax, cx, dx, bp
;

MSG_ND_FOLDER_SEND_AS_SINGLE_SELECTION	message
;	This is a message that is used by those wanting to send a message
; to a folder as if it were sent from a single (for multiple see
; MSG_ND_FOLDER_SEND_AS_SELECTED_ITEMS) selected file.  This is *not* the
; WPUT_OBJECT case, because that is a non-selected file, and depends on the
; mouse pointer, so it will be handled by a PopUp menu.
;	It takes bp as a DesktopErrors error to display in the event that no
; files were selected.  If this is zero, it will procede with sending the
; message despite its better judgement in the case of nothing selected.  It
; sets the popUpType of the folder to WPUT_SELECTION to fool the folder into
; thinking that the message came from a selection popup.
;
; pass:		cx	- message to send
;		dx	- message data to pass in cx when sending message
;		bp	- error code (DesktopErrors) to display if no file
;				is selected
; return:	nothing 
; destroyed:	ax, cx, dx, bp
;

MSG_ND_FOLDER_OPEN_NEWDESK_OBJECT	message
;	This is a message that is used to open the first object in the
; folder object's FolderRecord buffer whose NewDeskObjectType matches the
; NewDeskObjectType passed in dx. 
;
; pass:		*ds:si	- NDFolderClass object
; 		dx	- NewDeskObjectType to open
;
; return:	if carry clear
;			ax = GeosFileType of object opened
;			^lcx:dx	= FolderClass object if ax == GFT_DIRECTORY
;		if carry set
;			The object was not found or the buffer block
;			couldn't be locked.
; destroyed:	bp
;

MSG_ND_SET_CONTROL_BUTTON_MONIKER	message
;	Replace the moniker of the primary with the small control button
; moniker so that when it is built out the UI will stuff this into the
; control button place.
;
; CALLED BY:	NDFolderSetup
;
; PASS:		*ds:si	- NDFolderClass object
;
; RETURN:	none
;
; DESTROYED:	
;

MSG_ND_FOLDER_GET_TOKEN			message
;	Returns the token characters associated with a NDFolderClass.
; NDDrivesClass has many tokens, and returns the correct one according
; to the drive number in its instance data.
;
; Pass:		*ds:si = NDFolderClass object
; Return:	ax, cx, dx - GeodeToken
; Destroyed:	none
;

MSG_ND_FOLDER_HELP			message
;	Bring up help for an object.
;
; Pass:		*ds:si = NDFolderClass object
;
; Return:	none
; Destroyed:	all
;

if _NEWDESKBA
MSG_BA_CONSTRAIN_DROP_DOWN_MENU		message
;	Makes certain items in a drop down menu of a folder WOT not usable
; according to the UserType of the person viewing the menu.
;
; Pass:		*ds:si = NDFolderClass object
;		^lcx:dx = NDFolderWindow object
;
; Return:	none
; Destroyed:	none
;
endif		; if _NEWDESKBA


MSG_ND_FOLDER_SET_PARENT_OPTR		message
; Tell a folder who its parent is.  This is done so that in entry
; level in NewDeskBA, when a folder closes, it'll notify its parent.
;
; Pass:		^lcx:dx - parent OD
;			
; Return:	nothing 
;
; Destroyed:	ax
;

MSG_ND_FOLDER_SET_CHILD_OPTR		message
; Tell a folder who its child is.  This is only used in entry level in
; BA, where each folder can only have one child.
;
; Pass:		^lcx:dx - child OD
;			
; Return:	nothing 
;
; Destroyed:	ax
;

MSG_ND_FOLDER_BRING_UP_POPUP		message
; Brings up the pop up passed in ^lcx:dx, unless the folder bringing this
; menu isn't the target anymore.
;
; Pass:		^cx:dx - GenInteraction to be brought up
; Return:	nothing
; Destroyed:	all
;

MSG_ND_FOLDER_SET_POPUP_TYPE		message
; Sets the folder's NDFOI_popUpType instance data
;
; Pass:		cl - NewDeskPopUpType
; Return:	nothing
; Destroyed:	nothing
;

if _NEWDESKBA
MSG_UPDATE_CREATE_FOLDER_PERMISSIONS	message
; sets its Create Folder trigger usable or not usable depending on what
; is passed in.
; 
; Pass:		*ds:si - NDFolder Object
;		cx	- MSG_GEN_SET_USABLE or MSG_GEN_SET_NOT_USABLE
;		dx	- chunk offset of CreatFolder menu item in the 
;			- widow block associated with this NDFolder
; Return:	nothing
; Destroyed:	nothing
;
endif		; if _NEWDESKBA
;-----------------------------------------------------------------------------
;	INSTANCE DATA		
;-----------------------------------------------------------------------------
 
	NDFOI_ndObjType	NewDeskObjectType		<>
	NDFOI_nonSelect	word
	NDFOI_popUpType	NewDeskPopUpType			<>
	NDFOI_mousePos	Point				<>
	NDFOI_child	optr
	NDFOI_parent	optr
NDFolderClass	endc


if _NEWDESKONLY
;-----------------------------------------------------------------------------
;	NDDesktopClass		See ../NewDeskBA/BAConstant.def for the
;				BA version of this (same, but subclassed off
;				BAFolderClass instead of NDFolderClass).
;-----------------------------------------------------------------------------

NDDesktopClass	class	NDFolderClass
;MSG_FOLDER_CLOSE  ...
; is subclassed with a stub routine so that the superclass behavior
; (closing the folder) can never happen, as the Desktop never gets closed.

MSG_ND_DESKTOP_REDRAW_WASTEBASKET		message
; Redraw wastebasket.
NDDesktopClass	endc
endif



;-----------------------------------------------------------------------------
;	NDPrinterClass		
;-----------------------------------------------------------------------------
 
NDPrinterClass	class	NDFolderClass
COMMENT @--------------------------------------------------------------------
	INHERITANCE		
-----------------------------------------------------------------------------
MSG_SHELL_OBJECT_CHECK_TRANSFER_ENTRY -- takes each entry, and, if it's a
	GEOS datafile, launches the corresponding application.
	Removes the entry from the Quick Transfer list

----------------------------------------------------------------------------@

;-----------------------------------------------------------------------------
;	MESSAGES		
;-----------------------------------------------------------------------------

MSG_ND_PRINTER_RUN_PCONSOLE	message
; Run Netware's PCONSOLE utility

MSG_ND_PRINTER_DO_OPTIONS_DIALOG	message
; Initiate the OPTIONS dialog, fetching the extra data from the
; link 
 
MSG_ND_PRINTER_REQUEST_ITEM_MONIKER	message
;
; Pass:		^lcx:dx - dynamic list OD
;		bp - position # 
;			
; Return:	nothing 
;
; Destroyed:	ax,cx,dx,bp 
;
;
;
;

MSG_ND_PRINTER_SET_PRINTER	message
;
; Pass:		cx - printer #
;			
; Return:	nothing 
;
; Destroyed:	ax,cx,dx,bp
;

MSG_ND_PRINTER_BANNER_STATUS	message

MSG_ND_PRINTER_SET_BANNER_ON_OFF	message

MSG_ND_PRINTER_SET_BANNER_TEXT	message


NDPrinterClass	endc

NDWastebasketClass	class	NDFolderClass
COMMENT @--------------------------------------------------------------------
	INHERITANCE		
-----------------------------------------------------------------------------
MSG_SHELL_OBJECT_CHECK_TRANSFER_ENTRY
	This should eventually be changed to accept everything, with dummies
	of the aforementioned types handling MSG_SHELL_OBJECT_DELETE in the
	proper fashion.
----------------------------------------------------------------------------@

NDWastebasketClass	endc

;-----------------------------------------------------------------------------
;	NDDriveClass
;-----------------------------------------------------------------------------
 
if _NEWDESKONLY			; BA version defined in BAConstant.def
NDDriveClass	class	NDFolderClass
MSG_ND_DRIVE_FORMAT		message
MSG_ND_DRIVE_COPY		message
MSG_ND_DRIVE_RENAME		message
; All three of these messages handled by NDDriveBringUpDriveBox:
;
; Bring up a DiskFormat, DiskCopy or DiskRename dialog box by getting the
; drive's number then its media descriptor, setting the defaults of the
; dialog and then bringing it up.
;
; Pass:		standard object stuff
; Return:	none
; Destroyed:	none
;

MSG_ND_DRIVE_CHECK_DRIVE_NUMBER	message
; Checks to see if the passed in drive number is the same as that stored
; in its instance data.
;
; Pass:		bp - drive number
; Return:	carry	set if the passed in drive is the drive in instance data
;			clear if they are different
; Destroyed:	none
;

MSG_ND_DRIVE_SET_HELP_CONTEXT	message
; Se the correct help context based upon the drive number
;
; Pass:		bp - drive number
; Return:	none
; Destroyed:	none
;

;----------------------------------------------------------------------------
;		Instance data
;----------------------------------------------------------------------------

	NDDOI_driveNumber	byte
NDDriveClass	endc
endif				; if _NEWDESKONLY




;-----------------------------------------------------------------------------
;	NDPopupMenuClass
;-----------------------------------------------------------------------------

NDPopupMenuClass	class	GenInteractionClass
	NDPM_folderInitiated		byte
		; flag that tells us if we were brought up by the folder
		; or by the system menu button.  The folder sends a message
		; to us to set this flag, the system menu doesn't.

MSG_ND_POPUP_MENU_SET_FOLDER_INITIATED	message
; Sets the NDPM_folderInitiated flag to indicate that the
; popup was brought up by the folder and so the NDFOI_popUpType
; is already correct.
;
; Pass:		nothing
; Return:	nothing
; Destroyed:	nothing
;

MSG_ND_POPUP_MENU_PRE_POPUP		message
; Informs the popup that it's about to be brought up because of a right
; click.
;
; Pass:		nothing
; Return:	nothing
; Destroyed:	nothing
;

NDPopupMenuClass	endc

;-----------------------------------------------------------------------------
;	NDSortViewPopupMenuClass
;-----------------------------------------------------------------------------

NDSortViewPopupMenuFlags	record
	:12
	NDSVPMF_VIEW_NOT_SUBMENU:1	; view menu isn't a submenu
	NDSVPMF_NO_VIEW:1	; no view choices
	NDSVPMF_NOT_FOR_MENU:1	; doesn't show sort/view if invoked via menubar
	NDSVPMF_POPPING_UP:1	; going to be popped up via right click
NDSortViewPopupMenuFlags	end


NDSortViewPopupMenuClass	class	NDPopupMenuClass
	NDSVPM_sortViewParent		optr
		; Object that the GlobalMenuSortAndView will attach it self to.
	NDSVPM_sortViewPosition		word
		; child position (under the above NDPMC_viewSortParent object)
		; at which the GlobalMenuSortAndView will attach it self.
	NDSVPM_sortViewFlags		NDSortViewPopupMenuFlags
NDSortViewPopupMenuClass	endc

;-----------------------------------------------------------------------------
;	EMCControlPanelClass
;-----------------------------------------------------------------------------

EMCControlPanelClass	class	ExpressMenuControlClass
EMCControlPanelClass	endc

;-----------------------------------------------------------------------------
;	BannerTextClass		
;-----------------------------------------------------------------------------
; A cheesy little GenText subclass that uses the user name as a banner,
; if one isn't available in the .INI file.
BannerTextClass class	GenTextClass
; Subclasses MSG_GEN_LOAD/SAVE_OPTIONS

BannerTextClass	endc


;-----------------------------------------------------------------------------
;	CONSTANTS		
;-----------------------------------------------------------------------------
 
STANDARD_PATH_OF_DESKTOP_VOLUME		equ	SP_TOP
ND_DESKTOP_RELATIVE_PATH		equ	"DESKTOP"
ND_DESKTOP_PATH_LENGTH			equ	7

NUKE_ME	equ	-1
; A constant stored in "OpenFile" objects when they want to be
; destroyed.

;-----------------------------------------------------------------------------
;	FATAL ERRORS		
;-----------------------------------------------------------------------------
 
ILLEGAL_TABLE_OFFSET	enum FatalErrors 
; An offset is beyond the bounds of the table it is referencing.
INVALID_DESKTOP_OBJECT_TYPE	enum FatalErrors

BAD_WOT_TYPE		enum	Warnings
