//========================================================================
//
// Gfx.h
//
// Copyright 1996 Derek B. Noonburg
//
//========================================================================

#ifndef GFX_H
#define GFX_H

#ifdef __GNUC__
#pragma interface
#endif


@include "gtypes.goh"


#define maxArgs 8



//------------------------------------------------------------------------
// Gfx
//------------------------------------------------------------------------
#if 0
enum GfxClipType {
  clipNone,
  clipNormal,
  clipEO
};
#endif

typedef enum TchkType {
  tchkBool,			// boolean
  tchkInt,			// integer
  tchkNum,			// number (integer or real)
  tchkString,			// string
  tchkName,			// name
  tchkArray,			// array
  tchkProps,			// properties (dictionary or name)
  tchkSCN,			// scn/SCN args (number of name)
  tchkNone			// used to avoid empty initializer lists
} TchkType;

typedef struct Operator {
  char name[4];
  int numArgs;
  TchkType tchk[maxArgs];
  void (*func)(Obj args[], int numArgs, GfxState *state);
} Operator;


extern
void GfxInit(Gfx *this, Handle gstring, Dict *resDict, XRef *xref,
	     VMFileHandle vmFile1);
extern
void GfxFree(Gfx *this);

extern
void GfxResourcesInit(GfxResources *this, GfxResources *next1);
extern
void GfxResourcesFree(GfxResources *this);

extern
GBool GfxDisplay(Gfx *this, Obj *obj);


#endif
