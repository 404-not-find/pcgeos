/***********************************************************************
 *
 *	Copyright (c) GlobalPC 1999.  All rights reserved.
 *	GLOBALPC CONFIDENTIAL
 *
 * PROJECT:	  
 * MODULE:	  
 * FILE:	  gfxFont2.h
 *
 * AUTHOR:  	  John Mevissen: Apr 27, 1999
 *
 * REVISION HISTORY:
 *	Name		Date		Description
 *	----		----		-----------
 *	mevissen	4/27/99   	Initial version
 *
 * DESCRIPTION:
 *
 *	Include file for gfxFont.goc.
 *	Specifies standard char encodings.
 *
 * 	$Id$
 *
 ***********************************************************************/
#ifndef _GFXFONT2_GOH_
#define _GFXFONT2_GOH_

/*
 * default map for mapping pdf's "standard" encoding to our GEOS
 * char map.  This started as the latin1 map in cmapLatin1.asm;
 * if the pdf standard encoding had a different character, I put it in;
 * if it had a character we don't support (such as Lslash) I put in a 0;
 * if no char was mapped to that code, I left the code as it was from 
 * Latin1.  (Latin1 seems to correspond well with what's called "PDF doc
 * encoding", for what it's worth.  That encoding is supposedly used a lot
 * for outine entries, text annotations, and Info strings, as opposed to 
 * the doc text itself, which I've found so far to mostly follow the Standard
 * encoding.)
 *
 * See Appendix C in pdfspec.pdf for encoding lists.
 */

@start ENCODINGS, data ;

@chunk byte pdfToGeosMap[256] = {
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0,
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0,
0,
0,
C_ASCII_CIRCUMFLEX,
0,
0,
0,
0,
C_ASCII_TILDE,
C_SPACE,
C_EXCLAMATION,
C_QUOTE,
C_NUMBER_SIGN,
C_DOLLAR_SIGN,
C_PERCENT,
C_AMPERSAND,
C_SNG_QUOTE,
C_LEFT_PAREN,
C_RIGHT_PAREN,
C_ASTERISK,
C_PLUS,
C_COMMA,
C_MINUS,
C_PERIOD,
C_SLASH,
C_ZERO,
C_ONE,
C_TWO,
C_THREE,
C_FOUR,
C_FIVE,
C_SIX,
C_SEVEN,
C_EIGHT,
C_NINE,
C_COLON,
C_SEMICOLON,
C_LESS_THAN,
C_EQUAL,
C_GREATER_THAN,
C_QUESTION_MARK,
C_AT_SIGN,
C_CAP_A,
C_CAP_B,
C_CAP_C,
C_CAP_D,
C_CAP_E,
C_CAP_F,
C_CAP_G,
C_CAP_H,
C_CAP_I,
C_CAP_J,
C_CAP_K,
C_CAP_L,
C_CAP_M,
C_CAP_N,
C_CAP_O,
C_CAP_P,
C_CAP_Q,
C_CAP_R,
C_CAP_S,
C_CAP_T,
C_CAP_U,
C_CAP_V,
C_CAP_W,
C_CAP_X,
C_CAP_Y,
C_CAP_Z,
C_LEFT_BRACKET,
C_BACKSLASH,
C_RIGHT_BRACKET,
C_ASCII_CIRCUMFLEX,
C_UNDERSCORE,
C_BACKQUOTE,
C_SMALL_A,
C_SMALL_B,
C_SMALL_C,
C_SMALL_D,
C_SMALL_E,
C_SMALL_F,
C_SMALL_G,
C_SMALL_H,
C_SMALL_I,
C_SMALL_J,
C_SMALL_K,
C_SMALL_L,
C_SMALL_M,
C_SMALL_N,
C_SMALL_O,
C_SMALL_P,
C_SMALL_Q,
C_SMALL_R,
C_SMALL_S,
C_SMALL_T,
C_SMALL_U,
C_SMALL_V,
C_SMALL_W,
C_SMALL_X,
C_SMALL_Y,
C_SMALL_Z,
C_LEFT_BRACE,
C_VERTICAL_BAR,
C_RIGHT_BRACE,
C_ASCII_TILDE,
C_DELETE,
0,			/* 0x80 */
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
C_NONBRKSPACE,		/* 0xa0 */
C_EXCLAMDOWN,
C_CENT,
C_STERLING,
C_FRACTION,
C_YEN,
C_FLORIN,
C_SECTION,
C_CURRENCY,
C_SNG_QUOTE,
C_QUOTEDBLLEFT,
C_GUILLEDBLLEFT,
C_GUILSNGLEFT,
C_GUILSNGRIGHT,
C_FI_LIGATURE,		/* fi ligature */
0,		/* fl ligature */
C_DEGREE,		/* 0xb0 */
C_ENDASH,
C_DAGGER,
C_DBLDAGGER,
C_CNTR_DOT,
C_L_MU,
C_PARAGRAPH,
C_CNTR_DOT,
C_SNGQUOTELOW,
C_DBLQUOTELOW,
C_QUOTEDBLRIGHT,
C_GUILLEDBLRIGHT,
C_ELLIPSIS,
C_PERTHOUSAND,
0,
C_QUESTIONDOWN,
0,			/* 0xc0 */
C_GRAVE,
C_ACUTE,
C_CIRCUMFLEX,
C_TILDE,
C_MACRON,
C_BREVE,
C_DOTACCENT,
C_DIERESIS,
C_UE_ACUTE,
C_RING,
C_CEDILLA,
C_UI_GRAVE,
C_HUNGARUMLAT,
C_OGONEK,
C_CARON,
C_EMDASH,		/* 0xd0 */
C_UN_TILDE,
C_UO_GRAVE,
C_UO_ACUTE,
C_UO_CIRCUMFLEX,
C_UO_TILDE,
C_UO_DIERESIS,
C_SMALL_X,
C_UO_SLASH,
C_UU_GRAVE,
C_UU_ACUTE,
C_UU_CIRCUMFLEX,
C_UU_DIERESIS,
C_UY_ACUTE,
0,
C_GERMANDBLS,
C_LA_GRAVE,		/* 0xe0 */
C_U_AE,
C_LA_CIRCUMFLEX,
C_ORDFEMININE,
C_LA_DIERESIS,
C_LA_RING,
C_L_AE,
C_LC_CEDILLA,
0,
C_UO_SLASH,
C_U_OE,
C_ORDMASCULINE,
C_LI_GRAVE,
C_LI_ACUTE,
C_LI_CIRCUMFLEX,
C_LI_DIERESIS,
0,			/* 0xf0 */
C_L_AE,
C_LO_GRAVE,
C_LO_ACUTE,
C_LO_CIRCUMFLEX,
C_LI_DOTLESS,
C_LO_DIERESIS,
C_DIVISION,
0,
C_LO_SLASH,
C_L_OE,
C_GERMANDBLS,
C_LU_DIERESIS,
C_LY_ACUTE,
0,
C_LY_DIERESIS
};
/* end of Standard encoding */

@chunk byte macRomanToGeosMap[256] = {
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0,
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0,
0,
0,
C_ASCII_CIRCUMFLEX,
0,
0,
0,
0,
C_ASCII_TILDE,
C_SPACE,
C_EXCLAMATION,
C_QUOTE,
C_NUMBER_SIGN,
C_DOLLAR_SIGN,
C_PERCENT,
C_AMPERSAND,
C_SNG_QUOTE,
C_LEFT_PAREN,
C_RIGHT_PAREN,
C_ASTERISK,
C_PLUS,
C_COMMA,
C_MINUS,
C_PERIOD,
C_SLASH,
C_ZERO,
C_ONE,
C_TWO,
C_THREE,
C_FOUR,
C_FIVE,
C_SIX,
C_SEVEN,
C_EIGHT,
C_NINE,
C_COLON,
C_SEMICOLON,
C_LESS_THAN,
C_EQUAL,
C_GREATER_THAN,
C_QUESTION_MARK,
C_AT_SIGN,
C_CAP_A,
C_CAP_B,
C_CAP_C,
C_CAP_D,
C_CAP_E,
C_CAP_F,
C_CAP_G,
C_CAP_H,
C_CAP_I,
C_CAP_J,
C_CAP_K,
C_CAP_L,
C_CAP_M,
C_CAP_N,
C_CAP_O,
C_CAP_P,
C_CAP_Q,
C_CAP_R,
C_CAP_S,
C_CAP_T,
C_CAP_U,
C_CAP_V,
C_CAP_W,
C_CAP_X,
C_CAP_Y,
C_CAP_Z,
C_LEFT_BRACKET,
C_BACKSLASH,
C_RIGHT_BRACKET,
C_ASCII_CIRCUMFLEX,
C_UNDERSCORE,
C_GRAVE,
C_SMALL_A,
C_SMALL_B,
C_SMALL_C,
C_SMALL_D,
C_SMALL_E,
C_SMALL_F,
C_SMALL_G,
C_SMALL_H,
C_SMALL_I,
C_SMALL_J,
C_SMALL_K,
C_SMALL_L,
C_SMALL_M,
C_SMALL_N,
C_SMALL_O,
C_SMALL_P,
C_SMALL_Q,
C_SMALL_R,
C_SMALL_S,
C_SMALL_T,
C_SMALL_U,
C_SMALL_V,
C_SMALL_W,
C_SMALL_X,
C_SMALL_Y,
C_SMALL_Z,
C_LEFT_BRACE,
C_VERTICAL_BAR,
C_RIGHT_BRACE,
C_ASCII_TILDE,
C_DELETE,
C_UA_DIERESIS,		/* 0x80 */
C_UA_RING,
C_UC_CEDILLA,
C_UE_ACUTE,
C_UN_TILDE,
C_UO_DIERESIS,
C_UU_DIERESIS,
C_LA_ACUTE,
C_LA_GRAVE,
C_LA_CIRCUMFLEX,
C_LA_DIERESIS,
C_LA_TILDE,
C_LA_RING,
C_LC_CEDILLA,
C_LE_ACUTE,
C_LE_GRAVE,
C_LE_CIRCUMFLEX,	/* 0x90 */
C_LE_DIERESIS,
C_LI_ACUTE,
C_LI_GRAVE,
C_LI_CIRCUMFLEX,
C_LI_DIERESIS,
C_LN_TILDE,
C_LO_ACUTE,
C_LO_GRAVE,
C_LO_CIRCUMFLEX,
C_LO_DIERESIS,
C_LO_TILDE,
C_LU_ACUTE,
C_LU_GRAVE,
C_LU_CIRCUMFLEX,
C_LU_DIERESIS,
C_DAGGER,		/* 0xa0 */
C_DEGREE,
C_CENT,
C_STERLING,
C_SECTION,
C_BULLET,
C_PARAGRAPH,
C_GERMANDBLS,
C_REGISTERED,
C_COPYRIGHT,
C_TRADEMARK,
C_ACUTE,
C_DIERESIS,
0,
C_U_AE,
C_UO_SLASH,
0,			/* 0xb0 */
C_PLUSMINUS,
0,
0,
C_YEN,
C_L_MU,
0,
0,
0,
0,
0,
C_ORDFEMININE,
C_ORDMASCULINE,
0,
C_L_AE,
C_LO_SLASH,
C_QUESTIONDOWN,		/* 0xc0 */
C_EXCLAMDOWN,
C_LOGICAL_NOT,
0,
C_FLORIN,
0,
0,
C_GUILSNGLEFT,
C_GUILSNGRIGHT,
C_ELLIPSIS,
C_SPACE,
C_UA_GRAVE,
C_UA_TILDE,
C_UO_TILDE,
C_U_OE,
C_L_OE,
C_ENDASH,		/* 0xd0 */
C_EMDASH,
C_QUOTEDBLLEFT,
C_QUOTEDBLRIGHT,
C_QUOTESNGLEFT,
C_QUOTESNGRIGHT,
C_DIVISION,
0,
C_LY_DIERESIS,
C_UY_DIERESIS,
C_FRACTION,
C_CURRENCY,
C_GUILSNGLEFT,
C_GUILSNGRIGHT,
C_FI_LIGATURE,		/* fi ligature */
0,		/* fl ligature */
C_DBLDAGGER,		/* 0xe0 */
C_CNTR_DOT,
C_SNGQUOTELOW,
C_DBLQUOTELOW,
C_PERTHOUSAND,
C_UA_CIRCUMFLEX,
C_UE_CIRCUMFLEX,
C_UA_ACUTE,
C_UE_DIERESIS,
C_UE_GRAVE,
C_UI_ACUTE,
C_UI_CIRCUMFLEX,
C_UI_DIERESIS,
C_UI_GRAVE,
C_UO_ACUTE,
C_UO_CIRCUMFLEX,
0,			/* 0xf0 */
C_UO_GRAVE,
C_UU_ACUTE,
C_UU_CIRCUMFLEX,
C_UU_GRAVE,
C_LI_DOTLESS,
C_CIRCUMFLEX,
C_TILDE,
C_MACRON,
C_BREVE,
C_DOTACCENT,
C_RING,
C_CEDILLA,
C_HUNGARUMLAT,
C_OGONEK,
C_CARON
};
/* end of MacRoman encoding */

@chunk byte winAnsiToGeosMap[256] = {
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0,
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0,
0,
0,
C_ASCII_CIRCUMFLEX,
0,
0,
0,
0,
C_ASCII_TILDE,
C_SPACE,
C_EXCLAMATION,
C_QUOTE,
C_NUMBER_SIGN,
C_DOLLAR_SIGN,
C_PERCENT,
C_AMPERSAND,
C_SNG_QUOTE,
C_LEFT_PAREN,
C_RIGHT_PAREN,
C_ASTERISK,
C_PLUS,
C_COMMA,
C_MINUS,
C_PERIOD,
C_SLASH,
C_ZERO,
C_ONE,
C_TWO,
C_THREE,
C_FOUR,
C_FIVE,
C_SIX,
C_SEVEN,
C_EIGHT,
C_NINE,
C_COLON,
C_SEMICOLON,
C_LESS_THAN,
C_EQUAL,
C_GREATER_THAN,
C_QUESTION_MARK,
C_AT_SIGN,
C_CAP_A,
C_CAP_B,
C_CAP_C,
C_CAP_D,
C_CAP_E,
C_CAP_F,
C_CAP_G,
C_CAP_H,
C_CAP_I,
C_CAP_J,
C_CAP_K,
C_CAP_L,
C_CAP_M,
C_CAP_N,
C_CAP_O,
C_CAP_P,
C_CAP_Q,
C_CAP_R,
C_CAP_S,
C_CAP_T,
C_CAP_U,
C_CAP_V,
C_CAP_W,
C_CAP_X,
C_CAP_Y,
C_CAP_Z,
C_LEFT_BRACKET,
C_BACKSLASH,
C_RIGHT_BRACKET,
C_ASCII_CIRCUMFLEX,
C_UNDERSCORE,
C_BACKQUOTE,
C_SMALL_A,
C_SMALL_B,
C_SMALL_C,
C_SMALL_D,
C_SMALL_E,
C_SMALL_F,
C_SMALL_G,
C_SMALL_H,
C_SMALL_I,
C_SMALL_J,
C_SMALL_K,
C_SMALL_L,
C_SMALL_M,
C_SMALL_N,
C_SMALL_O,
C_SMALL_P,
C_SMALL_Q,
C_SMALL_R,
C_SMALL_S,
C_SMALL_T,
C_SMALL_U,
C_SMALL_V,
C_SMALL_W,
C_SMALL_X,
C_SMALL_Y,
C_SMALL_Z,
C_LEFT_BRACE,
C_VERTICAL_BAR,
C_RIGHT_BRACE,
C_ASCII_TILDE,
C_BULLET,
C_BULLET,			/* 0x80 */
C_BULLET,
C_SNGQUOTELOW,
C_FLORIN,
C_DBLQUOTELOW,
C_ELLIPSIS,
C_DAGGER,
C_DBLDAGGER,
C_CIRCUMFLEX,
C_PERTHOUSAND,
0,
C_GUILSNGLEFT,
C_U_OE,
C_BULLET,
C_BULLET,
C_BULLET,
C_BULLET,           /* 0x90 */
C_QUOTESNGLEFT,
C_QUOTESNGRIGHT,
C_QUOTEDBLLEFT,
C_QUOTEDBLRIGHT,
C_BULLET,
C_ENDASH,
C_EMDASH,
C_TILDE,
C_TRADEMARK,
0,
C_GUILSNGRIGHT,
C_L_OE,
C_BULLET,
C_BULLET,
C_UY_DIERESIS,
C_NONBRKSPACE,		/* 0xa0 */
C_EXCLAMDOWN,
C_CENT,
C_STERLING,
C_CURRENCY,
C_YEN,
C_VERTICAL_BAR,
C_SECTION,
C_DIERESIS,
C_COPYRIGHT,
C_ORDFEMININE,
C_GUILSNGLEFT,
C_LOGICAL_NOT,
C_HYPHEN,
C_REGISTERED,
C_MACRON,
C_DEGREE,           /* 0xb0 */
C_PLUSMINUS,
0,		/* twosuperior */
0,		/* threesuperior */
C_ACUTE,
C_L_MU,
C_PARAGRAPH,
C_CNTR_DOT,
C_CEDILLA,
0,		/* onesuperior */
C_ORDMASCULINE,
C_GUILSNGRIGHT,
0, 		/* onequarter */
0,		/* onehalf */
0,		/* threequarters */
C_QUESTIONDOWN,
C_UA_GRAVE,         /* 0xc0 */
C_UA_ACUTE,
C_UA_CIRCUMFLEX,
C_UA_TILDE,
C_UA_DIERESIS,
C_UA_RING,
C_U_AE,
C_UC_CEDILLA,
C_UE_GRAVE,
C_UE_ACUTE,
C_UE_CIRCUMFLEX,
C_UE_DIERESIS,
C_UI_GRAVE,
C_UI_ACUTE,
C_UI_CIRCUMFLEX,
C_UI_DIERESIS,
0,		/* Eth */   /* 0xd0 */
C_UN_TILDE,
C_UO_GRAVE,
C_UO_ACUTE,
C_UO_CIRCUMFLEX,
C_UO_TILDE,
C_UO_DIERESIS,
0,		/* multiply */
C_UO_SLASH,
C_UU_GRAVE,
C_UU_ACUTE,
C_UU_CIRCUMFLEX,
C_UU_DIERESIS,
C_UY_ACUTE,
0, 		/* Thorn */
C_GERMANDBLS,
C_LA_GRAVE,
C_LA_ACUTE,
C_LA_CIRCUMFLEX,
C_LA_TILDE,
C_LA_DIERESIS,
C_LA_RING,
C_L_AE,
C_LC_CEDILLA,
C_LE_GRAVE,
C_LE_ACUTE,
C_LE_CIRCUMFLEX,
C_LE_DIERESIS,
C_LI_GRAVE,
C_LI_ACUTE,
C_LI_CIRCUMFLEX,
C_LI_DIERESIS,
0,		/* eth */
C_LN_TILDE,
C_LO_GRAVE,
C_LO_ACUTE,
C_LO_CIRCUMFLEX,
C_LO_TILDE,
C_LO_DIERESIS,
C_DIVISION,
C_LO_SLASH,
C_LU_GRAVE,
C_LU_ACUTE,
C_LU_CIRCUMFLEX,
C_LU_DIERESIS,
C_LY_ACUTE,
0, 		/* thorn */
C_LY_DIERESIS
};
/* end of WinAnsi encoding */

/*
 * sorted list of character names; these are looked up when
 * a "differences" list of encodings is read.
 * IF YOU CHANGE THIS ARRAY, CHANGE ARRAY charGEOSEquiv
 * BELOW AS WELL.
 */

@chunk char *charNames[] = {
  "AE",
  "Aacute",
  "Acircumflex",
  "Adieresis",
  "Agrave",
  "Aring",
  "Atilde",
  "Ccedilla",
  "Eacute",
  "Ecircumflex",
  "Edieresis",
  "Egrave",
  "Eth",
  "Iacute",
  "Icircumflex",
  "Idieresis",
  "Igrave",
  "Lslash",
  "Ntilde",
  "OE",
  "Oacute",
  "Ocircumflex",
  "Odieresis",
  "Ograve",
  "Oslash",
  "Otilde",
  "Scaron",
  "Thorn",
  "Uacute",
  "Ucircumflex",
  "Udieresis",
  "Ugrave",
  "Yacute",
  "Ydieresis",
  "Zcaron",
  "aacute",
  "acircumflex",
  "acute",
  "adieresis",
  "ae",
  "agrave",
  "ampersand",
  "aring",
  "asciicircum",
  "asciitilde",
  "asterisk",
  "at",
  "atilde",
  "backslash",
  "bar",
  "braceleft",
  "braceright",
  "bracketleft",
  "bracketright",
  "breve",
  "brokenbar",
  "bullet",
  "caron",
  "ccedilla",
  "cedilla",
  "cent",
  "circumflex",
  "colon",
  "comma",
  "copyright",
  "currency",
  "dagger",
  "daggerdbl",
  "degree",
  "dieresis",
  "divide",
  "dollar",
  "dotaccent",
  "dotlessi",
  "eacute",
  "ecircumflex",
  "edieresis",
  "egrave",
  "eight",
  "ellipsis",
  "emdash",
  "endash",
  "equal",
  "eth",
  "exclam",
  "exclamdown",
  "fi",
  "five",
  "florin",
  "four",
  "fraction",
  "germandbls",
  "grave",
  "greater",
  "guillemotleft",
  "guillemotright",
  "guilsinglleft",
  "guilsinglright",
  "hungarumlaut",
  "hyphen",
  "iacute",
  "icircumflex",
  "idieresis",
  "igrave",
  "less",
  "logicalnot",
  "lslash",
  "macron",
  "minus",
  "mu",
  "multiply",
  "nine",
  "ntilde",
  "numbersign",
  "oacute",
  "ocircumflex",
  "odieresis",
  "oe",
  "ogonek",
  "ograve",
  "one",
  "onehalf",
  "onequarter",
  "onesuperior",
  "ordfeminine",
  "ordmasculine",
  "oslash",
  "otilde",
  "paragraph",
  "parenleft",
  "parenright",
  "percent",
  "period",
  "periodcentered",
  "perthousand",
  "plus",
  "plusminus",
  "question",
  "questiondown",
  "quotedbl",
  "quotedblbase",
  "quotedblleft",
  "quotedblright",
  "quoteleft",
  "quoteright",
  "quotesinglbase",
  "quotesingle",
  "registered",
  "ring",
  "scaron",
  "section",
  "semicolon",
  "seven",
  "six",
  "slash",
  "space",
  "sterling",
  "thorn",
  "three",
  "threequarters",
  "threesuperior",
  "tilde",
  "trademark",
  "two",
  "twosuperior",
  "uacute",
  "ucircumflex",
  "udieresis",
  "ugrave",
  "underscore",
  "yacute",
  "ydieresis",
  "yen",
  "zcaron",
  "zero",
};


/* GEOS mappings for the characters named above array.
 * BOTH ARRAYS MUST MATCH ELEMENT BY ELEMENT.
 */

@chunk char charGEOSEquiv[] = {
C_U_AE,
C_UA_ACUTE,
C_UA_CIRCUMFLEX,
C_UA_DIERESIS,
C_UA_GRAVE,
C_UA_RING,
C_UA_TILDE,
C_UC_CEDILLA,
C_UE_ACUTE,
C_UE_CIRCUMFLEX,
C_UE_DIERESIS,
C_UE_GRAVE,
0,		/* Eth */
C_UI_ACUTE,
C_UI_CIRCUMFLEX,
C_UI_DIERESIS,
C_UI_GRAVE,
0,		/* Lslash */
C_UN_TILDE,
C_U_OE,
C_UO_ACUTE,
C_UO_CIRCUMFLEX,
C_UO_DIERESIS,
C_UO_GRAVE,
C_UO_SLASH,
C_UO_TILDE,
0,		/* Scaron */
0,		/* Thorn */
C_UU_ACUTE,
C_UU_CIRCUMFLEX,
C_UU_DIERESIS,
C_UU_GRAVE,
C_UY_ACUTE,
C_UY_DIERESIS,
0,		/* Zcaron */
C_LA_ACUTE,
C_LA_CIRCUMFLEX,
C_ACUTE,
C_LA_DIERESIS,
C_L_AE,
C_LA_GRAVE,
C_AMPERSAND,
C_LA_RING,
C_CIRCUMFLEX,
C_TILDE,
C_ASTERISK,
C_AT_SIGN,
C_LA_TILDE,
C_BACKSLASH,
C_VERTICAL_BAR,
C_LEFT_BRACE,
C_RIGHT_BRACE,
C_LEFT_BRACKET,
C_RIGHT_BRACKET,
C_BREVE,
C_VERTICAL_BAR,
C_BULLET,
C_CARON,
C_LC_CEDILLA,
C_CEDILLA,
C_CENT,
C_CIRCUMFLEX,
C_COLON,
C_COMMA,
C_COPYRIGHT,
C_CURRENCY,
C_DAGGER,
C_DBLDAGGER,
C_DEGREE,
C_DIERESIS,
C_DIVISION,
C_DOLLAR_SIGN,
C_DOTACCENT,
C_LI_DOTLESS,
C_LE_ACUTE,
C_LE_CIRCUMFLEX,
C_LE_DIERESIS,
C_LE_GRAVE,
C_EIGHT,
C_ELLIPSIS,
C_EMDASH,
C_ENDASH,
C_EQUAL,
0,		/* eth */
C_EXCLAMATION,
C_EXCLAMDOWN,
C_FI_LIGATURE,
C_FIVE,
C_FLORIN,
C_FOUR,
C_FRACTION,
C_GERMANDBLS,
C_GRAVE,
C_GREATER_THAN,
C_GUILLEDBLLEFT,
C_GUILLEDBLRIGHT,
C_GUILSNGLEFT,
C_GUILSNGRIGHT,
C_HUNGARUMLAT,
C_HYPHEN,
C_LI_ACUTE,
C_LI_CIRCUMFLEX,
C_LI_DIERESIS,
C_LI_GRAVE,
C_LESS_THAN,
C_LOGICAL_NOT,
0,		/* lslash */
C_MACRON,
C_MINUS,
C_L_MU,
0,		/* multiply */
C_NINE,
C_LN_TILDE,
C_NUMBER_SIGN,
C_LO_ACUTE,
C_LO_CIRCUMFLEX,
C_LO_DIERESIS,
C_L_OE,
C_OGONEK,
C_LO_GRAVE,
C_ONE,
0,		/* onehalf */
0, 		/* onequarter */
0,		/* onesuperior */
C_ORDFEMININE,
C_ORDMASCULINE,
C_LO_SLASH,
C_LO_TILDE,
C_PARAGRAPH,
C_LEFT_PAREN,
C_RIGHT_PAREN,
C_PERCENT,
C_PERIOD,
C_CNTR_DOT,
C_PERTHOUSAND,
C_PLUS,
C_PLUSMINUS,
C_QUESTION_MARK,
C_QUESTIONDOWN,
C_QUOTE,
C_DBLQUOTELOW,
C_QUOTEDBLLEFT,
C_QUOTEDBLRIGHT,
C_QUOTESNGLEFT,
C_QUOTESNGRIGHT,
C_SNGQUOTELOW,
C_SNG_QUOTE,
C_REGISTERED,
C_RING,
0,		/* scaron */
C_SECTION,
C_SEMICOLON,
C_SEVEN,
C_SIX,
C_SLASH,
C_SPACE,
C_STERLING,
0, 		/* thorn */
C_THREE,
0,		/* threequarters */
0,		/* threesuperior */
C_TILDE,
C_TRADEMARK,
C_TWO,
0,		/* twosuperior */
C_LU_ACUTE,
C_LU_CIRCUMFLEX,
C_LU_DIERESIS,
C_LU_GRAVE,
C_UNDERSCORE,
C_LY_ACUTE,
C_LY_DIERESIS,
C_YEN,
0,		/* zcaron */
C_ZERO
};

#define standardEncodingSize 335
@chunk char *standardEncodingNames[standardEncodingSize] = {
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  "space",
  "exclam",
  "quotedbl",
  "numbersign",
  "dollar",
  "percent",
  "ampersand",
  "quoteright",
  "parenleft",
  "parenright",
  "asterisk",
  "plus",
  "comma",
  "hyphen",
  "period",
  "slash",
  "zero",
  "one",
  "two",
  "three",
  "four",
  "five",
  "six",
  "seven",
  "eight",
  "nine",
  "colon",
  "semicolon",
  "less",
  "equal",
  "greater",
  "question",
  "at",
  "A",
  "B",
  "C",
  "D",
  "E",
  "F",
  "G",
  "H",
  "I",
  "J",
  "K",
  "L",
  "M",
  "N",
  "O",
  "P",
  "Q",
  "R",
  "S",
  "T",
  "U",
  "V",
  "W",
  "X",
  "Y",
  "Z",
  "bracketleft",
  "backslash",
  "bracketright",
  "asciicircum",
  "underscore",
  "quoteleft",
  "a",
  "b",
  "c",
  "d",
  "e",
  "f",
  "g",
  "h",
  "i",
  "j",
  "k",
  "l",
  "m",
  "n",
  "o",
  "p",
  "q",
  "r",
  "s",
  "t",
  "u",
  "v",
  "w",
  "x",
  "y",
  "z",
  "braceleft",
  "bar",
  "braceright",
  "asciitilde",
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  "exclamdown",
  "cent",
  "sterling",
  "fraction",
  "yen",
  "florin",
  "section",
  "currency",
  "quotesingle",
  "quotedblleft",
  "guillemotleft",
  "guilsinglleft",
  "guilsinglright",
  "fi",
  "fl",
  NULL,
  "endash",
  "dagger",
  "daggerdbl",
  "periodcentered",
  NULL,
  "paragraph",
  "bullet",
  "quotesinglbase",
  "quotedblbase",
  "quotedblright",
  "guillemotright",
  "ellipsis",
  "perthousand",
  NULL,
  "questiondown",
  NULL,
  "grave",
  "acute",
  "circumflex",
  "tilde",
  "macron",
  "breve",
  "dotaccent",
  "dieresis",
  NULL,
  "ring",
  "cedilla",
  NULL,
  "hungarumlaut",
  "ogonek",
  "caron",
  "emdash",
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  "AE",
  NULL,
  "ordfeminine",
  NULL,
  NULL,
  NULL,
  NULL,
  "Lslash",
  "Oslash",
  "OE",
  "ordmasculine",
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  "ae",
  NULL,
  NULL,
  NULL,
  "dotlessi",
  NULL,
  NULL,
  "lslash",
  "oslash",
  "oe",
  "germandbls",
  NULL,
  NULL,
  NULL,
  NULL,
  "Aacute",
  "Acircumflex",
  "Adieresis",
  "Agrave",
  "Aring",
  "Atilde",
  "Ccedilla",
  "Eacute",
  "Ecircumflex",
  "Edieresis",
  "Egrave",
  "Eth",
  "Iacute",
  "Icircumflex",
  "Idieresis",
  "Igrave",
  "Ntilde",
  "Oacute",
  "Ocircumflex",
  "Odieresis",
  "Ograve",
  "Otilde",
  "Scaron",
  "Thorn",
  "Uacute",
  "Ucircumflex",
  "Udieresis",
  "Ugrave",
  "Yacute",
  "Ydieresis",
  "Zcaron",
  "aacute",
  "acircumflex",
  "adieresis",
  "agrave",
  "aring",
  "atilde",
  "brokenbar",
  "ccedilla",
  "copyright",
  "degree",
  "divide",
  "eacute",
  "ecircumflex",
  "edieresis",
  "egrave",
  "eth",
  "iacute",
  "icircumflex",
  "idieresis",
  "igrave",
  "logicalnot",
  "minus",
  "mu",
  "multiply",
  "ntilde",
  "oacute",
  "ocircumflex",
  "odieresis",
  "ograve",
  "onehalf",
  "onequarter",
  "onesuperior",
  "otilde",
  "plusminus",
  "registered",
  "scaron",
  "thorn",
  "threequarters",
  "threesuperior",
  "trademark",
  "twosuperior",
  "uacute",
  "ucircumflex",
  "udieresis",
  "ugrave",
  "yacute",
  "ydieresis",
  "zcaron"
};

#define macRomanEncodingSize 256
@chunk char *macRomanEncodingNames[] = {
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  "space",
  "exclam",
  "quotedbl",
  "numbersign",
  "dollar",
  "percent",
  "ampersand",
  "quotesingle",
  "parenleft",
  "parenright",
  "asterisk",
  "plus",
  "comma",
  "hyphen",
  "period",
  "slash",
  "zero",
  "one",
  "two",
  "three",
  "four",
  "five",
  "six",
  "seven",
  "eight",
  "nine",
  "colon",
  "semicolon",
  "less",
  "equal",
  "greater",
  "question",
  "at",
  "A",
  "B",
  "C",
  "D",
  "E",
  "F",
  "G",
  "H",
  "I",
  "J",
  "K",
  "L",
  "M",
  "N",
  "O",
  "P",
  "Q",
  "R",
  "S",
  "T",
  "U",
  "V",
  "W",
  "X",
  "Y",
  "Z",
  "bracketleft",
  "backslash",
  "bracketright",
  "asciicircum",
  "underscore",
  "grave",
  "a",
  "b",
  "c",
  "d",
  "e",
  "f",
  "g",
  "h",
  "i",
  "j",
  "k",
  "l",
  "m",
  "n",
  "o",
  "p",
  "q",
  "r",
  "s",
  "t",
  "u",
  "v",
  "w",
  "x",
  "y",
  "z",
  "braceleft",
  "bar",
  "braceright",
  "asciitilde",
  NULL,
  "Adieresis",
  "Aring",
  "Ccedilla",
  "Eacute",
  "Ntilde",
  "Odieresis",
  "Udieresis",
  "aacute",
  "agrave",
  "acircumflex",
  "adieresis",
  "atilde",
  "aring",
  "ccedilla",
  "eacute",
  "egrave",
  "ecircumflex",
  "edieresis",
  "iacute",
  "igrave",
  "icircumflex",
  "idieresis",
  "ntilde",
  "oacute",
  "ograve",
  "ocircumflex",
  "odieresis",
  "otilde",
  "uacute",
  "ugrave",
  "ucircumflex",
  "udieresis",
  "dagger",
  "degree",
  "cent",
  "sterling",
  "section",
  "bullet",
  "paragraph",
  "germandbls",
  "registered",
  "copyright",
  "trademark",
  "acute",
  "dieresis",
  NULL,
  "AE",
  "Oslash",
  NULL,
  "plusminus",
  NULL,
  NULL,
  "yen",
  "mu",
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  "ordfeminine",
  "ordmasculine",
  NULL,
  "ae",
  "oslash",
  "questiondown",
  "exclamdown",
  "logicalnot",
  NULL,
  "florin",
  NULL,
  NULL,
  "guillemotleft",
  "guillemotright",
  "ellipsis",
  "space",
  "Agrave",
  "Atilde",
  "Otilde",
  "OE",
  "oe",
  "endash",
  "emdash",
  "quotedblleft",
  "quotedblright",
  "quoteleft",
  "quoteright",
  "divide",
  NULL,
  "ydieresis",
  "Ydieresis",
  "fraction",
  "currency",
  "guilsinglleft",
  "guilsinglright",
  "fi",
  "fl",
  "daggerdbl",
  "periodcentered",
  "quotesinglbase",
  "quotedblbase",
  "perthousand",
  "Acircumflex",
  "Ecircumflex",
  "Aacute",
  "Edieresis",
  "Egrave",
  "Iacute",
  "Icircumflex",
  "Idieresis",
  "Igrave",
  "Oacute",
  "Ocircumflex",
  NULL,
  "Ograve",
  "Uacute",
  "Ucircumflex",
  "Ugrave",
  "dotlessi",
  "circumflex",
  "tilde",
  "macron",
  "breve",
  "dotaccent",
  "ring",
  "cedilla",
  "hungarumlaut",
  "ogonek",
  "caron"
};

#define winAnsiEncodingSize 256
@chunk char *winAnsiEncodingNames[winAnsiEncodingSize] = {
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  "space",
  "exclam",
  "quotedbl",
  "numbersign",
  "dollar",
  "percent",
  "ampersand",
  "quotesingle",
  "parenleft",
  "parenright",
  "asterisk",
  "plus",
  "comma",
  "hyphen",
  "period",
  "slash",
  "zero",
  "one",
  "two",
  "three",
  "four",
  "five",
  "six",
  "seven",
  "eight",
  "nine",
  "colon",
  "semicolon",
  "less",
  "equal",
  "greater",
  "question",
  "at",
  "A",
  "B",
  "C",
  "D",
  "E",
  "F",
  "G",
  "H",
  "I",
  "J",
  "K",
  "L",
  "M",
  "N",
  "O",
  "P",
  "Q",
  "R",
  "S",
  "T",
  "U",
  "V",
  "W",
  "X",
  "Y",
  "Z",
  "bracketleft",
  "backslash",
  "bracketright",
  "asciicircum",
  "underscore",
  "grave",
  "a",
  "b",
  "c",
  "d",
  "e",
  "f",
  "g",
  "h",
  "i",
  "j",
  "k",
  "l",
  "m",
  "n",
  "o",
  "p",
  "q",
  "r",
  "s",
  "t",
  "u",
  "v",
  "w",
  "x",
  "y",
  "z",
  "braceleft",
  "bar",
  "braceright",
  "asciitilde",
  "bullet",
  "bullet",
  "bullet",
  "quotesinglbase",
  "florin",
  "quotedblbase",
  "ellipsis",
  "dagger",
  "daggerdbl",
  "circumflex",
  "perthousand",
  "Scaron",
  "guilsinglleft",
  "OE",
  "bullet",
  "bullet",
  "bullet",
  "bullet",
  "quoteleft",
  "quoteright",
  "quotedblleft",
  "quotedblright",
  "bullet",
  "endash",
  "emdash",
  "tilde",
  "trademark",
  "scaron",
  "guilsinglright",
  "oe",
  "bullet",
  "bullet",
  "Ydieresis",
  "space",
  "exclamdown",
  "cent",
  "sterling",
  "currency",
  "yen",
  "brokenbar",
  "section",
  "dieresis",
  "copyright",
  "ordfeminine",
  "guillemotleft",
  "logicalnot",
  "hyphen",
  "registered",
  "macron",
  "degree",
  "plusminus",
  "twosuperior",
  "threesuperior",
  "acute",
  "mu",
  "paragraph",
  "periodcentered",
  "cedilla",
  "onesuperior",
  "ordmasculine",
  "guillemotright",
  "onequarter",
  "onehalf",
  "threequarters",
  "questiondown",
  "Agrave",
  "Aacute",
  "Acircumflex",
  "Atilde",
  "Adieresis",
  "Aring",
  "AE",
  "Ccedilla",
  "Egrave",
  "Eacute",
  "Ecircumflex",
  "Edieresis",
  "Igrave",
  "Iacute",
  "Icircumflex",
  "Idieresis",
  "Eth",
  "Ntilde",
  "Ograve",
  "Oacute",
  "Ocircumflex",
  "Otilde",
  "Odieresis",
  "multiply",
  "Oslash",
  "Ugrave",
  "Uacute",
  "Ucircumflex",
  "Udieresis",
  "Yacute",
  "Thorn",
  "germandbls",
  "agrave",
  "aacute",
  "acircumflex",
  "atilde",
  "adieresis",
  "aring",
  "ae",
  "ccedilla",
  "egrave",
  "eacute",
  "ecircumflex",
  "edieresis",
  "igrave",
  "iacute",
  "icircumflex",
  "idieresis",
  "eth",
  "ntilde",
  "ograve",
  "oacute",
  "ocircumflex",
  "otilde",
  "odieresis",
  "divide",
  "oslash",
  "ugrave",
  "uacute",
  "ucircumflex",
  "udieresis",
  "yacute",
  "thorn",
  "ydieresis"
};

#define symbolEncodingSize 257
@chunk char *symbolEncodingNames[symbolEncodingSize] = {
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  "space",
  "exclam",
  "universal",
  "numbersign",
  "existential",
  "percent",
  "ampersand",
  "suchthat",
  "parenleft",
  "parenright",
  "asteriskmath",
  "plus",
  "comma",
  "minus",
  "period",
  "slash",
  "zero",
  "one",
  "two",
  "three",
  "four",
  "five",
  "six",
  "seven",
  "eight",
  "nine",
  "colon",
  "semicolon",
  "less",
  "equal",
  "greater",
  "question",
  "congruent",
  "Alpha",
  "Beta",
  "Chi",
  "Delta",
  "Epsilon",
  "Phi",
  "Gamma",
  "Eta",
  "Iota",
  "theta1",
  "Kappa",
  "Lambda",
  "Mu",
  "Nu",
  "Omicron",
  "Pi",
  "Theta",
  "Rho",
  "Sigma",
  "Tau",
  "Upsilon",
  "sigma1",
  "Omega",
  "Xi",
  "Psi",
  "Zeta",
  "bracketleft",
  "therefore",
  "bracketright",
  "perpendicular",
  "underscore",
  "radicalex",
  "alpha",
  "beta",
  "chi",
  "delta",
  "epsilon",
  "phi",
  "gamma",
  "eta",
  "iota",
  "phi1",
  "kappa",
  "lambda",
  "mu",
  "nu",
  "omicron",
  "pi",
  "theta",
  "rho",
  "sigma",
  "tau",
  "upsilon",
  "omega1",
  "omega",
  "xi",
  "psi",
  "zeta",
  "braceleft",
  "bar",
  "braceright",
  "similar",
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  "Upsilon1",
  "minute",
  "lessequal",
  "fraction",
  "infinity",
  "florin",
  "club",
  "diamond",
  "heart",
  "spade",
  "arrowboth",
  "arrowleft",
  "arrowup",
  "arrowright",
  "arrowdown",
  "degree",
  "plusminus",
  "second",
  "greaterequal",
  "multiply",
  "proportional",
  "partialdiff",
  "bullet",
  "divide",
  "notequal",
  "equivalence",
  "approxequal",
  "ellipsis",
  "arrowvertex",
  "arrowhorizex",
  "carriagereturn",
  "aleph",
  "Ifraktur",
  "Rfraktur",
  "weierstrass",
  "circlemultiply",
  "circleplus",
  "emptyset",
  "intersection",
  "union",
  "propersuperset",
  "reflexsuperset",
  "notsubset",
  "propersubset",
  "reflexsubset",
  "element",
  "notelement",
  "angle",
  "gradient",
  "registerserif",
  "copyrightserif",
  "trademarkserif",
  "product",
  "radical",
  "dotmath",
  "logicalnot",
  "logicaland",
  "logicalor",
  "arrowdblboth",
  "arrowdblleft",
  "arrowdblup",
  "arrowdblright",
  "arrowdbldown",
  "lozenge",
  "angleleft",
  "registersans",
  "copyrightsans",
  "trademarksans",
  "summation",
  "parenlefttp",
  "parenleftex",
  "parenleftbt",
  "bracketlefttp",
  "bracketleftex",
  "bracketleftbt",
  "bracelefttp",
  "braceleftmid",
  "braceleftbt",
  "braceex",
  NULL,
  "angleright",
  "integral",
  "integraltp",
  "integralex",
  "integralbt",
  "parenrighttp",
  "parenrightex",
  "parenrightbt",
  "bracketrighttp",
  "bracketrightex",
  "bracketrightbt",
  "bracerighttp",
  "bracerightmid",
  "bracerightbt",
  NULL,
  "apple"
};

@end ENCODINGS ;

/*
 * List of well-known fonts that we know to be non-symbolic.
 */

typedef struct {
    char *  WKF_name;
    int     WKF_flags;
} WellKnownFont;

WellKnownFont wellKnownFonts[] = {
    { "Times.New.Roman", fontSerif },       /* Windows NT */
    { "Arial", 0 },                         /* Windows NT */
    { "Courier", fontFixedWidth },          /* Windows NT */
    { "Verdana", 0 },                       /* Windows */
    { "Geometric", 0 },                     /* Macintosh */
	{ "OCRA", fontFixedWidth },				/* unknown */
};

//------------------------------------------------------------------------
// Character widths for built-in fonts.
//------------------------------------------------------------------------

@start WIDTHS, data;

@chunk unsigned short courierWidths[335] = {
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
     0,  600,  600,  600,  600,    0,  600,  600,
   600,  600,  600,  600,  600,  600,    0,  600,
     0,  600,  600,  600,  600,  600,  600,  600,
   600,    0,  600,  600,    0,  600,  600,  600,
   600,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,  600,    0,  600,    0,    0,    0,    0,
   600,  600,  600,  600,    0,    0,    0,    0,
     0,  600,    0,    0,    0,  600,    0,    0,
   600,  600,  600,  600,    0,    0,    0,    0,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600
};

@chunk unsigned short courierBoldWidths[335] = {
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
     0,  600,  600,  600,  600,    0,  600,  600,
   600,  600,  600,  600,  600,  600,    0,  600,
     0,  600,  600,  600,  600,  600,  600,  600,
   600,    0,  600,  600,    0,  600,  600,  600,
   600,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,  600,    0,  600,    0,    0,    0,    0,
   600,  600,  600,  600,    0,    0,    0,    0,
     0,  600,    0,    0,    0,  600,    0,    0,
   600,  600,  600,  600,    0,    0,    0,    0,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600
};

@chunk unsigned short courierBoldObliqueWidths[335] = {
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
     0,  600,  600,  600,  600,    0,  600,  600,
   600,  600,  600,  600,  600,  600,    0,  600,
     0,  600,  600,  600,  600,  600,  600,  600,
   600,    0,  600,  600,    0,  600,  600,  600,
   600,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,  600,    0,  600,    0,    0,    0,    0,
   600,  600,  600,  600,    0,    0,    0,    0,
     0,  600,    0,    0,    0,  600,    0,    0,
   600,  600,  600,  600,    0,    0,    0,    0,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600
};

@chunk unsigned short courierObliqueWidths[335] = {
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
     0,  600,  600,  600,  600,    0,  600,  600,
   600,  600,  600,  600,  600,  600,    0,  600,
     0,  600,  600,  600,  600,  600,  600,  600,
   600,    0,  600,  600,    0,  600,  600,  600,
   600,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,  600,    0,  600,    0,    0,    0,    0,
   600,  600,  600,  600,    0,    0,    0,    0,
     0,  600,    0,    0,    0,  600,    0,    0,
   600,  600,  600,  600,    0,    0,    0,    0,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600,  600,
   600,  600,  600,  600,  600,  600,  600
};

@chunk unsigned short helveticaWidths[335] = {
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
   278,  278,  355,  556,  556,  889,  667,  222,
   333,  333,  389,  584,  278,  333,  278,  278,
   556,  556,  556,  556,  556,  556,  556,  556,
   556,  556,  278,  278,  584,  584,  584,  556,
  1015,  667,  667,  722,  722,  667,  611,  778,
   722,  278,  500,  667,  556,  833,  722,  778,
   667,  778,  722,  667,  611,  722,  667,  944,
   667,  667,  611,  278,  278,  278,  469,  556,
   222,  556,  556,  500,  556,  556,  278,  556,
   556,  222,  222,  500,  222,  833,  556,  556,
   556,  556,  333,  500,  278,  556,  500,  722,
   500,  500,  500,  334,  260,  334,  584,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,  333,  556,  556,  167,  556,  556,  556,
   556,  191,  333,  556,  333,  333,  500,  500,
     0,  556,  556,  556,  278,    0,  537,  350,
   222,  333,  333,  556, 1000, 1000,    0,  611,
     0,  333,  333,  333,  333,  333,  333,  333,
   333,    0,  333,  333,    0,  333,  333,  333,
  1000,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0, 1000,    0,  370,    0,    0,    0,    0,
   556,  778, 1000,  365,    0,    0,    0,    0,
     0,  889,    0,    0,    0,  278,    0,    0,
   222,  611,  944,  611,    0,    0,    0,    0,
   667,  667,  667,  667,  667,  667,  722,  667,
   667,  667,  667,  722,  278,  278,  278,  278,
   722,  778,  778,  778,  778,  778,  667,  667,
   722,  722,  722,  722,  667,  667,  611,  556,
   556,  556,  556,  556,  556,  260,  500,  737,
   400,  584,  556,  556,  556,  556,  556,  278,
   278,  278,  278,  584,  584,  556,  584,  556,
   556,  556,  556,  556,  834,  834,  333,  556,
   584,  737,  500,  556,  834,  333, 1000,  333,
   556,  556,  556,  556,  500,  500,  500
};

@chunk unsigned short helveticaBoldWidths[335] = {
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
   278,  333,  474,  556,  556,  889,  722,  278,
   333,  333,  389,  584,  278,  333,  278,  278,
   556,  556,  556,  556,  556,  556,  556,  556,
   556,  556,  333,  333,  584,  584,  584,  611,
   975,  722,  722,  722,  722,  667,  611,  778,
   722,  278,  556,  722,  611,  833,  722,  778,
   667,  778,  722,  667,  611,  722,  667,  944,
   667,  667,  611,  333,  278,  333,  584,  556,
   278,  556,  611,  556,  611,  556,  333,  611,
   611,  278,  278,  556,  278,  889,  611,  611,
   611,  611,  389,  556,  333,  611,  556,  778,
   556,  556,  500,  389,  280,  389,  584,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,  333,  556,  556,  167,  556,  556,  556,
   556,  238,  500,  556,  333,  333,  611,  611,
     0,  556,  556,  556,  278,    0,  556,  350,
   278,  500,  500,  556, 1000, 1000,    0,  611,
     0,  333,  333,  333,  333,  333,  333,  333,
   333,    0,  333,  333,    0,  333,  333,  333,
  1000,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0, 1000,    0,  370,    0,    0,    0,    0,
   611,  778, 1000,  365,    0,    0,    0,    0,
     0,  889,    0,    0,    0,  278,    0,    0,
   278,  611,  944,  611,    0,    0,    0,    0,
   722,  722,  722,  722,  722,  722,  722,  667,
   667,  667,  667,  722,  278,  278,  278,  278,
   722,  778,  778,  778,  778,  778,  667,  667,
   722,  722,  722,  722,  667,  667,  611,  556,
   556,  556,  556,  556,  556,  280,  556,  737,
   400,  584,  556,  556,  556,  556,  611,  278,
   278,  278,  278,  584,  584,  611,  584,  611,
   611,  611,  611,  611,  834,  834,  333,  611,
   584,  737,  556,  611,  834,  333, 1000,  333,
   611,  611,  611,  611,  556,  556,  500
};

@chunk unsigned short helveticaBoldObliqueWidths[335] = {
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
   278,  333,  474,  556,  556,  889,  722,  278,
   333,  333,  389,  584,  278,  333,  278,  278,
   556,  556,  556,  556,  556,  556,  556,  556,
   556,  556,  333,  333,  584,  584,  584,  611,
   975,  722,  722,  722,  722,  667,  611,  778,
   722,  278,  556,  722,  611,  833,  722,  778,
   667,  778,  722,  667,  611,  722,  667,  944,
   667,  667,  611,  333,  278,  333,  584,  556,
   278,  556,  611,  556,  611,  556,  333,  611,
   611,  278,  278,  556,  278,  889,  611,  611,
   611,  611,  389,  556,  333,  611,  556,  778,
   556,  556,  500,  389,  280,  389,  584,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,  333,  556,  556,  167,  556,  556,  556,
   556,  238,  500,  556,  333,  333,  611,  611,
     0,  556,  556,  556,  278,    0,  556,  350,
   278,  500,  500,  556, 1000, 1000,    0,  611,
     0,  333,  333,  333,  333,  333,  333,  333,
   333,    0,  333,  333,    0,  333,  333,  333,
  1000,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0, 1000,    0,  370,    0,    0,    0,    0,
   611,  778, 1000,  365,    0,    0,    0,    0,
     0,  889,    0,    0,    0,  278,    0,    0,
   278,  611,  944,  611,    0,    0,    0,    0,
   722,  722,  722,  722,  722,  722,  722,  667,
   667,  667,  667,  722,  278,  278,  278,  278,
   722,  778,  778,  778,  778,  778,  667,  667,
   722,  722,  722,  722,  667,  667,  611,  556,
   556,  556,  556,  556,  556,  280,  556,  737,
   400,  584,  556,  556,  556,  556,  611,  278,
   278,  278,  278,  584,  584,  611,  584,  611,
   611,  611,  611,  611,  834,  834,  333,  611,
   584,  737,  556,  611,  834,  333, 1000,  333,
   611,  611,  611,  611,  556,  556,  500
};

@chunk unsigned short helveticaObliqueWidths[335] = {
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
   278,  278,  355,  556,  556,  889,  667,  222,
   333,  333,  389,  584,  278,  333,  278,  278,
   556,  556,  556,  556,  556,  556,  556,  556,
   556,  556,  278,  278,  584,  584,  584,  556,
  1015,  667,  667,  722,  722,  667,  611,  778,
   722,  278,  500,  667,  556,  833,  722,  778,
   667,  778,  722,  667,  611,  722,  667,  944,
   667,  667,  611,  278,  278,  278,  469,  556,
   222,  556,  556,  500,  556,  556,  278,  556,
   556,  222,  222,  500,  222,  833,  556,  556,
   556,  556,  333,  500,  278,  556,  500,  722,
   500,  500,  500,  334,  260,  334,  584,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,  333,  556,  556,  167,  556,  556,  556,
   556,  191,  333,  556,  333,  333,  500,  500,
     0,  556,  556,  556,  278,    0,  537,  350,
   222,  333,  333,  556, 1000, 1000,    0,  611,
     0,  333,  333,  333,  333,  333,  333,  333,
   333,    0,  333,  333,    0,  333,  333,  333,
  1000,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0, 1000,    0,  370,    0,    0,    0,    0,
   556,  778, 1000,  365,    0,    0,    0,    0,
     0,  889,    0,    0,    0,  278,    0,    0,
   222,  611,  944,  611,    0,    0,    0,    0,
   667,  667,  667,  667,  667,  667,  722,  667,
   667,  667,  667,  722,  278,  278,  278,  278,
   722,  778,  778,  778,  778,  778,  667,  667,
   722,  722,  722,  722,  667,  667,  611,  556,
   556,  556,  556,  556,  556,  260,  500,  737,
   400,  584,  556,  556,  556,  556,  556,  278,
   278,  278,  278,  584,  584,  556,  584,  556,
   556,  556,  556,  556,  834,  834,  333,  556,
   584,  737,  500,  556,  834,  333, 1000,  333,
   556,  556,  556,  556,  500,  500,  500
};

@chunk unsigned short symbolWidths[257] = {
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
   250,  333,  713,  500,  549,  833,  778,  439,
   333,  333,  500,  549,  250,  549,  250,  278,
   500,  500,  500,  500,  500,  500,  500,  500,
   500,  500,  278,  278,  549,  549,  549,  444,
   549,  722,  667,  722,  612,  611,  763,  603,
   722,  333,  631,  722,  686,  889,  722,  722,
   768,  741,  556,  592,  611,  690,  439,  768,
   645,  795,  611,  333,  863,  333,  658,  500,
   500,  631,  549,  549,  494,  439,  521,  411,
   603,  329,  603,  549,  549,  576,  521,  549,
   549,  521,  549,  603,  439,  576,  713,  686,
   493,  686,  494,  480,  200,  480,  549,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,  620,  247,  549,  167,  713,  500,  753,
   753,  753,  753, 1042,  987,  603,  987,  603,
   400,  549,  411,  549,  549,  713,  494,  460,
   549,  549,  549,  549, 1000,  603, 1000,  658,
   823,  686,  795,  987,  768,  768,  823,  768,
   768,  713,  713,  713,  713,  713,  713,  713,
   768,  713,  790,  790,  890,  823,  549,  250,
   713,  603,  603, 1042,  987,  603,  987,  603,
   494,  329,  790,  790,  786,  713,  384,  384,
   384,  384,  384,  384,  494,  494,  494,  494,
     0,  329,  274,  686,  686,  686,  384,  384,
   384,  384,  384,  384,  494,  494,  494,    0,
   790
};

@chunk unsigned short timesBoldWidths[335] = {
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
   250,  333,  555,  500,  500, 1000,  833,  333,
   333,  333,  500,  570,  250,  333,  250,  278,
   500,  500,  500,  500,  500,  500,  500,  500,
   500,  500,  333,  333,  570,  570,  570,  500,
   930,  722,  667,  722,  722,  667,  611,  778,
   778,  389,  500,  778,  667,  944,  722,  778,
   611,  778,  722,  556,  667,  722,  722, 1000,
   722,  722,  667,  333,  278,  333,  581,  500,
   333,  500,  556,  444,  556,  444,  333,  500,
   556,  278,  333,  556,  278,  833,  556,  500,
   556,  556,  444,  389,  333,  556,  500,  722,
   500,  500,  444,  394,  220,  394,  520,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,  333,  500,  500,  167,  500,  500,  500,
   500,  278,  500,  500,  333,  333,  556,  556,
     0,  500,  500,  500,  250,    0,  540,  350,
   333,  500,  500,  500, 1000, 1000,    0,  500,
     0,  333,  333,  333,  333,  333,  333,  333,
   333,    0,  333,  333,    0,  333,  333,  333,
  1000,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0, 1000,    0,  300,    0,    0,    0,    0,
   667,  778, 1000,  330,    0,    0,    0,    0,
     0,  722,    0,    0,    0,  278,    0,    0,
   278,  500,  722,  556,    0,    0,    0,    0,
   722,  722,  722,  722,  722,  722,  722,  667,
   667,  667,  667,  722,  389,  389,  389,  389,
   722,  778,  778,  778,  778,  778,  556,  611,
   722,  722,  722,  722,  722,  722,  667,  500,
   500,  500,  500,  500,  500,  220,  444,  747,
   400,  570,  444,  444,  444,  444,  500,  278,
   278,  278,  278,  570,  570,  556,  570,  556,
   500,  500,  500,  500,  750,  750,  300,  500,
   570,  747,  389,  556,  750,  300, 1000,  300,
   556,  556,  556,  556,  500,  500,  444
};

@chunk unsigned short timesBoldItalicWidths[335] = {
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
   250,  389,  555,  500,  500,  833,  778,  333,
   333,  333,  500,  570,  250,  333,  250,  278,
   500,  500,  500,  500,  500,  500,  500,  500,
   500,  500,  333,  333,  570,  570,  570,  500,
   832,  667,  667,  667,  722,  667,  667,  722,
   778,  389,  500,  667,  611,  889,  722,  722,
   611,  722,  667,  556,  611,  722,  667,  889,
   667,  611,  611,  333,  278,  333,  570,  500,
   333,  500,  500,  444,  500,  444,  333,  500,
   556,  278,  278,  500,  278,  778,  556,  500,
   500,  500,  389,  389,  278,  556,  444,  667,
   500,  444,  389,  348,  220,  348,  570,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,  389,  500,  500,  167,  500,  500,  500,
   500,  278,  500,  500,  333,  333,  556,  556,
     0,  500,  500,  500,  250,    0,  500,  350,
   333,  500,  500,  500, 1000, 1000,    0,  500,
     0,  333,  333,  333,  333,  333,  333,  333,
   333,    0,  333,  333,    0,  333,  333,  333,
  1000,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,  944,    0,  266,    0,    0,    0,    0,
   611,  722,  944,  300,    0,    0,    0,    0,
     0,  722,    0,    0,    0,  278,    0,    0,
   278,  500,  722,  500,    0,    0,    0,    0,
   667,  667,  667,  667,  667,  667,  667,  667,
   667,  667,  667,  722,  389,  389,  389,  389,
   722,  722,  722,  722,  722,  722,  556,  611,
   722,  722,  722,  722,  611,  611,  611,  500,
   500,  500,  500,  500,  500,  220,  444,  747,
   400,  570,  444,  444,  444,  444,  500,  278,
   278,  278,  278,  606,  606,  576,  570,  556,
   500,  500,  500,  500,  750,  750,  300,  500,
   570,  747,  389,  500,  750,  300, 1000,  300,
   556,  556,  556,  556,  444,  444,  389
};

@chunk unsigned short timesItalicWidths[335] = {
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
   250,  333,  420,  500,  500,  833,  778,  333,
   333,  333,  500,  675,  250,  333,  250,  278,
   500,  500,  500,  500,  500,  500,  500,  500,
   500,  500,  333,  333,  675,  675,  675,  500,
   920,  611,  611,  667,  722,  611,  611,  722,
   722,  333,  444,  667,  556,  833,  667,  722,
   611,  722,  611,  500,  556,  722,  611,  833,
   611,  556,  556,  389,  278,  389,  422,  500,
   333,  500,  500,  444,  500,  444,  278,  500,
   500,  278,  278,  444,  278,  722,  500,  500,
   500,  500,  389,  389,  278,  500,  444,  667,
   444,  444,  389,  400,  275,  400,  541,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,  389,  500,  500,  167,  500,  500,  500,
   500,  214,  556,  500,  333,  333,  500,  500,
     0,  500,  500,  500,  250,    0,  523,  350,
   333,  556,  556,  500,  889, 1000,    0,  500,
     0,  333,  333,  333,  333,  333,  333,  333,
   333,    0,  333,  333,    0,  333,  333,  333,
   889,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,  889,    0,  276,    0,    0,    0,    0,
   556,  722,  944,  310,    0,    0,    0,    0,
     0,  667,    0,    0,    0,  278,    0,    0,
   278,  500,  667,  500,    0,    0,    0,    0,
   611,  611,  611,  611,  611,  611,  667,  611,
   611,  611,  611,  722,  333,  333,  333,  333,
   667,  722,  722,  722,  722,  722,  500,  611,
   722,  722,  722,  722,  556,  556,  556,  500,
   500,  500,  500,  500,  500,  275,  444,  760,
   400,  675,  444,  444,  444,  444,  500,  278,
   278,  278,  278,  675,  675,  500,  675,  500,
   500,  500,  500,  500,  750,  750,  300,  500,
   675,  760,  389,  500,  750,  300,  980,  300,
   500,  500,  500,  500,  444,  444,  389
};

@chunk unsigned short timesRomanWidths[335] = {
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
   250,  333,  408,  500,  500,  833,  778,  333,
   333,  333,  500,  564,  250,  333,  250,  278,
   500,  500,  500,  500,  500,  500,  500,  500,
   500,  500,  278,  278,  564,  564,  564,  444,
   921,  722,  667,  667,  722,  611,  556,  722,
   722,  333,  389,  722,  611,  889,  722,  722,
   556,  722,  667,  556,  611,  722,  722,  944,
   722,  722,  611,  333,  278,  333,  469,  500,
   333,  444,  500,  444,  500,  444,  333,  500,
   500,  278,  278,  500,  278,  778,  500,  500,
   500,  500,  333,  389,  278,  500,  500,  722,
   500,  500,  444,  480,  200,  480,  541,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,  333,  500,  500,  167,  500,  500,  500,
   500,  180,  444,  500,  333,  333,  556,  556,
     0,  500,  500,  500,  250,    0,  453,  350,
   333,  444,  444,  500, 1000, 1000,    0,  444,
     0,  333,  333,  333,  333,  333,  333,  333,
   333,    0,  333,  333,    0,  333,  333,  333,
  1000,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,  889,    0,  276,    0,    0,    0,    0,
   611,  722,  889,  310,    0,    0,    0,    0,
     0,  667,    0,    0,    0,  278,    0,    0,
   278,  500,  722,  500,    0,    0,    0,    0,
   722,  722,  722,  722,  722,  722,  667,  611,
   611,  611,  611,  722,  333,  333,  333,  333,
   722,  722,  722,  722,  722,  722,  556,  556,
   722,  722,  722,  722,  722,  722,  611,  444,
   444,  444,  444,  444,  444,  200,  444,  760,
   400,  564,  444,  444,  444,  444,  500,  278,
   278,  278,  278,  564,  564,  500,  564,  500,
   500,  500,  500,  500,  750,  750,  300,  500,
   564,  760,  389,  500,  750,  300,  980,  300,
   500,  500,  500,  500,  500,  500,  444
};

@if 0 /* don't need this yet */
@chunk unsigned short zapfDingbatsWidths[270] = {
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
   278,  974,  961,  974,  980,  719,  789,  790,
   791,  690,  960,  939,  549,  855,  911,  933,
   911,  945,  974,  755,  846,  762,  761,  571,
   677,  763,  760,  759,  754,  494,  552,  537,
   577,  692,  786,  788,  788,  790,  793,  794,
   816,  823,  789,  841,  823,  833,  816,  831,
   923,  744,  723,  749,  790,  792,  695,  776,
   768,  792,  759,  707,  708,  682,  701,  826,
   815,  789,  789,  707,  687,  696,  689,  786,
   787,  713,  791,  785,  791,  873,  761,  762,
   762,  759,  759,  892,  892,  788,  784,  438,
   138,  277,  415,  392,  392,  668,  668,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,
     0,  732,  544,  544,  910,  667,  760,  760,
   776,  595,  694,  626,  788,  788,  788,  788,
   788,  788,  788,  788,  788,  788,  788,  788,
   788,  788,  788,  788,  788,  788,  788,  788,
   788,  788,  788,  788,  788,  788,  788,  788,
   788,  788,  788,  788,  788,  788,  788,  788,
   788,  788,  788,  788,  894,  838, 1016,  458,
   748,  924,  748,  918,  927,  928,  928,  834,
   873,  828,  924,  924,  917,  930,  931,  463,
   883,  836,  836,  867,  867,  696,  696,  874,
     0,  874,  760,  946,  771,  865,  771,  888,
   967,  888,  831,  873,  927,  970,  918,    0,
   509,  410,  509,  410,  234,  234,  390,  390,
   276,  276,  317,  317,  334,  334
};
@endif

@end WIDTHS;


#endif /* _GFXFONT2_GOH_ */



@if 0

This is the original list, based on cmapLatin1.asm.
However, it seems that most encodings I've seen have been
based on the PDF "standard" encoding, which is different and
which I've implemented in the code above.

const byte pdfToGeosMap[256] = {
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0,
0, 
0, 
0, 
0, 
0, 
0, 
0, 
0,
0,
0,
C_ASCII_CIRCUMFLEX,
0,
0,
0,
0,
C_ASCII_TILDE,
C_SPACE,
C_EXCLAMATION,
C_QUOTE,
C_NUMBER_SIGN,
C_DOLLAR_SIGN,
C_PERCENT,
C_AMPERSAND,
C_SNG_QUOTE,
C_LEFT_PAREN,
C_RIGHT_PAREN,
C_ASTERISK,
C_PLUS,
C_COMMA,
C_MINUS,
C_PERIOD,
C_SLASH,
C_ZERO,
C_ONE,
C_TWO,
C_THREE,
C_FOUR,
C_FIVE,
C_SIX,
C_SEVEN,
C_EIGHT,
C_NINE,
C_COLON,
C_SEMICOLON,
C_LESS_THAN,
C_EQUAL,
C_GREATER_THAN,
C_QUESTION_MARK,
C_AT_SIGN,
C_CAP_A,
C_CAP_B,
C_CAP_C,
C_CAP_D,
C_CAP_E,
C_CAP_F,
C_CAP_G,
C_CAP_H,
C_CAP_I,
C_CAP_J,
C_CAP_K,
C_CAP_L,
C_CAP_M,
C_CAP_N,
C_CAP_O,
C_CAP_P,
C_CAP_Q,
C_CAP_R,
C_CAP_S,
C_CAP_T,
C_CAP_U,
C_CAP_V,
C_CAP_W,
C_CAP_X,
C_CAP_Y,
C_CAP_Z,
C_LEFT_BRACKET,
C_BACKSLASH,
C_RIGHT_BRACKET,
C_ASCII_CIRCUMFLEX,
C_UNDERSCORE,
C_BACKQUOTE,
C_SMALL_A,
C_SMALL_B,
C_SMALL_C,
C_SMALL_D,
C_SMALL_E,
C_SMALL_F,
C_SMALL_G,
C_SMALL_H,
C_SMALL_I,
C_SMALL_J,
C_SMALL_K,
C_SMALL_L,
C_SMALL_M,
C_SMALL_N,
C_SMALL_O,
C_SMALL_P,
C_SMALL_Q,
C_SMALL_R,
C_SMALL_S,
C_SMALL_T,
C_SMALL_U,
C_SMALL_V,
C_SMALL_W,
C_SMALL_X,
C_SMALL_Y,
C_SMALL_Z,
C_LEFT_BRACE,
C_VERTICAL_BAR,
C_RIGHT_BRACE,
C_ASCII_TILDE,
C_DELETE,
0,			/* 0x80 */
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
C_NONBRKSPACE,		/* 0xa0 */
C_EXCLAMDOWN,
C_CENT,
C_STERLING,
C_CURRENCY,
C_YEN,
C_VERTICAL_BAR,
C_SECTION,
C_DIERESIS,
C_COPYRIGHT,
C_ORDFEMININE,
C_GUILLEDBLLEFT,
C_LOGICAL_NOT,
C_OPTHYPHEN,
C_REGISTERED,
0,
C_DEGREE,		/* 0xb0 */
C_PLUSMINUS,
0,
0,
C_ACUTE,
C_L_MU,
C_PARAGRAPH,
C_CNTR_DOT,
0,
0,
C_ORDMASCULINE,
C_GUILLEDBLRIGHT,
0,
0,
0,
C_QUESTIONDOWN,
C_UA_GRAVE,		/* 0xc0 */
C_UA_ACUTE,
C_UA_CIRCUMFLEX,
C_UA_TILDE,
C_UA_DIERESIS,
C_UA_RING,
C_U_AE,
C_UC_CEDILLA,
C_UE_GRAVE,
C_UE_ACUTE,
C_UE_CIRCUMFLEX,
C_UE_DIERESIS,
C_UI_GRAVE,
C_UI_ACUTE,
C_UI_CIRCUMFLEX,
C_UI_DIERESIS,
0,			/* 0xd0 */
C_UN_TILDE,
C_UO_GRAVE,
C_UO_ACUTE,
C_UO_CIRCUMFLEX,
C_UO_TILDE,
C_UO_DIERESIS,
C_SMALL_X,
C_UO_SLASH,
C_UU_GRAVE,
C_UU_ACUTE,
C_UU_CIRCUMFLEX,
C_UU_DIERESIS,
C_UY_ACUTE,
0,
C_GERMANDBLS,
C_LA_GRAVE,		/* 0xc0 */
C_LA_ACUTE,
C_LA_CIRCUMFLEX,
C_LA_TILDE,
C_LA_DIERESIS,
C_LA_RING,
C_L_AE,
C_LC_CEDILLA,
C_LE_GRAVE,
C_LE_ACUTE,
C_LE_CIRCUMFLEX,
C_LE_DIERESIS,
C_LI_GRAVE,
C_LI_ACUTE,
C_LI_CIRCUMFLEX,
C_LI_DIERESIS,
0,			/* 0xf0 */
C_LN_TILDE,
C_LO_GRAVE,
C_LO_ACUTE,
C_LO_CIRCUMFLEX,
C_LO_TILDE,
C_LO_DIERESIS,
C_DIVISION,
C_LO_SLASH,
C_LU_GRAVE,
C_LU_ACUTE,
C_LU_CIRCUMFLEX,
C_LU_DIERESIS,
C_LY_ACUTE,
0,
C_LY_DIERESIS
};
@endif /* 0 */
