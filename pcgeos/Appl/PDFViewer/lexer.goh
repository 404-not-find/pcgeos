//========================================================================
//
// Lexer.h
//
// Copyright 1996 Derek B. Noonburg
//
//========================================================================

#ifndef LEXER_H
#define LEXER_H

#ifdef __GNUC__
#pragma interface
#endif


//------------------------------------------------------------------------
// Lexer
//------------------------------------------------------------------------


  // Construct a lexer for a single stream.  Deletes the stream when
  // lexer is deleted.
extern
void LexerInitFromStream(Lexer *lexer, Stream *str, XRef *xref);

  // Construct a lexer for a stream or array of streams (assumes obj
  // is either a stream or array of streams).
extern
void LexerInitFromObj(Lexer *lexer, Obj *obj, XRef *xref);

  // Destructor.
extern
void LexerFree(Lexer *lexer);

  // Get the next object from the input stream.
extern
void LexerGetObj (Lexer *lexer, Obj *obj);

  // Skip to the beginning of the next line in the input stream.
extern
void LexerSkipToNextLine (Lexer *lexer);

  // Skip over one character.
extern
void LexerSkipChar(Lexer *lexer);

  // Get stream.
extern
  Stream *LexerGetStream(Lexer *lexer);

  // Get current position in file.
extern
long LexerGetPos(Lexer *lexer);

  // Set position in file.
extern
void LexerSetPos(Lexer *lexer, long pos);


extern
long LexerGetChar(Lexer *lexer);
extern
long LexerLookChar(Lexer *lexer);

extern
XRef *LexerGetXRef(Lexer *lexer);


#endif
