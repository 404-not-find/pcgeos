/***********************************************************************
 *
 *	Copyright (c) GeoWorks 1990 -- All Rights Reserved
 *
 * PROJECT:	  PCGEOS
 * MODULE:	  Graphical Setup -- Printer selection
 * FILE:	  setupPrinter.ui
 *
 * AUTHOR:  	  Adam de Boor: Oct  5, 1990
 *
 * REVISION HISTORY:
 *	Date	  Name	    Description
 *	----	  ----	    -----------
 *	10/5/90	  ardeb	    Initial version
 *
 * DESCRIPTION:
 *	Definitions for selecting/testing the printer.
 *
 *
 * 	$Id: setupPrinter.ui,v 1.1 97/04/04 16:28:00 newdeal Exp $
 *
 ***********************************************************************/

#if DO_DBCS
#define CHARS wchar
#define OPENDBLQ C_DOUBLE_TURNED_COMMA_QUOTATION_MARK
#define CLOSEDBLQ C_DOUBLE_COMMA_QUOTATION_MARK
#else
#define CHAR char
#define OPENDBLQ C_QUOTEDBLLEFT
#define CLOSEDBLQ C_QUOTEDBLRIGHT
#endif

start	Interface;

/*******************************************************************************

	PrinterSelectScreen

*******************************************************************************/

PrinterSelectScreen = SetupScreen {
	visibility = dialog;
	children = PrinterSelectText, PrinterSelectList;
	hints = { SETUP_FULL_SCREEN_HINTS }
	enterAction = MSG_SETUP_PRINTER_SELECTED, process;
	escapeAction = MSG_SETUP_SCREEN_DISMISS, PrinterSelectScreen;
	instructions = ENTERToContinue, ESCToReturnToPrev;
}

PrinterSelectText = SetupTextDisplay {
	text = data {
		CHARS	"What kind of printer do you have connected to your computer?  Choose one of the models from this list.\r"
		CHARS	"\r"
		CHARS	"The list is quite long; press the UP and DOWN arrows to scroll through it one item at a time. Press PgUp and PgDn to scroll more items at once.  Typing the first few letters of a printer name will position the list at the first printer whose name begins with those letters.\r"
		CHARS	0
	}
}

PrinterSelectList = SetupDeviceList {
	tocFlags = default +extendedDeviceDrivers;
	tokenChars = "'PRDR'";
	hints = {
		ATTR_GEN_PATH_DATA {
			GenFilePath <SP_PRINTER_DRIVERS, 0>
		},
		HINT_ITEM_GROUP_SCROLLABLE,
		HINT_DEFAULT_FOCUS,
		ATTR_GEN_INIT_FILE_KEY {
			char "device",0
		},
		HINT_FIXED_SIZE {
			SpecWidth <SST_WIDE_CHAR_WIDTHS, 25>
			SpecHeight <SST_LINES_OF_TEXT, 6>
			word	6
		},
		ATTR_PREF_TOC_LIST_EXTRA_ENTRY_1 {
			PrefTocExtraEntry <PrinterSpecialDevice,
				PrinterSpecialDriver>
		}
	}

}


chunk PrinterSpecialDevice = "None";
chunk PrinterSpecialDriver = "none";

end	Interface;

start Strings;

chunk printerOnString = " on ";

/*
 * Port strings that are used in combination with the " on " string
 * above to create the category name for a printer.
 */

chunk lpt1String 	= "LPT1";

chunk lpt2String 	= "LPT2";

chunk lpt3String 	= "LPT3";

chunk com1String 	= "COM1";

chunk com2String 	= "COM2";

chunk com3String 	= "COM3";

chunk com4String 	= "COM4";

chunk fileString 	= " to File";

chunk nothingString 	= "Unknown";

end	Strings;

start	Interface;
/*******************************************************************************

	PrinterPortScreen

*******************************************************************************/

PrinterPortScreen = SetupScreen {
	visibility = dialog;
	children = PrinterPortText, PrinterPortList;
	hints = { SETUP_FULL_SCREEN_HINTS }
	enterAction = MSG_SETUP_PRINTER_PORT_SELECTED, process;
	escapeAction = MSG_SETUP_SCREEN_DISMISS, PrinterPortScreen;
	f10Action = MSG_GEN_INTERACTION_INITIATE, PrinterSelectScreen;
	instructions = ENTERToContinue, ESCToReturnToPrev, F10ToChangePrinter;
}

PrinterPortText = SetupTextDisplay {
	text = data {
		CHARS	"Where did you plug your printer into your computer?\r"
		CHARS	"\r"
		CHARS	"If you're not sure, just press ENTER, as you will test the printer in a moment. It won't work if the port is incorrect, but you'll be able to return here if the test fails."
		CHARS	0
	}
}

PrinterPortList = PrefItemGroup {
	initFileFlags = default +useItemStrings;
	moniker = "Port:";
	children = Lpt1Item,
		Lpt2Item,
		Lpt3Item,
		Com1Item,
		Com2Item,
		Com3Item,
		Com4Item;
	destination = process;
	selection = "offset lpt1Info";
	numSelections = 1;
	hints = {
		INIT_FILE_KEY(port),
		ATTR_GEN_ITEM_GROUP_STATUS_MSG {
			word MSG_SETUP_SET_PRINTER_PORT
		},
		HINT_ORIENT_CHILDREN_VERTICALLY,
		HINT_DEFAULT_FOCUS,
		HINT_ALLOW_CHILDREN_TO_WRAP,
		HINT_FIXED_SIZE {
			SpecWidth <>
			SpecHeight <SST_LINES_OF_TEXT, 1>
			word	7
		}  
	}
}


Lpt1Item = PrefStringItem {
	moniker = "LPT1 (parallel)";
	identifier = "offset lpt1Info";
	initFileString = "LPT1";
}

Lpt2Item = PrefStringItem {
	moniker = "LPT2 (parallel)";
	identifier = "offset lpt2Info";
	initFileString = "LPT2";
}

Lpt3Item = PrefStringItem {
	moniker = "LPT3 (parallel)";
	identifier = "offset lpt3Info";
	initFileString = "LPT3";
}

Com1Item = PrefStringItem {
	moniker = "COM1 (serial)";
	identifier = "offset com1Info";
	initFileString = "COM1";
}

Com2Item = PrefStringItem {
	moniker = "COM2 (serial)";
	identifier = "offset com2Info";
	initFileString = "COM2";
}

Com3Item = PrefStringItem {
	moniker = "COM3 (serial)";
	identifier = "offset com3Info";
	initFileString = "COM3";
}

Com4Item = PrefStringItem {
	moniker = "COM4 (serial)";
	identifier = "offset com4Info";
	initFileString = "COM4";
}


/*******************************************************************************

	PrinterSerialIntScreen

*******************************************************************************/

PrinterSerialIntScreen = SetupScreen {
	visibility = dialog;
	children = PrinterSerialIntText, PrinterSerialIntRange;
	hints = { SETUP_FULL_SCREEN_HINTS }
	enterAction = MSG_SETUP_PRINTER_INT_SELECTED, process;
	escapeAction = MSG_SETUP_SCREEN_DISMISS, PrinterSerialIntScreen;
	f10Action = MSG_GEN_INTERACTION_INITIATE, PrinterSelectScreen;
	instructions = ENTERToContinue, F10ToChangePrinter,
		ESCToReturnToPrev, F3ToExitToDOS;
}

PrinterSerialIntText = SetupTextDisplay {
	text = data {
		CHARS	"You must now specify the interrupt level of the COM port you plugged your printer into. The number below is most likely correct.\r"
		CHARS	"\r"
		CHARS	"If you don't know the interrupt level, just press ENTER.  You'll have an opportunity to test this choice in a moment.\r"
		CHARS	"\r"
		CHARS	"Note: the interrupt level of the COM port should not conflict with any of your other devices, such as COM1 (level 4) or COM2 (level 3).\r"
		CHARS	"\r"
		CHARS	"Use the UP and DOWN arrows to change the interrupt level shown in the box below."
		CHARS	0
	}
	hints = {
		  HINT_FIXED_SIZE {
			SpecWidth <SST_PIXELS, 500>
			SpecHeight <>
		  }
	}
}

PrinterSerialIntRange = GenValue {
	minimum = 2;
	maximum = 7;
	increment = 1;
	hints = {HINT_VALUE_NAVIGATE_TO_NEXT_FIELD_ON_RETURN_PRESS}
}

/*******************************************************************************

	PrinterSerialScreen

*******************************************************************************/

PrinterSerialScreen = SetupScreen {
	visibility = dialog;
	children = PrinterSerialText;
	hints = { SETUP_FULL_SCREEN_HINTS }
	enterAction = MSG_GEN_INTERACTION_INITIATE, PrinterTestScreen;
	escapeAction = MSG_SETUP_SCREEN_DISMISS, PrinterSerialScreen;
	f10Action = MSG_GEN_INTERACTION_INITIATE, PrinterSelectScreen;
	instructions = ENTERToContinue, ESCToReturnToPrev, F10ToChangePrinter;
}

PrinterSerialText = SetupTextDisplay {
	hints = {
		ATTR_GEN_TEXT_PARA_ATTR {
			word	PrinterSerialParaAttr
		}
	}
	text = data {
		CHARS	"Currently, the serial port is set for the following:\r"
		CHARS	"\r"
		CHARS	"Speed (baud):\t9600\r"
		CHARS	"Parity:\tNone\r"
		CHARS	"Word Length:\t8 bits\r"
		CHARS	"Stop Bits:\t1\r"
		CHARS	"Handshaking:\tSoftware (XON/XOFF)\r"
		CHARS	"\r"
		CHARS	"If these are not correct for your printer, please use the Preferences desk tool to install and test it."
		CHARS	0
	}
}

chunk PrinterSerialParaAttr = data {
; Regular paragraph w/2-inch tabs & left-justified paragraph
    PARA_ATTR_JUST_LEFT_RIGHT_PARA_TABS(2, J_LEFT, 0, 0, 0, 3)
    TAB_POS_TYPE(2*8, TT_LEFT)
    TAB_POS_TYPE(4*8, TT_LEFT)
    TAB_POS_TYPE(6*8, TT_LEFT)
}
/*******************************************************************************

	PrinterTestScreen

*******************************************************************************/

PrinterTestScreen = SetupScreen {
	visibility = dialog;
	children = PrinterTestText, PrinterTestTrigger;
	hints = { SETUP_FULL_SCREEN_HINTS }
	enterAction = MSG_SETUP_PRINTER_TEST_COMPLETE, process;
	escapeAction = MSG_SETUP_SCREEN_DISMISS, PrinterTestScreen;
	f10Action = MSG_GEN_INTERACTION_INITIATE, PrinterSelectScreen;
	instructions = ENTERToContinue, ESCToReturnToPrev, F10ToChangePrinter;
}

/* jfh 12/2/03 - this text doesn't localize but all the rest in this file does.
	It seems that ResEdit doesn't like text with more than one substitution
	(\x01 or ,01,) in it. */
PrinterTestText = SetupTextDisplay vardataReloc {
	text = data {
ptestStart	label	CHARS
		CHARS	"Move the pointer over the ",
			OPENDBLQ, "Click here to test", CLOSEDBLQ,
			" box and press and release the left mouse button. The box will flash and your printer should begin printing the test page momentarily.\r"
		CHARS	"\r"
		CHARS	"Possible problems:\r"
ptestTable	label	CHARS
		CHARS	"1.\tYour printer didn't print: you probably chose the wrong port. Press ESC to select a different one.\r"


		CHARS	"2.\tYour printer didn't print: The port may be configured to use a different interrupt level than is standard.  You can change port interrupt levels from the Preferences Computer utility once you enter ",01," and test the printer there.\r"

		CHARS	"3.\tIt printed, but the test page did not come out right: The port is probably fine, but you should press F10 and make sure that the correct printer model is selected.\r"
/*		CHARS	"4.\t",01, " may be having trouble communicating with your port.  Please check the Troubleshooting Guide's section on Printing.\r"
*/		CHARS	"4.\tBreadbox Ensemble may be having trouble communicating with your port.  Please check the Troubleshooting Guide's section on Printing.\r"
		CHARS	0
	}
	hints = {
		ATTR_GEN_TEXT_MULTIPLE_PARA_ATTR_RUNS {
			word	PrinterTestRulerRuns
		},
		HINT_FIXED_SIZE {
			SpecWidth <SST_PIXELS, 588>
			SpecHeight <>
		},
		INIT_FILE_CATEGORY(ui),
		INIT_FILE_KEY(productName),
		ATTR_SETUP_TEXT_DEFAULT_PARAM {
			I_OPTR	DefaultProductName
		}
	}
}

chunk PrinterTestRulerRuns = data {
    RUN_ARRAY_HEADER(3, PrinterTestResultsRulers)
    TextRunArrayElement \
	TRAE(ptestStart, ptestStart, TR_REGULAR_RULER),
	TRAE(ptestTable, ptestStart, TR_OUTDENTED_RULER),
	TRAE_END
}


chunk PrinterTestResultsRulers = data {
DRE_base	label	byte
    PARA_ATTR_ELEMENT_ARRAY_HEADER(2)
DRE_element0   word (_DRE_element0 - DRE_base)
DRE_element1   word (_DRE_element1 - DRE_base)
; Regular paragraph w/no tabs & left-justified paragraph
_DRE_element0 PARA_ATTR_JUST_LEFT_RIGHT_PARA_TABS(2, J_LEFT, 0, 0, 0, 0)
; Out-dented ruler for numbered paragraphs.
_DRE_element1 PARA_ATTR_JUST_LEFT_RIGHT_PARA_TABS(2, J_LEFT, 8/2, 0, 0, 0)
}

PrinterTestTrigger = GenTrigger {
	moniker = "Click here to test";
	action = MSG_SETUP_START_PRINTER_TEST, process;
}



VerifyStatusBox = GenInteraction {
/* 	summonsAttributes = responseType customSummons;*/
 	attributes = default +notUserInitiatable;
 	children = VerifyStatusGlyph;
}
VerifyStatusGlyph = GenGlyph {
 	moniker = "Verifying Port Selection";
}
 
/*
 *	PrinterTest
 */

PrinterTest = PrintControl {
	printAttributes =
		graphicsOutput,
		textOutput,
		defaultQuality medium;
	fromPage = 1;
	toPage = 1;
	firstPage = 1;
	lastPage = 1;
/*	printMethod = MSG_SETUP_TEST_PRINTER;*/
	printOutput = process;
	docNameOutput = process;
}

end	Interface;

start	Strings, notDetachable;

chunk PTestDocumentName = "Test Page";

chunk printString1	= "System";

chunk printString2	= "printer test for";

chunk VerifyErrorString	= "You may have specified the wrong port, or there may be a problem with the connection to the printer. Would you like to keep this combination anyway?";



chunk NoPrinterSelectedError = data {
	CHARS 	'You must select a printer before proceeding.  If you do not want to connect a printer at this time, select \"None\"', 0
}

chunk spoolBusyString = data {
        CHARS    'The printer is busy.\r\rError Code: PR-04', 0
}

end	Strings;
