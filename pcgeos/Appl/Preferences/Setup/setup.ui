/***********************************************************************
 *
 *	Copyright (c) GeoWorks 1990 -- All Rights Reserved
 *
 * PROJECT:	  PCGEOS
 * MODULE:	  Graphical Setup
 * FILE:	  setup.ui
 *
 * AUTHOR:  	  Cheng-Yew Tan: March 16, 1990
 *
 * REVISION HISTORY:
 *	Date	  Name	    Description
 *	----	  ----	    -----------
 *	3/16/90	  cheng	    Initial version
 *
 * DESCRIPTION:
 *	manager for the UI description of graphical setup.
 *
 *
 *	$Id: setup.ui,v 1.7 98/06/19 10:36:07 gene Exp $
 *
 ***********************************************************************/

#if DO_DBCS
#define CHARS wchar
#define OPENDBLQ C_DOUBLE_TURNED_COMMA_QUOTATION_MARK
#define CLOSEDBLQ C_DOUBLE_COMMA_QUOTATION_MARK
#else
#define CHARS char
#define OPENDBLQ C_QUOTEDBLLEFT
#define CLOSEDBLQ C_QUOTEDBLRIGHT
#endif

#include "generic.uih"
#include "spool.uih"

#include "config.uih"


#define SETUP_FULL_SCREEN_HINTS \
	HINT_KEEP_ENTIRELY_ONSCREEN, \
	HINT_EXTEND_WINDOW_TO_BOTTOM_RIGHT,\
	HINT_POSITION_WINDOW_AT_RATIO_OF_PARENT {\
		SpecWinSizePair <PCT_0, PCT_0> }, \
	HINT_EXPAND_WIDTH_TO_FIT_PARENT, \
	HINT_EXPAND_HEIGHT_TO_FIT_PARENT, \
	HINT_CENTER_CHILDREN_HORIZONTALLY, \
	HINT_FULL_JUSTIFY_CHILDREN_VERTICALLY, \
	HINT_WINDOW_NO_TITLE_BAR

/*
 * Our subclass of a generic summons so we can field keyboard input gracefully,
 * as well as handling extra drawing chores and providing the user with
 * help.
 */
class SetupScreen = GenInteraction {
	default attributes = default +modal;
	default visibility = dialog;
	/*default summonsAttributes = responseType customSummons;*/
	initiateAction =  	actionComp : null;
	enterAction =		actionComp : null;
	escapeAction =		actionComp : null;
	f10Action =		actionComp : null;
#ifdef GPC_VERSION
	yesAction =		actionComp : null;
#endif
	extraDrawAction =	fptrComp : 0;
#ifdef GPC_VERSION
	instructions =		bitFieldComp word {
#else
	instructions =		bitFieldComp byte {
#endif
		ENTERToContinue,
#ifdef GPC_VERSION
		YToContinue,
#endif
		ESCToReturnToPrev,
		F10ToChangeVideo,
		F10ToRevertVideo,
		F10ToChangeMouse,
		F10ToChangePrinter,
		ESCToEnterLater,
		F3ToExitToDOS
	} : ENTERToContinue, ESCToReturnToPrev;
	flags =  		bitFieldComp byte {
		changingScreens, visible
	} : {};
}

/*
 * A subclass of PrefTocList so we can mangle the the HINT_SET_DESIRED_SIZE
 * if we're on a CGA or other low-res device.
 */
class SetupDeviceList = PrefTocList {
}

/*
 * Our own text-display class that serves two purposes:
 *	* it's a convenient place to hang default values for all our text
 *	  displays.
 *	* the subclass can detect if we're on a low-res display and alter
 *	  the defaults accordingly.
 */
class SetupTextDisplay = GenText {
	default genAttributes = default +readOnly;
}


start Interface;

SetupApp = GenApplication vardataReloc {
	appOptFlags = default +multipleInitFileCategories;
	children = IntroScreen,
		VideoTestScreen, VideoTestRevertScreen, ColorTestScreen,
			VideoSelectScreen, VideoRestartScreen,
		UISelectScreen, UIRestartScreen,
		MouseSelectScreen, MouseSerialPortScreen, GenMouseScreen,
			MouseIntScreen, MouseTestScreen, NoMouseScreen,
		PrinterSelectScreen, PrinterPortScreen,
			PrinterSerialScreen, PrinterSerialIntScreen,
			PrinterTestScreen, VerifyStatusBox,
		DocumentUpgradeScreen, DocumentUpgradeCompleteScreen,
		DoneScreen,
		SerialNumberScreen, SerialNumberGoodScreen,
		PrinterTest; 
        gcnList(MANUFACTURER_ID_GEOWORKS,GAGCNLT_SELF_LOAD_OPTIONS) =
		PrinterTest;
	gcnList(MANUFACTURER_ID_GEOWORKS,GAGCNLT_STARTUP_LOAD_OPTIONS) =
	        UISelectList;
	hints = {
		ATTR_GEN_APPLICATION_PRINT_CONTROL { UN_OPTR PrinterTest }
	}
	moniker = list {
		"Graphical Setup";
	}
}

chunk DefaultProductName = data {
#if DO_PIZZA
	CHARS	"Ensemble-J", 0
#else
	CHARS	"Ensemble", 0
#endif
}

/*******************************************************************************

	IntroScreen

*******************************************************************************/

IntroScreen = SetupScreen {
	children = IntroText1, IntroText2;
	hints = { SETUP_FULL_SCREEN_HINTS }
	enterAction = MSG_GEN_INTERACTION_INITIATE, VideoTestScreen;
	f10Action = MSG_GEN_INTERACTION_INITIATE, VideoSelectScreen;
	instructions = ENTERToContinue, F10ToChangeVideo,
		F3ToExitToDOS;
}

IntroText1 = SetupTextDisplay vardataReloc {
	hints = {
		INIT_FILE_CATEGORY(ui),
		INIT_FILE_KEY(productName),
		ATTR_SETUP_TEXT_DEFAULT_PARAM {
			I_OPTR	DefaultProductName
		}
	}

	text = data {
	CHARS	"\x01 is now loaded onto your hard disk.\r"
	CHARS	"\r"
	CHARS	"In the next few screens, you will verify that the video system is OK and get your mouse and printer to work.\r",0
	}
}

#ifdef GPC_VERSION
IntroText2 = SetupTextDisplay {
	hints = {
		INIT_FILE_CATEGORY(screen0),
		INIT_FILE_KEY(device)
	}

	text = data {
	CHARS	"Setup has chosen ", OPENDBLQ, 0x01, CLOSEDBLQ, " as your display device. "
	CHARS	"If the display is hard to read, or you think your "
	CHARS	"monitor and display adapter are capable of displaying "
	CHARS 	"at a higher resolution or with more colors, press the "
	CHARS	"F10 key to make a new video choice.",0
	}
}
#else
IntroText2 = SetupTextDisplay {
	hints = {
		INIT_FILE_CATEGORY(screen0),
		INIT_FILE_KEY(device)
	}

	text = data {
	CHARS	"Setup has chosen ", OPENDBLQ, 0x01, CLOSEDBLQ, " as your display device. "
	CHARS	"If the display is hard to read, or you think your "
	CHARS	"monitor and display adapter are capable of displaying "
	CHARS 	"at a higher resolution or with more colors, press the "
	CHARS	"F10 key to make a new video choice. \r"
	CHARS	"\r"
	CHARS	"If you are unsure of your selection press ENTER to continue.",0
	}
}
#endif

/*******************************************************************************

	DoneScreen

*******************************************************************************/

DoneScreen = SetupScreen {
	children = InstallDoneText, MouseDoneText, VideoDoneText, SPUIDoneText;
	hints = { SETUP_FULL_SCREEN_HINTS }
	initiateAction = MSG_SETUP_GENERATE_SYS_INFO, process;
	enterAction = MSG_SETUP_REENTER_GEOS, process;
	escapeAction = MSG_SETUP_SCREEN_DISMISS, DoneScreen;
#ifdef GPC_VERSION
	instructions = ENTERToContinue, ESCToReturnToPrev;
#else
	instructions = ENTERToContinue, ESCToReturnToPrev, F3ToExitToDOS;
#endif
}

InstallDoneText = SetupTextDisplay vardataReloc {
	genStates = default -usable;
	text = data {
		CHARS "Congratulations!  You've successfully installed \x01."
		CHARS "\r\r"
		CHARS "If an installation disk is still in the drive, "
		CHARS "please remove it now.",0
	}
	hints = {
		INIT_FILE_CATEGORY(ui),
		INIT_FILE_KEY(productName),
		ATTR_SETUP_TEXT_DEFAULT_PARAM {
			I_OPTR	DefaultProductName
		}
	}
}

MouseDoneText = SetupTextDisplay {
	genStates = default -usable;
	text = "Since the mouse worked, you can now press ENTER to continue.";
}

VideoDoneText = SetupTextDisplay {
	genStates = default -usable;
	text = "If you are pleased with your choice of video system, you can now press ENTER to continue.";
}

SPUIDoneText = SetupTextDisplay {
	genStates = default -usable;
	text = "If you are pleased with your choice of user interface, you can now press ENTER to continue.";
}

/******************************************************************************

	Common Definitions

******************************************************************************/

#define TR_REGULAR_RULER	0
#define TR_OUTDENTED_RULER	1

end Interface;

#include	"setupVideo.ui"
#include	"setupMouse.ui"
#include	"setupPrinter.ui"
#include	"setupSysInfo.ui"
#include	"setupSerialNum.ui"
#include	"setupUpgrade.ui"
#include	"setupUI.ui"

start	ColorUIBitmaps1, data;
#include	"Art/mkrMotif.ui"
#include	"Art/mkrNewUI.ui"
end	ColorUIBitmaps1;
start   ColorUIBitmaps2, data;
#include        "Art/mkrCUI.ui"
end     ColorUIBitmaps2;

/******************************************************************************

		Miscellaneous Error Strings

******************************************************************************/
start	Strings, data;

chunk batchFileName = "GO";

chunk fileManagerName = "GeoManager";

end	Strings;

/*******************************************************************************

	Instruction String Templates

*******************************************************************************/

start	ScreenTemplates, notDetachable;

promptCR = GenGlyph {
	moniker = "Press ENTER to continue.";
}
#ifdef GPC_VERSION
promptY = GenGlyph {
	moniker = "Press \\\"Y\\\" to continue.";
}
#endif
promptEscPrev =	GenGlyph {
	moniker = "Press ESC to return to the previous screen.";
}
promptExit = GenGlyph {
	moniker = "Press F3 to return to DOS.";
}
promptSelVideo = GenGlyph {
	moniker = "Press F10 to change your video selection.";
}
promptRevVideo = GenGlyph {
#ifdef GPC_VERSION
	moniker = "Press ESC to revert to previous video selection.";
#else
	moniker = "Press F10 to revert to previous video selection.";
#endif
}
promptSelMouse = GenGlyph {
	moniker = "Press F10 to change your mouse selection.";
}
promptSelPrinter = GenGlyph {
	moniker = "Press F10 to change your printer selection.";
}
promptEscEnterLater = GenGlyph {
	moniker = "Press ESC to enter serial number later.";
}

InstructionsBox	= GenInteraction {
        hints = {
	  HINT_DRAW_IN_BOX,
	  HINT_ORIENT_CHILDREN_VERTICALLY,
	  HINT_CUSTOM_CHILD_SPACING {
			SpecSizeSpec <SST_PIXELS, 1>
	  }
	}
}

SpaceBox	= GenInteraction {
	hints = { HINT_EXPAND_HEIGHT_TO_FIT_PARENT, 
		  HINT_EXPAND_WIDTH_TO_FIT_PARENT 
	}
}

end	ScreenTemplates;
