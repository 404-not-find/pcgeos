/*
 *
 * Project:	PC GEOS
 * Module:	FileMgrs
 * File:	cuiMain.ui
 *
 * Author:	Brian Chin
 *
 *	This file contains the user Interface description for the
 * desktop.
 *
 *	$Id: cuiMain.ui,v 1.12 98/08/20 05:39:34 joon Exp $
 *
 */


/*
 * when changing these, check for associated constants in desktopConstant.def
 */


/* This is what we are */

#define _GMGR -1
#define _DOCMGR -1


/* This is what we are not */

#define _NEWDESK 0
#define _NEWDESKBA 0
#define _FCAB 0
#define _HMGR 0
#define _ZMGR 0
#define _BMGR 0
#define _PMGR 0
#define	_NIKE 0
#define _NEWDESKONLY 0


/* UI_CLOSE_IN_OVERLAP must be 1 for LRU stuff */

#define UI_CLOSE_IN_OVERLAP 1


/* Set some important attributes */

#define _DOS_LAUNCHERS 0
#define _TINY 0
#define _PCMCIA_FORMAT 0
#define _PEN_BASED 0
#define _WINDOW_MENU 0
#define _TREE_MENU 	0
#define _PREFERENCES_LAUNCH 0
#define _KEEP_MAXIMIZED	0
#define _PRINT_CAPABILITY  0
#define _FAX_CAPABILITY	0

#define _CONNECT_TO_REMOTE 0
#define	_CONNECT_MENU	0
#define	_CONNECT_ICON	0

#define INSTALLABLE_TOOLS 0
#define SEPARATE_NAMES_AND_DETAILS 0


#if _GMGR
#if !_FCAB
#define _GMGRONLY -1
#else
#define _GMGRONLY 0
#endif
#endif

#ifdef FORCE_DELETE
#define _FORCE_DELETE -1
#else
#define _FORCE_DELETE 0
#endif

#define DESK_SINGLE_LINE_DISPLAY_ATTRIBUTES \
		dontScrollToChanges

#define DESK_SINGLE_LINE_EDIT_ATTRIBUTES \
		singleLineText, noWordWrapping, \
		allowTextOffEnd, useTabForNavigation


#define _APP_MONIKER -1

#define _DOS_ICONS -1

#define _WRITABLE_TOKEN_DATABASE -1

#define _ICON_AREA	-1

/*
 * Goodies from GPC NewDesk
 */
#define GPC_FILE_OP_DIALOG_PATHNAME 1
#ifdef GPC_ONLY
#define _DOS_LONG_NAME_SUPPORT -1
#else
#define _DOS_LONG_NAME_SUPPORT 0
#endif

/*-----------------------------------------------------------------------------
	Special classes
-----------------------------------------------------------------------------*/

class DeskApplication = GenApplication { 
}

class	DesktopView = GenView {
	backGrColor = byteComp : C_WHITE;
}

class DeskDisplayControl = GenDisplayControl {
}

class DeskDisplayGroup = GenDisplayGroup {
}

class DeskDisplay = GenDisplay {
#if UI_CLOSE_IN_OVERLAP
	openState = wordComp : 0;
#endif		/* if UI_CLOSE_IN_OVERLAP */
	usage = wordComp : 0;
}

class DeskTool = GenGlyph {
	flags = byteComp : 0;
	toolType = byteComp : 0;
}

class DirTool = GenTrigger {
	flags = byteComp : 0;
	toolType = byteComp : 0;
	diskHandle = wordComp : 0;
}

class DriveTool = GenTrigger {
	flags = byteComp : 0;
	driveType = byteComp : 0;
	driveNumber = byteComp : 0;
	disk = wordComp : 0;
}

class DriveLetter = GenItem {
}

class DriveList = GenItemGroup {
}

class FileOpFileList = GenText {
	default genAttributes = readOnly;
	static hptrComp : null;		/* buffer */
	static wordComp : 0;		/* count */
	static wordComp : 0;		/* current */
}

class PathnameStorage = GenText {
	default genAttributes = readOnly;
}

class CancelTrigger = GenTrigger {
}

class FileOperationBox = GenInteraction {
	static hptrComp : null;		/* disk handle */
	default type = command;
	default visibility = dialog;
	default attributes = default +modal;
}

class FileOpAppActiveBox = FileOperationBox {
}

class ToolArea = GenInteraction {
	driveButtonLocation = byteComp : 0;
}



/*-----------------------------------------------------------------------------
	Application classes
-----------------------------------------------------------------------------*/

class ShellObject = meta {
	shellObjectAttrs = bitFieldComp byte {
		movable, 
		copyable, 
		deletable, 
		receivesTransfers, 
		allowsTransfers,
		forceDelete
	} : movable, copyable, deletable, receivesTransfers;
}

class DeskVis = ShellObject {
	gState = hptrComp : null;	/* graphics state for this object */
	window = hptrComp : null;	/* window for this object */
}

class Tree = meta {
					/* list of subviews */
	subviews = wordComp : "VIEW_MAX_SUBVIEWS dup (?)";
					/* list of associated gstates */
	gStates = wordComp : "VIEW_MAX_SUBVIEWS dup (?)";
	drive = wordComp : 0;		/* drive number */
	diskInfo = byteComp : "size DiskInfoStruct dup (?)";	/* disk info */
	disk = wordComp : 0;
	treeBuffer = hptrComp : null;	/* buffer containing directory tree */
	treeBufferSize = wordComp : 0;	/* size of tree buffer */
	treeBufferNext = wordComp : 0;	/* past last entry in treeBuffer */
	diskBuffer = hptrComp : null;	/* buffer for disk reads */
	selectedFolder = wordComp : 0;	/* currently selected folder */
	displayMode = wordComp : 0;	/* tree display mode */
}

class Folder = DeskVis {
	displayTypes = byteComp : 0;	/* file types to display */
	displayAttrs = byteComp : 0;	/* file attributes to display */
	displaySort = byteComp : 0;	/* sort field of display */
	displayMode = byteComp : 0;	/* display modes */
	diskInfo = byteComp : "size DiskInfoStruct dup (?)";	/* disk info */
	buffer = hptrComp : null;	/* buffer containing files */
	bufferSize = wordComp : 0;	/* size of buffer */
	fileCount = wordComp : 0;	/* number of files in this folder */
	displayList = wordComp : 0;	/* linked-list of displayed files */
	selectList = wordComp : 0;	/* linked-list of selected files */
	windowBlock = hptrComp : null;	/* folder window's obj block handle */
	displayType = byteComp : 0;	/* DisplayType for this folder */
	folderState = wordComp : 0;	/* state of folder window */
	static typeComp "Point" : "<>"; /* FOI_winBounds */
	static typeComp "Point" : "<>";	/* FOI_docBounds */
	static typeComp "Point" : "<>";	/* anchor point (Point) */
	static wordComp : 0;		/* FOI_anchorIcon - extended select */
	static wordComp : 0;		/* file with selection cursor */
	static wordComp : 0;		/* object in Folder Window clickd on */
	positionFlags = byteComp : 0;   /* flags for icon positioning */
	static byteComp : 0;		/* suspend count */
	static wordComp : 0;		/* FOI_chunkHandle */
	remoteFlag = wordComp : -1;	/* FOI_remoteFlag */
	actualDisk = wordComp : 0;	/* FOI_actualDisk */
	invalidate = wordComp : -1;	/* FOI_invalidate */
}

/*-----------------------------------------------------------------------------
	UI components start here
-----------------------------------------------------------------------------*/

start GenAppInterface;

Desktop = DeskApplication vardataReloc {
	moniker = list {
		DeskMoniker,
		FileMgrLCMoniker,
		FileMgrLMMoniker,
		FileMgrSCMoniker,
		FileMgrSMMoniker,
		FileMgrYCMoniker,
		FileMgrYMMoniker,
		FileMgrSCGAMoniker,
		FileMgrTinyTCMoniker,
		FileMgrTinyTMMoniker,
		FileMgrTinyTCGAMoniker
	}
	children =
		DisplayControl,
		FileSystemDisplay;
	appFeatures = "DEFAULT_DESKTOP_FEATURES";
	windows_list = FileSystemDisplay;
	active_list = DisplayControl;
	self_load_options_list = DisplayControl;
	startup_load_options_list = 
				OptionsMenu,
				ViewMenu;
	hints = {
		ATTR_GEN_INIT_FILE_CATEGORY {char "docManager", 0},
		ATTR_GEN_INIT_FILE_KEY {char "features",0}
	}
}

end GenAppInterface;


start PrimaryInterface;

FileSystemDisplay = GenPrimary {
	children =
		FileMenu,
		ViewMenu,
		FileSystemDisplayGroup,
		IconArea,
		DeskDialogBoxes;
	genStates = default +usable;
	attributes = default -userDismissable;
	hints = {
		HINT_PRIMARY_NO_FILE_MENU,
		HINT_NOT_MOVABLE,
		HINT_DISPLAY_NOT_RESIZABLE,
		ATTR_GEN_DISPLAY_NOT_MINIMIZABLE,
		ATTR_GEN_DISPLAY_NOT_MAXIMIZABLE,
		ATTR_GEN_DISPLAY_NOT_RESTORABLE,
		HINT_SIZE_WINDOW_AS_DESIRED,
		HINT_POSITION_WINDOW_AT_RATIO_OF_PARENT {
/* PCT_20 & PCT_40 for a 640x480 system */
/* PCT_25 & PCT_40 for a 800x600 system */
			SpecWinSizePair < mask SWSS_RATIO or PCT_20, \
			                  mask SWSS_RATIO or PCT_35> },
		ATTR_GEN_HELP_FILE {
		    char "cuihelp",0
		},
		ATTR_GEN_HELP_CONTEXT {
		    char "cuiFileMgr",0
		},
		HINT_PRIMARY_NO_HELP_BUTTON
	}
}

FileSystemDisplayGroup = DeskDisplayGroup {
	/* none active */
	hints = {
		HINT_DEFAULT_TARGET,
		HINT_DEFAULT_FOCUS,
		HINT_FIXED_SIZE {
		    SpecWidth  <SST_PIXELS, 485>
		    SpecHeight <SST_PIXELS, 164>
		}
	}
}

DisplayControl = DeskDisplayControl {
	hints = {
		ATTR_GEN_CONTROL_PROHIBIT_UI	{
			word mask GDCF_OVERLAPPING_MAXIMIZED or \
				mask GDCF_TILE or \
				mask GDCF_DISPLAY_LIST
		}
	}
}

/* Add a level of indirection, so that if one of these
 * dialogs is brought up, they don't all get loaded! */

DeskDialogBoxes = GenInteraction {
	type = organizational;
	visibility = dialog;
	attributes = default +notUserInitiatable;
	children = 
	        DeskDialogSubGroup1,
	        DeskDialogSubGroup4;
}

DeskDialogSubGroup1 = GenInteraction {
	children = 
		ChangeAttrBox,
		ChangeIconBox,
		ActiveCopyBox,
	        FloatingDrivesDialog;
}

DeskDialogSubGroup4 = GenInteraction {
	children = 	RenameBox, CreateDirBox,
			MoveBox, CopyBox, DuplicateBox,
			RecoverBox, RecoverSrcBox,
			GetInfoBox,
			DosParameterBox,
			ActiveFormatBox,
			ActiveFileOpBox,
			MoveCopyProgressBox,
			DeleteProgressBox;
}

FloatingDrivesDialog = ToolArea {
	type = organizational;
	visibility = dialog;
	attributes = default +notUserInitiatable;
	hints = {
		HINT_INITIAL_SIZE {
			SpecWidth<SST_PCT_OF_FIELD_WIDTH, PCT_50>,
			SpecHeight<0, 0>
		},
		HINT_INTERACTION_MAKE_RESIZABLE,
		HINT_ORIENT_CHILDREN_HORIZONTALLY,
		HINT_RIGHT_JUSTIFY_CHILDREN,
		HINT_ALLOW_CHILDREN_TO_WRAP,
		HINT_TOOLBOX
	}
}

end	PrimaryInterface;



/**************************************************************************
 *	"Default" dummy object for handling ShellObject messages
 **************************************************************************/ 

start	DummyResource;

DefaultDummy = ShellObject {
}

end	DummyResource;



/*-----------------------------------------------------------------------------
	FileMenu MENU
-----------------------------------------------------------------------------*/

start	PrimaryInterface;

FileMenu = GenInteraction {
        moniker = 'F', "File";
	children =
	        FileMenuFileOperationsGroup,
	        FileMenuWastebasketGroup;
	visibility = popup;
}

end	PrimaryInterface;


start	Interface;

/*	FileOperationsGroup	*/
FileMenuFileOperationsGroup = GenInteraction {
	children =	FileMenuOpen,
			FileMenuCopy,
			FileMenuMove,
			FileMenuRename,
			FileMenuThrowAway,
			FileMenuFindGroup;
}

FileMenuOpen = GenTrigger {
	moniker = 'O', "Open";
	action = MSG_OPEN_SELECT_LIST, process;
	genStates = default -enabled;
	genAttributes = default +initiatesInputHoldUp;
}

FileMenuMove = GenTrigger {
	moniker = 'M', "Move";
	action = MSG_FM_START_MOVE, process;
	genStates = default -enabled;
	hints = {
		HINT_TRIGGER_BRINGS_UP_WINDOW
	}
}

FileMenuCopy = GenTrigger {
	moniker = 'C', "Copy";
	action = MSG_FM_START_COPY, process;
	genStates = default -enabled;
	hints = {
		HINT_TRIGGER_BRINGS_UP_WINDOW
	}
}

FileMenuRename = GenTrigger {
	moniker = 'R', "Rename";
	action = MSG_FM_START_RENAME, process;
	genStates = default -enabled;
	genAttributes = default +initiatesInputHoldUp;
	hints = {
		HINT_TRIGGER_BRINGS_UP_WINDOW
	}
}

FileMenuThrowAway = GenTrigger {
	kbdAccelerator = specificUI DELETE;
	moniker = 'T', "Throw Away";
	action = MSG_FM_START_THROW_AWAY, process;
	genStates = default -enabled;
	genAttributes = default +initiatesInputHoldUp;
}

FileMenuFindGroup = GenInteraction {
	children = FileMenuFind;
}

FileMenuFind = GenTrigger {
	moniker = 'F', "Find";
	action = MSG_DESKTOP_LAUNCH_FROM_TOKEN, process;
	genAttributes = default +initiatesInputHoldUp;
	hints = {
	    ATTR_GEN_TRIGGER_ACTION_DATA {
		word ('F' shl 8) or 'F'
		word ('R' shl 8) or 'N'
		word 0
	    }
	}
}


/*	WastebasketGroup	*/
FileMenuWastebasketGroup = GenInteraction {
	moniker = 'W', "Wastebasket";
	visibility = subGroup;
	children =	FileMenuRecover,
			FileEmptyWastebasket;
}

FileMenuRecover = GenTrigger {
	moniker = 'v', "Recover";
	action = MSG_FM_START_RECOVER, process;
	genAttributes = default +initiatesInputHoldUp;
	hints = {
		HINT_TRIGGER_BRINGS_UP_WINDOW
	}
}

FileEmptyWastebasket = GenTrigger {
	moniker = 'W', "Empty Wastebasket";
	action = MSG_EMPTY_WASTEBASKET, process;
}


/* Despite the fact that we don't offer this functionality, it
   is easier to just leave the UI in and ignore it */

FileMenuDelete = GenTrigger {
	moniker = 'D', "Delete";
	kbdAccelerator = specificUI DELETE;
	action = MSG_FM_START_DELETE, process;
	genStates = default -enabled;
	genAttributes = default +initiatesInputHoldUp;
}

FileMenuDuplicate = GenTrigger {
	moniker = 't', "Duplicate";
	action = MSG_FM_START_DUPLICATE, process;
	genStates = default -enabled;
	genAttributes = default +initiatesInputHoldUp;
	hints = {
		HINT_TRIGGER_BRINGS_UP_WINDOW
	}
}

FileMenuChangeAttr = GenTrigger {
	moniker = 'A', "Change Attributes";
	action = MSG_FM_START_CHANGE_ATTR, process;
	genStates = default -enabled;
	genAttributes = default +initiatesInputHoldUp;
	hints = {
		HINT_TRIGGER_BRINGS_UP_WINDOW
	}
}

FileMenuGetInfo = GenTrigger {
	moniker = 'I', "Get Info";
	kbdAccelerator = ctrl 'G';
	action = MSG_FM_GET_INFO, process;
	genStates = default -enabled;
	genAttributes = default +initiatesInputHoldUp;
	hints = {
		HINT_TRIGGER_BRINGS_UP_WINDOW
	}
}

FileMenuCreateFolder = GenTrigger {
	moniker = 'F', "Create Folder";
	action = MSG_FM_START_CREATE_DIR, process;
	genStates = default -usable;
	genAttributes = default +initiatesInputHoldUp;
	kbdAccelerator = specificUI INSERT;
	hints = {
		HINT_TRIGGER_BRINGS_UP_WINDOW
	}
}
FileMenuSelectAll = GenTrigger {
	moniker = 'S', "Select All";
	action = MSG_SELECT_ALL, process;
	genStates = default -usable;
	genAttributes = default +initiatesBusyState;
}

FileMenuDeselectAll = GenTrigger {
	moniker = 'l', "Deselect All";
	action = MSG_DESELECT_ALL, process;
	genStates = default -usable;
	genAttributes = default +initiatesBusyState;
}

OpenDrives = GenInteraction ignoreDirty {
}

end	Interface;




/*-----------------------------------------------------------------------------
	DisplayMenu MENU
-----------------------------------------------------------------------------*/

start	PrimaryInterface;

ViewMenu = GenInteraction {
	children = DisplayViewModesSub,
			DisplaySortBy,
			DisplayOptions;
	visibility = popup;
	hints = {
		ATTR_GEN_INIT_FILE_PROPAGATE_TO_CHILDREN,
		ATTR_GEN_INTERACTION_GROUP_TYPE {
			GenInteractionGroupType GIGT_VIEW_MENU
		}
	}
}

end	PrimaryInterface;


start	Interface;

DisplayViewModesSub = GenInteraction {
	children = DisplayViewModes;
	genStates = default -enabled;
	hints = {
		ATTR_GEN_INIT_FILE_PROPAGATE_TO_CHILDREN
	}
}
DisplayViewModes = GenItemGroup ignoreDirty {
	numSelections  = 1;
	selection = "mask FIDM_LICON";
	children = 
			DisplayNamesOnly, 
			DisplayFullFileDetails,
			DisplayLargeIcons;
	applyMsg = MSG_SET_VIEW_MODE;
	destination = process;
	genStates = default -enabled;
	genAttributes = default +initiatesBusyState;
	hints = {
		ATTR_GEN_INIT_FILE_KEY {char "viewMode", 0}
	}
}

DisplayNamesOnly = GenItem ignoreDirty {
	moniker = 'N', "Names Only";
	identifier = "mask FIDM_SHORT";
}

DisplayFullFileDetails = GenItem ignoreDirty {
	moniker = 'D', "Names and Details";
	identifier = "mask FIDM_FULL";
}
DisplayLargeIcons = GenItem ignoreDirty {
	moniker = 'I', "Icons";
	identifier = "mask FIDM_LICON";
}
DisplaySortBy = GenInteraction {
	moniker = 'S', "Sort By";
	children = DisplaySortByList;
	genStates = default -enabled;
	visibility = popup;
	hints = {
		ATTR_GEN_INIT_FILE_PROPAGATE_TO_CHILDREN
	}
}
DisplaySortByList = GenItemGroup ignoreDirty {
	numSelections  = 1;
	selection = "mask FIDS_NAME";
	children = 	DisplaySortByName, 
			DisplaySortByExt,
			DisplaySortByDate, 
			DisplaySortByCreation,
			DisplaySortBySize
			, DisplaySortByDOS
			;

	applyMsg = MSG_SET_SORT_MODE;
	destination = process;
	genStates = default -enabled;
	genAttributes = default +initiatesBusyState;
	hints = {
		ATTR_GEN_INIT_FILE_KEY {char "sortMode", 0}
	}
}
DisplaySortByName = GenItem ignoreDirty {
	moniker = 'N', "Name";
	identifier = "mask FIDS_NAME";
}

DisplaySortByExt = GenItem ignoreDirty {
	moniker = 'D', "DOS Extension";
	identifier = "mask FIDS_EXT";
	genStates = default -usable;
}

DisplaySortByDate = GenItem ignoreDirty {
	moniker = 'M', "Modification Date and Time";
	identifier = "mask FIDS_DATE";
}
DisplaySortByCreation = GenItem ignoreDirty {
	moniker = 'C', "Creation Date and Time";
	identifier = "mask FIDS_CREATION";
}
DisplaySortBySize = GenItem ignoreDirty {
	moniker = 'S', "Size";
	identifier = "mask FIDS_SIZE";
}

DisplaySortByDOS = GenItem ignoreDirty {
	moniker = 'O', "DOS Order";
	identifier = "mask FIDS_DOS";
	genStates = default -usable;
}

DisplayOptions = GenInteraction {
	children = DisplayOptionsList;
	genStates = default -enabled;
	hints = {
		ATTR_GEN_INIT_FILE_PROPAGATE_TO_CHILDREN
	}
}
DisplayOptionsList = GenBooleanGroup ignoreDirty {
	selectedBooleans = "DEFAULT_DISPLAY_ATTRS"; 
	children = DisplayOptionsHidden,
			DisplayOptionsCompressButton;
	applyMsg = MSG_SET_VIEW_OPTIONS;
	destination = process;
	genStates = default -enabled, -usable;
	hints = {
		ATTR_GEN_INIT_FILE_KEY {char "displayOptions", 0}
	}
}

DisplayOptionsHidden = GenBoolean ignoreDirty {
	moniker = 'H', "Show Hidden Files";
	identifier = "mask FIDA_HIDDEN";
}
DisplayOptionsCompressButton = GenBoolean ignoreDirty {
	moniker = 'C', "Compress Display";
	identifier = "mask FIDA_COMPRESSED";
}

end	Interface;




/*-----------------------------------------------------------------------------
	OptionsMenu MENU
-----------------------------------------------------------------------------*/

start	PrimaryInterface;

OptionsMenu = GenInteraction {
	children =	OptionsWarningsGroup,
			OptionsList,
			OptionsDrivesGroup,
			OptionsSaveOptions;
	visibility =	popup;
	genStates = default -usable;
	hints = {
		ATTR_GEN_INTERACTION_GROUP_TYPE {
			GenInteractionGroupType GIGT_OPTIONS_MENU
		},
		ATTR_GEN_INIT_FILE_PROPAGATE_TO_CHILDREN
	}
}

end	PrimaryInterface;


start	Interface;

OptionsList = GenBooleanGroup {
	children =
	 		FileOptionsWBNeverSaves, /* really the opposite,  */
						/* this indicates "Hold in  */
						/* WB" for GeoManager, sigh */
			MinimizeOnRunButton,
			PromptOnReturn,
			ShowDiskCopyOptions,
			ConfirmExitingGeoManager;
	selectedBooleans = "mask OMI_ASK_BEFORE_RETURNING or	\
				mask OMI_CONFIRM_EXIT_GMGR or	\
				mask OMI_WB_NEVER_SAVES"; /* really opposite */
	hints = {
		HINT_ORIENT_CHILDREN_VERTICALLY,
		ATTR_GEN_INIT_FILE_KEY {char "options", 0}
	}
}

OptionsWarningsGroup = GenInteraction {
	children = 	OptionsDeleteWarningsGroup,
			OptionsWarnings;
	hints = {
		ATTR_GEN_INIT_FILE_PROPAGATE_TO_CHILDREN
	}
}

OptionsDeleteWarningsGroup = GenInteraction {
	moniker = 'D', "Warnings on Delete/Throw Away";
	visibility = popup;
	children =	OptionsDeleteWarnings;
	hints = {
		ATTR_GEN_INIT_FILE_PROPAGATE_TO_CHILDREN
	}
}

OptionsDeleteWarnings = GenBooleanGroup {
	children =	FileOptionsSingleWarningOnDelete,
			FileOptionsMultipleWarningsOnDelete,
			FileOptionsReadOnly,
			FileOptionsExecutable;
	selectedBooleans = "mask OMI_SINGLE_WARNING or mask OMI_CONFIRM_READ_ONLY";
	hints = {
		HINT_ORIENT_CHILDREN_VERTICALLY,
		ATTR_GEN_INIT_FILE_KEY {char "deleteOptions", 0}
	}
}

OptionsWarnings = GenBooleanGroup {
	children =	FileOptionsReplace
#if !_FORCE_DELETE
			,FileOptionsEmptyWB
#endif
			;
	selectedBooleans = "mask OMI_CONFIRM_EMPTY_WB or \
				mask OMI_CONFIRM_REPLACE";
	hints = {
		HINT_ORIENT_CHILDREN_VERTICALLY,
		ATTR_GEN_INIT_FILE_KEY {char "warningOptions", 0}
	}
}

FileOptionsEmptyWB = GenBoolean {
	moniker = 'E', "Warn on Emptying Wastebasket";
	identifier = "mask OMI_CONFIRM_EMPTY_WB";
}

FileOptionsWBNeverSaves = GenBoolean {
	moniker = 'W', "Hold Items in Wastebasket";
	identifier = "mask OMI_WB_NEVER_SAVES";
}

FileOptionsReadOnly = GenBoolean {
	moniker = 'R', "Read-Only Files";
	identifier = "mask OMI_CONFIRM_READ_ONLY";
}
FileOptionsReplace = GenBoolean {
	moniker = 'O', "Warn on Overwrite";
	identifier = "mask OMI_CONFIRM_REPLACE";
}
FileOptionsExecutable = GenBoolean {
	moniker = 'N', "Geos Executable Files";
	identifier = "mask OMI_CONFIRM_EXECUTABLE";
}

MinimizeOnRunButton = GenBoolean {
	moniker = 'M', "Minimize GeoManager on Run";
	identifier = "mask OMI_MINIMIZE_ON_RUN";
}
PromptOnReturn = GenBoolean {
	moniker = 'A', "Ask Before Returning to Ensemble";
	identifier = "mask OMI_ASK_BEFORE_RETURNING";
}
ShowDiskCopyOptions = GenBoolean {
	moniker = 'S', "Show Advanced Disk Options";
	identifier = "mask OMI_SHOW_ADV_DISK_OPTIONS";
}
ConfirmExitingGeoManager = GenBoolean {
	moniker = 'C', "Confirm When Exiting GeoManager";
	identifier = "mask OMI_CONFIRM_EXIT_GMGR";
}

FileOptionsSingleWarningOnDelete = GenBoolean {
	moniker = 'S', "Single Warning";
	identifier = "mask OMI_SINGLE_WARNING";
}
FileOptionsMultipleWarningsOnDelete = GenBoolean {
	moniker = 'W', "Warning for Each Item";
	identifier = "mask OMI_MULTIPLE_WARNINGS";
}

OptionsDrivesGroup = GenInteraction {
	moniker = 'L', "Drive Locations";
	visibility = popup;
	children = OptionsDrivesList;
	hints = {
		ATTR_GEN_INIT_FILE_PROPAGATE_TO_CHILDREN
	}
}
OptionsDrivesList = GenItemGroup {
	selection = "DRIVES_SHOWING";
	numSelections = 1;
	children =	OptionsDrivesListToolArea,
			OptionsDrivesListFloating,
			OptionsDrivesListHidden;
	applyMsg = MSG_SET_DRIVES_LOCATION;
	destination = process;
	hints = {
		ATTR_GEN_INIT_FILE_KEY {char "startupDrivesLocation", 0}
	}
}

OptionsDrivesListToolArea = GenItem {
	moniker = 'T', "In Tool Area";
	identifier = "DRIVES_SHOWING";
}
OptionsDrivesListFloating = GenItem {
	moniker = 'F', "Floating";
	identifier = "DRIVES_FLOATING";
}

OptionsDrivesListHidden = GenItem {
	moniker = 'H', "Hidden";
	identifier = "DRIVES_HIDDEN";
}

OptionsSaveOptions = GenTrigger {
	moniker = 'v', "Save Options";
	action = MSG_META_SAVE_OPTIONS, Desktop;
	genAttributes = default +signalInteractionComplete;
}

end	Interface;


/*-----------------------------------------------------------------------------
	fixed instances of user-defined classes
-----------------------------------------------------------------------------*/

/*
 * UI description of Icon Area
 */


#include	"cuiIconArea.ui"

#include	"CArt/cbmFiveInchDisk.ui"
#include	"CArt/cbmThreeInchDisk.ui"
#include	"CArt/cbmPCMCIA.ui"

start AppSCMonikerResource2, data;
#include	"../CommonND/CArt/cmkrNDWasteBasketSC.ui"
#include	"../CommonND/CArt/cmkrDMDocumentSC.ui"
#include	"../CommonND/CArt/cmkrDMArchiveSC.ui"
#include	"../CommonND/CArt/cbmDMHardDriveSC.ui"
#include	"../CommonND/CArt/cbmDMThreeInchDiskSC.ui"
end AppSCMonikerResource2;
#include	"CArt/cmkrMessyWasteCan.ui"
#include	"CArt/cbmHardDisk.ui"
#include	"CArt/cbmRamDisk.ui"
#include	"CArt/cbmCDRom.ui"
#include	"CArt/cbmNetDisk.ui"
#include	"CArt/mkrRemove.ui"
#include	"CArt/mkrZipDisk.ui"

#include	"CArt/cmkrDocDirButton.ui"
#include	"CArt/cmkrWorldDirButton.ui"


/*
 * UI description of Display Options box
 */
/*#include	"cuiDispOption.ui"*/

/*
 * UI description of Fle Opeation dialog boxes
 */
#include	"cuiFileOper.ui"

/*
 * template blocks duplicated for Folder Windows
 */
#include	"cuiFolderTemplate.ui"

/*
 * miscellaneous pieces of UI stuff
 */
#include	"cuiMisc.ui"

/*
 * UI description of "get info" box
 */
#include	"cuiGetInfo.ui"

/*
 * monikers for desktop use
 */
#include	"cuiMonikers.ui"
 

/*
 * strings, for localization ease
 */
#include	"cuiStrings.ui"
