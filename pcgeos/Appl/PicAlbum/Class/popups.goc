/**************************************************************************
 *
 * PROJECT:	Picture Album
 * FILE:		popups.goc
 * AUTHOR:	John F. Howard    10/03
 *
 * DESCRIPTION:
 *		methods for the path & drive popups in the modified get pix and
 *    copy pix file selectors
 *
 *
 *************************************************************************/

@include "PicAlbum.goh"

@classdecl PAPathPopupClass;
@classdecl PADrivePopupClass;

@extern object PACopyPicturesDestPath;
@extern object PACopyPicturesToPathPopup;
@extern object PACopyPicturesToDrivePopup;
@extern object PAGetPicturesFileSel;
@extern object PAGetPicturesPathPopup;
@extern object PAGetPicturesDrivePopup;


@method PAPathPopupClass, MSG_PA_PATH_POPUP_NO_UPDATE
{
	 pself->PAPPI_noUpdate = TRUE;
}

@method PAPathPopupClass, MSG_PA_PATH_POPUP_UPDATE
{
	 pself->PAPPI_noUpdate = FALSE;
}

/***********************************************************************
 *
 * MESSAGE:	MSG_PA_PATH_POPUP_SET_PATH for PAPathPopupClass
 *           (PathName *path, DiskHandle diskH)
 *
 * DESCRIPTION:	The file selector calls this in its notify msg
 *
 *
 ***********************************************************************/

@method PAPathPopupClass, MSG_PA_PATH_POPUP_SET_PATH
{
	 pself->PAPPI_noUpdate = TRUE;
    @call oself::MSG_GEN_PATH_SET(path, diskH);
    pself = ObjDerefGen(oself);
    pself->PAPPI_noUpdate = FALSE;
}

/***********************************************************************
 *
 * MESSAGE:	MSG_GEN_FILE_SELECTOR_RESCAN for PAPathPopupClass
 *
 *
 * DESCRIPTION:	Tell the file selector where we are
 *
 *
 ***********************************************************************/
@method PAPathPopupClass, MSG_GEN_FILE_SELECTOR_RESCAN
{
 PathName pathBuf;
 DiskHandle diskH;
 optr popupOptr = NullOptr, pathOptr = NullOptr;


	@callsuper();
	pself = ObjDerefGen(oself);

	if (pself->PAPPI_noUpdate) {
		return;
		}

	if (pself->PAPPI_type == MSG_PA_COPY_PICTURES_DEST_PATH) {
		pathOptr = @PACopyPicturesDestPath;
		popupOptr = @PACopyPicturesToPathPopup;
		}
	else {  /* this is for GetPictures */
		pathOptr = @PAGetPicturesFileSel;
		popupOptr = @PAGetPicturesPathPopup;
		}

	if (@call popupOptr::MSG_GEN_GET_ENABLED()) {
		@call popupOptr::MSG_GEN_PATH_GET(&pathBuf, sizeof(pathBuf));
		diskH = @call popupOptr::MSG_GEN_PATH_GET_DISK_HANDLE();
		@call pathOptr::MSG_GEN_PATH_SET(pathBuf, diskH);
		@call pathOptr::MSG_GEN_FILE_SELECTOR_SET_FULL_SELECTION_PATH(pathBuf, diskH);
		}

}

@method PADrivePopupClass, MSG_PA_DRIVE_POPUP_NO_UPDATE
{
	 pself->PADPI_noUpdate = TRUE;
}

@method PADrivePopupClass, MSG_PA_DRIVE_POPUP_UPDATE
{
	 pself->PADPI_noUpdate = FALSE;
}

/***********************************************************************
 *
 * MESSAGE:	MSG_PA_DRIVE_POPUP_SET_DRIVE for PADrivePopupClass
 *           (PathName *path, DiskHandle diskH)
 *
 * DESCRIPTION:	The file selector calls this in its notify msg
 *
 *
 ***********************************************************************/

@method PADrivePopupClass, MSG_PA_DRIVE_POPUP_SET_DRIVE
{
	 pself->PADPI_noUpdate = TRUE;
    @call oself::MSG_GEN_PATH_SET(path, diskH);
    pself = ObjDerefGen(oself);
	 pself->PADPI_noUpdate = FALSE;
}

/***********************************************************************
 *
 * MESSAGE:	MSG_GEN_FILE_SELECTOR_RESCAN for PADrivePopupClass
 *
 *
 * DESCRIPTION:	Tell the file selector where we are
 *
 *
 ***********************************************************************/
@method PADrivePopupClass, MSG_GEN_FILE_SELECTOR_RESCAN
{
 PathName pathBuf;
 DiskHandle diskH;
 optr popupOptr = NullOptr, pathOptr = NullOptr;


	@callsuper();
	pself = ObjDerefGen(oself);

	if (pself->PADPI_noUpdate) {
		return;
		}

	if (pself->PADPI_type == MSG_PA_COPY_PICTURES_DEST_PATH) {
		pathOptr = @PACopyPicturesDestPath;
		popupOptr = @PACopyPicturesToDrivePopup;
		}
	else {  /* this is for GetPictures */
		pathOptr = @PAGetPicturesFileSel;
		popupOptr = @PAGetPicturesDrivePopup;
		}

	if (@call popupOptr::MSG_GEN_GET_ENABLED()) {
		@call popupOptr::MSG_GEN_PATH_GET(&pathBuf, sizeof(pathBuf));
		diskH = @call popupOptr::MSG_GEN_PATH_GET_DISK_HANDLE();
		@call pathOptr::MSG_GEN_PATH_SET(pathBuf, diskH);
		@call pathOptr::MSG_GEN_FILE_SELECTOR_SET_FULL_SELECTION_PATH(pathBuf, diskH);
		}

}

