/*
 * Project:	PC/GEOS
 * Module:	Bounce (Bouncing balls demo)
 * File:	bounce.ui
 *
 * Author:	Tony Requist, Adam de Boor, Eric E. Del Sesto
 *
 *	This file contains the user Interface description for this
 * application. This file is written in a language called ESPIRE, which is
 * compiled by the UIC compiler. See Spec/User/uic.doc for info.
 *
 * IMPORTANT:
 *	This example is written for the PC/GEOS V1.0 API. For the V2.0 API,
 *	we have new ObjectAssembly and Object-C versions.
 *
 * RCS STAMP:
 *	$Id: bounce.ui,v 1.1 97/04/04 14:41:01 newdeal Exp $
 *
 */

/* ----------------------------------------------------------------------------
	Include files
-----------------------------------------------------------------------------*/

/* first, read pre-defined class definitions. See the file
 * /staff/pcgeos/Include/generic.uih. */

#include "generic.uih"

/* now read artwork files */

#include "Art/mkrBounce.ui"
#include "Art/mkrBounceTiny.ui"

/* ----------------------------------------------------------------------------
	Application Object
-----------------------------------------------------------------------------*/
/* The very top-level generic object of an application MUST be a GenApplication
 * object. The bounce.gp file contains "appobj" statement which indicates
 * that this "BounceApp" object is in fact the top-level UI object.
 * This object should be in its own resource so that GeoManager can load it
 * quickly to grab the icon for this application. GeoManager will store this
 * icon in its "Token Database", so that the icon image can be reused quickly.*/

start	AppResource;

BounceApp = GenApplication {
	/* The geoManager uses this token information to store this
	 * application's icon in a database. */

					/* four letters used as index to
					 * refer to this application in the
					 * token database. */

					/* manufacturer ID number. Also used
					 * for accessing database, to ensure
					 * uniqueness. */

	moniker = list {
		BounceTextMoniker,
/*		BounceLCMoniker, 
		BounceLMMoniker, 
		BounceLCGAMoniker, */
		BounceSCMoniker,
		BounceSMMoniker,
		BounceSCGAMoniker, 
		BounceTinyTCMoniker,
		BounceTinyTMMoniker,
		BounceTinyTCGAMoniker
	}

	children = BouncePrimary;	/* The GenApplication object only
					 * has one child: the main application
					 * window. */

	gcnList(MANUFACTURER_ID_GEOWORKS,GAGCNLT_WINDOWS) = BouncePrimary;
		/* The main window should appear
		 * on-screen when the application
		 * is launched. */
}

visMoniker BounceTextMoniker = "Bounce";
	localize "Moniker for application title bar";

end	AppResource;


/* ----------------------------------------------------------------------------
	 Primary window.
-----------------------------------------------------------------------------*/
/* Every application has at least one GenPrimary object. This object serves
 * as the main window of the application. Inside this window, various UI
 * components, such as menus or lists, can be placed. */

start	Interface;		/* this resource is for misc UI objects */

BouncePrimary = GenPrimary {
	moniker = "Bounce";		/* this title will appear at the top
					 * of the window. */

	children = OnOffItemGroup, DrawTypeItemGroup, BounceView;

	hints = {
	    /* this keeps the GenPrimary window snug around the controls */
		HINT_SIZE_WINDOW_AS_DESIRED,
		ATTR_GEN_HELP_CONTEXT { char "TOC", 0 }
	}
}


/*-----------------------------------------------------------------------------
	OnOffItemGroup
-----------------------------------------------------------------------------*/

OnOffItemGroup = GenItemGroup ignoreDirty {
	moniker = "Status:";
	children = OnItem, OffItem;
	applyMsg = MSG_BOUNCE_SET_ON_OFF_STATE;
	destination = process;
	hints = {
		HINT_PLACE_MONIKER_TO_LEFT
	}
	selection = "TRUE";
	numSelections = 1;
}
OnItem = GenItem ignoreDirty {
	moniker = "On";
	identifier = "TRUE";
}
OffItem = GenItem ignoreDirty {
	moniker = "Off";
	identifier = "FALSE";
}

/*-----------------------------------------------------------------------------
	DrawTypeItemGroup
-----------------------------------------------------------------------------*/

DrawTypeItemGroup = GenItemGroup ignoreDirty {
	moniker = "Draw:";
	children = SquareItem, CircleItem;
	applyMsg = MSG_BOUNCE_SET_DRAW_TYPE;
	destination = process;
	hints = {
		HINT_PLACE_MONIKER_TO_LEFT
	}
	selection = "BDT_SQUARE";
	numSelections = 1;
}
SquareItem = GenItem ignoreDirty {
	moniker = "Squares";
	identifier = "BDT_SQUARE";
}
CircleItem = GenItem ignoreDirty {
	moniker = "Circles";
	identifier = "BDT_CIRCLE";
}

/*-----------------------------------------------------------------------------
	GenView object
-----------------------------------------------------------------------------*/

/* This GenView object creates a window where the application can display
 * portions of the document as necessary. */

BounceView = GenView ignoreDirty {

	/* when the contents of this view (i.e. the document) must be updated,
	 * the UI should send a MSG_META_EXPOSED to the BounceProcessClass
	 * object. */

	output = process;

	/* set colors */

	backColorR = BACKGROUND_COLOR;

	/* how large the view should be when it first opens. */

	hints = {
		HINT_INITIAL_SIZE {
			SpecWidth <SST_PIXELS, 200>
			SpecHeight <SST_PIXELS, 70>
		}
	}
}

end Interface;
