/*
 * Project:	PC GEOS
 * Module:	CD-ROM
 * File:	cdplayer.ui
 *
 * Author: Fred Crimi
 *
 *	This file contains the user Interface description for this
 * application.
 *
 *RCS STAMP:
 *	$Id: cdplayer.ui,v 1.1 97/04/04 14:42:19 newdeal Exp $
 *
 */

#include "generic.uih"
#include "mkrPlay.ui"
#include "mkrStop.ui"
#include "mkrPause.ui"
#include "mkrSkipl.ui"
#include "mkrSkipr.ui"
#include "mkrFfl.ui"
#include "mkrFfr.ui"
#include "mkrCDIcon.ui"
/* ----------------------------------------------------------------------------
	Application Object
-----------------------------------------------------------------------------*/
/* The application object should be in its own resource so that the geoManager
 * can load it quickly to grab the icon for the application. */

start	AppResource;

CDApp = GenApplication {
	/* The geoManager uses this token information to store this
	 * application's icon in a database. */

#ifdef	GCM
#else
#endif
	moniker = list {
		CDTextMoniker,
		CDIconLCMoniker,
		CDIconLMMoniker,
		CDIconSCMoniker,
		CDIconSMMoniker,
		CDIconLCGAMoniker,
		CDIconSCGAMoniker
	}
	children = TestPrimary;		/* only one child for now */
/*	active = TestPrimary;	*/	/* have window appear when application
					/* is launched */
 }


visMoniker CDTextMoniker = 
#ifdef	GCM
	"Player";
#else
	"CD Player";
#endif

end	AppResource;

/* ----------------------------------------------------------------------------
	 Primary window.
-----------------------------------------------------------------------------*/

start	Interface;		/* this resource is for misc UI objects */

/******************************************************************************
TestPrimary = GenPrimary {
	moniker = "CD Player";

children = UPCDisplay, SongList, SongField, ButtonDisplay;
	hints = {
#ifndef GCM
		HINT_SIZE_WINDOW_AS_DESIRED,
		HINT_NOT_MAXIMIZABLE,
#endif
#ifdef GCM
		HINT_NOT_RESTORABLE,
		HINT_GENERAL_CONSUMER_MODE { 
		  db  (GCMI_EXIT shl offset GCMF_LEFT_ICON) or \
		      (GCMI_HELP shl offset GCMF_RIGHT_ICON)
		},
#endif
	}
}
/*****************************************************************************/

TestPrimary = GenPrimary {

	children = TextDisplay, SecondLineDisplay;
	hints = {
		HINT_DEFAULT_FOCUS,
		HINT_DEFAULT_TARGET,
		HINT_SIZE_WINDOW_AS_DESIRED
/*		HINT_NOT_MAXIMIZABLE */
	}
}


end Interface;


/*-----------------------------------------------------------------------------
	UI Objects within Primary window
-----------------------------------------------------------------------------*/

start Interface;

/* Displays all objects on the second line of the display */
SecondLineDisplay =  GenInteraction {
	children = TimeButton, ButtonDisplay, Minus10List, Plus10List;

	hints = {
		HINT_ORIENT_CHILDREN_HORIZONTALLY
	}
}


/* grouping of all the GenTriggers on the same line */
ButtonDisplay =  GenInteraction {
	children = RevButton, BackButton, PauseButton, PlayButton, ForwardButton, NextButton;
	hints = {
		HINT_CENTER_CHILDREN_HORIZONTALLY,
		HINT_ORIENT_CHILDREN_HORIZONTALLY
	}
}


/* First line of the display, has track counter and track numbers */
TextDisplay =  GenInteraction  {
	children = TrackDisplay, NumberList;
	hints = {
		HINT_ORIENT_CHILDREN_HORIZONTALLY
	}
}




NumberList = GenItemGroup {
	applyMsg = CD_METHOD_BUTTON_ITEM_SELECTED;
	children = 
		Button1,
		Button2,
		Button3,
		Button4,
		Button5,
		Button6,
		Button7,
		Button8,
		Button9,
		Button10;
	hints = {
		HINT_ORIENT_CHILDREN_HORIZONTALLY
	} 
}


Plus10List = GenItemGroup {
	applyMsg = CD_METHOD_PLUS_10_SELECTED;
	children = 
		ButtonPlus10;
	hints = {
 		HINT_ORIENT_CHILDREN_HORIZONTALLY
	}
}


Minus10List = GenItemGroup {
	applyMsg = CD_METHOD_MINUS_10_SELECTED;
	children = 
		ButtonMinus10;
	hints = {
 		HINT_ORIENT_CHILDREN_HORIZONTALLY
	}
}


Button1 = GenItem{
	moniker = " 1";
}

Button2 = GenItem{
	moniker = " 2";
}

Button3 = GenItem{
	moniker = " 3";
}

Button4 = GenItem {
	moniker = " 4";
}

Button5 = GenItem {
	moniker = " 5";
}

Button6 = GenItem {
	moniker = " 6";
}

Button7 = GenItem {
	moniker = " 7";
}

Button8 = GenItem {
	moniker = " 8";
}

Button9 = GenItem {
	moniker = " 9";
}

Button10 = GenItem {
	moniker = "10";
}

ButtonPlus10 = GenItem {
	moniker = "+10";
}

ButtonMinus10 = GenItem {
	moniker = "-10";
}

RevButton = GenTrigger {
	moniker = skiplMoniker;
	action = CD_METHOD_PREVIOUS_PRESSED, process;
}

StopButton = GenTrigger {
	moniker = stopMoniker;
	action = CD_METHOD_STOP_PRESSED, process;
}

PauseButton = GenTrigger {
	moniker = pauseMoniker;
	action = CD_METHOD_PAUSE_PRESSED, process;
}

PlayButton = GenTrigger {
	moniker = playMoniker;
	action = CD_METHOD_PLAY_PRESSED, process;
}

NextButton = GenTrigger {
	moniker = skiprMoniker;
	action = CD_METHOD_NEXT_PRESSED, process;
}

EjectButton = GenTrigger {
	moniker = "EJECT";
	action = CD_METHOD_EJECT_PRESSED, process;
}

ForwardButton = GenTrigger {
	moniker = ffrMoniker;
	action = CD_METHOD_FORWARD_PRESSED, process;
}

BackButton = GenTrigger {
	moniker = fflMoniker;
	action = CD_METHOD_BACK_PRESSED, process;
}

TimeButton = GenTrigger {
	moniker = "TIME";
	action = CD_METHOD_TIME_PRESSED, process;
}


/*
  Displays current track and maximum track 
*/
TrackDisplay = GenText  {
	moniker = "Track";
	text = " 0-0  ";
	textDisplayAttributes = singleLineText;
}


/* Volume control gadget, not used in the first revision of this application */
/*VolRange = GenRange {
	moniker = "Volume";
	value = 15  ;	
	minimum = 0;	
 	maximum = 15;
	increment = 1;
	gadgetAttrs = defaultAction activateDefault;
	action =  CD_METHOD_VOLUME_CONTROL, process;
	hints = {
		HINT_ORIENT_CHILDREN_HORIZONTALLY
	}
}
*/

/* Displays elapsed time of song */
/*TimeDisplay = GenTextDisplay {
	text = " 0:00";
	genFont = noGenMapping;
	charAttrRuns = "(C_RED shl offset VTDCA_COLOR) or (VTDS_12 shl offset VTDCA_SIZE) or (VTDF_BERKELEY shl offset VTDCA_FONT)";

	textDisplayAttributes = singleLineText;
	hints = {
		HINT_FIXED_SIZE {
			SpecWidth <SST_AVG_CHAR_WIDTHS, 8>
			SpecHeight <SST_LINES_OF_TEXT, 1>
		},
		HINT_TEXT_WASH_COLOR {
			ColorQuad <
				C_LIGHT_GREY,
				CF_INDEX,
				0, 0
				    >
				}
	}
}
*/
end Interface;

/*************************/

/*
 *	Strings
 */

start Strings, data;

chunk CustomNoCDDriveString = "There is no CD drive installed";
chunk CustomNoCDDriveArg = "";

chunk CustomNoCDString = "Could not find a CD in the drive";
chunk CustomNoCDArg = "";

chunk CustomNotAudioString = "The CD you inserted in the drive is not an Audio CD";
chunk CustomNotAudioArg = "";

chunk CustomWrongExtensions = "Can not find the proper Microsoft CD-ROM Extensions (Version 2.2 or higher) on your system. For more information, please see the owner's manual for your CD-ROM drive.";
chunk CustomWrongArg = "";

chunk CustomNoExString = "No CD extensions are loaded on your system. Please install the Microsoft MS-DOS CD-ROM Extensions (Version 2.2 or higher) on your system. For more information, please see the owner's manual for your CD-ROM drive.";
chunk CustomNoExArg = "";



end Strings;

