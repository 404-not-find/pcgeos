COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1989 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		Main
FILE:		mainVariable.def

AUTHOR:		Dennis Chow, September 6, 1989

	
REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	dc       9/ 6/89        Initial revision.


DESCRIPTION:
	Variables local to this module.
		
	$Id: mainVariable.def,v 1.1 97/04/04 16:55:25 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@
;-------------------------------------------------------------------------	
; 			initialized variables
;-------------------------------------------------------------------------	

idata	segment

NRSP <ProtocolInteractionClass				; define class	>


TELT<GTelnetClass	mask	CLASSF_NEVER_SAVED			>
TermClass		mask	CLASSF_NEVER_SAVED	;define termProcess

TELT<method	TermGTelnetOpenConnection, GTelnetClass, MSG_GTELNET_OPEN_CONNECTION>

TermApplicationClass					; define class

termLazarusing		byte	0	; are we in a Lazarus state?
					;  make sure this defaults to 0
	

idata	ends

udata	segment

numParityErr	db      (?)             ;number of parity errors
numFrameErr	db      (?)             ;number of frame errors
numReadErr	db      (?)             ;number of read/overrun errors
numWriteErr	db      (?)             ;number of write errors
halfDuplex	db      (?)             ;flag if in half duplex mode
toneDial	db      (?)             ;flag if should use tone/pulse dial
if DBCS_PCGEOS
readErrBuf	wchar DISP_BUF_SIZE dup (?);read error buffer
writeErrBuf	wchar DISP_BUF_SIZE dup (?);write error buffer
parityErrBuf	wchar DISP_BUF_SIZE dup (?);parity error buffer
frameErrBuf	wchar DISP_BUF_SIZE dup (?);frame error buffer
else
readErrBuf	db DISP_BUF_SIZE dup (?);read error buffer
writeErrBuf	db DISP_BUF_SIZE dup (?);write error buffer
parityErrBuf	db DISP_BUF_SIZE dup (?);parity error buffer
frameErrBuf	db DISP_BUF_SIZE dup (?);frame error buffer
endif
termType	Terminals		;what terminal are we emulating?
prevTermType	Terminals     		;save old termtype before changing it
termTable	TermTableStruct (<>)	;
if DBCS_PCGEOS
pathnameBuf	db PATH_BUFFER_SIZE dup (?)
modemNameBuf	db MODEM_CAT_SIZE dup (?) 	
else
pathnameBuf	wchar PATH_BUFFER_SIZE dup (?)
modemNameBuf	wchar MODEM_CAT_SIZE dup (?) 	
endif


; added new variables for storing and restoring modem settings across shutdowns
; - ted 1/19/92

modemSpeaker	dw	(?)		; modem speaker setting
modemVolume	dw	(?)		; modem volume setting
termOptions	dw	(?)		; terminal settings
dataBits	dw	(?)
parity		dw	(?)
stopBits	dw	(?)
handshake	dw	(?)
stopRemote	dw	(?)
stopLocal	dw	(?)

sendProtocol	db      (?)             ;file send transfer protocol
recvProtocol	db      (?)             ;file receive transfer protocol

diskHandle	dw	(?)		;disk handle of pathname
interfaceHandle	dw	(?)		;handle of Interface Resource
stringsHandle	dw	(?)		;handle of String Resource
transferUIHandle dw	(?)		;handle of ScriptUI Resource
applUIHandle	dw	(?)		;handle of InterfaceAppl Resource
termuiHandle	dw	(?)		;handle of TermUI (screen obj) Resource
fsmBlockHandle	dw	(?)		;handle of fsm segment
fsmBlockSeg	dw	(?)		;segment of fsm 
termSeg		dw	(?)		;segment for term buffer  
termHandle	dw	(?)		;handle for term buffer  

termProcHandle	dw	(?)		;term process handle
fsmResHandle	dw	(?)		;handle for FSM Resource 
fileResHandle	dw	(?)		;handle for File Resource
mainResHandle	dw	(?)		;handle for Main Resource 

serialHandle	hptr	(?)		; handle of serial driver

restoreFromState	db	(?)	; restore from state file?

protocolInteraction	db	(?)
reportedProtocolInteractionError	db	(?)

allowHangUp	db	(?)		; TRUE if user issued hang-up command

;
; for international support
;
bbsCP		DosCodePage
if DBCS_PCGEOS
bbsSendCP	DosCodePage
bbsRecvCP	DosCodePage
endif
dosCP		DosCodePage

if INPUT_OUTPUT_MAPPING
inputMap	db	256 dup (?)
outputMap	db	256 dup (?)
endif

if	_ACCESS_POINT
settingsConnection	word		; current access point aelection ID
endif	; if _ACCESS_POINT

udata	ends


;------------------------------------------------------------------------------
;			MULTI-THREAD VARIABLES
;------------------------------------------------------------------------------
;These variables are accessed by more than one thread, and so have semaphores
;controlling their use.

;This variable is used by SerialReadData in Serial/serialMain.asm to decide
;where to send the input stream to.

idata	segment

inputDirectionSem Semaphore <1, 0>	;semaphore (initially unlocked)
RSP < scrDisplaySem Semaphore <1, 0> 	;semaphore (initially unlocked)	>


if	_VSER

incomingRetries		word	INCOMING_CALL_MAX_TRIES
	; Retry countdown when answering incoming calls.

incomingCallData	hptr
	; Data block of current ECI_CALL_DATA_CALL_COMING message
	; we're trying to answer.

endif	; _VSER

idata	ends

udata	segment

termStatus	TermMode		;what mode is term program in

routineOffset	dw	(?)		;input routine offset
routineHandle	dw	(?)		;input routine handle

lastUpdatedSerialErrors	dd	(?)	; time of last update of serial errors

if USE_FEP
fepStrategy	fptr.far	(?)	; FEP strategy routine, if any
fepDriverHandle	hptr		(?)	; FEP driver handle
endif

if	_VSER

vpClientToken	byte			; token of being VP client

haveExclusive		BooleanByte	; do we have full-screen excl?
buryOnDisconnect	BooleanByte	; should we go to back on hangup?
dataCallID		byte		; ID of current data call

endif	; _VSER

udata	ends





;---------------------------------------------------------------------------
;			TermClassStructures
;---------------------------------------------------------------------------

TermClassStructures	segment resource


TermTimedDialogClass

TermClassStructures	ends


