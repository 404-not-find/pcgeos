/*
 *	Copyright (c) GeoWorks 1991 -- All Rights Reserved
 *
 * Project:	PC GEOS
 * Module:	
 * File:	uiAttributes.ui
 *
 * Author:	John Wedgwood, Sep  4, 1991
 *
 * Revision History:
 *	Name	Date		Description
 *	----	----		-----------
 *	John	 9/ 4/91	Initial revision
 *
 * Description:
 *	Definitions for the "Attributes" menu
 *
 *	$Id: uiAttributes.ui,v 1.1 97/04/04 15:48:45 newdeal Exp $
 *
 */
start Interface;


AttributesMenu = GenInteraction {
	moniker = 'm', "Format";
	children =
		GCFloatFormatControl
#if _TEXT_OPTS
		,TextCharSubGroup
		,GCTextJustificationControl
#endif
		,GCSSBorderControl
#if _BORDER_C
		,GCSSBorderAttrInteraction
#endif
#if _TEXT_OPTS
		,ParagraphMenu
#endif
		;
	visibility = popup;
}

end Interface;

start AttrsUI;


GCFloatFormatControl = FloatFormat {
	moniker = 'F', "Number Format";
	type = properties;
	visibility = dialog;
	hints = {
		HINT_GEN_CONTROL_SCALABLE_UI_DATA { GenControlScalableUIEntry <
		 GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
		     UIIL_INTRODUCTORY,
			mask FCF_FORMAT_LIST>,
		    <GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
		     UIIL_INTERMEDIATE,
			mask FCF_FORMAT_LIST or mask FCF_DEFINE_FORMATS>
		}
	}
}

/****************************************************************************
 *	"Cell Border"
 ***************************************************************************/
GCSSBorderControl = SSBorderControl {
	moniker = 'l', "Cell Borders";
	visibility = dialog;
	type = properties;
}


#if _BORDER_C
GCSSBorderAttrInteraction = GenInteraction {
	moniker = 'o', "Border Color";
	visibility = dialog;
	type = properties;
	children =
		GCSSBorderColorControl;
	hints = {
		ATTR_GEN_HELP_CONTEXT {
			char "dbSSBrdrColor", 0
		}
	}
}

GCSSBorderColorControl = SSBorderColorControl {
	hints = {
		HINT_GEN_CONTROL_DESTROY_CHILDREN_WHEN_NOT_INTERACTABLE,
		ATTR_GEN_CONTROL_PROHIBIT_UI {
			word mask CSF_PATTERN
		}
	}
}
#endif


/****************************************************************************
 *	"Font" menu
 ***************************************************************************/
#if _TEXT_OPTS
TextCharSubGroup = GenInteraction {
	children =
		GCTextFontControl,
#if _PT_SIZE
		GCTextSizeControl,
#endif
		GCTextStyleControl,
		GCTextFGColorControl,
		GCTextBGColorControl,
		GCFontAttrControl;
}
#else

#if _PT_SIZE
TextCharSubGroup = GenInteraction {
	children = CGTextSizeControl;
}
#endif

#endif

#if _TEXT_OPTS
GCTextFontControl = FontControl {
	moniker = 'n', "Fonts";
	visibility = popup;
	hints = {
	    	HINT_GEN_CONTROL_SCALABLE_UI_DATA { GenControlScalableUIEntry <
		 GCSUIC_SET_NORMAL_FEATURES_IF_APP_FEATURE_OFF,
		 mask GCF_COMPLEX_CELL_ATTRIBUTES,
		 mask FCF_SHORT_LIST >,<
		 GCSUIC_SET_TOOLBOX_FEATURES_IF_APP_FEATURE_OFF,
		 mask GCF_COMPLEX_CELL_ATTRIBUTES,
		 mask FCTF_TOOL_LIST>}
	}
}
#endif

/****************************************************************************
 *	"Sizes" menu
 ***************************************************************************/
#if _PT_SIZE
GCTextSizeControl = PointSizeControl {
	moniker = 'z', "Sizes";
	visibility = popup;
	hints = {
	    	HINT_GEN_CONTROL_SCALABLE_UI_DATA { GenControlScalableUIEntry <
		 GCSUIC_SET_NORMAL_FEATURES_IF_APP_FEATURE_OFF,
		 mask GCF_COMPLEX_CELL_ATTRIBUTES,
		 mask PSCF_9 or mask PSCF_10 or mask PSCF_12 or \
		 mask PSCF_14 or mask PSCF_18 or mask PSCF_24 or \
		 mask PSCF_36 or mask PSCF_54 or mask PSCF_72>,<
		 GCSUIC_SET_TOOLBOX_FEATURES_IF_APP_FEATURE_OFF,
		 mask GCF_COMPLEX_CELL_ATTRIBUTES,
		 mask PSCTF_9 or mask PSCTF_10 or mask PSCTF_12 or \
		 mask PSCTF_14 or mask PSCTF_18 or mask PSCTF_24 or \
		 mask PSCTF_36 or mask PSCTF_54 or mask PSCTF_72>}
	}
}
#endif

/****************************************************************************
 *	"Styles" menu
 ***************************************************************************/
#if _TEXT_OPTS
GCTextStyleControl = TextStyleControl {
	moniker = 'S', "Styles";
	visibility = popup;
	hints = {
		ATTR_GEN_CONTROL_PROHIBIT_UI {
			word not (mask TSCF_PLAIN or \
				mask TSCF_BOLD or \
				mask TSCF_ITALIC or \
				mask TSCF_UNDERLINE or \
				mask TSCF_STRIKE_THRU or \
				mask TSCF_SUBSCRIPT or \
				mask TSCF_SUPERSCRIPT)
		},
		ATTR_GEN_CONTROL_PROHIBIT_TOOLBOX_UI {
			word not (mask TSCTF_PLAIN or \
				mask TSCTF_BOLD or \
				mask TSCTF_ITALIC or \
				mask TSCTF_UNDERLINE or \
				mask TSCTF_STRIKE_THRU or \
				mask TSCTF_SUBSCRIPT or \
				mask TSCTF_SUPERSCRIPT)
		},
		HINT_GEN_CONTROL_SCALABLE_UI_DATA { GenControlScalableUIEntry <
		 GCSUIC_SET_NORMAL_FEATURES_IF_APP_FEATURE_OFF,
		 mask GCF_COMPLEX_CELL_ATTRIBUTES,
		 mask TSCF_PLAIN or mask TSCF_BOLD or \
		 mask TSCF_ITALIC or mask TSCF_UNDERLINE or \
		 mask TSCF_SUBSCRIPT or mask TSCF_SUPERSCRIPT or \
		 mask TSCF_STRIKE_THRU>,
		<GCSUIC_SET_NORMAL_FEATURES_IF_APP_FEATURE_OFF,
		 mask GCF_SIMPLE_CELL_ATTRIBUTES,
		 mask TSCF_PLAIN or mask TSCF_BOLD or \
		 mask TSCF_ITALIC or mask TSCF_UNDERLINE>},
	}
}
#endif

/****************************************************************************
 *	"Justification" menu
 ***************************************************************************/
#if _TEXT_OPTS
GCTextJustificationControl = JustificationControl {
	moniker = 'J', "Justification";
	visibility = popup;
#if DO_DBCS
	hints = {
		ATTR_GEN_CONTROL_PROHIBIT_UI {
			word mask JCF_FULL_CHAR
		},
		ATTR_GEN_CONTROL_PROHIBIT_TOOLBOX_UI {
			word mask JCTF_FULL_CHAR
		}
	}
#endif
}
#endif		/* if _TEXT_OPTS */



/****************************************************************************
 *	"Text Color" and "Background Color" DBs
 ***************************************************************************/
#if _TEXT_OPTS
GCTextFGColorControl = CharFGColorControl {
	moniker = 'T', "Text Color";
	visibility = dialog;
	type = properties;
	hints = {
		ATTR_GEN_CONTROL_PROHIBIT_UI {
			word mask CSF_PATTERN
		},
		ATTR_GEN_CONTROL_PROHIBIT_TOOLBOX_UI {
			word	mask CSTF_PATTERN
		},
		HINT_GEN_CONTROL_SCALABLE_UI_DATA { GenControlScalableUIEntry <
		 GCSUIC_SET_NORMAL_FEATURES_IF_APP_FEATURE_OFF,
		 mask GCF_COMPLEX_CELL_ATTRIBUTES,
		 mask CSF_INDEX>}
	}
}

GCTextBGColorControl = CharBGColorControl {
	moniker = 'B', "Text Background Color";
	visibility = dialog;
	type = properties;

		hints = {
		ATTR_GEN_CONTROL_PROHIBIT_UI {
			word mask CSF_PATTERN
		}
	}
}

GCFontAttrControl = FontAttrControl {
	moniker = 'A', "Character Attributes";
	type = properties;
	visibility = dialog;
}
#endif


/****************************************************************************
 *	Paragraph menu
 ***************************************************************************/

#if _TEXT_OPTS
ParagraphMenu = GenInteraction {
	moniker = 'P', "Paragraph";

	children = GCLineSpacingControl, GCParaSpacingControl,
		   GCParaBGColorControl,
		   GCTextStyleSheetControl, GCMarginControl,
		   GCTabControl, GCDefaultTabsControl, GCBorderControl;
		   /* GCDropCapControl, GCHyphenationControl */
	visibility = popup;
}
#endif

end AttrsUI;


#if _TEXT_OPTS
start ParaMenuUI;

GCLineSpacingControl = LineSpacingControl {
	moniker = 'L', "Line Spacing";
	visibility = popup;
}

GCParaSpacingControl = ParaSpacingControl {
	moniker = 'c', "Paragraph Spacing";
	type = properties;
	visibility = dialog;
}

GCParaBGColorControl = ParaBGColorControl {
	moniker = 'P', "Paragraph Color";
	type = properties;
	visibility = dialog;
}

GCTextStyleSheetControl = TextStyleSheetControl {
	moniker = 'S', "Text Style Sheets";
	visibility = popup;
	hints = {
		ATTR_GEN_CONTROL_PROHIBIT_UI {
			word	mask SSCF_LOAD
		}
	}
}

GCMarginControl = MarginControl {
	moniker = 'I', "Indents";
	type = properties;
	visibility = dialog;
}

GCTabControl = TabControl {
	moniker = 'T', "Tabs";
	type = properties;
	visibility = dialog;
}

GCDefaultTabsControl = DefaultTabsControl {
	moniker = 'D', "Default Tabs";
	type = properties;
	visibility = dialog;
}

GCBorderControl = BorderControl {
	moniker = 'B', "Borders";
	visibility = popup;
}

/*
GCDropCapControl = DropCapControl {
	moniker = 'D', "Drop Cap";
	type = properties;
	visibility = dialog;
}
*/

/*
GCHyphenationControl = HyphenationControl {
	moniker = 'H', "Hyphenation";
	type = properties;
	visibility = dialog;
}
*/

end ParaMenuUI;
#endif
