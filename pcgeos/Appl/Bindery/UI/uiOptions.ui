/*
 * Project:	Studio
 * File:	UI/uiOptions.ui
 *
 * Author:	Jenny Greenwood   7 March 1994
 *
 *	This file contains the user interface description for the options
 * menu.
 *
 *	$Id: uiOptions.ui,v 1.1 97/04/04 14:40:17 newdeal Exp $
 *
 */

/*-----------------------------------------------------------------------------
	Options menu
-----------------------------------------------------------------------------*/

start PrimaryUI;

OptionsMenu = GenInteraction {
	children = OptionsGroup, StudioToolControl,
		   SaveResetGroup;
	visibility = popup;
	hints = { ATTR_GEN_INTERACTION_GROUP_TYPE
			{ GenInteractionGroupType GIGT_OPTIONS_MENU } }
}

end PrimaryUI;

/* ------------------------------- */

#define RESOURCE_FOR_USER_LEVEL_DIALOG_TOP	OptionsMenuUI
#define RESOURCE_FOR_USER_LEVEL_DIALOG_INSIDES	UserLevelUI

#define USER_LEVEL_APPLICATION_OBJECT	StudioApp
#define USER_LEVEL_SET_USER_LEVEL_MSG		\
			MSG_STUDIO_APPLICATION_SET_USER_LEVEL
#define USER_LEVEL_INITIATE_FINE_TUNE_MSG	\
			MSG_STUDIO_APPLICATION_INITIATE_FINE_TUNE
#define USER_LEVEL_FINE_TUNE_MSG		\
			MSG_STUDIO_APPLICATION_FINE_TUNE
#define USER_LEVEL_CHANGE_USER_LEVEL_MSG		\
			MSG_STUDIO_APPLICATION_CHANGE_USER_LEVEL
#define USER_LEVEL_CANCEL_USER_LEVEL_MSG		\
			MSG_STUDIO_APPLICATION_CANCEL_USER_LEVEL
#define USER_LEVEL_STATUS_MSG	MSG_STUDIO_APPLICATION_USER_LEVEL_STATUS

#define	USER_LEVEL_INTRODUCTORY_TEXT \
	"Introductory text editing and formatting."

#define	USER_LEVEL_BEGINNING_TEXT	\
	"General-purpose word processing."

#define	USER_LEVEL_INTERMEDIATE_TEXT	\
	"Full-featured word processing with simple page layout and graphics."

#define	USER_LEVEL_ADVANCED_TEXT	\
	"Desktop publishing and advanced word processing."

#include <usrLevel.uih>

/***/

start UserLevelUI;

FeaturesList = GenBooleanGroup {
	children = EditFeaturesEntry, SimpleTextAttributesEntry,
		   SimplePageLayoutEntry, SimpleGraphicsLayerEntry,
		   CharacterMenuEntry, ColorEntry,

		   GraphicsLayerEntry, MiscOptionsEntry,
		   ComplexTextAttributesEntry,

		   RulerControlEntry, ComplexPageLayoutEntry,
		   ComplexGraphicsEntry,

		   HelpEditorEntry;
	selectedBooleans = "DEFAULT_FEATURES";
        hints = {
		HINT_ORIENT_CHILDREN_VERTICALLY,
		HINT_ALLOW_CHILDREN_TO_WRAP,
		HINT_WRAP_AFTER_CHILD_COUNT {
			word	7
		}
	}
}

EditFeaturesEntry = GenBoolean {
	moniker = 'E', "Edit Features";
	identifier = "mask SF_EDIT_FEATURES"; 
}

SimpleTextAttributesEntry = GenBoolean {
	moniker = 'S', "Simple Text Attributes";
	identifier = "mask SF_SIMPLE_TEXT_ATTRIBUTES";
}

SimplePageLayoutEntry = GenBoolean {
	moniker = 'P', "Simple Page Layout";
	identifier = "mask SF_SIMPLE_PAGE_LAYOUT";
}

SimpleGraphicsLayerEntry = GenBoolean {
	moniker = 'L', "Simple Graphics Layer";
	identifier = "mask SF_SIMPLE_GRAPHICS_LAYER";
}

CharacterMenuEntry = GenBoolean {
	moniker = 'M', "Character Menu";
	identifier = "mask SF_CHARACTER_MENU";
}

ColorEntry = GenBoolean {
	moniker = 'C', "Color";
	identifier = "mask SF_COLOR";
}


GraphicsLayerEntry = GenBoolean {
	moniker = 'G', "Graphics Layer";
	identifier = "mask SF_GRAPHICS_LAYER";
}

MiscOptionsEntry = GenBoolean {
	moniker = 'O', "Misc Options";
	identifier = "mask SF_MISC_OPTIONS";
}

ComplexTextAttributesEntry = GenBoolean {
	moniker = 'T', "Complex Text Attributes";
	identifier = "mask SF_COMPLEX_TEXT_ATTRIBUTES";
}


RulerControlEntry = GenBoolean {
	moniker = 'R', "Ruler Control";
	identifier = "mask SF_RULER_CONTROL";
}

ComplexPageLayoutEntry = GenBoolean {
	moniker = 'x', "Complex Page Layout";
	identifier = "mask SF_COMPLEX_PAGE_LAYOUT";
}

ComplexGraphicsEntry = GenBoolean {
	moniker = 'a', "Complex Graphics";
	identifier = "mask SF_COMPLEX_GRAPHICS";
}


HelpEditorEntry = GenBoolean {
	moniker = 'H', "Help Editor";
/*	identifier = "mask SF_HELP_EDITOR"; */
}

end UserLevelUI;

/* ------------------------------- */

start OptionsMenuUI;

OptionsGroup = GenInteraction {
	children = ShowToolsPopup, RulerPopup, 
		   MiscSettingsPopup;
}

SaveResetGroup = GenInteraction {
	children = SaveOptionsTrigger, ResetOptionsTrigger;
}

/* --- */

ShowToolsPopup = GenInteraction {
	moniker = 'S', "Show Tools";
	children = ShowBarList;
	visibility = popup;
}

ShowBarList = GenBooleanGroup {
	children = ShowStyleBarEntry, ShowFunctionBarEntry, 
		   ShowDrawingToolsEntry;
	applyMsg = MSG_STUDIO_APPLICATION_UPDATE_BARS;
	destination = StudioApp;
	selectedBooleans = "DEFAULT_BAR_STATES";
        hints = {
		ATTR_GEN_INIT_FILE_KEY { char "showBars", 0 }
	}
}

ShowStyleBarEntry = GenBoolean {
	moniker = 'S', "Style Bar";
	identifier = "mask SBS_SHOW_STYLE_BAR";
}

ShowFunctionBarEntry = GenBoolean {
	moniker = 'F', "Function Bar";
	identifier = "mask SBS_SHOW_FUNCTION_BAR";
}

ShowDrawingToolsEntry = GenBoolean {
	moniker = 'O', "Object Tools";
	identifier = "mask SBS_SHOW_DRAWING_TOOLS";
}


/***/

MiscSettingsPopup = GenInteraction {
	children = MiscSettingsList;
	moniker = 'O', "Other Settings";
	visibility = popup;
}

MiscSettingsList = GenBooleanGroup {
	children = ConfirmationEntry, DisplaySectionNameEntry,
		   ShowInvisiblesEntry,
		   PasteGraphicsToCurrentLayerEntry,
		   DoNotDeletePagesWithGraphicsEntry;
        hints = { ATTR_GEN_INIT_FILE_KEY { char "miscSettings", 0 } }
	applyMsg = MSG_STUDIO_APPLICATION_UPDATE_MISC_SETTINGS;
	destination = StudioApp;
	selectedBooleans = "DEFAULT_MISC_SETTINGS";
}

ConfirmationEntry = GenBoolean {
	moniker = 'C', "Confirm Actions";
	identifier = "mask SMS_CONFIRM";
}

DisplaySectionNameEntry = GenBoolean {
	/*
	 * Make this unusable since Condo doesn't need it.
	 */
	genStates = default -usable;	
	moniker = 'D', "Display Section Name";
	identifier = "mask SMS_DISPLAY_SECTION_AND_PAGE";
}

ShowInvisiblesEntry = GenBoolean {
	moniker = 'I', "Show Invisibles";
	identifier = "mask SMS_SHOW_INVISIBLES";
}

AutomaticLayoutRecalcEntry = GenBoolean {
	moniker = 'A', "Automatic Layout Recalc";
	identifier = "mask SMS_AUTOMATIC_LAYOUT_RECALC";
}

PasteGraphicsToCurrentLayerEntry = GenBoolean {
	/*
	 * Make this unusable since Condo doesn't need it.
	 */
	genStates = default -usable;	
	moniker = 'P', "Paste Graphics To Current Layer";
	identifier = "mask SMS_PASTE_GRAPHICS_TO_CURRENT_LAYER";
}

DoNotDeletePagesWithGraphicsEntry = GenBoolean {
	/*
	 * Make this unusable since Condo doesn't need it.
	 */
	genStates = default -usable;	
	moniker = 'G', "Do Not Delete Pages With Graphics";
	identifier = "mask SMS_DO_NOT_DELETE_PAGES_WITH_GRAPHICS";
}

/***/

RulerPopup = GenInteraction {
	children = StudioTextRulerControl, StudioRulerShowControl,
		   StudioRulerTypeControl;
	moniker = 'R', "Rulers";
	visibility = popup;
}

StudioTextRulerControl = TextRulerControl {
}

StudioRulerShowControl = RulerShowControl {
	rulerAttrs = default -showVertical;
	message = "MSG_STUDIO_DISPLAY_UPDATE_RULERS";
}

StudioRulerTypeControl = RulerTypeControl {
	moniker = 'U', "Ruler Units";
	visibility = popup;
}

/***/

StudioToolControl = GenToolControl {
	moniker = 'T', "Customize Tool Bars";
	visibility = dialog;
	type = command;
	toolboxList = StudioToolboxList;
	toolGroupList = StudioToolGroupList;
	hints = {
		HINT_POSITION_WINDOW_AT_RATIO_OF_PARENT {
	     		SpecWinSizePair < mask SWSS_RATIO or PCT_10, \
					mask SWSS_RATIO or PCT_20>
		}
	}
}
chunk StudioToolboxList = data {
	UN_OPTR StyleToolbar
	UN_OPTR StyleToolbarName
	UN_OPTR FunctionToolbar
	UN_OPTR FunctionToolbarName
	UN_OPTR GrObjToolsToolbar
	UN_OPTR GrObjToolsToolbarName
}
chunk StudioToolGroupList = data {

	; Style bar

	UN_OPTR	PageTools
	UN_OPTR	SpellTools
	UN_OPTR	SearchReplaceTools
	UN_OPTR	TextStyleSheetTools
	UN_OPTR	JustificationTools
	UN_OPTR	FontTools
	UN_OPTR	TextStyleTools
	UN_OPTR	PointSizeTools

	; Function bar

	UN_OPTR	DocumentTools
	UN_OPTR	PrintTools
	UN_OPTR	EditTools
	UN_OPTR	ViewTools
	UN_OPTR	HyphenationTools
	UN_OPTR	LineSpacingTools

	; Drawing tools

	UN_OPTR	GrObjDrawingTools

	; Graphic bar

/*	UN_OPTR TextColorTools */
}


chunk StyleToolbarName = "Style Bar (Below menu)";
chunk FunctionToolbarName = "Function Bar (Below menu)";
chunk GrObjToolsToolbarName = "Object Tools Area (Left side)";


SaveOptionsTrigger = GenTrigger {
	SAVE_OPTIONS_TRIGGER_VALUES
	action = MSG_META_SAVE_OPTIONS, StudioApp;
}

ResetOptionsTrigger = GenTrigger {
	RESET_OPTIONS_TRIGGER_VALUES
	action = MSG_STUDIO_APPLICATION_QUERY_RESET_OPTIONS, StudioApp;
}

end OptionsMenuUI;

