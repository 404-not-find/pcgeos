/* -----------------------------------------------------------------
 *   converting the maker into a player
 *
 *   7/25/00	jfh    
 * -----------------------------------------------------------------*/

@include <stdapp.goh>
#include <Ansi/stdio.h>
#include <Ansi/string.h>
#include <gstring.h>
#include <initfile.h>

/***************************************************************************
 * Constants
 **************************************************************************/

#define MANUFACTURER_ID_BREADBOX    16431

#define GRID_SPACE          ( ' ' )

#define WSP_DOCUMENT_PROTOCOL_MAJOR     1
#define WSP_DOCUMENT_PROTOCOL_MINOR     0

#define WSPS_ANSWERS    0x0002
#define WSMS_INTERSECT  0x0004

#define ALL_ANSWERS    0xffff
#define FOUND_ANSWERS    0xfffe

#define DRAW_GRID_MARGINS               20
#define DRAW_GRID_SPACE_SIZE            20
#define DRAW_GRID_ANSWER_OUTLINE        8
#define DRAW_GRID_TEXT_SIZE             14
#define DRAW_GRID_TEXT_FONT             FID_DTC_URW_MONO
#define DRAW_GRID_ANSWER_CORNER_RADIUS  5
#define DRAW_GRID_MAX_SCALE_FACTOR      MakeWWFixed( 1.5 )
#define WWFIXED_SQRT_TWO                MakeWWFixed( 1.414214 )

#define PRINT_WORD_MIN_TEXT_SIZE    MakeWWFixed( 4.0 )
#define PRINT_WORD_STEP_TEXT_SIZE   MakeWWFixed( 1.0 )
#define PRINT_WORD_MAX_TEXT_SIZE    MakeWWFixed( 14.0 )
#define PRINT_WORD_COLUMN_SPACING   (0.5 * 72)
#define PRINT_WORD_TEXT_FONT        FID_DTC_URW_MONO
#define PRINT_WORD_TEXT_BOX_WIDTH   (6 * 72)
#define PRINT_WORD_TEXT_BOX_HEIGHT  (2 * 72)
#define PRINT_WORD_TEXT_BOX_LEFT    (1.25 * 72)
#define PRINT_WORD_TEXT_BOX_TOP     (8 * 72)
#define PRINT_GRID_BOUNDS_LEFT      (1.25 * 72)
#define PRINT_GRID_BOUNDS_TOP       (1.5 * 72)
#define PRINT_GRID_BOUNDS_RIGHT     (7.25 * 72)
#define PRINT_GRID_BOUNDS_BOTTOM    (7.5 * 72)
#define PRINT_HEADER_BOUNDS_LEFT    (1.25 * 72)
#define PRINT_HEADER_BOUNDS_RIGHT   (7.25 * 72)
#define PRINT_HEADER_BOUNDS_TOP     (1 * 72)
#define PRINT_HEADER_TEXT_FONT      FID_DTC_URW_ROMAN
#define PRINT_HEADER_TEXT_SIZE      MakeWWFixed( 18.0 )

/***************************************************************************
 * Structures and Types
 **************************************************************************/

typedef struct                          /* Document Map Block structure */
{
    VMBlockHandle WSPDM_heapBlock;      /* LMem heap block handle */
    ChunkHandle WSPDM_wordListChunk;    /* word list chunk handle */
    ChunkHandle WSPDM_wordSearchChunk;  /* word search chunk handle */
    ChunkHandle WSPDM_answersChunk;     /* answers array chunk handle */
}
WSPDocumentMap;

typedef enum                            /* Word placement method */
{
    WSL_EASY = 0,                       /* Only right or down */
    WSL_MEDIUM,                         /* Left, right, up, down */
    WSL_HARD                            /* All directions */
}
WordSearchLevel;

typedef struct
{
    ChunkArrayHeader WSH_meta;          /* Required header */
    word WSH_width;                     /* Width of grid (columns) */
    word WSH_height;                    /* Height of grid (rows) */
    WordSearchLevel WSH_level;          /* Level of difficulty */
	 word WSH_settings;                  /* Booleans from WSPSettingsOther */
}
WordSearchHeader;

typedef struct                          /* Word search answer descriptor */
{
    byte WSAE_row;                      /* Row of first letter */
    byte WSAE_column;                   /* Column of first letter */
    byte WSAE_direction;                /* Direction of word */
    byte WSAE_length;                   /* Length of word */
}
WordSearchAnswerElement;

/***************************************************************************
 * Globals
 **************************************************************************/

extern VMFileHandle g_fhDocument;
extern optr g_oDocument;
extern VMBlockHandle g_bhDocHeap;
extern ChunkHandle g_chDocWordList;
extern ChunkHandle g_chDocWordSearch;
extern ChunkHandle g_chDocAnswers;
extern word g_whichAns;
extern word g_whichAnsLtr;
extern word g_numWordsFound;
extern Boolean g_showAnswers;
extern optr g_wordsFoundArray;
extern optr g_ltrsFoundArray;
extern word g_sysPointSize;
extern word g_numWords;

/***************************************************************************
 * Function defines
 **************************************************************************/

char WSPGetLetter(optr ows, word x, word y);
void WSPGetDirectionOffsets(WordSearchLevel eLevel, word nDir, 
                            sword *pndx, sword *pndy);
WWFixedAsDWord WSPDirectionToAngle(WordSearchLevel eLevel, word nDir);
void WSPGetDocBounds(WordSearchHeader *pwsh, RectDWord *pr);
void WSPDrawHeader(GStateHandle gstate);
void WSPDrawWordSearch(GStateHandle gstate, word nLeftBound, word nTopBound, 
                       word nRightBound, word nBottomBound, Boolean bPrinting);
void WSPDrawAnswers(GStateHandle gstate, optr oans, WordSearchHeader *pwsh,
                    word whichAns);
void WSPDrawWordList(GStateHandle gstate);
Boolean WSPCheckForWSM (void);

/***************************************************************************
 * Class definitions
 **************************************************************************/

@class WSPProcessClass, GenProcessClass;
    @message (GEN_DYNAMIC_LIST_QUERY_MSG) MSG_WSP_PROCESS_QUERY_WORD_LIST;
    @message (GEN_BOOLEAN_GROUP_APPLY_MSG) MSG_WSP_PROCESS_APPLY_SETTINGS_OTHER;
    @message void MSG_WSP_OPEN_MAKER();
@endc;

@class WSPDocumentControlClass, GenDocumentControlClass;
@endc;

@class WSPGenViewClass, GenViewClass;
@endc;


