/***************************************************************************
 *  FILE:  SOURCE\ROUTINES\PARSING.GOH
 ***************************************************************************/

/*-------------------------------------------------------------------------
 | Project:  Lysle's IRC Chat program
 | Module:   General String Parsing Routines
 |           Copyright (c) 1998 Breadbox Computer Company
 |
 | Description:
 |    Various routines to handle parsing/searching/converting a string.
 |
 | Revision History:
 |    Who  Date:     Comments:
 |    ---  --------  ---------
 |    LES  05/01/98  Created.
 |                   (LES = Lysle Shields)
 *-----------------------------------------------------------------------*/

/*-------------------------------------------------------------------------
 | Routine:  CleanText
 *-------------------------------------------------------------------------
 |
 | Description:
 |    Remove double byte characters from a string.
 |
 | Inputs:
 |    byte *p_text                -- Null terminated text
 |
 | Revision History:
 |    Who  Date:     Comments:
 |    ---  --------  ---------
 |    LES  05/01/98  Created.
 |
 *-----------------------------------------------------------------------*/

/*void CleanText(byte *p_text)
{
    while (*p_text)  {
        if (*p_text >= 128)
            *p_text &= 0x7F ;
        p_text++ ;
    }
}

/*-------------------------------------------------------------------------
 | Routine:  SkipSpaces
 *-------------------------------------------------------------------------
 |
 | Description:
 |    SkipSpaces takes in a pointer to a string and goes to the end or
 |    skips all spaces (but not all white spaces, just ' ').
 |
 | Inputs:
 |    char *p_text                -- Null terminated text
 |
 | Revision History:
 |    Who  Date:     Comments:
 |    ---  --------  ---------
 |    LES  05/01/98  Created.
 |
 *-----------------------------------------------------------------------*/

char *SkipSpaces(char *p_text)
{
    /* Skip the spaces */
    while ((*p_text) && (*p_text == ' '))
        p_text++ ;

    return p_text ;
}

/*-------------------------------------------------------------------------
 | Routine:  GetSpaceDelimited
 *-------------------------------------------------------------------------
 |
 | Description:
 |    Reads a string and finds the next space delimited item (or ends
 |    in '\0').
 |
 | Inputs:
 |    char *p_text                -- Null terminated string
 |    char *section               -- Pull out section.  Returns "\0" if
 |                                   none found.
 |    word sectionLimit           -- Limit on the number of characters in
 |                                   the section string.
 |
 | Revision History:
 |    Who  Date:     Comments:
 |    ---  --------  ---------
 |    LES  05/01/98  Created.
 |
 *-----------------------------------------------------------------------*/

char *GetSpaceDelimited(
         char *p_text,
         char *section,
         word sectionLimit)
{
    /* Skip any spaces at the front */
    p_text = SkipSpaces(p_text) ;

    /* Stop if we find the end of the line */
    while ((*p_text) &&
           (*p_text != '\r') &&
           (*p_text != '\n') &&
           (*p_text != ' '))  {
        if (sectionLimit)  {
            *(section++) = *p_text ;
            sectionLimit-- ;
        }
        p_text++ ;
    }
    *section = '\0' ;

    return SkipSpaces(p_text) ;
}

/*-------------------------------------------------------------------------
 | Routine:  ParseNicknameFromServerString
 *-------------------------------------------------------------------------
 |
 | Description:
 |    Finds the nick name from the server string which is in the format:
 |        :nick!host
 |
 | Inputs:
 |    char *p_server              -- Server string (null terminated)
 |    char *p_nickname            -- String to return nick name in.
 |    word nickMaximum            -- Maximum nick name characters
 |
 | Revision History:
 |    Who  Date:     Comments:
 |    ---  --------  ---------
 |    LES  05/01/98  Created.
 |
 *-----------------------------------------------------------------------*/

void ParseNicknameFromServerString(
     char *p_server,
     char *p_nickname,
     word nickMaximum)
{
    if (*p_server == ':')
        p_server++ ;

    while ((nickMaximum) && (*p_server) && (*p_server != '!'))  {
        *(p_nickname++) = *(p_server++) ;
        nickMaximum-- ;
    }
    *p_nickname = '\0' ;
}

/***************************************************************************
 *  END OF FILE:  SOURCE\ROUTINES\PARSING.GOH
 ***************************************************************************/

