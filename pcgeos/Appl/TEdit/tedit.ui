/*
 * Project:	PC/GEOS
 * Module:	TEdit (Sample PC/GEOS application)
 * File:	tedit.ui
 *
 * Author:	Tony Requist
 *
 * RCS STAMP:
 *	$Id: tedit.ui,v 1.5 98/05/14 00:19:30 joon Exp $
 *
 */

/* ----------------------------------------------------------------------------
	Include files
-----------------------------------------------------------------------------*/

#include "generic.uih"
#include "spool.uih"
#include "Objects/Text/tCtrl.uih"
#include "spell.uih"
#include "Art/mkrTextEditor.ui"
#include "Art/mkrTextEditorTiny.ui"


#ifdef SPELL_CONTROL
#define _SPELL_CONTROL 1
#else 
#define _SPELL_CONTROL 0
#endif


#ifdef EXCELSIOR

#include "eqeditDialog.ui"

#endif

#include "Internal/prodFeatures.uih"
#if FAX_SUPPORT
#include "mailbox.uih"
#endif
	
/* ----------------------------------------------------------------------------
	Class Declarations
-----------------------------------------------------------------------------*/

class TELargeText = VisLargeText {
}

#if FAX_SUPPORT
class TEMailboxPrintControl = PrintControl {
}
#endif

/* ----------------------------------------------------------------------------
	Application Object
-----------------------------------------------------------------------------*/

start	AppResource;

TEApp = GenApplication vardataReloc {
#ifdef EXCELSIOR
	children = TEPrimary, QuestionEditDialog;
#else
	children = TEPrimary;
#endif
	gcnList(MANUFACTURER_ID_GEOWORKS,GAGCNLT_WINDOWS) = TEPrimary;
	gcnList(MANUFACTURER_ID_GEOWORKS,MGCNLT_APP_STARTUP) =
		TEDocumentControl;
	gcnList(MANUFACTURER_ID_GEOWORKS,MGCNLT_ACTIVE_LIST) =
		TEDocumentControl,
#if FAX_SUPPORT
		SendControl,
#endif
		TEDisplayControl;
	gcnList(MANUFACTURER_ID_GEOWORKS,GAGCNLT_SELF_LOAD_OPTIONS) =
		TEDocumentControl,
#if FAX_SUPPORT
		SendControl,
#endif
		TEPrintControl,
		TEDisplayControl,
		TESearchReplaceControl,
#if	_SPELL_CONTROL
		TESpellControl,
#endif
#ifndef DO_PIZZA
		SizesMenu,
#endif
		TEEditControl;
	moniker = list {
		TextEditorTextMoniker,
		TextEditorLCMoniker,
		TextEditorLMMoniker,
		TextEditorSCMoniker,
		TextEditorSMMoniker,
		TextEditorYCMoniker,
		TextEditorYMMoniker,
		TextEditorSCGAMoniker,
		TextEditorTinyTCMoniker,
		TextEditorTinyTMMoniker,
		TextEditorTinyTCGAMoniker		
	}
	hints = {
		ATTR_GEN_INIT_FILE_CATEGORY {
		char	"tedit", 0
		},
		ATTR_GEN_APPLICATION_PRINT_CONTROL {
			UN_OPTR TEPrintControl
		}
	}
}

#ifdef EXCELSIOR
visMoniker TextEditorTextMoniker = "Quiz File Editor";
#else
visMoniker TextEditorTextMoniker = "Text File Editor";
#endif

end	AppResource;

/* ----------------------------------------------------------------------------
	 Primary window.
-----------------------------------------------------------------------------*/

/*
 * The GenDocumentControl must be a child of the primary, and must be
 * on the active list.
 */

start	Interface;		/* this resource is for misc UI objects */

TEPrimary = GenPrimary {
	children =
		FileMenu,
		EditMenu,
#ifndef DO_PIZZA
		SizesMenu,
#endif
		TEDisplayControl,
		TEDisplayGroup;
	hints = {
		HINT_SIZE_WINDOW_AS_DESIRED,
		ATTR_GEN_HELP_CONTEXT { char "TOC", 0 }
	}
}

FileMenu = GenInteraction {
	children =
		TEDocumentControl,
#if FAX_SUPPORT
		SendControl,
#endif
		TEPrintControl;

	visibility = popup;
	hints = { ATTR_GEN_INTERACTION_GROUP_TYPE { GenInteractionGroupType GIGT_FILE_MENU } }
}

#if _FAX_SUPPORT
TEPrintControl = TEMailboxPrintControl vardataReloc {
#else
TEPrintControl = PrintControl vardataReloc {
#endif
	docNameOutput = TEDocumentGroup;
	printAttributes = default -pageControls;
	printOutput = "TO_APP_MODEL";
	genStates = default -enabled;
	hints = {
#if LIMITED_FAX_SUPPORT
		ATTR_GEN_CONTROL_PROHIBIT_TOOLBOX_UI {
			word	mask PRINTCTF_FAX_TRIGGER
		},
		ATTR_GEN_CONTROL_PROHIBIT_UI {
			word 	mask PRINTCF_FAX_TRIGGER
		},
#endif
		ATTR_GEN_DESTINATION_CLASS { UN_DD TEDocumentClass }
	}
}

/* --- */

EditMenu = GenInteraction {
	visibility = popup;
#ifdef EXCELSIOR
	children = TEEditControl, 
			TESearchReplaceControl,
			TESpellControl,
			QuestionEditTrigger;
#else
#if	_SPELL_CONTROL
	children =
		TEEditControl, 
		TESearchReplaceControl,
		TESpellControl;
#else
	children =
		TEEditControl, 
		TESearchReplaceControl;
#endif
#endif
	hints = {
		ATTR_GEN_INTERACTION_GROUP_TYPE {
			GenInteractionGroupType GIGT_EDIT_MENU
		}
	}
}

#ifdef EXCELSIOR
QuestionEditTrigger = GenTrigger {
	action = MSG_GEN_INTERACTION_INITIATE, QuestionEditDialog;
	kbdAccelerator = control 'Q';
	moniker = 'Q',"Question Information";
	hints = {
		HINT_TRIGGER_BRINGS_UP_WINDOW
	}
}

#endif

TEEditControl = GenEditControl {
	hints = { 
		ATTR_GEN_CONTROL_PROHIBIT_UI {
			word	mask GECF_CHAR_MAP or \
				mask GECF_CLIP_ART
		}
	}	
}

TESearchReplaceControl = SearchReplaceControl {
	SEARCH_AND_REPLACE_TRIGGER_VALUES
	visibility = dialog;
	hints = {
		ATTR_SEARCH_CONTROL_INTERACT_ONLY_WITH_TARGETED_TEXT_OBJECTS,
		ATTR_SEARCH_CONTROL_SELECTION_TYPE {
			word 	SDT_TEXT
		}
	}
}

#if	_SPELL_CONTROL
TESpellControl = SpellControl {
	SPELL_CHECK_TRIGGER_VALUES
	visibility = dialog;
	hints = {
		ATTR_SPELL_CONTROL_INTERACT_ONLY_WITH_TARGETED_TEXT_OBJECTS
	}
}
#endif

#ifndef DO_PIZZA
SizesMenu = PointSizeControl {
	moniker = 'z', "Sizes";
	visibility = popup;
	hints = { ATTR_GEN_CONTROL_PROHIBIT_UI {
		word	mask PSCF_10 or mask PSCF_18 or mask PSCF_24 or \
			mask PSCF_36 or mask PSCF_54 or \
			mask PSCF_72 or mask PSCF_SMALLER or \
			mask PSCF_LARGER or mask PSCF_CUSTOM_SIZE
		}
	}
	output = "TO_APP_MODEL";	/* Send to the document object */
}

#endif

/* --- */

TEDisplayControl = GenDisplayControl {
	visibility = popup;
	hints = {
		HINT_DISPLAY_CONTROL_NO_FEATURES_IF_TRANSPARENT_DOC_CTRL_MODE,
		ATTR_GEN_INTERACTION_GROUP_TYPE {
			GenInteractionGroupType GIGT_WINDOW_MENU
		}
	}
}

/* ----------------------------------------------------------------------------
	 UI Document Control
-----------------------------------------------------------------------------*/

/*
 * The GenDocumentControl should be put in the same resource as the
 * GenPrimary (for efficiency).  The GenDocumentControl will build the
 * file menu.
 */

TEDocumentControl = GenDocumentControl {
	/*
	 * Special attributes for working with DOS files
	 */
	dcAttributes = default -vmFile, +native, +multipleOpenFiles;
	features = default -supportsTemplates,
		   -supportsUserSettableEmptyDocument,
		   -supportsUserMakingSharedDocuments,
		   -displayNameOnPrimary;
	/*
	 * Text to display in the header area of the primary when no
	 * document is open.
	 */
	noNameText = "No File";
	/*
	 * Pointer to the GenDocumentGroup
	 */
	appDC = TEDocumentGroup;
	/*
	 * List of objects to enable/disable based on whether or not a
	 * document exists
	 */
	enableDisableList = TEUIEnableList;
	hints = {
		ATTR_GEN_CONTROL_PROHIBIT_UI {
			word mask GDCF_QUICK_BACKUP
		}
	}
}

chunk TEUIEnableList = data {
	UN_OPTR	TEPrintControl
}

/* ----------------------------------------------------------------------------
	 Clavin stuff
-----------------------------------------------------------------------------*/

#if	FAX_SUPPORT

/*
 * The Clavin Send menu.
 */
SendControl = MailboxSendControl {
        visibility = subGroup;
        type = organizational;
        hints = {
                ATTR_MAILBOX_SEND_CONTROL_SEND_DOCUMENT,
                ATTR_MAILBOX_SEND_CONTROL_TRANSPORT_HINT {
                        SpoolDefineTransportHint TEPrintControl
                },
                ATTR_MAILBOX_SEND_CONTROL_TRANSPORT_HINT {
                        FaxsendDefineTransportHint TEPrintControl
                }
        }
        output = process;
}

#endif	/* FAX_SUPPORT */	

end Interface;

/* ----------------------------------------------------------------------------
	 Document Group
-----------------------------------------------------------------------------*/

/*
 * The GenDocumentGroup should be put in a resource of its own run by
 * the application thread.
 */

start DocumentUI;

TEDocumentGroup = GenDocumentGroup {
	/*
	 * Special attributes for working with DOS files
	 */
	attributes = default -vmFile, +native, -supportsAutoSave,
		     -automaticDirtyNotification,
		     -automaticChangeNotification,
		     +largeContent;
	/*
	 * Name for untitled documents
	 */
	defaultName = "BLANK";
	/*
	 * Class for document objects
	 */
	documentClass = "TEDocumentClass";
	/*
	 * GenDisplay to automatically duplicate, GenDisplayGroup to attach
	 * duplicated displays to and GenView to attach documents to
	 */
	genDisplayGroup = TEDisplayGroup;
	genDisplay = TEDisplay;
	genView = TEView;
	/*
	 * Pointer to the GenDocumentControl
	 */
	uiDC = TEDocumentControl;
}

end DocumentUI;

/*-----------------------------------------------------------------------------
	GenDisplayGroup object
-----------------------------------------------------------------------------*/

start Interface;

TEDisplayGroup = GenDisplayGroup {
	/*
	 * Tell the display control to put the name of the target display
	 * in the long term moniker of the primary
	 */

	hints = {
		HINT_DEFAULT_FOCUS, HINT_DEFAULT_TARGET,
		HINT_INITIAL_SIZE {
			SpecWidth <SST_PCT_OF_FIELD_WIDTH, PCT_70>,
			SpecHeight <SST_PCT_OF_FIELD_HEIGHT, PCT_55>,
			0
		}
	}
}

end Interface;

/*-----------------------------------------------------------------------------
	Block to duplicate for each document
-----------------------------------------------------------------------------*/

start DisplayUI;

TEDisplay = GenDisplay {
	/*
	 * The display starts not usable since it is not in the generic tree.
	 * It will be set usable after being added to the display control.
	 */
	genStates = default -usable;
	children = TEView;
	hints = { ATTR_GEN_DISPLAY_NOT_MINIMIZABLE }
}

TEView = GenView {
	genAttributes = default +targetable;
	horizAttributes = default +scrollable, +dontDisplayScrollbar;
	vertAttributes = default +scrollable;
	viewAttributes = dragScrolling, windowCoordinateMouseEvents,
			 dontSendKbdReleases, focusable;
	hints = { HINT_DEFAULT_TARGET, HINT_DEFAULT_FOCUS }
}

TETextEdit = TELargeText {
	features = default +allowUndo;    
	states = editable, selectable, targetable;
	filters = filterClass dosCharacterSet;
	output = process;

#ifdef DO_PIZZA
	charAttrRuns = {DEF_CHAR_ATTR_FONT_SIZE(VTDF_PIZZA_KANJI, VTDS_16)}
#else
	charAttrRuns = {DEF_CHAR_ATTR_FONT_SIZE(VTDF_BISON, VTDS_9)}
#endif

	displayMode = draft;
	attrs = exactHeight;
	regionArray = TETextRegionArray;
	hints = { ATTR_VIS_TEXT_DO_NOT_NOTIFY_CONTENT }
}

chunk TETextRegionArray = data {
    ChunkArrayHeader <
	0,
	size VisLargeTextRegionArrayElement,
	0,
	size ChunkArrayHeader
    >
}

end DisplayUI;

/*-----------------------------------------------------------------------------
	Strings
-----------------------------------------------------------------------------*/

start StringsUI, data;

chunk CharactersFilteredString =
	"\\\"\\1\\\" contains characters that cannot be displayed. If you choose to save this file, these characters will be deleted.";

chunk FileReadErrorString =
	"Unable to read from file \\\"\\1\\\".";

chunk FileWriteErrorString =
	"Unable to write to file \\\"\\1\\\".";

chunk FileTooBigString =
	"The file \\\"\\1\\\" is too big to fit entirely in "
	"memory. Only part of it will be shown. If you choose "
	"to save this file, it will be truncated.";

#ifndef	DO_DBCS
/* SBCS-only error string */

chunk nonDosCharsString = "The text that was pasted contained non-DOS characters that were replaced with underscores (_).";

#endif

end StringsUI;
