/*
 * Application moniker for GeoWrite
 *
 * $Id: uiAppMoniker.ui,v 1.1 97/04/04 15:55:44 newdeal Exp $
 */

start AppLCMonikerResource, data;
/*
 * Moniker generated from write.pccpixel 13 masked out
 */
visMoniker WriteLCMoniker = {
	size = large;
	color = color4;
	aspectRatio = normal;
	cachedSize = 64, 40;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP <(EndWriteLCIcon-StartWriteLCIcon)>
		StartWriteLCIcon label byte
		Bitmap <64,40,BMC_PACKBITS, mask BMT_MASK or BMF_4BIT>
		db	0fah, 0ffh, 000h, 0c0h
		db	0e4h, 000h, 0feh, 0ddh
		db	0fah, 0ffh, 000h, 0c0h
		db	000h, 00fh, 0e6h, 0ffh, 000h, 0f0h, 0feh, 0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	000h, 00fh, 0fch, 0ffh, 002h, 000h, 000h, 007h, 
			0fch, 0ffh, 002h, 070h, 000h, 007h, 0f6h, 0ffh, 
			003h, 0f0h, 077h, 0ddh, 0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	000h, 00fh, 0fdh, 0ffh, 004h, 000h, 07fh, 0ffh, 
			0f0h, 000h, 0feh, 0ffh, 004h, 070h, 00fh, 0ffh, 
			0f0h, 07fh, 0f7h, 0ffh, 003h, 0f0h, 077h, 0ddh, 
			0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	000h, 00fh, 0feh, 0ffh, 001h, 0f0h, 07fh, 0feh, 
			0ffh, 008h, 0f0h, 00fh, 0ffh, 070h, 00fh, 0ffh, 
			0ffh, 0f0h, 07fh, 0f7h, 0ffh, 003h, 0f0h, 077h, 
			0ddh, 0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	000h, 00fh, 0feh, 0ffh, 001h, 0f0h, 07fh, 0feh, 
			0ffh, 003h, 0f0h, 007h, 0f7h, 00fh, 0feh, 0ffh, 
			005h, 000h, 0ffh, 0f0h, 00fh, 0f7h, 00fh, 0fbh, 
			0ffh, 003h, 0f0h, 077h, 0ddh, 0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	000h, 00fh, 0feh, 0ffh, 011h, 000h, 0ffh, 0ffh, 
			0f0h, 000h, 0ffh, 000h, 070h, 0f0h, 0ffh, 0f7h, 
			000h, 07fh, 0ffh, 0f0h, 00fh, 0f0h, 00fh, 0fbh, 
			0ffh, 003h, 0f0h, 077h, 0ddh, 0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	000h, 00fh, 0feh, 0ffh, 000h, 007h, 0feh, 0ffh, 
			004h, 000h, 0ffh, 000h, 00fh, 0f0h, 0fbh, 0ffh, 
			002h, 0f0h, 000h, 000h, 0fbh, 0ffh, 003h, 0f0h, 
			077h, 0ddh, 0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	000h, 00fh, 0feh, 0ffh, 000h, 007h, 0feh, 0ffh, 
			010h, 000h, 0ffh, 000h, 0ffh, 00fh, 0ffh, 070h, 
			0f7h, 00fh, 000h, 07fh, 0ffh, 070h, 0ffh, 0f7h, 
			000h, 07fh, 0feh, 0ffh, 003h, 0f0h, 077h, 0ddh, 
			0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	000h, 00fh, 0feh, 0ffh, 000h, 000h, 0feh, 0ffh, 
			010h, 070h, 0f7h, 000h, 07fh, 00fh, 0f0h, 000h, 
			000h, 00fh, 0f0h, 00fh, 0ffh, 000h, 0ffh, 070h, 
			0ffh, 00fh, 0feh, 0ffh, 003h, 0f0h, 077h, 0ddh, 
			0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	000h, 00fh, 0feh, 0ffh, 000h, 000h, 0feh, 0ffh, 
			010h, 0f0h, 000h, 070h, 000h, 0ffh, 0ffh, 000h, 
			0ffh, 0ffh, 070h, 0ffh, 0f7h, 00fh, 0f7h, 00fh, 
			0f0h, 00fh, 0feh, 0ffh, 003h, 0f0h, 077h, 0ddh, 
			0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	000h, 00fh, 0feh, 0ffh, 013h, 0f0h, 07fh, 0ffh, 
			0ffh, 0f0h, 000h, 0f0h, 000h, 0ffh, 0f7h, 00fh, 
			0ffh, 0ffh, 000h, 0ffh, 0f0h, 00fh, 0f0h, 000h, 
			00fh, 0fdh, 0ffh, 003h, 0f0h, 077h, 0ddh, 0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	000h, 00fh, 0feh, 0ffh, 014h, 0f0h, 00fh, 0ffh, 
			0ffh, 0f0h, 007h, 0f0h, 007h, 0ffh, 0f0h, 00fh, 
			0ffh, 0f7h, 00fh, 0ffh, 070h, 0ffh, 0f0h, 00fh, 
			0ffh, 00fh, 0feh, 0ffh, 003h, 0f0h, 077h, 0ddh, 
			0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	000h, 00fh, 0fdh, 0ffh, 012h, 000h, 07fh, 0ffh, 
			0f0h, 00fh, 0f0h, 00fh, 0ffh, 070h, 0ffh, 0ffh, 
			0f0h, 00fh, 00fh, 000h, 0f0h, 0f0h, 00fh, 0f0h, 
			0fdh, 0ffh, 003h, 0f0h, 077h, 0ddh, 0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	000h, 00fh, 0fch, 0ffh, 011h, 000h, 07fh, 0f7h, 
			00fh, 0f7h, 00fh, 0ffh, 000h, 0ffh, 0ffh, 0f0h, 
			000h, 0ffh, 000h, 00fh, 0f7h, 000h, 00fh, 0fdh, 
			0ffh, 003h, 0f0h, 077h, 0ddh, 0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	000h, 00fh, 0e6h, 0ffh, 003h, 0f0h, 077h, 0ddh, 
			0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	000h, 00fh, 0e6h, 0ffh, 003h, 0f0h, 077h, 0ddh, 
			0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	000h, 00fh, 0e6h, 0ffh, 003h, 0f0h, 077h, 0ddh, 
			0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	005h, 00fh, 0ffh, 0ffh, 0f0h, 0f0h, 00fh, 0feh, 
			000h, 016h, 00fh, 00fh, 000h, 000h, 0f0h, 00fh, 
			00fh, 000h, 0f0h, 000h, 0f0h, 000h, 0f0h, 000h, 
			00fh, 000h, 0f0h, 000h, 0ffh, 0f0h, 077h, 0ddh, 
			0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	000h, 00fh, 0e6h, 0ffh, 003h, 0f0h, 077h, 0ddh, 
			0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	012h, 00fh, 0ffh, 000h, 00fh, 000h, 000h, 00fh, 
			000h, 000h, 0f0h, 000h, 00fh, 000h, 00fh, 000h, 
			000h, 0f0h, 000h, 00fh, 0feh, 000h, 009h, 0f0h, 
			000h, 0f0h, 000h, 0f0h, 00fh, 0f0h, 077h, 0ddh, 
			0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	000h, 00fh, 0e6h, 0ffh, 003h, 0f0h, 077h, 0ddh, 
			0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	01fh, 00fh, 0ffh, 000h, 000h, 00fh, 000h, 000h, 
			0f0h, 0f0h, 000h, 00fh, 000h, 00fh, 000h, 000h, 
			0f0h, 000h, 0f0h, 000h, 00fh, 000h, 0f0h, 000h, 
			00fh, 000h, 00fh, 000h, 00fh, 0f0h, 077h, 0ddh, 
			0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	000h, 00fh, 0e6h, 0ffh, 003h, 0f0h, 077h, 0ddh, 
			0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	01fh, 00fh, 0ffh, 0ffh, 000h, 0f0h, 000h, 00fh, 
			000h, 000h, 0f0h, 000h, 0f0h, 000h, 00fh, 000h, 
			00fh, 000h, 000h, 00fh, 000h, 0f0h, 000h, 0f0h, 
			000h, 00fh, 000h, 0f0h, 00fh, 0f0h, 077h, 0ddh, 
			0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	000h, 00fh, 0e6h, 0ffh, 003h, 0f0h, 077h, 0ddh, 
			0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	01fh, 00fh, 0ffh, 000h, 00fh, 000h, 000h, 0f0h, 
			000h, 0f0h, 000h, 00fh, 000h, 000h, 0f0h, 00fh, 
			000h, 000h, 00fh, 000h, 00fh, 000h, 00fh, 000h, 
			000h, 0f0h, 000h, 000h, 00fh, 0f0h, 077h, 0ddh, 
			0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	000h, 00fh, 0e6h, 0ffh, 003h, 0f7h, 077h, 0ddh, 
			0ddh
		db	0fah, 0ffh, 000h, 0feh
		db	003h, 00fh, 0ffh, 0ffh, 070h, 0e6h, 000h, 000h, 
			00dh
		db	0fah, 0ffh, 000h, 0f8h
		db	003h, 00fh, 0ffh, 0ffh, 00bh, 0f6h, 0bbh, 000h, 
			00bh, 0f7h, 0bbh, 005h, 007h, 077h, 077h, 070h, 
			07dh, 0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	003h, 00fh, 0ffh, 0ffh, 00bh, 0f6h, 0bbh, 000h, 
			00bh, 0f7h, 0bbh, 005h, 007h, 077h, 000h, 007h, 
			0ddh, 0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	002h, 00fh, 0ffh, 0ffh, 0f6h, 000h, 001h, 033h, 
			003h, 0f8h, 033h, 006h, 030h, 000h, 000h, 077h, 
			077h, 0ddh, 0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	003h, 00fh, 0ffh, 0ffh, 070h, 0f7h, 033h, 0f6h, 
			000h, 000h, 007h, 0fdh, 077h, 001h, 0ddh, 0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	000h, 00fh, 0feh, 0ffh, 0f7h, 000h, 0f3h, 077h, 
			003h, 070h, 077h, 0ddh, 0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	000h, 00fh, 0feh, 0ffh, 000h, 0f7h, 0ech, 077h, 
			005h, 07fh, 0ffh, 0f0h, 077h, 0ddh, 0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	000h, 00fh, 0fdh, 0ffh, 0f7h, 077h, 0f4h, 0ffh, 
			003h, 0f0h, 077h, 0ddh, 0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	000h, 00fh, 0e6h, 0ffh, 003h, 0f0h, 077h, 0ddh, 
			0ddh
		db	0fah, 0ffh, 000h, 0f0h
		db	0e4h, 000h, 002h, 077h, 0ddh, 0ddh
		db	000h, 03fh, 0fbh, 0ffh, 000h, 0f0h
		db	000h, 0ddh, 0e4h, 077h, 001h, 0ddh, 0ddh
		db	000h, 03fh, 0fbh, 0ffh, 000h, 0f0h
		db	000h, 0ddh, 0e4h, 077h, 001h, 0ddh, 0ddh
		EndWriteLCIcon label byte
		GSEndString
	}
}
end AppLCMonikerResource;
start AppLMMonikerResource, data;
/*
 * Moniker generated from write.pccpixel 13 masked out
 */
visMoniker WriteLMMoniker = {
	size = large;
	color = gray1;
	aspectRatio = normal;
	cachedSize = 64, 40;
	gstring {
		GSBeginString
		GSFillBitmapAtCP <(EndWriteLMIcon-StartWriteLMIcon)>
		StartWriteLMIcon label byte
		Bitmap <64,40,BMC_PACKBITS, BMF_MONO>
		db	0fah, 0ffh, 000h, 0c0h
		db	000h, 080h, 0fbh, 000h, 000h, 040h
		db	007h, 080h, 00fh, 080h, 007h, 080h, 000h, 000h, 
			070h
		db	007h, 080h, 030h, 070h, 018h, 040h, 000h, 000h, 
			070h
		db	007h, 080h, 040h, 018h, 060h, 040h, 000h, 000h, 
			070h
		db	007h, 080h, 040h, 018h, 080h, 0c6h, 020h, 000h, 
			070h
		db	007h, 080h, 0c1h, 0cdh, 043h, 006h, 060h, 000h, 
			070h
		db	007h, 080h, 080h, 0ceh, 040h, 001h, 0f0h, 000h, 
			070h
		db	007h, 080h, 080h, 0cch, 084h, 0b0h, 043h, 000h, 
			070h
		db	007h, 080h, 0c0h, 04ch, 09fh, 098h, 0c4h, 080h, 
			070h
		db	007h, 080h, 0c0h, 077h, 00ch, 010h, 089h, 080h, 
			070h
		db	007h, 080h, 040h, 077h, 008h, 031h, 09eh, 000h, 
			070h
		db	007h, 080h, 060h, 066h, 018h, 021h, 018h, 080h, 
			070h
		db	007h, 080h, 030h, 066h, 010h, 06bh, 059h, 000h, 
			070h
		db	007h, 080h, 00ch, 022h, 030h, 073h, 08eh, 000h, 
			070h
		db	000h, 080h, 0fbh, 000h, 000h, 070h
		db	000h, 080h, 0fbh, 000h, 000h, 070h
		db	000h, 080h, 0fbh, 000h, 000h, 070h
		db	007h, 081h, 06fh, 0ebh, 0dah, 0ddh, 0deh, 0dch, 
			070h
		db	000h, 080h, 0fbh, 000h, 000h, 070h
		db	007h, 08eh, 0fbh, 0deh, 0efh, 07bh, 0f7h, 076h, 
			070h
		db	000h, 080h, 0fbh, 000h, 000h, 070h
		db	007h, 08fh, 0bdh, 07bh, 0bdh, 0deh, 0deh, 0eeh, 
			070h
		db	000h, 080h, 0fbh, 000h, 000h, 070h
		db	007h, 083h, 07bh, 0ddh, 0eeh, 0fbh, 077h, 0b6h, 
			070h
		db	000h, 080h, 0fbh, 000h, 000h, 070h
		db	007h, 08eh, 0f7h, 07bh, 0dbh, 0eeh, 0efh, 07eh, 
			070h
		db	000h, 080h, 0fah, 000h
		db	000h, 081h, 0fbh, 0ffh, 000h, 0feh
		db	007h, 082h, 000h, 000h, 002h, 000h, 000h, 008h, 
			010h
		db	007h, 082h, 000h, 000h, 002h, 000h, 000h, 008h, 
			0e0h
		db	007h, 083h, 0ffh, 0ffh, 0f2h, 000h, 000h, 01fh, 
			0e0h
		db	003h, 081h, 000h, 000h, 00fh, 0feh, 0ffh, 000h, 
			090h
		db	000h, 080h, 0fbh, 0ffh, 000h, 070h
		db	001h, 080h, 07fh, 0fdh, 0ffh, 001h, 0f8h, 070h
		db	003h, 080h, 03fh, 0ffh, 0fch, 0feh, 000h, 000h, 
			070h
		db	000h, 080h, 0fbh, 000h, 000h, 070h
		db	0fah, 0ffh, 000h, 0f0h
		db	000h, 03fh, 0fbh, 0ffh, 000h, 0f0h
		db	000h, 03fh, 0fbh, 0ffh, 000h, 0f0h
		EndWriteLMIcon label byte
		GSEndString
	}
}
end AppLMMonikerResource;
start AppSCMonikerResource, data;
/*
 * Moniker generated from write.pccpixel 13 masked out
 */
visMoniker WriteSCMoniker = {
	size = standard;
	color = color4;
	aspectRatio = normal;
	cachedSize = 48, 30;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP <(EndWriteSCIcon-StartWriteSCIcon)>
		StartWriteSCIcon label byte
		Bitmap <48,30,BMC_PACKBITS, mask BMT_MASK or BMF_4BIT>
		db	0fch, 0ffh, 000h, 0f8h
		db	0ebh, 000h, 001h, 00dh, 0ddh
		db	0fch, 0ffh, 000h, 0f8h
		db	000h, 00fh, 0ech, 0ffh, 001h, 00dh, 0ddh
		db	0fch, 0ffh, 000h, 0feh
		db	005h, 00fh, 0ffh, 0ffh, 000h, 000h, 007h, 0fch, 
			0ffh, 002h, 070h, 000h, 007h, 0f9h, 0ffh, 001h, 
			007h, 07dh
		db	0fch, 0ffh, 000h, 0feh
		db	006h, 00fh, 0ffh, 000h, 07fh, 0ffh, 0f0h, 000h, 
			0feh, 0ffh, 004h, 070h, 00fh, 0ffh, 0f0h, 07fh, 
			0fah, 0ffh, 001h, 007h, 07dh
		db	0fch, 0ffh, 000h, 0feh
		db	002h, 00fh, 0f0h, 07fh, 0feh, 0ffh, 008h, 0f0h, 
			00fh, 0ffh, 070h, 00fh, 0ffh, 0ffh, 0f0h, 07fh, 
			0fah, 0ffh, 001h, 007h, 07dh
		db	0fch, 0ffh, 000h, 0feh
		db	002h, 00fh, 0f0h, 07fh, 0feh, 0ffh, 003h, 0f0h, 
			007h, 0f7h, 00fh, 0feh, 0ffh, 005h, 000h, 0ffh, 
			0f0h, 00fh, 0f7h, 00fh, 0feh, 0ffh, 001h, 007h, 
			07dh
		db	0fch, 0ffh, 000h, 0feh
		db	012h, 00fh, 000h, 0ffh, 0ffh, 0f0h, 000h, 0ffh, 
			000h, 070h, 0f0h, 0ffh, 0f7h, 000h, 07fh, 0ffh, 
			0f0h, 00fh, 0f0h, 00fh, 0feh, 0ffh, 001h, 007h, 
			07dh
		db	0fch, 0ffh, 000h, 0feh
		db	001h, 00fh, 007h, 0feh, 0ffh, 004h, 000h, 0ffh, 
			000h, 00fh, 0f0h, 0fbh, 0ffh, 002h, 0f0h, 000h, 
			000h, 0feh, 0ffh, 001h, 007h, 07dh
		db	0fch, 0ffh, 000h, 0feh
		db	001h, 00fh, 007h, 0feh, 0ffh, 012h, 000h, 0ffh, 
			000h, 0ffh, 00fh, 0ffh, 070h, 0f7h, 00fh, 000h, 
			07fh, 0ffh, 070h, 0ffh, 0f7h, 000h, 07fh, 007h, 
			07dh
		db	0fch, 0ffh, 000h, 0feh
		db	001h, 00fh, 000h, 0feh, 0ffh, 012h, 070h, 0f7h, 
			000h, 07fh, 00fh, 0f0h, 000h, 000h, 00fh, 0f0h, 
			00fh, 0ffh, 000h, 0ffh, 070h, 0ffh, 00fh, 007h, 
			07dh
		db	0fch, 0ffh, 000h, 0feh
		db	001h, 00fh, 000h, 0feh, 0ffh, 012h, 0f0h, 000h, 
			070h, 000h, 0ffh, 0ffh, 000h, 0ffh, 0ffh, 070h, 
			0ffh, 0f7h, 00fh, 0f7h, 00fh, 0f0h, 00fh, 007h, 
			07dh
		db	0fch, 0ffh, 000h, 0feh
		db	017h, 00fh, 0f0h, 07fh, 0ffh, 0ffh, 0f0h, 000h, 
			0f0h, 000h, 0ffh, 0f7h, 00fh, 0ffh, 0ffh, 000h, 
			0ffh, 0f0h, 00fh, 0f0h, 000h, 00fh, 0ffh, 007h, 
			07dh
		db	0fch, 0ffh, 000h, 0feh
		db	017h, 00fh, 0f0h, 00fh, 0ffh, 0ffh, 0f0h, 007h, 
			0f0h, 007h, 0ffh, 0f0h, 00fh, 0ffh, 0f7h, 00fh, 
			0ffh, 070h, 0ffh, 0f0h, 00fh, 0ffh, 00fh, 007h, 
			07dh
		db	0fch, 0ffh, 000h, 0feh
		db	017h, 00fh, 0ffh, 000h, 07fh, 0ffh, 0f0h, 00fh, 
			0f0h, 00fh, 0ffh, 070h, 0ffh, 0ffh, 0f0h, 00fh, 
			00fh, 000h, 0f0h, 0f0h, 00fh, 0f0h, 0ffh, 007h, 
			07dh
		db	0fch, 0ffh, 000h, 0feh
		db	017h, 00fh, 0ffh, 0ffh, 000h, 07fh, 0f7h, 00fh, 
			0f7h, 00fh, 0ffh, 000h, 0ffh, 0ffh, 0f0h, 000h, 
			0ffh, 000h, 00fh, 0f7h, 000h, 00fh, 0ffh, 007h, 
			07dh
		db	0fch, 0ffh, 000h, 0feh
		db	000h, 00fh, 0ech, 0ffh, 001h, 007h, 07dh
		db	0fch, 0ffh, 000h, 0feh
		db	000h, 00fh, 0ech, 0ffh, 001h, 007h, 07dh
		db	0fch, 0ffh, 000h, 0feh
		db	000h, 00fh, 0ech, 0ffh, 001h, 007h, 07dh
		db	0fch, 0ffh, 000h, 0feh
		db	000h, 00fh, 0feh, 0ffh, 002h, 0f0h, 0f0h, 00fh, 
			0feh, 000h, 00dh, 00fh, 00fh, 000h, 000h, 0f0h, 
			00fh, 00fh, 000h, 0f0h, 000h, 0f0h, 0ffh, 007h, 
			07dh
		db	0fch, 0ffh, 000h, 0feh
		db	000h, 00fh, 0ech, 0ffh, 001h, 077h, 07dh
		db	0fbh, 0ffh
		db	001h, 00fh, 070h, 0ebh, 000h
		db	0fch, 0ffh, 000h, 0fch
		db	001h, 00fh, 00bh, 0f8h, 0bbh, 000h, 0b0h, 0fah, 
			0bbh, 004h, 0b0h, 077h, 070h, 000h, 0ddh
		db	0fch, 0ffh, 000h, 0feh
		db	000h, 00fh, 0f8h, 000h, 001h, 003h, 030h, 0fah, 
			033h, 004h, 030h, 000h, 000h, 077h, 07dh
		db	0fch, 0ffh, 000h, 0feh
		db	001h, 00fh, 070h, 0f9h, 033h, 000h, 030h, 0f8h, 
			000h, 0feh, 077h, 000h, 07dh
		db	0fch, 0ffh, 000h, 0feh
		db	001h, 00fh, 0ffh, 0f9h, 000h, 000h, 007h, 0f6h, 
			077h, 001h, 007h, 07dh
		db	0fbh, 0ffh
		db	002h, 00fh, 0ffh, 0f7h, 0eeh, 077h, 001h, 007h, 
			077h
		db	0fch, 0ffh, 000h, 0feh
		db	002h, 00fh, 0ffh, 0ffh, 0f9h, 077h, 0f6h, 0ffh, 
			001h, 007h, 07dh
		db	0fch, 0ffh, 000h, 0feh
		db	0ebh, 000h, 001h, 007h, 07dh
		db	000h, 03fh, 0fdh, 0ffh, 000h, 0feh
		db	000h, 0ddh, 0ebh, 077h, 000h, 07dh
		db	000h, 03fh, 0fdh, 0ffh, 000h, 0feh
		db	000h, 0ddh, 0ebh, 077h, 000h, 07dh
		EndWriteSCIcon label byte
		GSEndString
	}
}
end AppSCMonikerResource;
start AppSMMonikerResource, data;
/*
 * Moniker generated from write.pccpixel 13 masked out
 */
visMoniker WriteSMMoniker = {
	size = standard;
	color = gray1;
	aspectRatio = normal;
	cachedSize = 48, 30;
	gstring {
		GSBeginString
		GSFillBitmapAtCP <(EndWriteSMIcon-StartWriteSMIcon)>
		StartWriteSMIcon label byte
		Bitmap <48,30,BMC_PACKBITS, BMF_MONO>
		db	0fch, 0ffh, 000h, 0f8h
		db	000h, 080h, 0fdh, 000h, 000h, 008h
		db	005h, 083h, 0e0h, 001h, 0e0h, 000h, 00eh
		db	005h, 08ch, 01ch, 006h, 010h, 000h, 00eh
		db	005h, 090h, 006h, 018h, 010h, 000h, 00eh
		db	005h, 090h, 006h, 020h, 031h, 088h, 00eh
		db	005h, 0b0h, 073h, 050h, 0c1h, 098h, 00eh
		db	005h, 0a0h, 033h, 090h, 000h, 07ch, 00eh
		db	005h, 0a0h, 033h, 021h, 02ch, 010h, 0ceh
		db	005h, 0b0h, 013h, 027h, 0e6h, 031h, 02eh
		db	005h, 0b0h, 01dh, 0c3h, 004h, 022h, 06eh
		db	005h, 090h, 01dh, 0c2h, 00ch, 067h, 08eh
		db	005h, 098h, 019h, 086h, 008h, 046h, 02eh
		db	005h, 08ch, 019h, 084h, 01ah, 0d6h, 04eh
		db	005h, 083h, 008h, 08ch, 01ch, 0e3h, 08eh
		db	000h, 080h, 0fdh, 000h, 000h, 00eh
		db	000h, 080h, 0fdh, 000h, 000h, 00eh
		db	000h, 080h, 0fdh, 000h, 000h, 00eh
		db	005h, 080h, 05bh, 0fah, 0f6h, 0b7h, 04eh
		db	000h, 080h, 0fch, 000h
		db	000h, 09fh, 0fch, 0ffh
		db	005h, 0a0h, 000h, 001h, 000h, 001h, 01ch
		db	005h, 0bfh, 0ffh, 0f9h, 000h, 001h, 0fah
		db	005h, 090h, 000h, 007h, 0ffh, 0ffh, 0f6h
		db	000h, 08fh, 0fdh, 0ffh, 000h, 08eh
		db	005h, 087h, 0ffh, 0fch, 000h, 000h, 00fh
		db	000h, 080h, 0fdh, 000h, 000h, 00eh
		db	0fch, 0ffh, 000h, 0feh
		db	000h, 03fh, 0fdh, 0ffh, 000h, 0feh
		db	000h, 03fh, 0fdh, 0ffh, 000h, 0feh
		EndWriteSMIcon label byte
		GSEndString
	}
}
end AppSMMonikerResource;
start AppLCGAMonikerResource, data;
/*
 * Moniker generated from write.pccpixel 13 masked out
 */
visMoniker WriteLCGAMoniker = {
	size = large;
	color = gray1;
	aspectRatio = verySquished;
	cachedSize = 64, 18;
	gstring {
		GSBeginString
		GSFillBitmapAtCP <(EndWriteLCGAIcon-StartWriteLCGAIcon)>
		StartWriteLCGAIcon label byte
		Bitmap <64,18,BMC_PACKBITS, BMF_MONO>
		db	0fah, 0ffh, 000h, 0c0h
		db	007h, 080h, 007h, 0f0h, 03fh, 003h, 00ch, 000h, 
			040h
		db	007h, 080h, 038h, 00ch, 0c0h, 000h, 018h, 000h, 
			040h
		db	007h, 080h, 060h, 0e7h, 017h, 0ceh, 0fdh, 0c0h, 
			040h
		db	007h, 080h, 040h, 066h, 063h, 026h, 062h, 020h, 
			040h
		db	007h, 080h, 060h, 03bh, 086h, 00ch, 0c7h, 0c0h, 
			040h
		db	007h, 080h, 030h, 033h, 00ch, 019h, 086h, 020h, 
			040h
		db	007h, 080h, 00ch, 011h, 018h, 03ch, 0e3h, 0c0h, 
			040h
		db	000h, 080h, 0fbh, 000h, 000h, 040h
		db	007h, 081h, 06fh, 0ebh, 0dah, 0ddh, 0deh, 0dch, 
			040h
		db	000h, 080h, 0fbh, 000h, 000h, 040h
		db	007h, 08fh, 0bdh, 07bh, 0bdh, 0deh, 0deh, 0eeh, 
			040h
		db	000h, 080h, 0fbh, 000h, 000h, 040h
		db	000h, 081h, 0fbh, 0ffh, 000h, 0feh
		db	000h, 082h, 0feh, 0aah, 003h, 0eah, 0aah, 0aah, 
			0e0h
		db	003h, 081h, 0ffh, 0ffh, 0fch, 0feh, 000h, 000h, 
			040h
		db	000h, 080h, 0fbh, 000h, 000h, 040h
		db	0fah, 0ffh, 000h, 0c0h
		EndWriteLCGAIcon label byte
		GSEndString
	}
}
end AppLCGAMonikerResource;
start AppSCGAMonikerResource, data;
/*
 * Moniker generated from write.pccpixel 13 masked out
 */
visMoniker WriteSCGAMoniker = {
	size = standard;
	color = gray1;
	aspectRatio = verySquished;
	cachedSize = 48, 14;
	gstring {
		GSBeginString
		GSFillBitmapAtCP <(EndWriteSCGAIcon-StartWriteSCGAIcon)>
		StartWriteSCGAIcon label byte
		Bitmap <48,14,BMC_PACKBITS, BMF_MONO>
		db	0fch, 0ffh, 000h, 0fch
		db	005h, 083h, 0f8h, 01fh, 081h, 086h, 004h
		db	005h, 09ch, 006h, 060h, 000h, 00ch, 004h
		db	005h, 0b0h, 073h, 08bh, 0e7h, 07eh, 0e4h
		db	005h, 0a0h, 033h, 031h, 093h, 031h, 014h
		db	005h, 0b0h, 01dh, 0c3h, 006h, 063h, 0e4h
		db	005h, 098h, 019h, 086h, 00ch, 0c3h, 014h
		db	005h, 086h, 008h, 08ch, 01eh, 071h, 0e4h
		db	000h, 080h, 0fdh, 000h, 000h, 004h
		db	000h, 09fh, 0fch, 0ffh
		db	005h, 0b5h, 055h, 057h, 055h, 055h, 070h
		db	005h, 08fh, 0ffh, 0f8h, 000h, 000h, 004h
		db	000h, 080h, 0fdh, 000h, 000h, 004h
		db	0fch, 0ffh, 000h, 0fch
		EndWriteSCGAIcon label byte
		GSEndString
	}
}
end AppSCGAMonikerResource;
