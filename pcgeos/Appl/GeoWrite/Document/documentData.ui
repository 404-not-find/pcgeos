/*
 * Project:	GeoWrite
 * File:	Document/documentData.ui
 *
 * Author:	Tony Requist
 *
 *	This file contains the user interface description for various
 * data blocks to duplicate.
 *
 *	$Id: documentData.ui,v 1.1 97/04/04 15:57:00 newdeal Exp $
 *
 */


#define	_NIKE		0
#define	_NIKE_EUROPE	0


/* ----------------------------------------------------------------------------
	Strings resource
-----------------------------------------------------------------------------*/

start StringsUI, data;
chunk duplicateContextNameErrorText = "The context name \\1 is multiply defined in this document.  The help file cannot be created.";

chunk MainArticleName = "Main Article";

chunk TitlePageSectionName = "Title Page";

chunk InsertPageString = "Insert a page before the current page?";
chunk AppendPageString = "Append a page after the current page?";
chunk DeletePageString = "Delete the current page?";

chunk MasterPageString = "Master Page for ";
chunk LeftMasterPageString = "Left Master Page for ";
chunk RightMasterPageString = "Right Master Page for ";

chunk CreateTitlePageString =
	"This will create a new section called \\\"Title Page\\\" at the"
	" beginning of the document. Are you sure you want to"
	" add this section?";

chunk DeleteTitlePageString =
	"Are you sure you want to delete the title page?";

chunk GraphicsWarnString =
	"Basic graphics tools will now appear along the"
	" left edge of the window. To move and resize graphics, use"
	" the pointer tool (the arrow). To return"
	" to editing text, use the text tool (the tool"
	" above the arrow). You may hide this tool bar"
	" with commands on the Options menu.";

chunk CrossSectionReplaceAbortedString =
	"Text cannot be deleted across sections."
	" Select the relevant parts of each"
	" section and delete them individually."
	"\\\r\\\rError Code: WR-01";

chunk NoHeaderErrorString =
	"There is no header to edit because the top margin is too small.";

chunk NoFooterErrorString =
	"There is no footer to edit because the bottom margin is too small.";

chunk HeaderDataLostString =
	"The top margin is too small to contain the header.  Existing header information will be lost.  Do you wish to continue?";

chunk FooterDataLostString =
	"The bottom margin is too small to contain the footer.  Existing footer information will be lost.  Do you wish to continue?";

/*
 * Delete graphics query
 */
chunk DeleteGraphicsOnPageString =
	"There are graphics on the page layout"
	" to be deleted. Do you wish to"
	" delete the graphics or should they"
	" be moved to the adjacent page?";

visMoniker DeleteGraphicsMoniker = 'D', "Delete Graphics";
visMoniker MoveGraphicsMoniker = 'M', "Move Graphics";
visMoniker CancelDeleteMoniker = 'C', "Cancel Delete";

/*
 * Edit master page query
 */

chunk EditWhichMasterPageString = "This section has right- and left-facing"
				  " master pages. Which do you want to"
				  " edit?";

visMoniker EditLeftMasterPageMoniker = 'L', "Edit Left Master";
visMoniker EditRightMasterPageMoniker = 'R', "Edit Right Master";
visMoniker CancelMoniker = 'C', "Cancel";

/*
 * Paste query
 */

chunk PasteToWhereString =
	"Do you want to paste this graphic into the text layer"
	" so that it flows with the text, or do you want to"
	" paste this graphic to the graphic layer so that it may"
	" be freely positioned on the page?";

visMoniker PasteGraphicMoniker = 'G', "Graphic Layer";
visMoniker PasteTextMoniker = 'T', "Text Layer";
visMoniker PasteCancelMoniker = 'C', "Cancel Paste";

/*
 * Edit Header - Title Page Query
 */

chunk EditHeaderTitlePageString =
	"Do you want to edit the header for the title page or for the main"
	" section of the document?";

visMoniker TitlePageMoniker = 'T', "Title Page";
visMoniker MainSectionMoniker = 'M', "Main Section";

/*
 * Edit Footer - Title Page Query
 */
chunk EditFooterTitlePageString =
	"Do you want to edit the footer for the title page or for the main"
	" section of the document?";

/*
 * Page Setup - Title Page Query
 */

chunk PageSetupTitlePageString =
	"Do you want to change the page setup for the title page"
	" or for the main section of the document?";

/*
 * Errors
 */

#if _SECTION_SUPPORT
chunk SectionSameNameString =
	"A section with this name already exists."
	"\\\r\\\rError Code: WR-02";
#endif

chunk CannotDeleteLastFlowRegionString =
	"Cannot delete this flow region. Your master page must have at"
	" least one region into which it can flow text."
	"\\\r\\\rError Code: WR-03";

chunk CannotDeleteLastArticleRegionString =
	"Cannot delete this flow region. Your page must have at"
	" least one region into which it can flow text."
	"\\\r\\\rError Code: WR-04";

chunk NoMergeDataMessage =
	"No data was found to merge. Data you wish to merge must be placed"
	" on the clipboard. Use the Copy or Export command in the"
	" application where data is stored."
	"\\\r\\\rError Code: WR-05";

chunk NoFieldsMessage =
	"There are no fields to be found on the clipboard. The"
	" data on the clipboard may not be the right type"
	" for merging. Be sure you are correctly using the Copy"
	" or Export command in the application where the data"
	" is stored."
	"\\\r\\\rError Code: WR-06";

chunk ExpectedFieldMessage =
	"A merge field specified in your document was not found"
	" in the merge data. The field names must match exactly."
	" Check to see that all field names are correctly spelled and" 
	" that the merge data is correct also."
	"\\\r\\\rError Code: WR-07";

/* Commented out because the code in documentPrint.asm using this string
   is removed.   --- AY 11/16/94
chunk GeneralMergeError =
	"An error was encountered while merging."
	" The operation could not be completed."
	"\\\r\\\rError Code: WR-08";
*/

chunk ColumnTooNarrowString =
	"The page setup values that you entered are too large to accomodate"
	" the page width. Try reducing the number of columns or the"
	" column spacing or the page margin settings or increasing"
	" the page width (in the \\\"Page Size\\\" dialog box)."
	"\\\r\\\rError Code: WR-09";

chunk ColumnTooShortString =
	"The page setup values that you entered are too large to accomodate"
	" the page height. Try reducing the page margin settings or"
	" increasing the page height (in the \\\"Page Size\\\" dialog box)."
	"\\\r\\\rError Code: WR-13";

chunk PageSizeColumnTooNarrowString =
	"The page width that you entered is too short to accomodate"
	" the set margins and/or columns settings. Try increasing the"
	" page width or reducing the page margin or column settings"
	" (in the \\\"Page Setup\\\" dialog box)."
	"\\\r\\\rError Code: WR-14";

chunk PageSizeColumnTooShortString =
	"The page height that you entered is too short to accomodate"
	" the set margins. Try increasing the page height or reducing the"
	" page margin settings (in the \\\"Page Setup\\\" dialog box)."
	"\\\r\\\rError Code: WR-15";

chunk MergeUndoString =
	"Undo Mail-Merge Changes";

/*
 * Must allow space for 12 characters at the end, as required 
 * by UtilHex32ToAscii
 */
#ifdef DO_DBCS
chunk MergeFeedbackString =
	"Documents Left to Merge: 12345678901";	/* only 11 chars in DBCS */
#else
chunk MergeFeedbackString =
	"Documents Left to Merge: 123456789012";
#endif

chunk MergeReplacePrefixString = data {
#ifdef DO_DBCS
#ifdef DO_PIZZA
	wchar	C_LESS_THAN_SIGN, C_LESS_THAN_SIGN, 0
#else
	wchar	C_OPENING_DOUBLE_ANGLE_BRACKET, 0
#endif
#else
	byte	C_GUILLEDBLLEFT, 0
#endif
	}
localize "prefix character for mail merge variable", 1;

chunk MergeReplaceSuffixString = data {
#ifdef DO_DBCS
#ifdef DO_PIZZA
	wchar	C_GREATER_THAN_SIGN, C_GREATER_THAN_SIGN, 0
#else
	wchar	C_CLOSING_DOUBLE_ANGLE_BRACKET, 0
#endif
#else
	byte	C_GUILLEDBLRIGHT, 0
#endif
	}
localize "suffix character for mail merge variable", 1;

chunk HelpNamesTooLongString =
	"Some of the names for help are too long.  Would you like"
	" them to be truncated?";

chunk NameCannotTruncateString =
	"The name \\\"\\1\\\" could not be truncated."
	"\\\r\\\rError Code: WR-10";

chunk NoCompressLibraryString =
      "Could not find the help compression library."
      " You may need to re-install your software.\\\r\\\rError Code WR-11";

chunk CompressMemoryErrorString =
	"Could not allocate enough memory to process the help file."
	" Try closing some applications.\\\r\\\rError Code WR-12";

chunk BadDecompressErrorString =
	"Encountered a compaction error while processing the help file."
	"\\\r\\\rError Code WR-13";

chunk ResetOptionsQueryString =
	"Are you sure you want to reset the configuration?";

#if _REGION_LIMIT
chunk RegionWarningString =
	"The document is becoming too large. To avoid data loss,"
	" break it up into smaller files.";

chunk SaveBeforeResizeWarningString =
	"Please save the document before changing the page layout."
	" If the document becomes too large, it will be reverted to"
	" its last saved version.";

chunk RevertingDocumentWarningString =
	"Due to memory constraints, no more pages may be added, "
	"and the reformatting process cannot be completed. "
	"The document will be reverted to its last auto-saved version."
	"\\\r\\\rError Code: WR-14";
#endif /* _REGION_LIMIT */

#if _SUPER_IMPEX
chunk DefaultSaveAsNameString = "NewName";
#endif

#ifdef GPC
chunk SearchReachedEndString = "Your search has reached the end of this document. Do you want to continue this search from the beginning of the document?";
chunk SearchReachedBeginningString = "Your search has reached the beginning of this document. Do you want to continue this search from the end of the document?";
#endif

#ifdef BATCH_RTF
chunk NoFilesToBatchString = "There are no files to run the batch process on in the directory you selected.";
chunk OutOfMemoryString = "There was not enough memory available to complete this operation.";
#endif

end StringsUI;

/* ----------------------------------------------------------------------------
	Template to duplicate to create character attribute element array
-----------------------------------------------------------------------------*/

start CharAttrElementTemp, data;

chunk CharAttrElements = data {
    CHAR_ATTR_ELEMENT_ARRAY_HEADER(3)

CHAR_ATTR_NORMAL = 0
    CHAR_ATTR_SS_FONT_SIZE_STYLE_COLOR(TEXT_STYLE_NORMAL, 2, \
			       DEFAULT_DOCUMENT_FONT, 12, 0, C_BLACK)

CHAR_ATTR_HEADER = 1
    CHAR_ATTR_SS_FONT_SIZE_STYLE_COLOR(TEXT_STYLE_HEADER, 2, \
			       DEFAULT_DOCUMENT_FONT, 12, 0, C_BLACK)

CHAR_ATTR_FOOTER = 2
    CHAR_ATTR_SS_FONT_SIZE_STYLE_COLOR(TEXT_STYLE_FOOTER, 2, \
			       DEFAULT_DOCUMENT_FONT, 12, 0, C_BLACK)
}

end CharAttrElementTemp;

start CharAttrElementTVTemp, data;

chunk TCharAttrElements = data {
    CHAR_ATTR_ELEMENT_ARRAY_HEADER(3)

CHAR_ATTR_NORMAL = 0
    CHAR_ATTR_SS_FONT_SIZE_STYLE_COLOR(TEXT_STYLE_NORMAL, 2, \
			       FID_DTC_URW_SANS, 14, 0, C_BLACK)

CHAR_ATTR_HEADER = 1
    CHAR_ATTR_SS_FONT_SIZE_STYLE_COLOR(TEXT_STYLE_HEADER, 2, \
			       FID_DTC_URW_SANS, 14, 0, C_BLACK)

CHAR_ATTR_FOOTER = 2
    CHAR_ATTR_SS_FONT_SIZE_STYLE_COLOR(TEXT_STYLE_FOOTER, 2, \
			       FID_DTC_URW_SANS, 14, 0, C_BLACK)
}

end CharAttrElementTVTemp;

/* ----------------------------------------------------------------------------
	Template to duplicate to create paragraph attribute element array
-----------------------------------------------------------------------------*/

/* U.S. template */

start ParaAttrElementUSTemp, data;

#ifdef VS150

/* Redwood only! */

chunk ParaAttrElements = data {
PAE_base	label	byte
	; Header
    PARA_ATTR_ELEMENT_ARRAY_HEADER(3)

	; Offsets
    word PAE_0-PAE_base
    word PAE_1-PAE_base
    word PAE_2-PAE_base

	; Data

PARA_ATTR_NORMAL = 0
PAE_0	label	byte
    PARA_ATTR_SS_JUST_LEFT_RIGHT_PARA_TABS(TEXT_STYLE_NORMAL, 2, \
		   J_LEFT, 0, 0, 0, PIXELS_PER_INCH/2*8, 0)

PARA_ATTR_HEADER = 1
PAE_1	label	byte
    PARA_ATTR_SS_JUST_LEFT_RIGHT_PARA_TABS(TEXT_STYLE_HEADER, 2, \
		   J_LEFT, 0, 0, 0, 0, 2)
    TAB_POS_TYPE(4*8, TT_CENTER)
    TAB_POS_TYPE(8*8, TT_RIGHT)

PARA_ATTR_FOOTER = 2
PAE_2	label	byte
    PARA_ATTR_SS_JUST_LEFT_RIGHT_PARA_TABS(TEXT_STYLE_FOOTER, 2, \
		   J_LEFT, 0, 0, 0, 0, 2)
    TAB_POS_TYPE(4*8, TT_CENTER)
    TAB_POS_TYPE(8*8, TT_RIGHT)

}

#else

/* Non-redwood systems */
chunk ParaAttrElements = data {
PAE_base	label	byte
	; Header
    PARA_ATTR_ELEMENT_ARRAY_HEADER(3)

	; Offsets
    word PAE_0-PAE_base
    word PAE_1-PAE_base
    word PAE_2-PAE_base

	; Data

PARA_ATTR_NORMAL = 0
PAE_0	label	byte
    PARA_ATTR_SS_JUST_LEFT_RIGHT_PARA_TABS(TEXT_STYLE_NORMAL, 2, \
		   J_LEFT, 0, 0, 0, PIXELS_PER_INCH/2*8, 0)

PARA_ATTR_HEADER = 1
PAE_1	label	byte
    PARA_ATTR_SS_JUST_LEFT_RIGHT_PARA_TABS(TEXT_STYLE_HEADER, 2, \
		   J_LEFT, 0, 0, 0, PIXELS_PER_INCH/2*8, 0)

PARA_ATTR_FOOTER = 2
PAE_2	label	byte
    PARA_ATTR_SS_JUST_LEFT_RIGHT_PARA_TABS(TEXT_STYLE_FOOTER, 2, \
		   J_LEFT, 0, 0, 0, PIXELS_PER_INCH/2*8, 0)

}

#endif


end ParaAttrElementUSTemp;

/* Metric template */

start ParaAttrElementMetricTemp, data;

chunk MParaAttrElements = data {
MPAE_base	label	byte
	; Header
    PARA_ATTR_ELEMENT_ARRAY_HEADER(3)

	; Offsets
    word MPAE_0-MPAE_base
    word MPAE_1-MPAE_base
    word MPAE_2-MPAE_base

	; Data

PARA_ATTR_NORMAL = 0
MPAE_0	label	byte
    PARA_ATTR_SS_JUST_LEFT_RIGHT_PARA_TABS(TEXT_STYLE_NORMAL, 2, \
		   J_LEFT, 0, 0, 0, DISTANCE_1_CM, 0)

PARA_ATTR_HEADER = 1
MPAE_1	label	byte
    PARA_ATTR_SS_JUST_LEFT_RIGHT_PARA_TABS(TEXT_STYLE_HEADER, 2, \
		   J_LEFT, 0, 0, 0, DISTANCE_1_CM, 0)

PARA_ATTR_FOOTER = 2
MPAE_2	label	byte
    PARA_ATTR_SS_JUST_LEFT_RIGHT_PARA_TABS(TEXT_STYLE_FOOTER, 2, \
		   J_LEFT, 0, 0, 0, DISTANCE_1_CM, 0)

}

end ParaAttrElementMetricTemp;

/* ----------------------------------------------------------------------------
	Template to duplicate to create text style array
-----------------------------------------------------------------------------*/

/*
 * STYLES:
 *
 * Basic letter/report/meno styles:
 *
 * Normal - Plain vanilla basic style
 *
 * Styles used automatically (not in popup list):
 *
 * (Header) - Style for headers
 * (Footer) - Style for footers
 */

start TextStyleTemp, data;

chunk TextStyleArray = data {

TS_LABEL	macro	tscount
TS_&tscount	label	byte
endm

TS_ELEMENT	macro	sconst, sname, sbase, sflags, tflags
TS_LABEL	%tscount
TEXT_STYLE_&sconst = tscount
tscount = tscount+1
ifidn <sbase>, <CA_NULL_ELEMENT>
    StyleElementHeader <<<<1, 0>>>, sbase, sflags, <>, tflags>
else
    StyleElementHeader <<<<1, 0>>>, TEXT_STYLE_&sbase, sflags, <>, tflags>
endif
    word CHAR_ATTR_&sconst, PARA_ATTR_&sconst
    lptr	sname
endm

TS_OFFSET	macro	tscount
	word	TS_&tscount - TS_base
endm

TS_base	label	byte
tscount = 0
	; Header
 NameArrayHeader <<<3, 0, 0, size NameArrayHeader>, EA_FREE_LIST_TERMINATOR>,
		(size TextStyleElementHeader)-(size NameArrayElement)>

	; Offsets
rept 3
	TS_OFFSET	%tscount
tscount = tscount+1
endm

	; Data
tscount = 0

 TS_ELEMENT	NORMAL, NormalTextStyleName, CA_NULL_ELEMENT, \
		<mask SEF_DISPLAY_IN_TOOLBOX or mask SEF_PROTECTED>, 0

 TS_ELEMENT	HEADER, HeaderTextStyleName, NORMAL, \
		<mask SEF_PROTECTED>, 0

 TS_ELEMENT	FOOTER, FooterTextStyleName, NORMAL, \
		<mask SEF_PROTECTED>, 0

}

chunk NormalTextStyleName = "Normal";
	localize "The name of the default text style", 256;

chunk HeaderTextStyleName = "Header";
	localize "The name of the text style for the header", 256;

chunk FooterTextStyleName = "Footer";
	localize "The name of the text style for the footer", 256;

end TextStyleTemp;

/* ----------------------------------------------------------------------------
	Template to duplicate to create graphic element array
-----------------------------------------------------------------------------*/

start GraphicElementTemp, data;

chunk GraphicElements = data {
    GRAPHIC_ELEMENT_ARRAY_HEADER(0)
}

end GraphicElementTemp;

/* ----------------------------------------------------------------------------
	Template to duplicate to create type element array
-----------------------------------------------------------------------------*/

start TypeElementTemp, data;

chunk TypeElements = data {
    TYPE_ELEMENT_ARRAY_HEADER(1)
TYPE_ATTR_NORMAL = 0
    TYPE_ELEMENT_NONE
}

end TypeElementTemp;

/* ----------------------------------------------------------------------------
	Template to duplicate to create name element array
-----------------------------------------------------------------------------*/

start NameElementTemp, data;

chunk NameElements = data {
    NAME_ARRAY_HEADER(0)
}

end NameElementTemp;

/* ----------------------------------------------------------------------------
	Template to duplicate to create grobj body, attr manager and rulers
-----------------------------------------------------------------------------*/

start BodyRulerTempUI, notDetachable;

MainBody = WriteGrObjBody vardataReloc {

	/* Have GrObjBody automatically grab the target and focus */
	/* when it gets a MSG_VIS_OPEN */

	bodyFlags = default +hasActionNotification;

	/* Set the GrObjAttributeManager and Ruler */

	oam = AttributeManager; 
	ruler = MainHorizontalRuler;

	boundsLeft = 0;
	boundsTop = 0;
	boundsRight = 0;
	boundsBottom = 0;

	hints = {
		ATTR_GB_ACTION_NOTIFICATION {
			word	0
			I_OPTR MainBody
		}
	}
}

/*
 * It is the GrObjAttributeManager which defines maintains all the
 * attribute and style arrays for a grobj document as well as the
 * default attributes.
 */

AttributeManager = WriteGrObjAttributeManager {
	bodyList = GOAMBodyList;
}

chunk	GOAMBodyList = data {
	GOAM_BODY_LIST_CHUNK_ARRAY_HEADER (1)
	I_OPTR MainBody
}

/*
 * It is the Ruler that runs horizontally across the top of the GrObjBody.
 * It maintains grids, guidelines, units and performs snap to and constrains.
 * It is the master ruler, maintain data necessary for its slave, the
 * row ruler.
 */

MainHorizontalRuler = TextRuler {
	tabControl = "0x103c003a";
	rulerAttrs = default +horizontal, +isMaster, -showGrid, +showMouse;

	constrainStrategy = verticalGuidelines, horizontalGuidelines,
			    snapX, snapY, relativeX, relativeY;
	gridX = "0, 0";
	gridY = "0, 0";
	right = 8192;
	attr = default -managed;
	optFlags = default -geometryInvalid, -updatePath;

	slaveRuler = MainVerticalRuler;

}

/*
 * It is the Ruler that runs vertically down the left side of the GrObjBody.
 * It is the slave ruler, so all its data is maintained by the ColumnRuler
 */

MainVerticalRuler = VisRuler {
	constrainStrategy = verticalGuidelines, horizontalGuidelines,
			    snapX, snapY, relativeX, relativeY;
	right = "VIS_RULER_HEIGHT";
	bottom = 8192;
	attr = default -managed;
	optFlags = default -geometryInvalid, -updatePath;
	rulerAttrs = default -horizontal, -isMaster, +showMouse;


}

end BodyRulerTempUI;

/* ----------------------------------------------------------------------------
	Template to duplicate to create article block
-----------------------------------------------------------------------------*/

start ArticleTempUI, notDetachable;

ArticleText = WriteArticle {
	features = default +allowUndo, +allowSmartQuotes;    
	states = editable, selectable, targetable;

	regionArray = ArticleRegionArray;
	displayMode = page;
	regionSpacing = "DISPLAY_MODE_REGION_SPACING";
	draftRegionWidth = "DRAFT_REGION_WIDTH";
	draftRegionHeight = "DRAFT_REGION_HEIGHT";

	hints = {
	    ATTR_VIS_TEXT_NOTIFY_CONTENT,
	    ATTR_VIS_TEXT_DOES_NOT_ACCEPT_INK,
	    /* notify cursor position every 1/2 second */
	    ATTR_VIS_TEXT_NOTIFY_CURSOR_POSITION {
		word	30
	    }
	}
}

chunk ArticleRegionArray = data {
    ChunkArrayHeader <
	0,
	size ArticleRegionArrayElement,
	0,
	size ChunkArrayHeader
    >
}

end ArticleTempUI;

/* ----------------------------------------------------------------------------
	Template to duplicate to create grobj body, attr manager and rulers
-----------------------------------------------------------------------------*/

start MasterPageTempUI, notDetachable;

/*
 * NOTE: This block has a larger header (MasterPageBlockHeader) but there is
 * no way to define it in uic, so the extra data is defined in
 * documentManager.asm after the rdef file is included.
 */

MasterPageBody = WriteMasterPageGrObjBody vardataReloc {

	/* Have GrObjBody automatically grab the target and focus */
	/* when it gets a MSG_VIS_OPEN */

	bodyFlags = default +hasActionNotification;

	/* Set the Ruler */

	oam = AttributeManager; 
	ruler = MPHorizontalRuler;

	boundsLeft = 0;
	boundsTop = 0;
	boundsRight = 0;
	boundsBottom = 0;

	hints = {
		ATTR_GB_ACTION_NOTIFICATION {
			word	0
			I_OPTR MasterPageBody
		}
	}
}

/*
 * It is the Ruler that runs horizontally across the top of the GrObjBody.
 * It maintains grids, guidelines, units and performs snap to and constrains.
 * It is the master ruler, maintain data necessary for its slave, the
 * row ruler.
 */

MPHorizontalRuler = TextRuler {
	tabControl = "0x103c003a";
	rulerAttrs = default +horizontal, -showGrid, +showMouse;

	constrainStrategy = verticalGuidelines, horizontalGuidelines,
			    snapX, snapY, relativeX, relativeY;

	gridX = "0, 0";
	gridY = "0, 0";
	right = 8192;
	attr = default -managed;
	optFlags = default -geometryInvalid, -updatePath;

	slaveRuler = MPVerticalRuler;

}

/*
 * It is the Ruler that runs vertically down the left side of the GrObjBody.
 * It is the slave ruler, so all its data is maintained by the ColumnRuler
 */

MPVerticalRuler = VisRuler {
	constrainStrategy = verticalGuidelines, horizontalGuidelines,
			    snapX, snapY, relativeX, relativeY;
	right = "VIS_RULER_HEIGHT";
	bottom = 8192;
	attr = default -managed;
	optFlags = default -geometryInvalid, -updatePath;
	rulerAttrs = default -horizontal, +showMouse;

}

/*
 * This is the flow region array for the master page
 */

chunk FlowRegionArray = data {
	ChunkArrayHeader <0, size FlowRegionArrayElement,
						0, size ChunkArrayHeader>
}

end MasterPageTempUI;




