start AppLCMonikerResource, data;
/*
 * Moniker generated from ggame1.pcxpixel 13 masked out
 *
 * $Id: mkrKlondike.ui,v 1.1 97/04/04 15:46:50 newdeal Exp $
 */
visMoniker SolitaireLCMoniker = {
	size = large;
	color = color4;
	aspectRatio = normal;
	cachedSize = 64, 40;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP <(EndSolitaireLCIcon-StartSolitaireLCIcon)>
		StartSolitaireLCIcon label byte
		Bitmap <64,40,BMC_PACKBITS, mask BMT_MASK or BMF_4BIT>
		db	0f9h, 000h
		db	0e1h, 0ddh
		db	002h, 00fh, 0ffh, 0fch, 0fch, 000h
		db	001h, 0ddh, 0ddh, 0f8h, 000h, 0ech, 0ddh
		db	002h, 01fh, 0ffh, 0feh, 0fch, 000h
		db	001h, 0ddh, 0d0h, 0f8h, 0ffh, 000h, 00dh, 0edh, 
			0ddh
		db	002h, 01fh, 0ffh, 0feh, 0fch, 000h
		db	001h, 0ddh, 0d0h, 0f8h, 0ffh, 000h, 00dh, 0edh, 
			0ddh
		db	000h, 01fh, 0feh, 0ffh, 000h, 0c0h, 0feh, 000h
		db	001h, 0ddh, 0d0h, 0fbh, 0ffh, 0f8h, 000h, 0f2h, 
			0ddh
		db	000h, 01fh, 0feh, 0ffh, 000h, 0e0h, 0feh, 000h
		db	001h, 0ddh, 0d0h, 0fch, 0ffh, 000h, 0f0h, 0f8h, 
			0ffh, 000h, 00dh, 0f3h, 0ddh
		db	000h, 01fh, 0feh, 0ffh, 000h, 0e0h, 0feh, 000h
		db	001h, 0ddh, 0d0h, 0fch, 0ffh, 000h, 0f0h, 0f8h, 
			0ffh, 000h, 00dh, 0f3h, 0ddh
		db	000h, 01fh, 0fdh, 0ffh, 002h, 0fch, 000h, 000h
		db	001h, 0ddh, 0d0h, 0fdh, 0ffh, 001h, 0f0h, 0f0h, 
			0fbh, 0ffh, 0f8h, 000h, 0f8h, 0ddh
		db	000h, 01fh, 0fdh, 0ffh, 002h, 0feh, 000h, 000h
		db	001h, 0ddh, 0d0h, 0fdh, 0ffh, 001h, 000h, 000h, 
			0fch, 0ffh, 000h, 0f0h, 0f8h, 0ffh, 000h, 00dh, 
			0f9h, 0ddh
		db	000h, 01fh, 0fdh, 0ffh, 002h, 0feh, 000h, 000h
		db	001h, 0ddh, 0d0h, 0feh, 0ffh, 002h, 0f0h, 000h, 
			000h, 0fch, 0ffh, 000h, 0f0h, 0f8h, 0ffh, 000h, 
			00dh, 0f9h, 0ddh
		db	000h, 01fh, 0fbh, 0ffh, 000h, 0c0h
		db	001h, 0ddh, 0d0h, 0feh, 0ffh, 002h, 000h, 0f0h, 
			000h, 0fdh, 0ffh, 001h, 0fch, 0f0h, 0fbh, 0ffh, 
			0f8h, 000h, 0feh, 0ddh
		db	000h, 01fh, 0fbh, 0ffh, 000h, 0e0h
		db	007h, 0ddh, 0d0h, 0ffh, 0ffh, 0f0h, 00fh, 000h, 
			000h, 0fdh, 0ffh, 001h, 0cch, 0c0h, 0fch, 0ffh, 
			000h, 0f0h, 0f8h, 0ffh, 002h, 00dh, 0ddh, 0ddh
		db	000h, 01fh, 0fbh, 0ffh, 000h, 0e0h
		db	007h, 0ddh, 0d0h, 0ffh, 0ffh, 000h, 0f0h, 000h, 
			000h, 0feh, 0ffh, 002h, 0fch, 0cfh, 0c0h, 0fch, 
			0ffh, 000h, 0f0h, 0f8h, 0ffh, 002h, 00dh, 0ddh, 
			0ddh
		db	000h, 01fh, 0fbh, 0ffh, 000h, 0f0h
		db	004h, 0ddh, 0d0h, 0ffh, 0ffh, 00fh, 0feh, 000h, 
			0feh, 0ffh, 002h, 0cch, 0fch, 0c0h, 0fdh, 0ffh, 
			001h, 000h, 000h, 0f8h, 0ffh, 002h, 008h, 0ddh, 
			0ddh
		db	000h, 01fh, 0fbh, 0ffh, 000h, 0f8h
		db	003h, 0ddh, 0d0h, 0ffh, 0f0h, 0fdh, 000h, 005h, 
			0ffh, 0ffh, 0fch, 0cfh, 0cch, 0c0h, 0feh, 0ffh, 
			002h, 0f0h, 0f0h, 000h, 0f8h, 0ffh, 002h, 008h, 
			08dh, 0ddh
		db	000h, 01fh, 0fbh, 0ffh, 000h, 0f8h
		db	003h, 0ddh, 0d0h, 0ffh, 0f0h, 0fdh, 000h, 005h, 
			0ffh, 0ffh, 0cch, 0fch, 0cch, 0c0h, 0feh, 0ffh, 
			002h, 00fh, 000h, 000h, 0f8h, 0ffh, 002h, 008h, 
			08dh, 0ddh
		db	000h, 01fh, 0fbh, 0ffh, 000h, 0f8h
		db	003h, 0ddh, 0d0h, 0ffh, 0f0h, 0fdh, 000h, 005h, 
			0ffh, 0ffh, 0cfh, 0cch, 0cch, 0c0h, 0feh, 0ffh, 
			0feh, 000h, 0f8h, 0ffh, 002h, 008h, 08dh, 0ddh
		db	000h, 01fh, 0fbh, 0ffh, 000h, 0f8h
		db	003h, 0ddh, 0d0h, 0ffh, 0f0h, 0fdh, 000h, 001h, 
			0ffh, 0fch, 0feh, 0cch, 000h, 0c0h, 0feh, 0ffh, 
			0feh, 000h, 00bh, 0ffh, 0ffh, 0cch, 0cch, 0ffh, 
			0fch, 0cch, 0cfh, 0ffh, 008h, 08dh, 0ddh
		db	000h, 01fh, 0fbh, 0ffh, 000h, 0f8h
		db	009h, 0ddh, 0d0h, 0ffh, 0ffh, 000h, 000h, 0f0h, 
			0f0h, 0ffh, 0ffh, 0feh, 0cch, 000h, 0c0h, 0feh, 
			0ffh, 00eh, 0f0h, 000h, 000h, 0ffh, 0fch, 0cfh, 
			0cch, 0cfh, 0cch, 0fch, 0cch, 0ffh, 008h, 08dh, 
			0ddh
		db	000h, 01fh, 0fbh, 0ffh, 000h, 0f8h
		db	001h, 0ddh, 0d0h, 0fdh, 0ffh, 003h, 000h, 000h, 
			0ffh, 0ffh, 0feh, 0cch, 012h, 0c0h, 0ffh, 0ffh, 
			000h, 00fh, 000h, 000h, 0ffh, 0cch, 0fch, 0cch, 
			0cch, 0cfh, 0cch, 0cch, 0cfh, 008h, 08dh, 0ddh
		db	000h, 01fh, 0fbh, 0ffh, 000h, 0f8h
		db	001h, 0ddh, 0d0h, 0feh, 0ffh, 00fh, 0f0h, 000h, 
			000h, 0ffh, 0ffh, 0fch, 0cch, 0cch, 0c0h, 0ffh, 
			0f0h, 0f0h, 000h, 0f0h, 0f0h, 0ffh, 0fah, 0cch, 
			003h, 0cfh, 008h, 08dh, 0ddh
		db	000h, 01fh, 0fbh, 0ffh, 000h, 0f8h
		db	001h, 0ddh, 0d0h, 0fch, 0ffh, 000h, 0f0h, 0feh, 
			0ffh, 004h, 0cch, 0cch, 0c0h, 0ffh, 00fh, 0fdh, 
			000h, 000h, 0ffh, 0fah, 0cch, 003h, 0cfh, 008h, 
			08dh, 0ddh
		db	000h, 01fh, 0fbh, 0ffh, 000h, 0f8h
		db	001h, 0ddh, 0d0h, 0fch, 0ffh, 000h, 0f0h, 0feh, 
			0ffh, 003h, 0fch, 0cch, 0c0h, 0ffh, 0fch, 000h, 
			000h, 0ffh, 0fah, 0cch, 003h, 0cfh, 008h, 08dh, 
			0ddh
		db	000h, 01fh, 0fbh, 0ffh, 000h, 0f8h
		db	001h, 0ddh, 0d0h, 0fch, 0ffh, 000h, 0f0h, 0fdh, 
			0ffh, 002h, 0cch, 0c0h, 0ffh, 0fch, 000h, 001h, 
			0ffh, 0fch, 0fbh, 0cch, 003h, 0ffh, 008h, 08dh, 
			0ddh
		db	000h, 01fh, 0fbh, 0ffh, 000h, 0f8h
		db	001h, 0ddh, 0d0h, 0fch, 0ffh, 000h, 0f0h, 0fdh, 
			0ffh, 009h, 0fch, 0f0h, 0ffh, 0f0h, 000h, 000h, 
			0f0h, 0f0h, 0ffh, 0fch, 0fbh, 0cch, 003h, 0ffh, 
			008h, 08dh, 0ddh
		db	000h, 01fh, 0fbh, 0ffh, 000h, 0f8h
		db	001h, 0ddh, 0d0h, 0fch, 0ffh, 000h, 0f0h, 0fch, 
			0ffh, 008h, 0f0h, 0ffh, 0ffh, 000h, 00fh, 0f0h, 
			0f0h, 0ffh, 0ffh, 0fch, 0cch, 004h, 0cfh, 0ffh, 
			008h, 08dh, 0ddh
		db	000h, 01fh, 0fbh, 0ffh, 000h, 0f8h
		db	001h, 0ddh, 0d0h, 0fch, 0ffh, 000h, 0f0h, 0fch, 
			0ffh, 000h, 0f0h, 0fdh, 0ffh, 004h, 000h, 000h, 
			0ffh, 0ffh, 0fch, 0fdh, 0cch, 004h, 0ffh, 0ffh, 
			008h, 08dh, 0ddh
		db	000h, 00fh, 0fbh, 0ffh, 000h, 0f8h
		db	001h, 0ddh, 0ddh, 0fbh, 000h, 0fch, 0ffh, 000h, 
			0f0h, 0feh, 0ffh, 002h, 0f0h, 000h, 000h, 0feh, 
			0ffh, 0feh, 0cch, 005h, 0cfh, 0ffh, 0ffh, 008h, 
			08dh, 0ddh
		db	000h, 003h, 0fbh, 0ffh, 000h, 0f8h
		db	0feh, 0ddh, 0fdh, 088h, 000h, 080h, 0fch, 0ffh, 
			000h, 0f0h, 0fch, 0ffh, 000h, 0f0h, 0feh, 0ffh, 
			002h, 0fch, 0cch, 0cch, 0feh, 0ffh, 002h, 008h, 
			08dh, 0ddh
		db	000h, 001h, 0fbh, 0ffh, 000h, 0f8h
		db	0feh, 0ddh, 000h, 0d8h, 0feh, 088h, 000h, 080h, 
			0fch, 0ffh, 000h, 0f0h, 0fch, 0ffh, 000h, 0f0h, 
			0fdh, 0ffh, 001h, 0cch, 0cfh, 0feh, 0ffh, 002h, 
			008h, 08dh, 0ddh
		db	001h, 000h, 000h, 0fch, 0ffh, 000h, 0f8h
		db	0f9h, 0ddh, 0fbh, 000h, 0fch, 0ffh, 000h, 0f0h, 
			0fdh, 0ffh, 000h, 0fch, 0fdh, 0ffh, 002h, 008h, 
			08dh, 0ddh
		db	002h, 000h, 000h, 03fh, 0fdh, 0ffh, 000h, 0f8h
		db	0f8h, 0ddh, 0fdh, 088h, 000h, 080h, 0fch, 0ffh, 
			000h, 0f0h, 0f8h, 0ffh, 002h, 008h, 08dh, 0ddh
		db	002h, 000h, 000h, 01fh, 0fdh, 0ffh, 000h, 0f8h
		db	0f8h, 0ddh, 000h, 0d8h, 0feh, 088h, 000h, 080h, 
			0fch, 0ffh, 000h, 0f0h, 0f8h, 0ffh, 002h, 008h, 
			08dh, 0ddh
		db	0feh, 000h, 000h, 00fh, 0feh, 0ffh, 000h, 0f8h
		db	0f3h, 0ddh, 0fbh, 000h, 0f8h, 0ffh, 002h, 008h, 
			08dh, 0ddh
		db	0feh, 000h, 000h, 003h, 0feh, 0ffh, 000h, 0f8h
		db	0f2h, 0ddh, 0fdh, 088h, 000h, 080h, 0f8h, 0ffh, 
			002h, 008h, 08dh, 0ddh
		db	0feh, 000h, 000h, 001h, 0feh, 0ffh, 000h, 0f8h
		db	0f2h, 0ddh, 000h, 0d8h, 0feh, 088h, 000h, 080h, 
			0f8h, 0ffh, 002h, 008h, 08dh, 0ddh
		db	0fch, 000h, 002h, 0ffh, 0ffh, 0f8h
		db	0edh, 0ddh, 0f8h, 000h, 002h, 088h, 08dh, 0ddh
		db	0fch, 000h, 002h, 03fh, 0ffh, 0f8h
		db	0ech, 0ddh, 0f8h, 088h, 001h, 08dh, 0ddh
		db	0fch, 000h, 002h, 01fh, 0ffh, 0f0h
		db	0ech, 0ddh, 000h, 0d8h, 0f9h, 088h, 001h, 0ddh, 
			0ddh
		db	0f9h, 000h
		db	0e1h, 0ddh
		EndSolitaireLCIcon label byte
		GSEndString
	}
}
end AppLCMonikerResource;
start AppLMMonikerResource, data;
/*
 * Moniker generated from ggame1.pcxpixel 13 masked out
 */
visMoniker SolitaireLMMoniker = {
	size = large;
	color = gray1;
	aspectRatio = normal;
	cachedSize = 64, 40;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP <(EndSolitaireLMIcon-StartSolitaireLMIcon)>
		StartSolitaireLMIcon label byte
		Bitmap <64,40,BMC_PACKBITS, BMF_MONO>
		db	0f9h, 000h
		db	002h, 00fh, 0ffh, 0fch, 0fch, 000h
		db	002h, 010h, 000h, 002h, 0fch, 000h
		db	002h, 010h, 000h, 002h, 0fch, 000h
		db	004h, 010h, 000h, 0ffh, 0ffh, 0c0h, 0feh, 000h
		db	004h, 010h, 001h, 000h, 000h, 020h, 0feh, 000h
		db	004h, 010h, 001h, 000h, 000h, 020h, 0feh, 000h
		db	007h, 010h, 005h, 000h, 00fh, 0ffh, 0fch, 000h, 
			000h
		db	007h, 010h, 00fh, 000h, 010h, 000h, 002h, 000h, 
			000h
		db	007h, 010h, 01fh, 000h, 010h, 000h, 002h, 000h, 
			000h
		db	007h, 010h, 037h, 000h, 050h, 000h, 0ffh, 0ffh, 
			0c0h
		db	007h, 010h, 06fh, 000h, 0f0h, 001h, 000h, 000h, 
			020h
		db	007h, 010h, 0dfh, 001h, 0b0h, 001h, 000h, 000h, 
			020h
		db	007h, 010h, 0bfh, 003h, 050h, 00fh, 000h, 000h, 
			030h
		db	007h, 011h, 0ffh, 006h, 0b0h, 017h, 000h, 000h, 
			038h
		db	007h, 011h, 0ffh, 00dh, 050h, 02fh, 000h, 000h, 
			038h
		db	007h, 011h, 0ffh, 00ah, 0b0h, 03fh, 000h, 000h, 
			038h
		db	007h, 011h, 0ffh, 015h, 050h, 03fh, 00fh, 01eh, 
			038h
		db	007h, 010h, 0f5h, 00ah, 0b0h, 01fh, 01ah, 0abh, 
			038h
		db	007h, 010h, 00fh, 00dh, 050h, 0efh, 035h, 055h, 
			0b8h
		db	007h, 010h, 01fh, 006h, 0b1h, 075h, 02ah, 0aah, 
			0b8h
		db	007h, 010h, 001h, 003h, 052h, 0ffh, 035h, 055h, 
			0b8h
		db	007h, 010h, 001h, 001h, 0b3h, 0ffh, 02ah, 0aah, 
			0b8h
		db	007h, 010h, 001h, 000h, 0f3h, 0ffh, 015h, 055h, 
			038h
		db	007h, 010h, 001h, 000h, 051h, 0f5h, 01ah, 0abh, 
			038h
		db	007h, 010h, 001h, 000h, 010h, 0e5h, 00dh, 056h, 
			038h
		db	007h, 010h, 001h, 000h, 010h, 00fh, 006h, 0ach, 
			038h
		db	007h, 00fh, 0ffh, 000h, 010h, 01fh, 003h, 058h, 
			038h
		db	007h, 003h, 0ffh, 000h, 010h, 001h, 001h, 0b0h, 
			038h
		db	007h, 001h, 0ffh, 000h, 010h, 001h, 000h, 0e0h, 
			038h
		db	007h, 000h, 000h, 0ffh, 0f0h, 001h, 000h, 040h, 
			038h
		db	007h, 000h, 000h, 03fh, 0f0h, 001h, 000h, 000h, 
			038h
		db	007h, 000h, 000h, 01fh, 0f0h, 001h, 000h, 000h, 
			038h
		db	0feh, 000h, 004h, 00fh, 0ffh, 000h, 000h, 038h
		db	0feh, 000h, 004h, 003h, 0ffh, 000h, 000h, 038h
		db	0feh, 000h, 004h, 001h, 0ffh, 000h, 000h, 038h
		db	0fch, 000h, 002h, 0ffh, 0ffh, 0f8h
		db	0fch, 000h, 002h, 03fh, 0ffh, 0f8h
		db	0fch, 000h, 002h, 01fh, 0ffh, 0f0h
		db	0f9h, 000h
		EndSolitaireLMIcon label byte
		GSEndString
	}
}
end AppLMMonikerResource;
start AppSCMonikerResource, data;
/*
 * Moniker generated from ggame1.pcxpixel 13 masked out
 */
visMoniker SolitaireSCMoniker = {
	size = standard;
	color = color4;
	aspectRatio = normal;
	cachedSize = 48, 30;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP <(EndSolitaireSCIcon-StartSolitaireSCIcon)>
		StartSolitaireSCIcon label byte
		Bitmap <48,30,BMC_PACKBITS, mask BMT_MASK or BMF_4BIT>
		db	001h, 03fh, 0feh, 0fdh, 000h
		db	000h, 0ddh, 0fbh, 000h, 000h, 00dh, 0f1h, 0ddh
		db	001h, 07fh, 0ffh, 0fdh, 000h
		db	000h, 0d0h, 0fbh, 0ffh, 000h, 0f0h, 0f1h, 0ddh
		db	002h, 07fh, 0ffh, 080h, 0feh, 000h
		db	000h, 0d0h, 0fbh, 0ffh, 001h, 0f0h, 07dh, 0f2h, 
			0ddh
		db	005h, 07fh, 0ffh, 0ffh, 080h, 000h, 000h
		db	000h, 0d0h, 0fch, 0ffh, 0fbh, 000h, 000h, 00dh, 
			0f6h, 0ddh
		db	005h, 07fh, 0ffh, 0ffh, 0c0h, 000h, 000h
		db	000h, 0d0h, 0feh, 0ffh, 001h, 00fh, 0f0h, 0fbh, 
			0ffh, 000h, 0f0h, 0f6h, 0ddh
		db	005h, 07fh, 0ffh, 0ffh, 0e0h, 000h, 000h
		db	005h, 0d0h, 0ffh, 0ffh, 0f0h, 000h, 0f0h, 0fbh, 
			0ffh, 001h, 0f0h, 07dh, 0f7h, 0ddh
		db	000h, 07fh, 0feh, 0ffh, 001h, 0e0h, 000h
		db	005h, 0d0h, 0ffh, 0ffh, 00fh, 000h, 000h, 0fch, 
			0ffh, 0fbh, 000h, 000h, 00dh, 0fbh, 0ddh
		db	000h, 07fh, 0feh, 0ffh, 001h, 0f0h, 000h
		db	005h, 0d0h, 0ffh, 0f0h, 0f0h, 000h, 000h, 0feh, 
			0ffh, 001h, 0cfh, 0f0h, 0fbh, 0ffh, 000h, 0f0h, 
			0fbh, 0ddh
		db	000h, 07fh, 0feh, 0ffh, 001h, 0f8h, 000h
		db	002h, 0d0h, 0ffh, 00fh, 0feh, 000h, 004h, 0ffh, 
			0ffh, 0fch, 0cch, 0f0h, 0fbh, 0ffh, 001h, 0f0h, 
			07dh, 0fch, 0ddh
		db	000h, 07fh, 0fdh, 0ffh, 000h, 0f8h
		db	001h, 0d0h, 0ffh, 0fdh, 000h, 004h, 0ffh, 0ffh, 
			0cch, 0fch, 0c0h, 0fch, 0ffh, 0fbh, 000h, 001h, 
			00dh, 0ddh
		db	000h, 07fh, 0fdh, 0ffh, 000h, 0fch
		db	001h, 0d0h, 0ffh, 0fdh, 000h, 009h, 0ffh, 0fch, 
			0cfh, 0cch, 0c0h, 0ffh, 0ffh, 0f0h, 000h, 0f0h, 
			0fbh, 0ffh, 001h, 0f0h, 0ddh
		db	000h, 07fh, 0fdh, 0ffh, 000h, 0feh
		db	00fh, 0d0h, 0ffh, 0f0h, 00fh, 00fh, 000h, 0ffh, 
			0fch, 0fch, 0cch, 0c0h, 0ffh, 0ffh, 00fh, 000h, 
			000h, 0fbh, 0ffh, 001h, 0f0h, 07dh
		db	000h, 07fh, 0fdh, 0ffh, 000h, 0feh
		db	006h, 0d0h, 0ffh, 0ffh, 0f0h, 000h, 0f0h, 0ffh, 
			0feh, 0cch, 002h, 0c0h, 0ffh, 0ffh, 0feh, 000h, 
			0fbh, 0ffh, 001h, 0f0h, 07dh
		db	000h, 07fh, 0fdh, 0ffh, 000h, 0feh
		db	002h, 0d0h, 0ffh, 0ffh, 0feh, 000h, 006h, 0ffh, 
			0fch, 0cch, 0cch, 0c0h, 0ffh, 0ffh, 0feh, 000h, 
			0fbh, 0ffh, 001h, 0f0h, 07dh
		db	000h, 07fh, 0fdh, 0ffh, 000h, 0feh
		db	000h, 0d0h, 0fdh, 0ffh, 012h, 0f0h, 0ffh, 0fch, 
			0cch, 0cch, 0c0h, 0ffh, 000h, 0f0h, 000h, 0f0h, 
			0ffh, 0cch, 0cfh, 0ffh, 0cch, 0cfh, 0f0h, 07dh
		db	000h, 07fh, 0fdh, 0ffh, 000h, 0feh
		db	000h, 0d0h, 0fdh, 0ffh, 007h, 0f0h, 0ffh, 0ffh, 
			0cch, 0cch, 0c0h, 0f0h, 0f0h, 0feh, 000h, 007h, 
			0fch, 0cfh, 0cch, 0fch, 0cfh, 0cch, 0f0h, 07dh
		db	000h, 07fh, 0fdh, 0ffh, 000h, 0feh
		db	000h, 0d0h, 0fdh, 0ffh, 006h, 0f0h, 0ffh, 0ffh, 
			0fch, 0cch, 0f0h, 0f0h, 0fdh, 000h, 007h, 0fch, 
			0fch, 0cch, 0cch, 0fch, 0cch, 0f0h, 07dh
		db	000h, 07fh, 0fdh, 0ffh, 000h, 0feh
		db	000h, 0d0h, 0fdh, 0ffh, 000h, 0f0h, 0feh, 0ffh, 
			002h, 0cfh, 0f0h, 0f0h, 0fdh, 000h, 000h, 0fch, 
			0fch, 0cch, 001h, 0f0h, 07dh
		db	000h, 07fh, 0fdh, 0ffh, 000h, 0feh
		db	000h, 0d0h, 0fdh, 0ffh, 000h, 0f0h, 0fdh, 0ffh, 
			006h, 0f0h, 0ffh, 000h, 00fh, 00fh, 000h, 0ffh, 
			0fdh, 0cch, 002h, 0cfh, 0f0h, 07dh
		db	000h, 03fh, 0fdh, 0ffh, 000h, 0feh
		db	000h, 0ddh, 0fch, 000h, 0fdh, 0ffh, 006h, 0f0h, 
			0ffh, 0ffh, 0f0h, 000h, 0f0h, 0ffh, 0fdh, 0cch, 
			002h, 0cfh, 0f0h, 07dh
		db	000h, 01fh, 0fdh, 0ffh, 000h, 0feh
		db	001h, 0ddh, 0d7h, 0feh, 077h, 000h, 070h, 0fdh, 
			0ffh, 002h, 0f0h, 0ffh, 0ffh, 0feh, 000h, 001h, 
			0ffh, 0fch, 0feh, 0cch, 002h, 0ffh, 0f0h, 07dh
		db	001h, 000h, 01fh, 0feh, 0ffh, 000h, 0feh
		db	0fch, 0ddh, 000h, 0d0h, 0fdh, 0ffh, 000h, 0f0h, 
			0fdh, 0ffh, 008h, 0f0h, 0ffh, 0ffh, 0cch, 0cch, 
			0cfh, 0ffh, 0f0h, 07dh
		db	001h, 000h, 00fh, 0feh, 0ffh, 000h, 0feh
		db	0fbh, 0ddh, 0fch, 000h, 0fdh, 0ffh, 008h, 0f0h, 
			0ffh, 0ffh, 0fch, 0cch, 0ffh, 0ffh, 0f0h, 07dh
		db	001h, 000h, 007h, 0feh, 0ffh, 000h, 0feh
		db	0fbh, 0ddh, 000h, 0d7h, 0feh, 077h, 000h, 070h, 
			0fdh, 0ffh, 000h, 0f0h, 0feh, 0ffh, 004h, 0cfh, 
			0ffh, 0ffh, 0f0h, 07dh
		db	005h, 000h, 000h, 007h, 0ffh, 0ffh, 0feh
		db	0f7h, 0ddh, 000h, 0d0h, 0fdh, 0ffh, 000h, 0f0h, 
			0fbh, 0ffh, 001h, 0f0h, 07dh
		db	005h, 000h, 000h, 003h, 0ffh, 0ffh, 0feh
		db	0f6h, 0ddh, 0fch, 000h, 0fbh, 0ffh, 001h, 0f0h, 
			07dh
		db	005h, 000h, 000h, 001h, 0ffh, 0ffh, 0feh
		db	0f6h, 0ddh, 000h, 0d7h, 0feh, 077h, 000h, 070h, 
			0fbh, 0ffh, 001h, 0f0h, 07dh
		db	0feh, 000h, 002h, 001h, 0ffh, 0feh
		db	0f2h, 0ddh, 000h, 0d0h, 0fbh, 0ffh, 001h, 0f0h, 
			07dh
		db	0fdh, 000h, 001h, 0ffh, 0feh
		db	0f1h, 0ddh, 0fbh, 000h, 001h, 007h, 07dh
		db	0fdh, 000h, 001h, 07fh, 0fch
		db	0f1h, 0ddh, 000h, 0d7h, 0fbh, 077h, 000h, 0ddh
		EndSolitaireSCIcon label byte
		GSEndString
	}
}
end AppSCMonikerResource;
start AppSMMonikerResource, data;
/*
 * Moniker generated from ggame1.pcxpixel 13 masked out
 */
visMoniker SolitaireSMMoniker = {
	size = standard;
	color = gray1;
	aspectRatio = normal;
	cachedSize = 48, 30;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP <(EndSolitaireSMIcon-StartSolitaireSMIcon)>
		StartSolitaireSMIcon label byte
		Bitmap <48,30,BMC_PACKBITS, BMF_MONO>
		db	001h, 03fh, 0feh, 0fdh, 000h
		db	001h, 040h, 001h, 0fdh, 000h
		db	002h, 040h, 001h, 080h, 0feh, 000h
		db	005h, 040h, 00fh, 0ffh, 080h, 000h, 000h
		db	005h, 040h, 090h, 000h, 040h, 000h, 000h
		db	005h, 041h, 0d0h, 000h, 060h, 000h, 000h
		db	005h, 043h, 0f0h, 003h, 0ffh, 0e0h, 000h
		db	005h, 047h, 0f0h, 004h, 000h, 010h, 000h
		db	005h, 04fh, 0f0h, 024h, 000h, 018h, 000h
		db	005h, 04fh, 0f0h, 054h, 000h, 0ffh, 0f8h
		db	005h, 04fh, 0f0h, 0ach, 01dh, 000h, 004h
		db	005h, 046h, 0b1h, 054h, 03fh, 000h, 006h
		db	005h, 041h, 0d2h, 0ach, 03fh, 000h, 006h
		db	005h, 043h, 0f1h, 054h, 03fh, 000h, 006h
		db	005h, 040h, 010h, 0ach, 0ddh, 028h, 0a6h
		db	005h, 040h, 010h, 055h, 0ffh, 055h, 056h
		db	005h, 040h, 010h, 025h, 0ffh, 02ah, 0a6h
		db	005h, 040h, 010h, 005h, 0ffh, 055h, 056h
		db	005h, 040h, 010h, 004h, 0ebh, 02ah, 0a6h
		db	005h, 03fh, 0f0h, 004h, 01dh, 015h, 046h
		db	005h, 01fh, 0f0h, 004h, 03fh, 00ah, 086h
		db	005h, 000h, 010h, 004h, 001h, 005h, 006h
		db	005h, 000h, 00fh, 0fch, 001h, 002h, 006h
		db	005h, 000h, 007h, 0fch, 001h, 000h, 006h
		db	005h, 000h, 000h, 004h, 001h, 000h, 006h
		db	005h, 000h, 000h, 003h, 0ffh, 000h, 006h
		db	005h, 000h, 000h, 001h, 0ffh, 000h, 006h
		db	0feh, 000h, 002h, 001h, 000h, 006h
		db	0fdh, 000h, 001h, 0ffh, 0feh
		db	0fdh, 000h, 001h, 07fh, 0fch
		EndSolitaireSMIcon label byte
		GSEndString
	}
}
end AppSMMonikerResource;
start AppLCGAMonikerResource, data;
/*
 * Moniker generated from ggame1.pcxpixel 13 masked out
 */
visMoniker SolitaireLCGAMoniker = {
	size = large;
	color = gray1;
	aspectRatio = verySquished;
	cachedSize = 64, 18;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP <(EndSolitaireLCGAIcon-StartSolitaireLCGAIcon)>
		StartSolitaireLCGAIcon label byte
		Bitmap <64,18,BMC_PACKBITS, BMF_MONO>
		db	0f9h, 000h
		db	0f9h, 000h
		db	0f9h, 000h
		db	0f9h, 000h
		db	0f9h, 000h
		db	0f9h, 000h
		db	0f9h, 000h
		db	0f9h, 000h
		db	0f9h, 000h
		db	0f9h, 000h
		db	0f9h, 000h
		db	0f9h, 000h
		db	0f9h, 000h
		db	0f9h, 000h
		db	0f9h, 000h
		db	0f9h, 000h
		db	0f9h, 000h
		db	0f9h, 000h
		EndSolitaireLCGAIcon label byte
		GSEndString
	}
}
end AppLCGAMonikerResource;
start AppSCGAMonikerResource, data;
/*
 * Moniker generated from ggame1.pcxpixel 13 masked out
 */
visMoniker SolitaireSCGAMoniker = {
	size = standard;
	color = gray1;
	aspectRatio = verySquished;
	cachedSize = 48, 14;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP <(EndSolitaireSCGAIcon-StartSolitaireSCGAIcon)>
		StartSolitaireSCGAIcon label byte
		Bitmap <48,14,BMC_PACKBITS, BMF_MONO>
		db	001h, 07fh, 0ffh, 0fdh, 000h
		db	005h, 081h, 01fh, 0ffh, 0c0h, 000h, 000h
		db	005h, 083h, 0a0h, 003h, 0ffh, 0f8h, 000h
		db	005h, 087h, 0e0h, 044h, 000h, 0ffh, 0feh
		db	005h, 08fh, 0e0h, 0a4h, 01dh, 000h, 001h
		db	005h, 09fh, 0e1h, 054h, 03fh, 014h, 051h
		db	005h, 08eh, 0e2h, 0ach, 01dh, 02ah, 0a9h
		db	005h, 081h, 021h, 054h, 0ebh, 015h, 051h
		db	005h, 083h, 0a0h, 0a5h, 0ffh, 00ah, 0a1h
		db	005h, 080h, 020h, 044h, 0ebh, 005h, 041h
		db	005h, 07fh, 0e0h, 004h, 01dh, 002h, 081h
		db	002h, 000h, 01fh, 0fch, 0feh, 001h
		db	005h, 000h, 000h, 003h, 0ffh, 000h, 001h
		db	0fdh, 000h, 001h, 0ffh, 0feh
		EndSolitaireSCGAIcon label byte
		GSEndString
	}
}
end AppSCGAMonikerResource;
