COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	(c) Copyright GeoWorks 1995.  All Rights Reserved.
	GEOWORKS CONFIDENTIAL

PROJECT:	GEOS
MODULE:		Pyramid
FILE:		pyramid.def

AUTHOR:		Steve Yegge, Aug  7, 1995

	
REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	stevey	8/ 7/95		Initial revision


DESCRIPTION:

	Constants & other definitions for Pyramid game.  Stolen
	from pyramid.asm, pyramidGame.asm, and pyramidDeck.asm.
		
	$Id: pyramid.def,v 1.1 97/04/04 15:15:12 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

;-----------------------------------------------------------------------------
;			Constants & structures
;-----------------------------------------------------------------------------

FIRST_TABLEAU_ELEMENT	= 4
LAST_TABLEAU_ELEMENT	= 31

NUM_CARDS_NUKED_TO_WIN	= 28

PyramidMoveType		etype	byte, 0, 2
	PMT_NUKED_CARDS		enum	PyramidMoveType
	PMT_CLICKED_HAND	enum	PyramidMoveType

PyramidUndoInfo		struct
	PUI_lastMove	PyramidMoveType
	PUI_optr1	optr
	PUI_optr2	optr
PyramidUndoInfo		ends

PyramidGameOptions	record
	:14
	PGO_CYCLE_THROUGH_DECK : 1		; 0 = can only go thru once
	PGO_HIDE_CARDS : 1			; 1 = hide covered cards
PyramidGameOptions	end

;-----------------------------------------------------------------------------
;			FatalErrors
;-----------------------------------------------------------------------------
UNDO_OPTR_UNEXPECTEDLY_NONZERO			enum	FatalErrors
; If this happens, we forgot to clear out the undo info, or
; (worse) 3 or more cards got nuked in one move.  Shouldn't happen.

TRYING_TO_SET_INVALID_BITS_IN_RESURRECT_SONS	enum	FatalErrors
; Someone passed a DeadSons record to PyramidDeckResurrectSons that
; contained bits set other than LEFT_SON_DEAD and/or RIGHT_SON_DEAD.

NUM_NUKES_DECREMENTED_BELOW_ZERO		enum	FatalErrors
; Someone tried to decrement the number of nuked cards when the
; number of nuked cards was zero.  This shouldn't happen either.

EXPECTED_CARD_IN_DISCARD_PILE			enum	FatalErrors
; Tried to pop a card from the discard pile for Undo, and found
; nothing in the discard pile.

;------------------------------------------------------------------------------
;			PyramidProcessClass
;------------------------------------------------------------------------------

PyramidProcessClass	class	GenProcessClass
PyramidProcessClass	endc

;------------------------------------------------------------------------------
;			PyramidClass
;------------------------------------------------------------------------------

PyramidClass		class	GameClass

MSG_PYRAMID_INC_NUKES			message
MSG_PYRAMID_DEC_NUKES			message
MSG_PYRAMID_QUERY_HIDE			message
;
;  Return whether covered cards are being hidden.
;
;  Pass:	nothing
;  Return:	carry set if cards are being hidden
;  Destroyed:	nothing
;

MSG_PYRAMID_SEND_NUKE			message
MSG_PYRAMID_NEW_GAME			message
MSG_PYRAMID_DEAL			message
MSG_PYRAMID_CLEAR_CHOSEN		message
MSG_PYRAMID_SET_GAME_OPTIONS		message
;
;  Set our options.
;
;  Pass:	cx = PyramidGameOptions
;  Return:	nothing
;  Destroyed:	ax, cx, dx, bp
;

MSG_PYRAMID_SET_SUM_TO			message

MSG_PYRAMID_UNDO_MOVE			message
;
;  Undo!
;
;  Pass: 	nothing
;  Return: 	nothing
;  Destroyed:	ax, cx, dx, bp
;

MSG_PYRAMID_SET_UNDO_OPTR		message
;
;  Set the optr of the deck from which the current card came.
;  When we undo the move, we take a card from the discard pile
;  and push it onto this deck.
;
;  Pass:	^lcx:dx = optr of deck
;  Return:	nothing
;  Destroyed:	nothing
;

MSG_PYRAMID_NUKE_UNDO_OPTRS		message
;
;  We're about to start a new undo-able operation, so clear
;  out the info from the last operation.
;
;  Pass:	nothing
;  Return:	nothing
;  Destroyed:	nothing
;

MSG_PYRAMID_SET_LAST_MOVE_TYPE		message
;
;  Set the PyramidMoveType.
;
;  Pass:	cl = new PyramidMoveType
;  Return:	nothing
;  Destroyed:	nothing
;

ATTR_PYRAMID_GAME_OPEN	vardata	byte
; indicates that the game object is open and has not yet been saved
; to state.

	PI_chosenOne		optr
	PI_chosenRank		word
	PI_sumTo		word
	PI_nNukes		byte
	PI_undoInfo		PyramidUndoInfo

PyramidClass		endc

;------------------------------------------------------------------------------
;			PyramidDeckClass
;------------------------------------------------------------------------------

PyramidDeckClass	class	DeckClass
MSG_PYRAMID_DECK_CARD_FLIP_IF_COVERED			message
;
;  If we're a non-detectable tableau element, then depending
;  on the passed option, flip face-up or face-down.
;
;  Pass:	cx = PyramidGameOptions
;  Return:	nothing
;  Destroyed:	ax, dx, bp
;

MSG_PYRAMID_DECK_RESURRECT_SONS				message
;
;  Bring one or both children back to life.
;
;  Pass:	cl = mask of (PDF_LEFT_SON_DEAD || PDF_RIGHT_SON_DEAD)
;  Return:	nothing
;  Destroyed:	nothing
;

MSG_PYRAMID_DECK_NUKE					message
MSG_PYRAMID_DECK_NOTIFY_SON_IS_DEAD			message
MSG_PYRAMID_DECK_BECOME_DETECTABLE_IF_SONS_DEAD		message
MSG_PYRAMID_DECK_GET_FLAGS				message
;
; Return the PyramidDeckFlags for this deck.
;
; Pass:		nothing
; Return:	cl = PyramidDeckFlags
; Destroyed:	nothing
;

PyramidDeckFlags	record
	:3
	PDF_ALWAYS_DETECTABLE : 1	; set for G1-G7, talon, TopOfMyHand
	PDF_IS_DISCARD : 1		; set only for MyDiscard deck
	PDF_DECK_NOT_IN_TREE : 1	; set for MyTalon and TopOfMyHand
	PDF_LEFT_SON_DEAD : 1
	PDF_RIGHT_SON_DEAD : 1
PyramidDeckFlags	end

MSG_PYRAMID_DECK_ENABLE_REDRAW				message
;
;  Basically do a MSG_VIS_INVALIDATE.  Required after you pop
;  a card from a deck.
;
;  Pass:	nothing
;  Return:	nothing
;  Destroyed:	nothing
;

	;
	;  PyramidDeckClass instance data...
	;

	PDI_leftParent		optr
	PDI_rightParent		optr
	PDI_leftChild		optr
	PDI_rightChild		optr
	PDI_deckFlags		PyramidDeckFlags

PyramidDeckClass	endc

;------------------------------------------------------------------------------
;		Initialized variables and class structures
;------------------------------------------------------------------------------

idata	segment

	PyramidProcessClass	mask CLASSF_NEVER_SAVED
	PyramidClass
	PyramidDeckClass

idata	ends

