@ifndef BLACKWHITE

@visMoniker ABSMonikerAB = {
	size = standard;
	style = icon;
	color = color4;
	aspectRatio = normal;
	cachedSize = 32, 12;
	gstring {
		GSDrawBitmapAtCP (230),
		Bitmap (32,12,BMC_PACKBITS,(BMT_MASK | BMF_4BIT)),
		0x03, 0x03, 0x80, 0x00, 0x7c, 0xfe, 0xff, 0x01,
		0xaa, 0xaf, 0xfa, 0xff, 0x03, 0xf4, 0x44, 0x44,
		0xff, 0x03, 0x03, 0x80, 0x00, 0xfe, 0xfe, 0xff,
		0x01, 0xaa, 0xaf, 0xfa, 0xff, 0xfe, 0x44, 0x00,
		0x4f, 0x02, 0x07, 0x80, 0x00, 0xfe, 0xff, 0x02,
		0xfa, 0xaa, 0xaf, 0xfa, 0xff, 0xfd, 0x44, 0x08,
		0x07, 0x80, 0x00, 0xe7, 0xff, 0xff, 0xfa, 0xaa,
		0xaf, 0xfa, 0xff, 0x03, 0x44, 0x4f, 0xf4, 0x44,
		0x0b, 0x0f, 0x82, 0x00, 0x67, 0xff, 0xff, 0xaa,
		0xaa, 0xaf, 0xff, 0xff, 0x0f, 0xfd, 0xff, 0x03,
		0xf4, 0x4f, 0xf4, 0x44, 0x0b, 0x1d, 0x83, 0x00,
		0xfe, 0xff, 0xfa, 0xaa, 0xfa, 0xaf, 0xff, 0xff,
		0x00, 0xfd, 0xff, 0xfe, 0x44, 0x00, 0x4f, 0x04,
		0x7f, 0x83, 0xc0, 0xfc, 0xfa, 0xfe, 0xaa, 0x04,
		0xaf, 0xff, 0xff, 0x00, 0x00, 0xfe, 0xff, 0xfe,
		0x44, 0x00, 0xff, 0x03, 0xff, 0x80, 0xe0, 0xde,
		0xfd, 0xaa, 0x00, 0xaf, 0xfe, 0xff, 0x07, 0x00,
		0x0f, 0xff, 0xff, 0x44, 0xf4, 0x44, 0x4f, 0x03,
		0xff, 0x80, 0xe0, 0xce, 0xfd, 0xaa, 0x00, 0xaf,
		0xfe, 0xff, 0x07, 0x00, 0x0f, 0xff, 0xff, 0x44,
		0xff, 0x44, 0x4f, 0x0f, 0xfb, 0x83, 0xc1, 0xfe,
		0xaa, 0xaa, 0xaf, 0xaa, 0xaf, 0xff, 0xff, 0x00,
		0x00, 0xff, 0xff, 0xf4, 0xfe, 0x44, 0x00, 0x4f,
		0x0c, 0x73, 0x83, 0x80, 0xfc, 0xfa, 0xaa, 0xff,
		0xaa, 0xaf, 0xff, 0xff, 0x00, 0x0f, 0xfe, 0xff,
		0xfe, 0x44, 0x00, 0xff, 0x0b, 0xf3, 0x82, 0x00,
		0x70, 0xaa, 0xaa, 0xff, 0xaa, 0xaf, 0xff, 0xff,
		0x0f, 0xfd, 0xff, 0x03, 0xf4, 0x44, 0xff, 0xff,

		GSEndString()
	}
}

@endif	/* not b/w */


@ifdef BLACKWHITE

@visMoniker ABSMonikerAB = {
	size = standard;
	style = icon;
	color = gray1;
	aspectRatio = normal;
	cachedSize = 32, 12;
	gstring {
		GSFillBitmapAtCP (54),
		Bitmap (32,12,BMC_UNCOMPACTED,(BMF_MONO)),
		0x03, 0x80, 0x00, 0x7c, 0x03, 0x80, 0x00, 0xfe, 
		0x07, 0x80, 0x00, 0xff, 0x07, 0x80, 0x00, 0xe7, 
		0x0f, 0x82, 0x00, 0x67, 0x1d, 0x83, 0x00, 0xfe, 
		0x7f, 0x83, 0xc0, 0xfc, 0xff, 0x80, 0xe0, 0xde, 
		0xff, 0x80, 0xe0, 0xce, 0xfb, 0x83, 0xc1, 0xfe, 
		0x73, 0x83, 0x80, 0xfc, 0xf3, 0x82, 0x00, 0x70, 
		
		GSEndString()
	}
}
@endif  /* B/W */

@ifndef BLACKWHITE

@ifdef GERMAN

// farb. deutscher Moniker "von  A"
@visMoniker ABSMonikerA = {
	size = standard;
	style = icon;
	color = color4;
	aspectRatio = normal;
	cachedSize = 64, 17;
	gstring {
		GSDrawBitmapAtCP (382),
		Bitmap (64,17,BMC_PACKBITS,(BMT_MASK | BMF_4BIT)),
		0xf9, 0x00, 0xe1, 0xff, 0xfa, 0x00, 0x00, 0x70,
		0xe5, 0xff, 0x03, 0xfa, 0xaa, 0xff, 0xff, 0xfa,
		0x00, 0x00, 0x78, 0xe5, 0xff, 0x03, 0xfa, 0xaa,
		0xaf, 0xff, 0xfa, 0x00, 0x00, 0xf8, 0xe5, 0xff,
		0x03, 0xaa, 0xaa, 0xaf, 0xff, 0xfb, 0x00, 0x01,
		0x01, 0xf8, 0xe6, 0xff, 0x04, 0xfa, 0xaa, 0xaa,
		0xaf, 0xff, 0xfb, 0x00, 0x01, 0x01, 0xf8, 0xe6,
		0xff, 0x04, 0xfa, 0xaa, 0xaa, 0xaf, 0xff, 0x14,
		0x63, 0x1e, 0x1b, 0x80, 0x00, 0x00, 0x03, 0xf8,
		0xf0, 0x0f, 0xff, 0x00, 0xff, 0xf0, 0x00, 0x0f,
		0xff, 0xf0, 0x0f, 0x00, 0x0f, 0xf3, 0xff, 0xfe,
		0xaa, 0x01, 0xaf, 0xff, 0x0c, 0x63, 0x3f, 0x1f,
		0xc0, 0x00, 0x00, 0x03, 0xb8, 0xf0, 0x0f, 0xff,
		0x00, 0xff, 0xfe, 0x00, 0x01, 0xff, 0xf0, 0xfe,
		0x00, 0xf3, 0xff, 0x04, 0xaa, 0xaf, 0xaa, 0xaf,
		0xff, 0x15, 0x66, 0x73, 0x9c, 0xe0, 0x00, 0x00,
		0x03, 0xb8, 0xf0, 0x0f, 0xf0, 0x0f, 0xf0, 0x00, 
		0xff, 0x00, 0x0f, 0xf0, 0x00, 0xff, 0x00, 0x0f, 
		0xf4, 0xff, 0x04, 0xaa, 0xaf, 0xaa, 0xaf, 0xff, 
		0x15, 0x66, 0x61, 0x98, 0x60, 0x00, 0x00, 0x0f, 
		0xf8, 0xf0, 0x0f, 0xf0, 0x0f, 0xf0, 0x0f, 0xff, 
		0xf0, 0x0f, 0xf0, 0x0f, 0xff, 0xf0, 0x0f, 0xf5, 
		0xff, 0xfd, 0xaa, 0x01, 0xaf, 0xff, 0x15, 0x6c, 
		0x61, 0x98, 0x60, 0x00, 0x00, 0x1f, 0xf8, 0xf0, 
		0x0f, 0x00, 0xff, 0xf0, 0x0f, 0xff, 0xf0, 0x0f, 
		0xf0, 0x0f, 0xff, 0xf0, 0x0f, 0xf6, 0xff, 0x00, 
		0xfa, 0xfd, 0xaa, 0x01, 0xaf, 0xff, 0x15, 0x6c, 
		0xc1, 0x98, 0x60, 0x00, 0x00, 0x1f, 0xf8, 0xf0, 
		0x0f, 0x00, 0xff, 0x00, 0xff, 0xff, 0xf0, 0x0f, 
		0xf0, 0x0f, 0xff, 0xf0, 0x0f, 0xf6, 0xff, 0x00, 
		0xfa, 0xfd, 0xaa, 0x01, 0xaf, 0xff, 0x14, 0x78, 
		0xc3, 0xb0, 0xc0, 0x00, 0x00, 0x0e, 0x78, 0xf0, 
		0x00, 0x0f, 0xff, 0x00, 0xff, 0xff, 0x00, 0x0f, 
		0x00, 0xff, 0xff, 0x00, 0xf4, 0xff, 0x05, 0xaa, 
		0xaf, 0xfa, 0xaa, 0xaf, 0xff, 0x14, 0x78, 0xe7,
		0x30, 0xc0, 0x00, 0x00, 0x1e, 0x78, 0xf0, 0x00,
		0x0f, 0xff, 0x00, 0x0f, 0xf0, 0x00, 0xff, 0x00,
		0xff, 0xff, 0x00, 0xf5, 0xff, 0x06, 0xfa, 0xaa,
		0xaf, 0xfa, 0xaa, 0xaf, 0xff, 0x14, 0x70, 0x7e,
		0x30, 0xc0, 0x00, 0x00, 0x3c, 0x78, 0xf0, 0x00,
		0xff, 0xff, 0xf0, 0x00, 0x00, 0x0f, 0xff, 0x00,
		0xff, 0xff, 0x00, 0xf5, 0xff, 0x06, 0xaa, 0xaa,
		0xff, 0xfa, 0xaa, 0xaf, 0xff, 0x09, 0x60, 0x3c,
		0x30, 0xc0, 0x00, 0x00, 0x0c, 0x78, 0xf0, 0x0f,
		0xfe, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0x00,
		0xff, 0xff, 0x00, 0xf4, 0xff, 0x05, 0xaa, 0xff,
		0xfa, 0xaa, 0xaf, 0xff, 0xf9, 0x00, 0xe1, 0xff,

		GSEndString()
	}
}
@endif	/* german */

@ifndef GERMAN

// color. engl. Moniker "from  A"
@visMoniker ABSMonikerA = {
	size = standard;
	style = icon;
	color = color4;
	aspectRatio = normal;
	cachedSize = 64, 17;
	gstring {
		GSDrawBitmapAtCP (461),
		Bitmap (64,17,BMC_PACKBITS,(BMT_MASK|BMF_4BIT)),
		0xf9, 0x00, 0xe1, 0xff, 
		0x01, 0x03, 0x80, 0xfc, 0x00, 0x00, 0xf0, 0xfe, 
		0xff, 
		0x01, 0x00, 0x0f, 0xea, 0xff, 0x03, 0xaa, 0xaa, 
		0xff, 
		0xff, 
		0x01, 0x07, 0x80, 0xfc, 0x00, 0x05, 0xf8, 0xff, 
		0xff, 
		0xf0, 0x00, 0x0f, 0xea, 0xff, 0x03, 0xaa, 0xaa, 
		0xaf, 
		0xff, 
		0x00, 0x06, 0xfc, 0x00, 0x05, 0x01, 0xf8, 0xff, 
		0xff, 
		0xf0, 0x0f, 0xea, 0xff, 0x04, 0xfa, 0xaa, 0xaa, 
		0xaf, 
		0xff, 
		0x00, 0x0c, 0xfc, 0x00, 0x04, 0x01, 0xf8, 0xff, 
		0xff, 
		0x00, 0xe9, 0xff, 0x04, 0xfa, 0xaa, 0xaa, 0xaf, 
		0xff, 
		
		0x00, 0x0c, 0xfc, 0x00, 0x04, 0x01, 0xf8, 0xff, 
		0xff, 
		0x00, 0xe9, 0xff, 0x04, 0xfa, 0xaa, 0xaa, 0xaf, 
		0xff, 
		
		0x18, 0x3e, 0x6c, 0xf0, 0x6c, 0xc0, 0x00, 0x03, 
		0xb8, 
		0xff, 0x00, 0x00, 0x0f, 0xf0, 0x0f, 0x00, 0xff, 
		0x00, 
		0x00, 0xff, 0xff, 0xf0, 0x0f, 0x00, 0xff, 0x00, 
		0xf7, 
		0xff, 0x04, 0xaa, 0xaf, 0xaa, 0xaf, 0xff, 
		0x13, 0x3e, 0x7d, 0xf8, 0xff, 0xe0, 0x00, 0x03, 
		0x38, 
		0xff, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0xf0, 
		0x00, 
		0x00, 0x0f, 0xff, 0xfc, 0x00, 0x00, 0x0f, 0xf8, 
		0xff, 
		0x04, 0xaa, 0xff, 0xaa, 0xaf, 0xff, 
		0x19, 0x18, 0xe3, 0x9c, 0xef, 0x70, 0x00, 0x07, 
		0x38, 
		0xff, 0xf0, 0x0f, 0xff, 0x00, 0x0f, 0xff, 0x00, 
		0x0f, 
		0xf0, 0x00, 0xff, 0x00, 0x0f, 0x00, 0x00, 0xf0, 
		0x00, 
		0xf9, 0xff, 0x05, 0xfa, 0xaa, 0xff, 0xaa, 0xaf, 
		0xff, 
		
		0x19, 0x18, 0xc3, 0x0c, 0xc6, 0x30, 0x00, 0x1f, 
		0xf8, 
		0xff, 0xf0, 0x0f, 0xff, 0x00, 0xff, 0xff, 0x00, 
		0xff, 
		0xff, 0x00, 0xff, 0x00, 0xff, 0xf0, 0x0f, 0xff, 
		0x00, 
		0xfa, 0xff, 0x00, 0xfa, 0xfd, 0xaa, 0x01, 0xaf, 
		0xff, 
		
		0x19, 0x18, 0xc3, 0x0c, 0xc6, 0x30, 0x00, 0x3f, 
		0xf8, 
		0xff, 0xf0, 0x0f, 0xff, 0x00, 0xff, 0xff, 0x00, 
		0xff, 
		0xff, 0x00, 0xff, 0x00, 0xff, 0xf0, 0x0f, 0xff, 
		0x00, 
		0xfa, 0xff, 0xfc, 0xaa, 0x01, 0xaf, 0xff, 
		0x19, 0x18, 0xc6, 0x0c, 0xc6, 0x30, 0x00, 0x3f, 
		0xf8, 
		0xff, 0xf0, 0x0f, 0xff, 0x00, 0xff, 0xf0, 0x0f, 
		0xff, 
		0xff, 0x00, 0xff, 0x00, 0xff, 0xf0, 0x0f, 0xff, 
		0x00, 
		0xfa, 0xff, 0xfc, 0xaa, 0x01, 0xaf, 0xff, 
		0x19, 0x31, 0x86, 0x1d, 0x8c, 0x60, 0x00, 0x1f, 
		0xf8, 
		0xff, 0x00, 0xff, 0xf0, 0x0f, 0xff, 0xf0, 0x0f, 
		0xff, 
		0xf0, 0x00, 0xf0, 0x0f, 0xff, 0x00, 0xff, 0xf0, 
		0x0f, 
		0xfa, 0xff, 0x00, 0xfa, 0xfd, 0xaa, 0x01, 0xaf, 
		0xff, 
		
		0x19, 0x31, 0x87, 0x39, 0x8c, 0x60, 0x00, 0x1e, 
		0x78, 
		0xff, 0x00, 0xff, 0xf0, 0x0f, 0xff, 0xf0, 0x00, 
		0xff, 
		0x00, 0x0f, 0xf0, 0x0f, 0xff, 0x00, 0xff, 0xf0, 
		0x0f, 
		0xfa, 0xff, 0x06, 0xfa, 0xaa, 0xaf, 0xfa, 0xaa, 
		0xaf, 
		0xff, 
		0x0e, 0x31, 0x83, 0xf1, 0x8c, 0x60, 0x00, 0x3c, 
		0x78, 
		0xff, 0x00, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xfe, 
		0x00, 
		0x07, 0xff, 0xf0, 0x0f, 0xff, 0x00, 0xff, 0xf0, 
		0x0f, 
		0xfa, 0xff, 0x06, 0xaa, 0xaa, 0xff, 0xfa, 0xaa, 
		0xaf, 
		0xff, 
		0x19, 0x31, 0x81, 0xe1, 0x8c, 0x60, 0x00, 0x3c, 
		0x78, 
		0xff, 0x00, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xf0, 
		0x00, 
		0x0f, 0xff, 0xf0, 0x0f, 0xff, 0x00, 0xff, 0xf0, 
		0x0f, 
		0xfa, 0xff, 0x06, 0xaa, 0xaa, 0xff, 0xfa, 0xaa, 
		0xaf, 
		0xff, 
		0xf9, 0x00, 0xe1, 0xff, 
		GSEndString()
	}
}

@endif	/* not german */

@endif	/* not b/w */

@ifdef BLACKWHITE

@ifdef GERMAN

// s/w deutscher Moniker "von A"
@visMoniker ABSMonikerA = {
	size = standard;
	style = icon;
	color = gray1;
	aspectRatio = normal;
	cachedSize = 64, 17;
	gstring {
		GSFillBitmapAtCP (142),
		Bitmap (64,17,BMC_UNCOMPACTED,(BMF_MONO)),
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 
		0x63, 0x1e, 0x1b, 0x80, 0x00, 0x00, 0x03, 0xf8, 
		0x63, 0x3f, 0x1f, 0xc0, 0x00, 0x00, 0x03, 0xb8, 
		0x66, 0x73, 0x9c, 0xe0, 0x00, 0x00, 0x03, 0xb8, 
		0x66, 0x61, 0x98, 0x60, 0x00, 0x00, 0x0f, 0xf8, 
		0x6c, 0x61, 0x98, 0x60, 0x00, 0x00, 0x1f, 0xf8, 
		0x6c, 0xc1, 0x98, 0x60, 0x00, 0x00, 0x1f, 0xf8, 
		0x78, 0xc3, 0xb0, 0xc0, 0x00, 0x00, 0x0e, 0x78, 
		0x78, 0xe7, 0x30, 0xc0, 0x00, 0x00, 0x1e, 0x78, 
		0x70, 0x7e, 0x30, 0xc0, 0x00, 0x00, 0x3c, 0x78, 
		0x60, 0x3c, 0x30, 0xc0, 0x00, 0x00, 0x0c, 0x78, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		
		GSEndString()
	}
}

@endif	/* german */

@ifndef GERMAN

// b/w english Moniker "from A"
@visMoniker ABSMonikerA = {
	size = standard;
	style = icon;
	color = gray1;
	aspectRatio = normal;
	cachedSize = 64, 17;
	gstring {
		GSFillBitmapAtCP (142),
		Bitmap (64,17,BMC_UNCOMPACTED,BMF_MONO),
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 
		0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 
		0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 
		0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 
		0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 
		0x3e, 0x6c, 0xf0, 0x6c, 0xc0, 0x00, 0x03, 0xb8, 
		0x3e, 0x7d, 0xf8, 0xff, 0xe0, 0x00, 0x03, 0x38, 
		0x18, 0xe3, 0x9c, 0xef, 0x70, 0x00, 0x07, 0x38, 
		0x18, 0xc3, 0x0c, 0xc6, 0x30, 0x00, 0x1f, 0xf8, 
		0x18, 0xc3, 0x0c, 0xc6, 0x30, 0x00, 0x3f, 0xf8, 
		0x18, 0xc6, 0x0c, 0xc6, 0x30, 0x00, 0x3f, 0xf8, 
		0x31, 0x86, 0x1d, 0x8c, 0x60, 0x00, 0x1f, 0xf8, 
		0x31, 0x87, 0x39, 0x8c, 0x60, 0x00, 0x1e, 0x78, 
		0x31, 0x83, 0xf1, 0x8c, 0x60, 0x00, 0x3c, 0x78, 
		0x31, 0x81, 0xe1, 0x8c, 0x60, 0x00, 0x3c, 0x78, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		GSEndString()
	}
}
@endif	/* not german */

@endif	/* b/w */

@ifndef BLACKWHITE

@ifdef GERMAN

// farbiger deutscher Moniker "nach B"
@visMoniker ABSMonikerB = {
	size = standard;
	style = icon;
	color = color4;
	aspectRatio = normal;
	cachedSize = 64, 17;
	gstring {
		GSDrawBitmapAtCP (464),
		Bitmap (64,17,BMC_PACKBITS,(BMT_MASK | BMF_4BIT)),
		0xf9, 0x00, 0xe1, 0xff, 0xfb, 0x00, 0x01, 0x01,
		0xf8, 0xe6, 0xff, 0x04, 0xf4, 0x44, 0x44, 0x4f,
		0xff, 0xfb, 0x00, 0x01, 0x07, 0xfc, 0xe7, 0xff,
		0x00, 0xf4, 0xfd, 0x44, 0x00, 0xff, 0xfd, 0x00,
		0x03, 0xc0, 0x00, 0x07, 0xfc, 0xf1, 0xff, 0x00,
		0x00, 0xf8, 0xff, 0x00, 0xf4, 0xfd, 0x44, 0x00, 
		0xff, 0xfd, 0x00, 0x03, 0xc0, 0x00, 0x07, 0x1e, 
		0xf1, 0xff, 0x00, 0x00, 0xf8, 0xff, 0x05, 0xf4, 
		0x44, 0xff, 0xf4, 0x44, 0x4f, 0xfd, 0x00, 0x03, 
		0xc0, 0x00, 0x07, 0x9e, 0xf1, 0xff, 0x00, 0x00, 
		0xf8, 0xff, 0x05, 0xf4, 0x44, 0x4f, 0xf4, 0x44, 
		0x4f, 0x0b, 0x37, 0x01, 0xe0, 0xf0, 0xd8, 0x00, 
		0x03, 0x9e, 0xff, 0x00, 0xf0, 0x00, 0xfe, 0xff, 
		0x0b, 0xf0, 0x00, 0x0f, 0xff, 0xff, 0x00, 0x00, 
		0xff, 0xff, 0x00, 0xf0, 0x0f, 0xf9, 0xff, 0x04, 
		0x44, 0x4f, 0xf4, 0x44, 0x4f, 0x08, 0x3f, 0x87, 
		0xf1, 0xf9, 0xfc, 0x00, 0x03, 0x9e, 0xff, 0xfe, 
		0x00, 0x02, 0x0f, 0xff, 0xf0, 0xfe, 0x00, 0x05, 
		0xff, 0xf0, 0x00, 0x00, 0x0f, 0xf0, 0xfe, 0x00, 
		0xf9, 0xff, 0x04, 0x44, 0x4f, 0xf4, 0x44, 0x4f, 
		0x1b, 0x39, 0xce, 0x33, 0x9d, 0xce, 0x00, 0x07, 
		0xfe, 0xff, 0x00, 0x0f, 0xf0, 0x00, 0xff, 0x00, 
		0x0f, 0xff, 0x00, 0xff, 0x00, 0x0f, 0xf0, 0x00, 
		0xf0, 0x00, 0xff, 0x00, 0x0f, 0xfb, 0xff, 0x00, 
		0xf4, 0xfd, 0x44, 0x00, 0x4f, 0x1b, 0x30, 0xcc, 
		0x33, 0x0d, 0x86, 0x00, 0x07, 0xf8, 0xff, 0x00, 
		0xff, 0xff, 0x00, 0xff, 0x00, 0xff, 0xff, 0x00, 
		0xff, 0x00, 0xff, 0xff, 0x00, 0xf0, 0x0f, 0xff, 
		0xf0, 0x0f, 0xfb, 0xff, 0x00, 0xf4, 0xfe, 0x44, 
		0x01, 0x4f, 0xff, 0x13, 0x30, 0xc1, 0xf3, 0x01, 
		0x86, 0x00, 0x07, 0x7c, 0xff, 0x00, 0xff, 0xff, 
		0x00, 0xff, 0xff, 0xf0, 0x00, 0x00, 0xff, 0x00, 
		0xfe, 0xff, 0x04, 0xf0, 0x0f, 0xff, 0xf0, 0x0f, 
		0xfb, 0xff, 0x05, 0xf4, 0x44, 0xf4, 0x44, 0x44, 
		0xff, 0x13, 0x30, 0xc7, 0x36, 0x01, 0x86, 0x00,
		0x07, 0x3c, 0xff, 0x00, 0xff, 0xff, 0x00, 0xff, 
		0xf0, 0x00, 0xff, 0x00, 0xf0, 0x0f, 0xfe, 0xff, 
		0x04, 0xf0, 0x0f, 0xff, 0xf0, 0x0f, 0xfb, 0xff, 
		0x05, 0xf4, 0x44, 0xff, 0x44, 0x44, 0xff, 0x1a, 
		0x61, 0x8c, 0x66, 0x1b, 0x0c, 0x00, 0x0f, 0x3c, 
		0xf0, 0x0f, 0xff, 0xf0, 0x0f, 0xff, 0x00, 0xff, 
		0xf0, 0x0f, 0xf0, 0x0f, 0xff, 0xf0, 0x0f, 0x00, 
		0xff, 0xff, 0x00, 0xfa, 0xff, 0x05, 0x44, 0x44, 
		0xff, 0x44, 0x44, 0xff, 0x1a, 0x61, 0x98, 0x67, 
		0x3b, 0x0c, 0x00, 0x0f, 0xf8, 0xf0, 0x0f, 0xff, 
		0xf0, 0x0f, 0xf0, 0x0f, 0xff, 0xf0, 0x0f, 0xf0, 
		0x00, 0xff, 0x00, 0x0f, 0x00, 0xff, 0xff, 0x00, 
		0xfa, 0xff, 0xfd, 0x44, 0x01, 0x4f, 0xff, 0x0d, 
		0x61, 0x9f, 0xf3, 0xf3, 0x0c, 0x00, 0x07, 0xf0, 
		0xf0, 0x0f, 0xff, 0xf0, 0x0f, 0xf0, 0xfd, 0x00, 
		0x00, 0xff, 0xfe, 0x00, 0x04, 0xff, 0x00, 0xff, 
		0xff, 0x00, 0xfa, 0xff, 0x00, 0xf4, 0xfe, 0x44,
		0x01, 0xff, 0xff, 0x1a, 0x61, 0x8f, 0x31, 0xe3,
		0x0c, 0x00, 0x03, 0xc0, 0xf0, 0x0f, 0xff, 0xf0,
		0x0f, 0xff, 0x00, 0x00, 0xff, 0x00, 0xff, 0xf0,
		0x00, 0x0f, 0xff, 0x00, 0xff, 0xff, 0x00, 0xf9,
		0xff, 0x01, 0x44, 0x44, 0xfe, 0xff, 0xf9, 0x00,
		0xe1, 0xff,
		GSEndString()
	}
}

@endif	/* german */

@ifndef GERMAN

// color. engl. Moniker "to B"
@visMoniker ABSMonikerB = {
	size = standard;
	style = icon;
	color = color4;
	aspectRatio = normal;
	cachedSize = 64, 18;
	gstring {
		GSDrawBitmapAtCP (357),
		Bitmap (64,18,BMC_PACKBITS,(BMT_MASK|BMF_4BIT)),
		0xf9, 0x00, 0xe1, 0xff, 
		0xfb, 0x00, 0x01, 0x0f, 0xc0, 0xe7, 0xff, 0xfe, 
		0x44, 
		0xfe, 0xff, 
		0xfb, 0x00, 0x01, 0x1f, 0xe0, 0xe8, 0xff, 0x00, 
		0xf4, 
		0xfe, 0x44, 0x02, 0x4f, 0xff, 0xff, 
		0x00, 0x0c, 0xfc, 0x00, 0x04, 0x3f, 0xf0, 0xff, 
		0xff, 
		0x00, 0xeb, 0xff, 0xfc, 0x44, 0x01, 0xff, 0xff, 
		
		0x00, 0x0c, 0xfc, 0x00, 0x04, 0x3f, 0xf8, 0xff, 
		0xff, 
		0x00, 0xeb, 0xff, 0xfc, 0x44, 0x01, 0x4f, 0xff, 
		
		0x00, 0x0c, 0xfc, 0x00, 0x04, 0x3c, 0x78, 0xff, 
		0xff, 
		0x00, 0xeb, 0xff, 0x06, 0x44, 0x44, 0xff, 0xf4, 
		0x44, 
		0x4f, 0xff, 
		0x00, 0x0c, 0xfc, 0x00, 0x04, 0x1e, 0x78, 0xff, 
		0xff, 
		0x00, 0xeb, 0xff, 0x06, 0xf4, 0x44, 0x4f, 0xf4, 
		0x44, 
		0x4f, 0xff, 
		0x01, 0x3e, 0x3c, 0xfd, 0x00, 0x08, 0x1e, 0xf0, 
		0xff, 
		0x00, 0x00, 0x0f, 0xff, 0x00, 0x00, 0xef, 0xff, 
		0x06, 
		0xf4, 0x44, 0x4f, 0x44, 0x44, 0xff, 0xff, 
		0x01, 0x3e, 0x7e, 0xfd, 0x00, 0x09, 0x3f, 0xe0, 
		0xff, 
		0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x0f, 0xf0, 
		0xff, 
		0xfd, 0x44, 0x02, 0x4f, 0xff, 0xff, 
		0x01, 0x18, 0xe7, 0xfd, 0x00, 0x09, 0x3f, 0xc0, 
		0xff, 
		0xf0, 0x0f, 0xff, 0x00, 0x0f, 0xf0, 0x00, 0xf0, 
		0xff, 
		0xfd, 0x44, 0xfe, 0xff, 
		0x01, 0x18, 0xc3, 0xfd, 0x00, 0x09, 0x3d, 0xe0, 
		0xff, 
		0xf0, 0x0f, 0xff, 0x00, 0xff, 0xff, 0x00, 0xf0, 
		0xff, 
		0x06, 0x44, 0x44, 0xf4, 0x44, 0x4f, 0xff, 0xff, 
		
		0x01, 0x18, 0xc3, 0xfd, 0x00, 0x09, 0x39, 0xe0, 
		0xff, 
		0xf0, 0x0f, 0xff, 0x00, 0xff, 0xff, 0x00, 0xf0, 
		0xff, 
		0x06, 0x44, 0x4f, 0xf4, 0x44, 0x4f, 0xff, 0xff, 
		
		0x01, 0x19, 0x83, 0xfd, 0x00, 0x09, 0x79, 0xe0, 
		0xff, 
		0xf0, 0x0f, 0xf0, 0x0f, 0xff, 0xff, 0x00, 0xf1, 
		0xff, 
		0x07, 0xf4, 0x44, 0x4f, 0xf4, 0x44, 0x4f, 0xff, 
		0xff, 
		
		0x01, 0x31, 0x87, 0xfd, 0x00, 0x09, 0x7f, 0xe0, 
		0xff, 
		0x00, 0xff, 0xf0, 0x0f, 0xff, 0xf0, 0x00, 0xf1, 
		0xff, 
		0x00, 0xf4, 0xfd, 0x44, 0x02, 0x4f, 0xff, 0xff, 
		
		0x01, 0x31, 0xce, 0xfd, 0x00, 0x09, 0x3f, 0xc0, 
		0xff, 
		0x00, 0xff, 0xf0, 0x00, 0xff, 0x00, 0x0f, 0xf0, 
		0xff, 
		0xfd, 0x44, 0xfe, 0xff, 
		0x01, 0x38, 0xfc, 0xfd, 0x00, 0x05, 0x3f, 0x80, 
		0xff, 
		0x00, 0x0f, 0xff, 0xfe, 0x00, 0xef, 0xff, 0xfe, 
		0x44, 
		0x00, 0x4f, 0xfe, 0xff, 
		0x01, 0x18, 0x38, 0xfd, 0x00, 0x08, 0x1f, 0x00, 
		0xff, 
		0xf0, 0x0f, 0xff, 0xff, 0x00, 0x0f, 0xef, 0xff, 
		0x02, 
		0xf4, 0x44, 0x44, 0xfd, 0xff, 
		0xf9, 0x00, 0xe1, 0xff, 
		GSEndString()
	}
}

@endif  /* not german */

@endif	/* not b/w */

@ifdef BLACKWHITE

@ifdef GERMAN

// s/w deutscher Moniker "nach B"
@visMoniker ABSMonikerB = {
	size = standard;
	style = icon;
	color = gray1;
	aspectRatio = normal;
	cachedSize = 64, 17;
	gstring {
		GSFillBitmapAtCP (142),
		Bitmap (64,17,BMC_UNCOMPACTED,(BMF_MONO)),
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xfc,
		0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x07, 0xfc,
		0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x07, 0x1e,
		0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x07, 0x9e,
		0x37, 0x01, 0xe0, 0xf0, 0xd8, 0x00, 0x03, 0x9e,
		0x3f, 0x87, 0xf1, 0xf9, 0xfc, 0x00, 0x03, 0x9e,
		0x39, 0xce, 0x33, 0x9d, 0xce, 0x00, 0x07, 0xfe,
		0x30, 0xcc, 0x33, 0x0d, 0x86, 0x00, 0x07, 0xf8, 
		0x30, 0xc1, 0xf3, 0x01, 0x86, 0x00, 0x07, 0x7c, 
		0x30, 0xc7, 0x36, 0x01, 0x86, 0x00, 0x07, 0x3c, 
		0x61, 0x8c, 0x66, 0x1b, 0x0c, 0x00, 0x0f, 0x3c, 
		0x61, 0x98, 0x67, 0x3b, 0x0c, 0x00, 0x0f, 0xf8, 
		0x61, 0x9f, 0xf3, 0xf3, 0x0c, 0x00, 0x07, 0xf0, 
		0x61, 0x8f, 0x31, 0xe3, 0x0c, 0x00, 0x03, 0xc0, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		
		GSEndString()
	}
}

@endif	/* german */

@ifndef GERMAN

// b/w english Moniker "to  B"
@visMoniker ABSMonikerB = {
	size = standard;
	style = icon;
	color = gray1;
	aspectRatio = normal;
	cachedSize = 64, 18;
	gstring {
		GSFillBitmapAtCP (150),
		Bitmap (64,18,BMC_UNCOMPACTED,BMF_MONO),
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xe0, 
		0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf0, 
		0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf8, 
		0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x78, 
		0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x78, 
		0x3e, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x1e, 0xf0, 
		0x3e, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xe0, 
		0x18, 0xe7, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xc0, 
		0x18, 0xc3, 0x00, 0x00, 0x00, 0x00, 0x3d, 0xe0, 
		0x18, 0xc3, 0x00, 0x00, 0x00, 0x00, 0x39, 0xe0, 
		0x19, 0x83, 0x00, 0x00, 0x00, 0x00, 0x79, 0xe0, 
		0x31, 0x87, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xe0, 
		0x31, 0xce, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xc0, 
		0x38, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 
		0x18, 0x38, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		GSEndString()
	}
}

@endif	/* not german */

@endif  /* b/w */


