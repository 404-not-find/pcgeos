/***********************************************************************
 *
 *
 * PROJECT:	Test Applications
 * MODULE:	Color Checker
 * FILE:		chkcol.goc
 * AUTHOR:	jfh  2/02
 *
 * DESCRIPTION:
 *
 *
 *
 *
 *
 *
 *
 ***********************************************************************/

/*
 ***************************************************************************
 *		Include files
 ***************************************************************************
 */

@include <stdapp.goh>
#include <ansi/string.h>

/*
 ***************************************************************************
 *		Class & Message Definitions
 ***************************************************************************
 */


@class	TestProcessClass, GenProcessClass ;
	@message void MSG_TEST_GET_COLOR();
	@message void MSG_TEST_GET_SIZE();

@endc

@classdecl	TestProcessClass, neverSaved ;


/*
 ***************************************************************************
 *		UI Objects
 ***************************************************************************
 */

@start	AppResource;

@object GenApplicationClass TestApp = {
	 GI_visMoniker = list { @TestTextMoniker }
    GI_comp = @TestPrimary;
    gcnList(MANUFACTURER_ID_GEOWORKS,GAGCNLT_WINDOWS) = @TestPrimary;
}

@visMoniker TestTextMoniker = "Color Checker";

@end	AppResource

@start	Interface;

@object GenPrimaryClass TestPrimary  = {
	 GI_comp = @ColorCheckTrigger, @ColorReportWindow,
				  @SizeCheckTrigger, @SizeReportWindow;
    HINT_SIZE_WINDOW_AS_DESIRED;
}

@object GenTriggerClass ColorCheckTrigger = {
	 GI_visMoniker = "Check Color";
	 GTI_destination = process;
	 GTI_actionMsg = MSG_TEST_GET_COLOR;
}

@object GenTextClass ColorReportWindow = {
	 GI_visMoniker = "Color Depth:";
	 HINT_TEXT_WHITE_WASH_COLOR;
}

@object GenTriggerClass SizeCheckTrigger = {
	 GI_visMoniker = "Check Size";
	 GTI_destination = process;
	 GTI_actionMsg = MSG_TEST_GET_SIZE;
}

@object GenTextClass SizeReportWindow = {
	 GI_visMoniker = "Size:";
	 HINT_TEXT_WHITE_WASH_COLOR;
}

@end Interface

/*
 ***************************************************************************
 *		Code for TestProcessClass
 ***************************************************************************
 */

  /***********************************************************************
 *
 * MESSAGE:	MSG_TEST_GET_COLOR for TestProcessClass
 *
 * DESCRIPTION:
 *
 *
 ***********************************************************************/
@method TestProcessClass, MSG_TEST_GET_COLOR
{
 DisplayScheme		displayScheme;
 byte			displayClass;
 char		buffer[5];


	@call GeodeGetOptrNS(@TestApp)::MSG_GEN_APPLICATION_GET_DISPLAY_SCHEME(&displayScheme);
	displayClass = (displayScheme.DS_displayType & DT_DISP_CLASS);

	if (displayClass != DC_CF_RGB) strcpy(buffer, "Nope");
	else strcpy(buffer, "Cool");

	@call GeodeGetOptrNS(@ColorReportWindow)::MSG_VIS_TEXT_REPLACE_ALL_PTR(buffer, 0);


}

  /***********************************************************************
 *
 * MESSAGE:	MSG_TEST_GET_SIZE for TestProcessClass
 *
 * DESCRIPTION:
 *
 *
 ***********************************************************************/
@method TestProcessClass, MSG_TEST_GET_SIZE
{
 DisplayScheme		displayScheme;
 byte			displaySize;
 char		buffer[15];


	@call GeodeGetOptrNS(@TestApp)::MSG_GEN_APPLICATION_GET_DISPLAY_SCHEME(&displayScheme);
	displaySize = (displayScheme.DS_displayType & DT_DISP_SIZE)
						>> DT_DISP_SIZE_OFFSET;

	if (displaySize == DS_TINY) strcpy(buffer, "Tiny");
	else if (displaySize == DS_STANDARD) strcpy(buffer, "Standard");/*640x480*/
	else if (displaySize == DS_LARGE) strcpy(buffer, "Large");/*800x600*/
	else strcpy(buffer, "Huge");

	@call GeodeGetOptrNS(@SizeReportWindow)::MSG_VIS_TEXT_REPLACE_ALL_PTR(buffer, 0);


}





