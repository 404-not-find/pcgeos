COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1992 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		
FILE:		ms4Interface.def

AUTHOR:		Adam de Boor, Mar 10, 1992

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	Adam	3/10/92		Initial revision


DESCRIPTION:
		
	$Id: ms7Interface.def,v 1.1 97/04/10 11:55:38 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@
;------------------------------------------------------------------------------
;			   SFT DEFINITIONS
;------------------------------------------------------------------------------

SFTMode		record
	SFTM_FCB:1			;1 => FCB entry (not handle entry)
	:8				;
	SFTM_DENY FileExclude:3	;Access types denied for other openers
	:2				;
	SFTM_ACCESS FileAccess:2	;Access type for opener
SFTMode		end

SFTFFlags	record
	SFTFF_REMOTE:1,		;1 if file is remote.
	SFTFF_NO_DATE_UPDATE:1,	;1 if modification date/time shouldn't be
				; updated when the file is closed (DOS4 only)
	SFTFF_NETDEV:1,		;1 if device is remote (always 0 here?)
	SFTFF_REMOVABLE:1,	;1 if containing media may be removed
	:2,
	SFTFF_SHARED:1		;1 if network-visible
	SFTFF_DATESET:1		;1 if modification time up-to-date
	SFTFF_ISDEV:1=0		;
	SFTFF_WRITTEN:1		;1 if written (since last update?)
	SFTFF_DRIVE:6		;drive mask (drives 0 -> 32)
SFTFFlags	end
;
; Flags for devices:
;
SFTDFlags	record
	SFTDF_NETDEV:1,		;1 if device is remote
	SFTDF_REMOVABLE:1	;1 if device removable (?)
	:2,
	SFTDF_SHARED:1		;1 if network-visible
	SFTDF_IOCTL:1		;1 if supports IOCTL
	SFTDF_ISDEV:1=1		;
	SFTF_EOF:1		;1 if at end-of-file
	SFTDF_BIN:1		;1 if in raw mode
	SFTDF_SPECIAL:1		;1 if supports INT 29h
	SFTDF_CLOCK:1		;1 if is clock device
	SFTDF_NULL:1		;1 if is null device
	SFTDF_STDOUT:1		;1 if is current stdout device
	SFTDF_STDIN:1		;1 if is current stdin device
SFTDFlags	end

SFTFlags	union
    SFTF_file	SFTFFlags
    SFTF_dev	SFTDFlags
SFTFlags	end


SFTEntry	struct
    SFTE_refCount	word		; Reference count (# JFT entries
					;  for all MSDOS apps referencing
					;  this entry)
    SFTE_mode		SFTMode		; Mode bits
    SFTE_dirAttrib	FileAttrs	; Attributes from directory
    SFTE_flags		SFTFFlags	; Flags for entry itself (assume file)
    SFTE_DCB		fptr.DeviceControlBlock ; Pointer to DCB (file)
					; or device header (device)

    SFTE_initCluster	word		; Starting cluster
    SFTE_time		FileTime
    SFTE_date		FileDate
    SFTE_size		dword		; Latest size of file

    SFTE_position	dword		; Current seek position
    SFTE_relCluster	word		; # clusters SFTE_position is from
					;  start of file
    SFTE_dirLBN		dword		; Logical block number of start of
					;  containing directory
    SFTE_dirIndex	byte		; Index into containing directory
					;  for file.

    SFTE_name		char	11 dup(?)
    SFTE_unknown	byte	4 dup(?)
    SFTE_machine	word		; Id of owning machine
    SFTE_owner		sptr		; PSP of owning process
    SFTE_status		word		; Status last returned (?)
			byte 6 dup(?)	; unknown
SFTEntry	ends

SFTBlockHeader	struct
    SFTBH_next		fptr.SFTBlockHeader; Pointer to next block
    SFTBH_numEntries	sword		; Number of entries in this block
    SFTBH_entries	label SFTEntry
SFTBlockHeader	ends

SFT_EXTEND_NUM_ENTRIES	equ	8		;8*59 + 6 = 478 = 29.875 paras

;------------------------------------------------------------------------------
;	 Device Control Block
;------------------------------------------------------------------------------

DeviceControlBlock	struct
    DCB_drive		byte		;drive number
    DCB_unit		byte
    DCB_sectorSize	word		;bytes per sector
    DCB_clusterMask	byte		;(= cluster size - 1)
				    	;used to find cluster boundaries
    DCB_clusterShift	byte		;sector->cluster shift mask
				    	;sector>>clusterShift = cluster
    DCB_startFAT	word		;lbn of first FAT
    DCB_numFATs		byte		;number of FATs
    DCB_rootSize	word		;num blocks in root dir
    DCB_startFilesArea	word		;lbn of first data cluster
    DCB_endFilesArea	word		;# of last cluster in data area
    DCB_FATSize		word		;num blocks in FAT
    DCB_startRoot	word		;lbn of root dir
    DCB_deviceHeader	fptr.DeviceHeader
    DCB_media		DosMediaType	;media type
    DCB_mediaChanged	byte		;true if media changed
    DCB_nextDCB		fptr.DeviceControlBlock	;next DCB
    DCB_unknown		dword
DeviceControlBlock	ends

;------------------------------------------------------------------------------
;	Current Directory Structure
;------------------------------------------------------------------------------
CDStatus	record
    CDS_NETWORK:1		; Set if accessed through network
    CDS_LOCAL:1			; Set if device local (both NETWORK & LOCAL
				;  can be set for some devices, if they
				;  don't have a normal device driver...)
    CDS_JOINED:1		; Set if drive is joined to a path on another
    				;  device (using the path on the other device
				;  actually refers to this drive's root).
    CDS_SUBST:1			; Set if device is a substitute for a
    				;  path on another device (using this drive
				;  letter actually refers to the path on
				;  the other device)
    :4
    CDS_DEVICE:1		; Character device (?), not block.
    :7
CDStatus	end

CurrentDirectory	struct
    CD_path		char	67 dup(0)	; Current directory
    CD_status		CDStatus
    CD_DCB		fptr.DeviceControlBlock
    CD_curDir		word			; starting cluster of
						;  current directory
			word 	2 dup(?)
    CD_rootOffset	word			; offset to backslash in
						;  CD_path that represents
						;  the root of the logical
						;  drive. Something other
						;  than 2 only for subst/join
						;  drives.
			byte			; unknown; net-related
    CD_ifsDriver	fptr			; 0 if native
			word			; unknown
CurrentDirectory	ends

DosListOfLists	struct
    DLOL_DCB		fptr.DeviceControlBlock
    DLOL_SFT		fptr.SFTBlockHeader
    DLOL_clock		fptr.DeviceHeader; Device header for CLOCK$
    DLOL_console	fptr.DeviceHeader; Device header for CON
    DLOL_maxSect	word		; Size of largest sector on any drive
    DLOL_cache		fptr		; First cache block
    DLOL_CWDs		fptr		; Current Working Directory info per
					;  drive
    DLOL_FCBs		fptr		; SFT for FCB access
    DLOL_FCBsize	word		; Number of entries in FCB SFT
    DLOL_numDrives	byte		; Number of drives in system
    DLOL_lastDrive	byte		; Last real drive
    DLOL_null		DeviceHeader	; Header for NUL device -- the head
					;  of the driver chain.
DosListOfLists	ends

;--------------------------------------------------------------------------
;			Locations in the DTA (MS-DOS Data transfer area)
;--------------------------------------------------------------------------

FileFindDTA	struct		; Format of DTA during FIND_FIRST/FIND_NEXT
				;  sequence
    ; undocumented fields from Schulman et al p. 515
    FFD_drive		byte			; drive number (1-origin)
    FFD_pattern		char	11 dup(?)	; search template
    FFD_searchAttr	FileAttrs		; search attributes
    FFD_dirIndex	word			; index w/in directory
    FFD_dirLBN		word			; cluster for parent dir
						;  (VARIES between DOS vers.)
    FFD_reserved	byte	4 dup(?)	; misc
    ; documented fields
    FFD_attributes	FileAttrs	; file's attributes
    FFD_modTime		FileTime	; file's modification time
    FFD_modDate		FileDate	; file's modification date
    FFD_fileSize	dword		; file's size in bytes
				    ; file's name and extension in the form
				    ; of a null terminated string
    FFD_name		char	DOS_DOT_FILE_NAME_LENGTH_ZT dup(?)
FileFindDTA	ends

DTA_SIZE	=	64


;---------------------------------------------------------------------------
; Definition of the WIN32_FIND_DATA structure used by DOS 7 long file name
; extension handlers.  The long name extensions use this structure instead of
; the DTA.
;---------------------------------------------------------------------------


MSDOS7_CANT_MAP_ZERO_BYTES		enum	FatalErrors
MSDOS7_PATH_CACHE_CORRUPTED		enum	FatalErrors
MSDOS7_CANT_ALLOC_OPEN_FILE_CACHE_SPACE	enum	FatalErrors
MSDOS7_MISSING_PATH_CACHE_CHUNK_HANDLE	enum	FatalErrors
MSDOS7_CANT_CHANGE_DIR_FOR_RENAME	enum	FatalErrors
MSDOS7_CANT_CHANGE_DIR_WHILE_MAPPING	enum	FatalErrors
MSDOS7_CANT_READ_GEOS_FILE_HEADER	enum	FatalErrors
MSDOS7_CANT_WRITE_GEOS_FILE_HEADER	enum	FatalErrors 
MSDOS7_CANT_OPEN_FILE_FOR_RENAME	enum	FatalErrors 
MSDOS7_UABLE_TO_WRITE_NAME_TO_HEADER	enum	FatalErrors 
MSDOS7_WHERE_IS_FD_FOR_FILE_ENUM_?	enum	FatalErrors
MSDOS7_ERROR_NO_LINK_SUPPORT		enum	FatalErrors
MSDOS7_ERROR_UNSUPPORTED_FUNCTION	enum	FatalErrors
MSDOS7_CANNOT_REOPEN_FILE_AFTER_ATTR_RENAME enum FatalErrors
MSDOS7_CANT_MAP_COMPONENT_FROM_FILE_HEADER	enum FatalErrors
MSDOS7_CANT_CREATE_DIRNAME_FILE		enum	FatalErrors

MSDOS7_OPEN_FAILED			enum	Warnings
MSDOS7_OPEN_SUCCEEDED			enum	Warnings
MSDOS7_FIND_CLOSE_FAILED		enum 	Warnings
MSDOS7_UTIL_OPEN_FAILED			enum	Warnings
MSDOS7_UTIL_OPEN_SUCCEEDED		enum	Warnings
MSDOS7_DOS_HANDLES_DONT_MATCH		enum	Warnings
MSDOS7_RENAME_FROM_HEADER_FAILED	enum	Warnings
MSDOS7_OPENING_FILE_FOR_HEADER		enum 	Warnings
MSDOS7_DEFAULT_DRIVE_NOT_C		enum 	Warnings		

if DBCS_PCGEOS
MSDOS7_MAX_PATH_LENGTH equ	130
else
MSDOS7_MAX_PATH_LENGTH equ	260
endif
MSDOS7_MAX_PATH_SIZE	equ	260

MSDOS7_NATIVE_SIGNATURE	equ "NATIVE"
MSDOS7_GEOS_SIGNATURE_ASCII equ "C745C153"
GFT_VM_ASCII	equ	"03"
GFT_DATA_ASCII	equ	"02"
GFT_EXEC_ASCII	equ	"01"


MSDOS7_FIND_FIRST_ATTRS	equ FILE_ATTR_NORMAL or FILE_ATTR_HIDDEN or FILE_ATTR_SYSTEM or mask FA_SUBDIR

;
; Extended functions make this all pbossible.
;
MSDOS7Functions	etype	word
MSDOS7F_GET_MODIFIED_DATE_AND_TIME	enum 	MSDOS7Functions, 0x5704
MSDOS7F_SET_MODIFIED_DATE_AND_TIME	enum 	MSDOS7Functions, 0x5705
MSDOS7F_GET_CREATION_DATE_AND_TIME	enum 	MSDOS7Functions, 0x5706
MSDOS7F_SET_CREATION_DATE_AND_TIME	enum 	MSDOS7Functions, 0x5707
MSDOS7F_FIND_FIRST			enum	MSDOS7Functions, 0x714E
MSDOS7F_FIND_NEXT			enum	MSDOS7Functions, 0x714F
MSDOS7F_RENAME_FILE			enum	MSDOS7Functions, 0x7156
MSDOS7F_CREATE_OR_OPEN			enum	MSDOS7Functions, 0x716C
MSDOS7F_CREATE_DIR			enum	MSDOS7Functions, 0x7139
MSDOS7F_DELETE_DIR			enum	MSDOS7Functions, 0x713A
MSDOS7F_SET_CURRENT_DIR			enum	MSDOS7Functions, 0x713B
MSDOS7F_DELETE_FILE			enum	MSDOS7Functions, 0x7141
MSDOS7F_GET_SET_ATTRIBUTES		enum	MSDOS7Functions, 0x7143
MSDOS7F_GET_CURRENT_DIR			enum	MSDOS7Functions, 0x7147
MSDOS7F_GET_VOLUME_INFO			enum	MSDOS7Functions, 0x71A0
MSDOS7F_FIND_CLOSE			enum	MSDOS7Functions, 0x71A1
MSDOS7F_GET_FILE_INFO_BY_HANDLE		enum	MSDOS7Functions, 0x71A6


; Actions that accompany MSDOS7F_GET_SET_ATTRIBUTES (pass in bl)
MSDOS7FileAttrAction	etype	byte
	MSD7FAA_RETRIEVE_ATTRS		enum	MSDOS7FileAttrAction
	MSD7FAA_SET_SPECIFIED_ATTRS	enum	MSDOS7FileAttrAction
	MSD7FAA_GET_COMPRESSED_SIZE	enum	MSDOS7FileAttrAction
	MSD7FAA_SET_MOD_DATE_TIME	enum	MSDOS7FileAttrAction
	MSD7FAA_GET_MOD_DATE_TIME	enum	MSDOS7FileAttrAction
	MSD7FAA_SET_ACCESS_DATE_TIME	enum	MSDOS7FileAttrAction
	MSD7FAA_GET_ACCESS_DATE_TIME	enum	MSDOS7FileAttrAction
	MSD7FAA_SET_CREATION_DATE_TIME	enum	MSDOS7FileAttrAction
	MSD7FAA_GET_CREATION_DATE_TIME	enum	MSDOS7FileAttrAction


MSDOS7SearchType	etype	word
	MSD7ST_long	enum	MSDOS7SearchType
	MSD7ST_short	enum	MSDOS7SearchType


;
; Extendo DOS has two choices for time and date format
;
DOS7_DATE_TIME_64_BIT_FORMAT	equ 0
DOS7_DATE_TIME_MS_DOS_FORMAT	equ 1
;
; Action for MSDOS7_CREATE_OR_OPEN
;
MSDOS7CreateOrOpenAction	etype	word
MSDOS7COOA_OPEN		enum	MSDOS7CreateOrOpenAction, 0x1
MSDOS7COOA_TRUNCATE	enum	MSDOS7CreateOrOpenAction, 0x2
MSDOS7COOA_CREATE	enum	MSDOS7CreateOrOpenAction, 0x10


MSD7UPNT_NON_DESTRUCTIVE	equ	0




; Types we need

MSDOS7AliasType		type	DOS_DOT_FILE_NAME_LENGTH_ZT+1 dup (char)
MSDOS7LongNameType	type	FILE_LONGNAME_LENGTH dup (char)
MSDOS7LongNameTypeWithNull	type	FILE_LONGNAME_LENGTH+1 dup (char)
MSDOS7ShortNameType	type	DOS_DOT_FILE_NAME_LENGTH dup (char)
MSDOS7SignatureType	type	(size GFH_signature) * 2 dup (char)
MSDOS7GeosFileNameType	type	(size GeosFileType) * 2 dup (char) 
MSDOS7GeosFileHeaderFlags type	(size GeosFileHeaderFlags) * 2 dup (char) 
MSDOS7ReleaseNumber	type	(size ReleaseNumber) * 2 dup (char) 
MSDOS7ProtocolNumber	type	(size ProtocolNumber) * 2 dup (char) 
MSDOS7GeodeToken	type	(size GeodeToken) * 2 dup (char) 
MSDOS7GeodeAttrs	type	(size GeodeAttrs) * 2 dup (char) 
MSDOS7PathName		type	MSDOS7_MAX_PATH_SIZE dup (char)

HeaderFieldFlags 	record
	:12				
	HFF_USER_NOTES:1		; 1 if user notes are not default
	HFF_NOTICE:1			; 1 if copyright notice is not default
	HFF_PASSWORD:1			; 1 if password is not default
	HFF_DESKTOP:1			; 1 if user notes are not default
HeaderFieldFlags	end



;
; We cache some of the information in the geos file header in the MS7 long
; name.  Everything won't fit, so we leave out GFH_notice, GFH_password,
; GFH_desktop , and GFH_created.  The latter is now returned as part of
; the FindData, the others will only be stored in the GeosFileHeader.
; We also store a short name, which is used to provide a dependable
; 8.3 interface with the outside world, as the DOS7 alias 8.3 name is
; is not predictable.  We also store the GeodeAttrs in the long name.
; These are also stored in the two bytes following the GesoFileHeader in
; the file.
;
; To avoid embedded nulls, hex fields are ascii encoded.  
;
;


MSDOS7GeosName		struct
	MSD7GN_longName		MSDOS7LongNameType
 	MSD7GN_shortName	MSDOS7ShortNameType
 	MSD7GN_signature	MSDOS7SignatureType
	MSD7GN_geodeAttrs	MSDOS7GeodeAttrs
 	MSD7GN_type		MSDOS7GeosFileNameType
 	MSD7GN_flags		MSDOS7GeosFileHeaderFlags
 	MSD7GN_release		MSDOS7ReleaseNumber
 	MSD7GN_protocol		MSDOS7ProtocolNumber
 	MSD7GN_token		MSDOS7GeodeToken
 	MSD7GN_creator		MSDOS7GeodeToken
	MSD7GN_headerFlags	HeaderFieldFlags
 	MSD7GN_null		byte 0
 		byte		145 dup(?) 	; bring to 260
MSDOS7GeosName 		ends


;CheckHack <(size MSDOS7GeosName) eq (size MSDOS7LongNameType)> 


MSDOS7DateTime	struct
	MSD7DT_time		FileTime
 	MSD7DT_date		FileDate	
	MSD7DT_64bitExtraWords	dword
MSDOS7DateTime	ends

			
Win32FindData	struct
	W32FD_fileAttrs		dword		; low 8 bits only now
	W32FD_created		MSDOS7DateTime  ; file time or 64 bit time?
	W32FD_accessed		MSDOS7DateTime 	;  	"
	W32FD_modified		MSDOS7DateTime	; 	"
	W32FD_fileSizeHigh	dword		; high dword of file size
	W32FD_fileSizeLow	dword		; low   "	"
	W32FD_reserved0		dword 		; got me
	W32FD_reserved1		dword		; got me
	W32FD_fileName		MSDOS7GeosName
	W32FD_alternateFileName	MSDOS7AliasType
Win32FindData	ends

ByHandleFileInfo	struct
	BHFI_fileAttrs		dword
	BHFI_created		MSDOS7DateTime
	BHFI_accessed		MSDOS7DateTime
	BHFI_modified		MSDOS7DateTime
	BHFI_volume		dword
	BHFI_fileSizeHigh	dword
	BHFI_fileSizeLow	dword
	BHFI_nLinks		dword
	BHFI_indexHigh		dword
	BHFI_indexLow		dword
ByHandleFileInfo	ends






OpenFilePath	struct
	OFP_pathString	hptr		; chunk handle of the path string.
OpenFilePath ends


DOS7PathCacheHeader	struct
	D7PCH_lmbh	LMemBlockHeader
	D7PCH_table	OpenFilePath 255 dup (<>)
DOS7PathCacheHeader	ends




