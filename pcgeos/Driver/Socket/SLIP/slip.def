COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) Geoworks 1994 -- All Rights Reserved

			GEOWORKS CONFIDENTIAL

PROJECT:	PC GEOS
MODULE:		
FILE:		slip.def

AUTHOR:		Jennifer Wu, Sep  9, 1994

	
REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	jwu	9/ 9/94		Initial revision


DESCRIPTION:
	Definitions file for the SLIP driver.
		
	$Id: slip.def,v 1.1 97/04/18 11:57:19 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

ifdef TIA
_TIA	equ	TRUE
else
_TIA	equ	FALSE
endif

ifdef LOGIN_NAME_IN_PROMPT
_LOGIN_NAME_IN_PROMPT equ	TRUE
else
_LOGIN_NAME_IN_PROMPT equ	FALSE
endif


;---------------------------------------------------------------------------
;	Constants and Definitions for Driver
;---------------------------------------------------------------------------



SLIP_MIN_MTU		equ	576				

SLIP_LOCAL_ADDRESS	equ	0xc0000201	; 192.0.2.1 == "nothing"

BUFFER_SIZE		equ	1000		; should be plenty...

PROMPT_SYMBOL		equ	'%'

SLIP_SERIAL_BUFFER_SIZE	equ	2000		
SLIP_CLIENT_HANDLE	equ	0xbabe		; arbitrary (easy to spot)
SLIP_CONNECTION_HANDLE	equ	0xdeed		; arbitrary (easy to spot)

;
; Values for use with huge lmem routines.
;
SLIP_OPTIMAL_BLOCK_SIZE	equ	5000		; arbitrary
SLIP_WAIT_TIME		equ	30		; half a second

;
; Timeout for verification of a SLIP connection given to driver by lurker.
;
SLIP_VERIFY_CONNECTION_TIMEOUT	equ 	60 * 60 ; 1 minute (should be enough...)

;
; Code depends on order of SlipStates.
;
SlipState	etype	word, 0, 2
SS_CLOSED		enum	SlipState
SS_CONNECTING		enum	SlipState	; opening link
SS_LOGIN		enum	SlipState	; logging in to use tia
SS_SENT_CR		enum	SlipState	; sent <CR>
SS_SENT_LOGIN		enum	SlipState	; sent login name
SS_SENT_PASSWORD	enum	SlipState	; sent password
SS_SENT_TIA		enum	SlipState	; sent "tia"<CR>
SS_OPEN			enum	SlipState	; ready for SLIP packets
SS_QUIT_TIA		enum	SlipState	; sent Ctrl-Cs
SS_SENT_LOGOUT		enum	SlipState	; sent "logout"

SlipDrStatus	record	
	:2
	SDS_MEDIUM_CONNECTED:1		; notified system medium is connected
	SDS_WAITING_FOR_DATA:1		; set when lurker loads SLIP and 
					;  cleared when SLIP data detected
	SDS_ESCAPE:1			; true if previous byte was SLIP_FR_ESC
	SDS_WAITER_EXISTS:1		; true if semaphore is blocked
	SDS_PORT_OPEN:1			; true if serial port is open
	SDS_REGISTERED:1		; true if slip driver is registered
SlipDrStatus	end

;
; These should be big enough...
;
UNIX_REQUEST_LENGTH	equ	40	
SLIP_LOGIN_SIZE		equ	10	
SLIP_PASSWORD_SIZE	equ	10

SlipLogin	type	SLIP_LOGIN_SIZE dup (char)
SlipPassword	type	SLIP_PASSWORD_SIZE dup (char)

;
; TIA specific definitions.
;
NUM_CTRL_C_TO_QUIT_TIA	equ	5
PAUSE_BETWEEN_CTRL_C_TO_QUIT_TIA	equ	35

;---------------------------------------------------------------------------
;	Slip protocol constants
;---------------------------------------------------------------------------
SLIP_FR_END	equ	0xc0		; Frame End (decimal 192)
SLIP_FR_ESC	equ	0xdb		; Frame Esc (decimal 219)
SLIP_T_FR_END	equ	0xdc		; Transposed frame end (decimal 220)
SLIP_T_FR_ESC	equ	0xdd		; Transposed frame esc (decimal 221)

;---------------------------------------------------------------------------
;	SlipProcessClass
;---------------------------------------------------------------------------

SlipProcessClass	class	ProcessClass

MSG_SLIP_OPEN_LINK		message

MSG_SLIP_CLOSE_LINK		message

MSG_SLIP_SEND_FRAME		message
;  SYNOPSIS:  Packet the buffer into a slip frame and send it.
;
;  PASS:  dx:bp	= optr of buffer
;	  cx	= # of bytes of data 
;  RETURN: nothing
;

MSG_SLIP_VERIFY_CONNECTION	message
;  SYNOPSIS:  Used to verify connection detected by the lurker actually
; 	      contains SLIP data.  Called when a timer expires.

MSG_SLIP_PROCESS_INPUT		message
; SYNOPSIS:  Read notification handler for serial port.
;

SlipProcessClass	endc

SlipClassStructures	segment
	SlipProcessClass	mask	CLASSF_NEVER_SAVED
SlipClassStructures	ends

;---------------------------------------------------------------------------
;		FatalErrors
;---------------------------------------------------------------------------

SLIP_INVALID_SOCKET_DRIVER_TYPE		enum	FatalErrors
SLIP_UNABLE_TO_CREATE_THREAD		enum	FatalErrors
SLIP_INVALID_CLIENT_HANDLE		enum	FatalErrors
SLIP_CONNECTION_MUST_BE_CLOSED_FIRST	enum	FatalErrors
SLIP_NOT_REGISTERED			enum	FatalErrors
SLIP_INVALID_CONNECTION_HANDLE		enum	FatalErrors
SLIP_CANNOT_CLOSE_LINK_WITH_WAITER	enum	FatalErrors
SLIP_COULD_NOT_CLOSE_LOGIN_FILE		enum	FatalErrors

MUST_HAVE_SLIP_DATA_IF_BUFFER_EXISTS	enum	FatalErrors
BLOCK_MOVED_ON_DOWNSIZE			enum	FatalErrors
SLIP_MUST_HAVE_WAITER			enum	FatalErrors

INVALID_ADDRESS_IN_INI			enum	FatalErrors
INVALID_VALUE_FOR_SLIP_MTU		enum	FatalErrors

SLIP_INVALID_UNIT_TYPE			enum	FatalErrors
SLIP_INVALID_UNIT			enum	FatalErrors
SLIP_INVALID_MEDIUM_TYPE		enum	FatalErrors

SLIP_INTERNAL_ERROR			enum	FatalErrors

;---------------------------------------------------------------------------
;			Warnings
;---------------------------------------------------------------------------

SLIP_FRAME_EXCEEDS_MTU				enum	Warnings
SLIP_COULDNT_GET_BUFFER_SO_DROPPING_BYTE	enum 	Warnings
SLIP_DESTROYING_INCOMPLETE_FRAME		enum	Warnings


SLIP_EXITING_BEFORE_LINK_CLOSED			enum	Warnings
SLIP_EXITING_WITH_WAITER_BLOCKED		enum	Warnings
; These warnings indicate the system is doing a dirty shutdown.  If 
; the system is not shutting down, then you have a problem.
;


