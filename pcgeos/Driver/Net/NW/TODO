
			PC/GEOS NetWare Driver
			      TODO LIST

Revision:	$Id: TODO,v 1.1.23.1 97/03/29 07:34:44 canavese Exp $
-------------------------------------------------------------------------------

make sure GeodeGetInfo is not messing up my table

TODO:
-----
	- check for error codes on return from NetWare.

	- localization: I have some embedded ascii strings in the code,
	all for NetWare-defined names. Do they change?

	- Think about using GetConnectionID rather than GetConnectionNumber.
	GetConnectionID finds the first "in use" slot in the table of
	servers for this workstation. It returns the connection ID for this
	workstation on that server. GetConnectionNumber uses the default
	server. The default server may not always be set.) (This from a
	conversation with Novell's Developer Support.)

	- note that when this driver is initialized, we are opening
	the main GeoWorks socket. When exited, we close it. Do we
	get multiple opens and exits?

	- Have I handled DR_SUSPEND and DR_UNSUSPEND correctly?

	- add code to handle receipt of personal messages

	- need SP_NET standard path

MISC CLEANUP:
	- think about using CallMod to get from Strategy routine to
	entry points.

	- GeodeForEach seems to have disappeared.

	- GeodeGetGeodeVersion port

	- nuke constants in NetWareDriverInit

	- should all of the init/exit routines be in the Resident resource?

	- look for "CHECK NEC CASE"

	- check NetWareCloseSocket_Callback: it is called by ChunkArrayEnum,
	and it deletes an item from the array. Ok?

	- when delivering a local message, and create a data block
	on the heap, need to make is SHARABLE?

	- update comments in NetWareReleaseAllAlerts relating to task switching

	- need to close socket on shutdown/task-switch

	- see "(THIS IS A NASTY HOLE FOR VIRUSES...)" in netware.def

	- Net Library is creating HugeECB, and then calling
	DR_NET_INITIALIZE_HECB to fill in the FPTRs to our callback
	routines. We need to make the Net Library side of this much
	more generic.

	- do all of the entry points have to be in the resident resource?

	- when the IPX interrupt thread calls NW driver to give it
	a packet, should we immediately turn around and set up
	a new "listen ECB" on that socket?

	- check resource usage. What is our footprint? Reduce stack size.

TEST:
-----
	- exit, suspend, resume cases
	- passing MessageFlags through on a message call. Do all arrive?

BUGS:
-----
	- make this an Extended Driver:
	  ;An extended driver is one that can handle multiple types of devices,
	  ;identified by ascii strings that the driver provides. The specific
	  ;device to be supported is specified by a DRE_SET_DEVICE call after
	  ;the driver is loaded.

FOR THE SPEC:
-------------
	- This NetWare driver includes the Net library. See notes
	in nw.asm on this.

	- This driver will not load if both IPX and NETX are not present.
	Are there any cases where we will work with just one?

For IPX/SPX:
------------
	- when want to support sockets in general, need to call
	NetWareCloseAllSockets.

	- see IPXPacketType definition in netware.def. I don't think
	I've been using the right value. Should use 4,
	which is IPXPT_PACKET_EXCHANGE_PACKET.

