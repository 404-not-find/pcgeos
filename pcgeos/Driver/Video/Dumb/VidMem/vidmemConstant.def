COMMENT }%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1989 -- All Rights Reserved


PROJECT:	PC GEOS
MODULE:		Memory video driver
FILE:		vidmemConstant.def

AUTHOR:		Jim DeFrisco

REVISION HISTORY:
	Name	Date	Description
	----	----	-----------
	Jim	12/91	initial version

DESCRIPTION:
	This file contains constants for the memory video driver.

	$Id: vidmemConstant.def,v 1.1 97/04/18 11:42:56 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%}

;----------------------------------------------------------------------
;	Default Conditional Constants
;----------------------------------------------------------------------
	_MONO			=	TRUE	; include mono module 
	_4BIT			=	TRUE	; include 4-bit module 
	_8BIT			=	TRUE	; include 8-bit module 
	_24BIT			=	TRUE	; include 24-bit module 
	_CMYK			=	TRUE	; include CMYK module 

;----------------------------------------------------------------------
;       Product-specific constants
;               see "Compilation Control Constants" defined below
;----------------------------------------------------------------------

	_JEDI			=	FALSE


;----------------------------------------------------------------------
;	Conditional constants for Jedi.
;----------------------------------------------------------------------

	
;------------------------------------------------------------------------------
;       Compilation Control Constants
;------------------------------------------------------------------------------

;Is the video memory CMYK section going to support only the VGA palette?
;This replaces the 5x5x5 RGB lookup/interpolation color correction method with
;a map to 16 value index, and substitution.

ifdef	INDEX_RGB_CORRECTION
	_INDEX_RGB_CORRECTION	equ	TRUE
else
	_INDEX_RGB_CORRECTION	equ	FALSE
endif

;----------------------------------------------------------------------------
;	Driver type constants
;----------------------------------------------------------------------------

IS_MEM			=	TRUE	; is the memory driver

IS_16			=	TRUE	;16 bit driver

SAVE_UNDER_COUNT	=	0	;Number of save under areas

DISPLAY_TYPE	= 0

;----------------------------------------------------------------------------
;	SCREEN SIZE EQUATES
;----------------------------------------------------------------------------

		; mem driver has no size...

PHYSICAL_SCREEN_WIDTH	=	0	; width in inches of typical display
PHYSICAL_SCREEN_HEIGHT	=	0	; width in inches of typical display

SCREEN_PIXEL_WIDTH	=	0	; width of screen, pixels
SCREEN_BYTE_WIDTH	=	0	; width of screen, bytes
SCREEN_HEIGHT		=	0	; height of screen, scan lines

MAX_SCREEN_BYTE_WIDTH	=	256	; max for most routines, lets us use
					; a constant for sizing buffers
;----------------------------------------------------------------------------
;	Video buffer constants
;----------------------------------------------------------------------------

SCREEN_BUFFER		=	0h	; no fixed video buffer for mem driver

SCREEN_BANK_OFFSET	=	0h	; not applicable

NUM_SCREEN_BANKS	=	1

VIDMEM_POINT_BUF	equ	<size EditableBitmap>

;----------------------------------------------------------------------------
;	FatalError constants
;----------------------------------------------------------------------------

VIDMEM_BAD_MODULE_CALL					enum	FatalErrors
VIDMEM_HUGE_ARRAY_PROBLEM				enum	FatalErrors
VIDMEM_BAD_FRAME_BUFFER_PTR				enum	FatalErrors
VIDMEM_INTERNAL_ERROR					enum	FatalErrors

;----------------------------------------------------------------------------
;	Warnings constants
;----------------------------------------------------------------------------

VIDMEM_CLR4_CANNOT_HANDLE_NON_INTEGRAL_WIDTH		enum	Warnings
; The clr4 module cannot currently handle non-integral (divisible by 4)
; widths, due to a problem in the character drawing code. This will
; eventually be fixed, but for now when using this module, if you plan
; to draw text to the bitmap, make sure the bitmap width is divisible by
; 4 or else you may encounter memory corruption problems if a string is
; drawn off the right side of the bitmap.
;
