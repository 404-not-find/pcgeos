COMMENT @----------------------------------------------------------------------

	Copyright (c) GeoWorks 1988 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		Video Driver
FILE:		att6300Macro.def

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	Jim	7/90		Initial version, mostly copied from HGC driver

DESCRIPTION:
	This file contains macros for the ATT6300 Video driver
	
	$Id: att6300NTMacro.def,v 1.1 97/04/18 11:42:37 newdeal Exp $

------------------------------------------------------------------------------@

ifdef NT_DRIVER
.386
COMMENT @----------------------------------------------------------------------

MACRO:		SetBuffer	segreg, trashReg

DESCRIPTION:	Increment register to the next scan line

PASS:
	segreg - segment register to set
	trashReg - register that can be trashed

RETURN:
	segreg - set

------------------------------------------------------------------------------@

SetBuffer	macro	segreg, trashReg
	mov	trashReg, 0xA000
	mov	segreg, trashReg
endm

COMMENT @----------------------------------------------------------------------

MACRO:		SetAltBuffer	segreg, trashReg

DESCRIPTION:	Set a segment register to point to the alternate video buffer

PASS:
	segreg - segment register to set
	trashReg - register that can be trashed

RETURN:
	segreg - set

------------------------------------------------------------------------------@

SetAltBuffer	macro	segreg, trashReg
	mov	trashReg, ALT_SCREEN_BUFFER
	mov	segreg, trashReg
endm

COMMENT @----------------------------------------------------------------------

MACRO:		NextScan

DESCRIPTION:	Increment to the next scan line

PASS:
	dest - register with scan line address
	adjust - modification (in bytes) to position on next scan

RETURN:
	reg - updated

------------------------------------------------------------------------------@

NextScan	macro	dest, adjust
ifnb <&adjust>
	add	dest, (adjust)
endif
	add	dest, SCREEN_BYTE_WIDTH
endm

COMMENT @----------------------------------------------------------------------

MACRO:		PrevScan

DESCRIPTION:	Decrement to the previous scan line

PASS:
	dest 	- location with scan line address
	adjust 	- modification (in bytes) to position on next scan

RETURN:
	dest 	- updated

------------------------------------------------------------------------------@

PrevScan	macro	dest, adjust
ifnb <&adjust>
		add	dest, (adjust)
endif
		sub	dest, SCREEN_BYTE_WIDTH
endm

COMMENT @----------------------------------------------------------------------

MACRO:		StoreNextScanMod

DESCRIPTION:	Store a self modified value for NextScanMod

PASS:
	dest - destination address
	reg - register with value to modify or constant

RETURN:
	reg - destroyed

------------------------------------------------------------------------------@

StoreNextScanMod	macro	dest, adjust
ifnb <&adjust>
	mov	dest, (adjust)
else
	mov	dest, 0
endif
endm

COMMENT @----------------------------------------------------------------------

MACRO:		NextScanMod

DESCRIPTION:	Increment register to the next scan line

PASS:
	reg - register with scan line address
	sym - symbol for word to relocate

RETURN:
	reg - updated

------------------------------------------------------------------------------@

NextScanMod	macro	reg, sym
	local	stuff

stuff	label	word
sym	=	stuff + 2
	add	reg, 1234h
	add	reg, SCREEN_BYTE_WIDTH
endm

COMMENT @----------------------------------------------------------------------

MACRO:		StorePrevScanMod

DESCRIPTION:	Store a self modified value for PrevScanMod
		For the MCGA, this is the same as StoreNextScanMod

PASS:
	dest - destination address
	reg - register with value to modify

RETURN:
	reg - destroyed

------------------------------------------------------------------------------@

StorePrevScanMod	macro	dest, adjust
ifnb <&adjust>
	mov	dest, (adjust)
else
	mov	dest, 0
endif
endm

COMMENT @----------------------------------------------------------------------

MACRO:		PrevScanMod

DESCRIPTION:	Increment register to the next scan line

PASS:
	reg - register with scan line address
	sym - symbol for word to relocate

RETURN:
	reg - updated

------------------------------------------------------------------------------@

PrevScanMod	macro	reg, sym
	local	stuff, notFirstBank

stuff	label	word
sym	=	stuff + 2
	add	reg, 1234h
	sub	reg, SCREEN_BYTE_WIDTH
endm

COMMENT @----------------------------------------------------------------------

MACRO:		CalcScanLine

DESCRIPTION:	Calculate the beginning scan line position

PASS:
	reg - register containing line number
	offsetReg - register containing offset to add to base scan line address

RETURN:
	reg - address
	offsetReg - destroyed

------------------------------------------------------------------------------@

	; result should be: reg = 640L
	;		where:
	;			L = line number (passed in reg)

CalcScanLine	macro	reg, offsetReg
	shl	reg, 4		; reg = 16L
	add	offsetReg, reg	; offsetReg = 16L +offset
	shl	reg, 2		; reg = 64L
	add	reg, offsetReg	; reg = 80L + offset
endm


; This is the inc file for isvbop.h.
; Please refer to isvbop.h for comments and notes on these interfaces
;
BOP_3RDPARTY	EQU	58H
BOP_UNSIMULATE	EQU	0FEH

RegisterModule macro
    .inst db  0C4h, 0C4h, BOP_3RDPARTY, 0
endm

UnRegisterModule macro
    .inst db  0C4h, 0C4h, BOP_3RDPARTY, 1
endm

DispatchCall macro
    .inst db  0C4h, 0C4h, BOP_3RDPARTY, 2
endm
 
VDDUnSimulate16 macro
    .inst db	0C4h, 0C4h, BOP_UNSIMULATE
endm

endif
