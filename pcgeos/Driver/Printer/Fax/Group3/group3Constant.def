COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) Geoworks 1994.  All rights reserved.
	GEOWORKS CONFIDENTIAL

PROJECT:	Pasta
MODULE:		Fax
FILE:		group3Constant.def

AUTHOR:		Jacob Gabrielson, Mar 10, 1993

MACROS:
	Name			Description
	----			-----------

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	jag	3/10/93   	Initial revision
	AC	9/ 8/93		Changed for Group3


DESCRIPTION:
	
		
	$Id: group3Constant.def,v 1.1 97/04/18 11:52:57 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

;-----------------------------------------------------------------------------
;		Fatal Errors
;-----------------------------------------------------------------------------

EMPTY_HUGE_ARRAY_PASSED_TO_PRINT_SWATH		enum	FatalErrors
PRINT_SWATH_CORRUPT_HUGE_ARRAY			enum	FatalErrors
RECEIVER_FAX_NUMBER_MUST_BE_FIRST_IN_TABLE	enum	FatalErrors

FAX_INFO_FILE_ERROR_CODE_INVALID		enum	FatalErrors

;
; The receiver's fax number must be the first entry in the FJPTextObjects
; and FJPTextOffsets tables so that it will be the last item when we 
; go through this loop in EvalPrintOptions.
;
GROUP3_COMPRESSED_DATA_LARGER_THAN_BUFFER	enum	FatalErrors

;-----------------------------------------------------------------------------
;		Driver Error Codes
;-----------------------------------------------------------------------------
PrintDriverErrorCodes	etype	byte,	2, 2
PDEC_USER_SAYS_NO_DISK_SPACE		enum	PrintDriverErrorCodes
PDEC_CANNOT_CREATE_FAX_FILE		enum	PrintDriverErrorCodes
PDEC_CANNOT_RESIZE_JOB_PARAMETERS	enum	PrintDriverErrorCodes
PDEC_RAN_OUT_OF_DISK_SPACE		enum	PrintDriverErrorCodes

;-----------------------------------------------------------------------------
;		Open Fax Information File Error Codes
;-----------------------------------------------------------------------------

;------------------------------------------------------------------------------
;			       Driver Constants
;
; These constants are used in the DeviceInfo and are needed for all print
; drivers.
;------------------------------------------------------------------------------

PR_MARGIN_TRACTOR	= 18
PR_MARGIN_TOP_LATER	= 24

PR_MARGIN_LEFT          = 0
PR_MARGIN_RIGHT         = 0
PR_MARGIN_TOP           = 0
PR_MARGIN_BOTTOM        = 0

FAX_X_RES			= FAXFILE_HORIZONTAL_RESOLUTION

FAX_STD_Y_RES			= FAXFILE_STD_VERTICAL_RESOLUTION
FAX_STD_RES_BAND_HEIGHT		= 60
FAX_STD_RES_BYTES_COLUMN	= 1		; not used
						
FAX_FINE_Y_RES			= FAXFILE_FINE_VERTICAL_RESOLUTION
FAX_FINE_RES_BAND_HEIGHT	= 60
FAX_FINE_RES_BYTES_COLUMN	= 1

DISK_SPACE_FOR_WARNING		= 40*1024
LINES_PER_DISK_SPACE_CHECK	= 1000		; check every 10 scanlines

;
; XXX: do we need this?
;
FAX_FINE_RES_INTERLEAVE_FACTOR	= 1
FAX_STD_RES_INTERLEAVE_FACTOR	= 1

LEFT_MARGIN_OFFSET      = ((PR_MARGIN_LEFT * STD_RES_X_RES) / 72); pixels
TOP_MARGIN_OFFSET_MED	= ((PR_MARGIN_TOP * STD_RES_Y_RES) / 72 ); pixels
TOP_MARGIN_OFFSET_FINEGH  = ((PR_MARGIN_TOP * FINE_RES_Y_RES) / 72 ); pixels

;
; Don't get rid of this
;
DR_PRINT_LAST_RESIDENT  = DR_PRINT_HOME_CURSOR

COMPRESS_DATA_BUFFER_SIZE	equ	FAXFILE_HORIZONTAL_BYTE_WIDTH * 5

;------------------------------------------------------------------------------
;				   Internal
;------------------------------------------------------------------------------

FAX_BAND_HEIGHT                 equ     60      ; For now...
FAX_MAX_FIELD_LENGTH		equ	50	; length of almost all fields

;------------------------------------------------------------------------------
;				Cover Page Constants
;------------------------------------------------------------------------------

FAX_COVERPAGE_MAX_TO_FIELD_LENGTH	equ	FAXFILE_NAME_BUFFER_SIZE
FAX_COVERPAGE_MAX_FROM_FIELD_LENGTH	equ	FAXFILE_NAME_BUFFER_SIZE
FAX_COVERPAGE_MAX_COMPANY_FIELD_LENGTH	equ	FAXFILE_NAME_BUFFER_SIZE
FAX_COVERPAGE_MAX_FAX_FIELD_LENGTH	equ	FAXFILE_PHONE_NUMBER_BUFFER_SIZE
FAX_COVERPAGE_MAX_VOICE_FIELD_LENGTH	equ	FAXFILE_PHONE_NUMBER_BUFFER_SIZE
FAX_COVERPAGE_MAX_FAX_ID_FIELD_LENGTH	equ	FAXFILE_MAX_FAX_ID_FIELD_LENGTH



; Max length of the phone number.
FAX_MAX_TO_PHONE_FIELD_LENGTH		equ	FAXFILE_PHONE_NUMBER_BUFFER_SIZE
; Max length of the name of the receiver
FAX_MAX_TO_NAME_FIELD_LENGTH		equ	FAXFILE_NAME_BUFFER_SIZE

;------------------------------------------------------------------------------
;				File Constants
;------------------------------------------------------------------------------

;
; Disk handle where fax files are kept
;
;endif
FAX_DISK_HANDLE		equ	SP_PRIVATE_DATA

;
; Fax protocol numbers for the defaults file.
;
FILE_MAJOR_PROTOCOL     equ     0
FILE_MINOR_PROTOCOL     equ     3

;
; Rough guesses to how big a page will be in the fax file format.
;
FAX_STD_PAGE_SIZE_ESTIMATE	equ	1024*40		; 40k/page estimate
FAX_FINE_PAGE_SIZE_ESTIMATE	equ	1024*80		; 80k/page estimate

;
;  Constant & error for ensuring we don't overrun the buffer for
;  the fax page-number string.  Assumes fax will never be >1000 pages.
;
MAX_PAGE_NUMBER_ASCII_LENGTH		equ	3
GROUP3_TOO_MANY_PAGES_IN_FAX		enum	FatalErrors

;-------------------------
; UI identifiers
;-------------------------

;
; Identifiers for the gen item group in the Fax options box
;
PrintOptions	etype	byte,	0, 2
PO_COVER_PAGE		enum	PrintOptions
PO_AUTO_DIAL		enum	PrintOptions
PO_TRANS_IMMEDIATE	enum	PrintOptions

GROUP3_MAX_QUICK_DIAL_NUMBERS	equ	10	; Max # of quick dial numbers
GROUP3_MIN_QUICK_DIAL_NUMBERS	equ	1	; This should never change.
						; If no entries, a blank entry
						; will exist

;
; Quick Dial numbers might consist of only a number, or a name and number.
; This type is used as a flag to see if the information stored is for a
; number only or a name and number.
;
QuickOptions	etype	byte,	0, 2
QO_NUMBER_ONLY		enum	QuickOptions
QO_NAME_AND_NUMBER	enum	QuickOptions


;------------------------------------------------------------------------------
;		FaxJobParameter Constants
;------------------------------------------------------------------------------
;  This constant is used in the FaxJobParameters to see if the job
;  should be aborted.  If the FaxSpoolID is this constant it means
;  the job is hosed.
;
FAX_ERROR_SPOOL_ID	equ	0xffffffff

FaxIACPBlock	struct
				; File name of the fax file.
	FIB_fileName	char	FILE_LONGNAME_BUFFER_SIZE dup (?)

	FIB_faxSpoolID	dword	; Fax Spool ID

FaxIACPBlock	ends

;
; This structure helps us keep track of the last ten numbers dialed plus 
; the information that should be on the coversheet.
;
FaxInformationFileInfo		struct

		; Name of the last person you sent it to
	FIFI_toName		char	FAXFILE_NAME_BUFFER_SIZE dup (?)
		; The name you use for the cover page
	FIFI_fromName		char	FAXFILE_NAME_BUFFER_SIZE dup (?)
		; The compay you list for the cover page
	FIFI_fromCompany	char	FAXFILE_NAME_BUFFER_SIZE dup (?)
		; The voicenumber you use for the cover page
	FIFI_fromVoicePhone	char	FAXFILE_PHONE_NUMBER_BUFFER_SIZE dup (?)
		; The fax number you use for a cover page
	FIFI_fromFaxPhone	char	FAXFILE_PHONE_NUMBER_BUFFER_SIZE dup (?)
		; Fax ID you want on the TTL line
	FIFI_fromFaxID		char	FAXFILE_MAX_FAX_ID_FIELD_LENGTH	dup (?)

		; Block where quick lists are stored
	FIFI_heapBlock		hptr		; where the quick list is stored

		; handle to the chunk array in that heap block
	FIFI_chunkArrayHandle	nptr		; ptr to the chunk array

		; Address Book information
	FIFI_addrBookFileInfo	AddressBookFileInfo

FaxInformationFileInfo		ends

;==============================================================================
;
;                      User Interface definitions
;
;==============================================================================

;*************************************************************************
;			Class Definitions				 *
;*************************************************************************

FaxInfoClass            class   GenInteractionClass


;-----------------------------------------------------------------------------
;       MESSAGES                
;-----------------------------------------------------------------------------

MSG_FAX_INFO_GET_FILE_HANDLE		message
;
;	PASS:		nothing
;	RETURN:		ax = file handle of fax info file.
;	DESTROYED:	nothing
;

MSG_FAX_INFO_GET_QUICK_LIST_HANDLES	message
;
;	PASS:		nothing
;	RETURN:		ax = block handle of chunk array
;			cx = chunk handle
;	DESTORYED:	nothing
;

MSG_FAX_INFO_GET_ADDRESS_BOOK_USED	message
;
;	PASS:		cx:dx	= fptr AddressBookFileInfo struc
;	RETURN:		cx:dx	= filled
;	DESTROYED:	nothing
;

MSG_FAX_INFO_SET_ADDRESS_BOOK_USED	message
;
;	PASS:		cx:dx	= fptr addressBookFileInfo struc
;	RETURN:		nothing
;	DESTROYED:	nothing
;

MSG_FAX_INFO_SAVE_SENDER_INFO		message
;	DESCRIPTION:	Save all the sender information fields.
;	
;	PASS:		nothing
;	RETURN:		nothing
;	DESTROYED:	ax, cx, dx, bp
	
MSG_FAX_INFO_RESET_SENDER_INFO		message
;	DESCRIPTION:	Reset all the sender information fields.
;
;	PASS:		nothing
;	RETURN:		nothing
;	DESTROYED:	ax, cx, dx, bp

MSG_FAX_INFO_USE_COVER_PAGE		message
;	DESCRIPTION:	Automatically select the "Use Cover Page" option.
;
;	PASS:		nothing
;	RETURN:		nothing
;	DESTROYED:	ax, cx, dx, bp 


;-----------------------------------------------------------------------------
;       INSTANCE DATA           
;-----------------------------------------------------------------------------
 
        FII_fileHandle	hptr		; Handle to the fax information file

        FII_numPages    word            0
	FII_qHeapHandle	hptr		; Handle to the LMem heap 
	FII_qListHandle	nptr		; Handle to the chunk array for the 
					; quick list
	FII_addrInfo	AddressBookFileInfo
					; Address Book information.
FaxInfoClass            endc

;*************************************************************************
;			Class Definition				 *
;*************************************************************************

QuickNumbersListClass	class	GenDynamicListClass

;-----------------------------------------------------------------------------
;       STRUCTURES
;-----------------------------------------------------------------------------
QuickNumberChunkHandles		struc

QNCH_nameChunk		hptr
QNCH_numberChunk	hptr

QuickNumberChunkHandles		ends

;-----------------------------------------------------------------------------
;       MESSAGES                
;-----------------------------------------------------------------------------

MSG_QUICK_NUMBERS_LIST_SET_CURRENT_SELECTION	message
;
;	This is the apply message from the GenDynamicList.  It sets a
;	dgroup variable to be the selection of the list.
;
;	PASS:		cx = current selection, GIGS_NONE if no selection
;	RETURN:		nothing
;	DESTROYED:	nothing
;

MSG_QUICK_NUMBERS_LIST_REQUEST_ITEM_MONIKER	message
;
;	This is the querry message from the GenDynamicList.  It makes the
;	moniker for the quick numbers list.
;
;	PASS:		^lcx:dx = the dynamic list
;			bp	= the position of the item requested
;	RETURN:		nothing
;	DESTROYED:	nothing
;

MSG_QUICK_NUMBERS_LIST_CHECK_IF_ADDR		message
;
;	Tells if the passed element is an address book entry
;	in the quick numbers list.
;
;	PASS:		bp	= entry number
;	RETURN:		carry set if address book entry
;	DESTROYED:	nothing
;

QuickNumbersListClass	endc

;*************************************************************************
;			Class Definition				 *
;*************************************************************************

Group3OptionsTriggerClass 	class	GenTriggerClass

;-----------------------------------------------------------------------------
;       MESSAGES                
;-----------------------------------------------------------------------------

MSG_GROUP3_OPTIONS_TRIGGER_TOGGLE_ENABLED	message
;
; This message is called in order to change the enabled state of
; the trigger.
;
;	PASS:		nothing
;	RETURN:		nothing
;	DESTROYED:	nothing
;

Group3OptionsTriggerClass	endc


InkDeleteTriggerClass	class		GenTriggerClass

InkDeleteTriggerClass	endc

;*************************************************************************
;			Class Definition				 *
; This is the erase all trigger for each text object			 *
;*************************************************************************

DeleteTriggerClass            class   GenTriggerClass

DeleteTriggerClass            endc


















