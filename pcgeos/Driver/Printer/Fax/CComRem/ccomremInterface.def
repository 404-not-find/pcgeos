COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1991 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		
FILE:		ccomInterface.def

AUTHOR:		Adam de Boor, Feb  8, 1991

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	Adam	2/ 8/91		Initial revision


DESCRIPTION:
	Structures and constants for interfacing to The Complete PC's
	Complete Communicator.
		
	$Id: ccomremInterface.def,v 1.1 97/04/18 11:52:50 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

SetDef	__CCOM_INTERFACE


FaxMachineMode	etype	byte
    FMM_IDLE	enum	FaxMachineMode
    FMM_XMIT	enum	FaxMachineMode
    FMM_RECV	enum	FaxMachineMode

FaxUserMode	etype	byte
    FUM_IDLE		enum	FaxUserMode	; Abort request
    FUM_MAN_XMIT	enum	FaxUserMode
    FUM_AUTO_XMIT	enum	FaxUserMode
    FUM_MAN_RECV	enum	FaxUserMode
    FUM_AUTO_RECV	enum	FaxUserMode

FaxTransStatus	etype	byte
    FTS_DIALING		enum	FaxTransStatus, 1
    FTS_WAITING		enum	FaxTransStatus, 2
    FTS_SENDING		enum	FaxTransStatus, 14
    FTS_DISCONNECT	enum	FaxTransStatus, 15

FaxResult	etype	byte
    FR_IN_PROGRESS	enum	FaxResult, -1
    FR_SUCCESS		enum	FaxResult, 0
    FR_COMM_ERROR	enum	FaxResult, 1
    FR_DOS_ERROR	enum	FaxResult, 2
    FR_DISK_FULL	enum	FaxResult, 3
    FR_CRIT_ERROR	enum	FaxResult, 4
    FR_TOO_BAD		enum	FaxResult, 5
    FR_LINE_BUSY	enum	FaxResult, 6
    FR_NO_DIAL_TONE	enum	FaxResult, 7

FaxResidentArea	struct
    FRA_signature	char	"FAX ResidentCode"	; signature for search
    FRA_faxDir		char	81 dup(?)		; full path of FAX
							;  exec/spool dir
    FRA_faxState	FaxMachineMode		; Current state of FAX
    FRA_desiredFaxState	FaxUserMode		; Desired state of FAX
    FRA_recvFile	char	64 dup(?)	; File being received
    FRA_sendFile	char	64 dup(?)	; File being transmitted
    FRA_fileHandle	word			; Handle of file being received/
						;  transmitted
    FRA_listHandle	word			; Handle of list file being used
    FRA_localID		byte	20 dup(?)	; Bit-reversed ID of local
						;  machine
    FRA_remoteID	byte	20 dup(?)	; Bit-reversed ID of remote
						;  machine
    FRA_localCaps	byte	4 dup(?)	; Local capabilities
    FRA_remoteCaps	byte	4 dup(?)	; Remote capabilities
    FRA_backgroundBeep	byte	0		; 1 => beep for success/failure
    FRA_autoPrint	byte	0		; 0 => no auto print
						; 1 => print all incoming faxes
						; 2 => print faxes ready to send
						; 3 => print in & out faxes
    FRA_localPoll	byte	0		; 1 => enabled
    FRA_remotePoll	byte	0		; 0 => none
						; 1 => poll w/transmit
						; 2 => poll w/o transmit
    FRA_inOutLog	byte	0		; 1 => enable
    FRA_lpPassword	char	8 dup(?)	; local poll password
    FRA_rpPassword	char	8 dup(?)	; remote poll password
    FRA_headerMode	byte	0		; 2 => header placed on
						;  outgoing FAX
    FRA_xmitScheduler	byte	0		; 1 => enable transmit scheduler
    FRA_xmitSchedState	byte	0		; 1 => scheduler executing
    FRA_retries		byte	0		; # of attempts at dialing
    FRA_retryInterval	byte	0		; Time between retries (5-minute
						;  intervals)
    FRA_result		FaxResult		; Result of last send/receive:
    						; -1 => in process
						;  0 => ok
						;  1 => comm error
						;  2 => DOS error
						;  3 => no disk space
						;  4 => critical error
						;  5 => too many bad scan lines
						;  6 => line busy
						;  7 => no dial tone
			byte	4 dup(?)	; UNUSED
    FRA_paperSize	byte	1		; 1 => 8.5x11
						; 2 => 8.5x14
						; 3 => A4 (8.3x11.7)
    FRA_autoRecv	byte	0		; 1 => enabled
    FRA_inLogBusy	byte	0		; 1 => incoming log in-use
    FRA_waitQueBusy	byte	0		; 1 => WAITQUE.CFX in-use
    FRA_debugState	byte	0
    FRA_printingMode	byte	0		; 1 => background
    FRA_transStatus	FaxTransStatus		; 1 => dialing
    						; 2 => waiting (begin)
						; 14 => sending
						; 15 => hanging up
    FRA_inLogCFXBusy	byte	0		; 1 => in-use
    FRA_nextSend	word	0		; index of next WAITQUE entry
						;  to send
    FRA_sendMonth	word
    FRA_sendDay		word
    FRA_sendYear	word
    FRA_sendHour	word
    FRA_sendMinute	word
    			word			; UNUSED
    FRA_laserPrinter	byte	0		; 1 => laser printer
    FRA_lineBusy	byte	0
    FRA_boardPort	word			; I/O base of board
    			byte			; UNUSED
    FRA_messageDisplay	byte	0		; 3 => display "FAX" on screen
    FRA_creditCard1	char	25 dup(?)
    FRA_creditCard2	char	25 dup(?)
    FRA_transCount	byte	0		; # documents transmitted
    FRA_incomeUpdate	byte	?		; ?
    FRA_outLogCFXBusy	byte	0		; 1 => in-use
    FRA_mapTableCFXBusy	byte	0		; 1 => in-use
    FRA_printDataArea	fptr.PrintDataArea
    FRA_convertDataArea	fptr.ConvertDataArea
    FRA_sendDataArea	fptr.SendDataArea
    FRA_monitorType	word	0		; 1 => color
    FRA_snowPlow	word	0		; 1 => beware of CGA snow
    FRA_foregroundBeep	word	0		; 1 => beep if foreground
    FRA_defaultRes	byte	0		; 2 => Fine, 0 => standard
    FRA_adapterType	byte	1		; 1 => EGA
						; 2 => CGA
						; 3 => HGC
						; 4 => VGA
    FRA_printerDriver	byte	?
    FRA_friezeVars	char	17 dup(?)
    FRA_hotKeyDataArea	fptr.HotKeyDataArea
    FRA_incomingModify	byte
    FRA_extCharSet	byte	0		; 1 => enable extended char set
						;  for conversion
    FRA_hotKey		byte
    FRA_hotKeyShift	byte
    FRA_exitFlag	byte	0		; 1 => exit & unload
    FRA_coverLogo	byte
    FRA_coverFaxMessage	byte			
    FRA_coverRes	byte
    FRA_convMode	byte	1		; 0 => graphics, 1 => text
    FRA_printMode	byte	0		; 0 => draft, 1 => nlq
    FRA_thingummy	byte	0		; 0 => user starts conv/send
						; 1 => auto start conv/send
    FRA_stopCapture	byte
FaxResidentArea	ends

SendState	etype	word
    SS_IDLE		enum	SendState, 0
    SS_BACK_SEND	enum	SendState, 1	; Background transaction in
						;  progress
    SS_ONE_DONE		enum	SendState, 2	; Sending to 1 recipient done
    SS_ERROR		enum	SendState, 7
    SS_ALL_DONE		enum	SendState, 8	; Sending to all recipients done
    SS_ABORT		enum	SendState, 9
    SS_FORE_SEND	enum	SendState, 10	; Foreground transaction in
						;  progress
    SS_WRITE_LOG	enum	SendState, 11	; Writing to LOG
    
FaxTime	struct
    FT_hour	word
    FT_minute	word
    FT_second	word
FaxTime	ends

FaxDate	struct
    FD_month	word
    FD_day	word
    FD_dow	word
    FD_year	word
FaxDate	ends

WaitQueueStatus	etype	byte
    WQS_CONVERTING	enum	WaitQueueStatus, 1
    WQS_READY		enum	WaitQueueStatus, 2
    WQS_SENDING		enum	WaitQueueStatus, 3
    WQS_CONV_ERROR	enum	WaitQueueStatus, 4
    WQS_LOCKED		enum	WaitQueueStatus, 5
    WQS_NEW		enum	WaitQueueStatus, 6
    WQS_ERROR		enum	WaitQueueStatus, 8
    WQS_COMM_ERROR	enum	WaitQueueStatus, 14
    WQS_TOO_MANY_BAD_LINES enum	WaitQueueStatus, 15
    WQS_LINE_BUSY	enum	WaitQueueStatus, 16
    WQS_NO_DIAL_TONE	enum	WaitQueueStatus, 17
    WQS_ABORT_CONVERT	enum	WaitQueueStatus, 21
    WQS_ABORT_SEND	enum	WaitQueueStatus, 23
    WQS_SENT		enum	WaitQueueStatus, 40
    WQS_ABORTED		enum	WaitQueueStatus, 42

WaitQueue	struct
    WQ_status		WaitQueueStatus	WQS_READY
    WQ_day		byte
    WQ_mon		byte
    WQ_year		word
    WQ_minute		byte
    WQ_hour		byte
    WQ_file		char	27 dup(0); transmit file name, null-padded &
					 ; -terminated. May be "See List"
    WQ_phoneNum		char	21 dup(0); destination phone number, null-padded
					 ; and -terminated. May be "See List"
    WQ_fileList		char	13 dup(0); file holding list of files to send.
					 ; null-terminated
    WQ_recipList	char	13 dup(0); file holding list of recipients.
					 ; null-terminated
    WQ_coverFile	char	13 dup(0); file holding cover sheet (if any).
					 ; null-terminated
    WQ_fileType		byte	1	 ; 1 => FAX file, 0 => DOS file transfer
    WQ_numPages		word		 ; Number of pages in FAX
    WQ_retries		byte	3	 ; Number of times to retry
    WQ_failed		byte	0	 ; Number of failures
WaitQueue	ends

PhoneList	struct
    PL_name	char	21 dup(?)	; asciz, space-padded
    PL_voiceNum	char	28 dup(?)	; asciz, space-padded
    PL_faxNum	char	28 dup(?)	; asciz, space-padded
    PL_password	char	9 dup(?)	; asciz, space-padded
    PL_poll	char	?		; 'Y' or 'N'
    		byte			; padding
    PL_status	word	0
    PL_tries	byte
PhoneList	ends

SendDataArea	struct
    SDA_waitQueChanged	byte	0		; 1 => background changed
						;  WAITQUE.CFX
    SDA_waitQueNukable	byte	0		; 1 => background may delete
						;  WAITQUE.CFX
    SDA_sendState	word	0		; 0 => idle
						; 
    SDA_waitQueEntry	WaitQueue		; Entry being processed
    SDA_recipientChange	byte	0		; 1 => list has changed, re-read
    SDA_rListFile	char	13 dup(?)	; R# file being used by
						;  foreground, so background
						;  shouldn't delete it. Set to
						;  NULL if bg done, so fg should
						;  nuke the file.
    SDA_rListAccess	byte	0		; 1 => recipient list in-use,
						;  don't hooey with it
    SDA_xmitDate	FaxDate			; starting date of xmit
    SDA_xmitTime	FaxTime			; starting time of xmit
    SDA_fileCount	word			; # files to transmit
    SDA_initWQStatus	byte			; Initial WQ_status field of
						;  SDA_waitQueEntry
    SDA_recipient	PhoneList		; Current recipient
SendDataArea	ends

SendFileElement	struct
    SFE_status		byte	3		; 3 => it's a fax file
    SFE_index		word	0		; Map table index (=== 0)
    SFE_pages		word	?		; Number of pages in fax
    SFE_origFile	char	38 dup(?)	; Original file
SendFileElement	ends

ConvertFileElement struct
    CFE_fileName	char	63 dup(?)	; Path of converted fax file.
						;  assumed to be in fax
						;  directory unless path given.
						; This is the full name of the
						;  first page of the fax,
						;  including the extension.
    CFE_status		byte	0		; 0 => one or more pages 
						; 1 => one page only
ConvertFileElement ends


FFH_SIG_1	equ	0x0180
FFH_SIG_2	equ	0x0240

FaxFileHeader	struct
    FFH_magic		word	FFH_SIG_1, FFH_SIG_2
    FFH_hour		word
    FFH_min		word
    FFH_sec		word
    FFH_month		word
    FFH_day		word
    FFH_weekday		word
    FFH_year		word
    FFH_remoteID	byte	21 dup(?)
    FFH_fileName	char	10 dup(?)
    FFH_pageNumber	word
    FFH_size		dword		; size of all pages up to the current
					; one (bytes)
    			word	0
    FFH_localID		byte	21 dup(?)
    FFH_resolution	byte	0	; 0 => standard, 2 => fine
    			byte	21 dup(?)
FaxFileHeader	ends

EOL_TOKEN	equ	105
BLANK_TOKEN	equ	127	; blank line

FAX_WIDTH	equ	1728	; 1728 pixels/line

InlogStatus	etype	word
    IS_SUCCESS_ID_ENCODED enum	InlogStatus, 0
    IS_FAILED_ID_ENCODED  enum	InlogStatus, 1
    IS_SUCCESS_ID_DECODED enum	InlogStatus, -9
    IS_FAILED_ID_DECODED  enum	InlogStatus, -8
    IS_SUCCESS_PRINTED	  enum	InlogStatus, -2
    IS_SUCCESS_VIEWED	  enum	InlogStatus, -1

InlogElement	struct
    IE_recvTime		FaxTime
    IE_recvDate		FaxDate
    IE_remoteID		char	20 dup(?)
    			char	0
    IE_fileName		char	8 dup(0)
    			char	0, 0
    IE_numPages		word
    IE_fileSize		dword
    IE_status		InlogStatus
InlogElement	ends
