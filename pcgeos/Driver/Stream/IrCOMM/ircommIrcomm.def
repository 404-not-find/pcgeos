COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) Geoworks 1996 -- All Rights Reserved

PROJECT:	GEOS	
MODULE:		IrCOMM
FILE:		ircommIrcomm.def

AUTHOR:		Greg Grisco, Feb 20, 1996

MACROS:
	Name			Description
	----			-----------

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	grisco	2/20/96   	Initial revision


DESCRIPTION:
	
	External definitions for the IrCOMM module
		
	$Id: ircommIrcomm.def,v 1.1 97/04/18 11:46:13 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@


;--------------------------------------------------------------------
;		IrCOMM FSM States
;--------------------------------------------------------------------

IrCommFsmState	etype	word, 0

	ICFS_IDLE		enum	IrCommFsmState
	; The initial state.  No link is established and the IrCOMM user
	; cannot send any data or control parameters.

	ICFS_WAITI		enum	IrCommFsmState
	; The IrCOMM user has requested an IrCOMM connection and is
	; waiting for the confirmation from the other side.  Data and
	; control cannot be sent because the connection is not yet
	; established.

	ICFS_WAITR		enum	IrCommFsmState
	; IrCOMM has received an incoming connection request and is
	; waiting for the response from the IrCOMM user.  Data and
	; control cannot be sent yet because the connection is not yet
	; established.

	ICFS_CONN		enum	IrCommFsmState
	; IrCOMM is connected to a peer IrCOMM.  Data and control can
	; now be sent and received.


SerialPortState	struct
	SPS_baud	SerialBaud
	SPS_format	SerialFormat
	SPS_modem	SerialModem
	SPS_ien		SerialIEN
SerialPortState	ends


IrCommReceiveFlag	record
			: 7
	ICRF_BUSY	: 1	; busy if input stream full
IrCommReceiveFlag	end

IrCommSendFlag		record
			: 6
	ICSF_TIMER	: 1
	ICSF_CONTROL	: 1	; set if control data in stream
IrCommSendFlag		end

;
; The default service type is the highest order bit set in the IAS
; service type parameter.
;
IrCommServiceType	record
			: 4
	ICST_CENTRONICS	: 1	; Centronics interface for parallel ports
	ICST_9_WIRE	: 1	; 9-wire serial emulation
	ICST_3_WIRE	: 1	; 3-wire serial/parallel emulation.
	ICST_3_WIRE_RAW	: 1	; 3-wire raw serial/parallel no flow control

IrCommServiceType	end	

;
; The default is both set.
;
IrCommPortType		record
			: 6
	ICPT_PARALLEL	: 1
	ICPT_SERIAL	: 1
IrCommPortType		end	

IrCommDataFormat	record
			: 2
	ICDF_PARITY	: 2	; 00 = odd; 01 = even; 10 = mark; 11 = space
	ICDF_PARITY_EN	: 1	; 0 = No Parity; 1 = Parity Enabled
	ICDF_STOP_BITS	: 1	; 0 = 1 stop bit; 1 = 1.5 if
				; CHAR_LEN=5, else = 2
	ICDF_CHAR_LEN	: 2	; 00 = 5-bits; 01 = 6; 10 = 7; 11 = 8

IrCommDataFormat	end

IrCommFlowControl	record

	ICFC_ENQ_ACK_OUTPUT	: 1
	ICFC_ENQ_ACK_INPUT	: 1
	ICFC_DSR_DTR_OUTPUT	: 1
	ICFC_DSR_DTR_INPUT	: 1
	ICFC_RTS_CTS_OUTPUT	: 1
	ICFC_RTS_CTS_INPUT	: 1
	ICFC_XON_XOFF_OUTPUT	: 1
	ICFC_XON_XOFF_INPUT	: 1

IrCommFlowControl	end

IrCommLineStatus	record
				: 4
	ICLS_FRAMING_ERROR	: 1
	ICLS_PARITY_ERROR	: 1
	ICLS_OVERRUN_ERROR	: 1
	ICLS_RESERVED		: 1

IrCommLineStatus	end

IrCommBreak		record
				: 5
	ICB_SET			: 1
	ICB_CLEAR		: 1

IrCommBreak		end

IrCommDTESetting	record
				: 4
	ICDTE_RTS_STATE		: 1
	ICDTE_DTR_STATE		: 1
	ICDTE_RTS_DELTA		: 1
	ICDTE_DTR_DELTA		: 1

IrCommDTESetting	end

IrCommDCESetting	record

	ICDCE_CD_STATE		: 1
	ICDCE_RI_STATE		: 1
	ICDCE_DSR_STATE		: 1
	ICDCE_CTS_STATE		: 1
	ICDCE_CD_DELTA		: 1
	ICDCE_RI_DELTA		: 1
	ICDCE_DSR_DELTA		: 1
	ICDCE_CTS_DELTA		: 1

IrCommDCESetting	end

IrComm1284ConnectMode	etype	byte

	ICCM_COMPATIBLE	enum	IrComm1284ConnectMode, 0x01
	ICCM_NIBBLE	enum	IrComm1284ConnectMode, 0x02
	ICCM_BYTE	enum	IrComm1284ConnectMode, 0x04
	ICCM_ECP_WO_RLE	enum	IrComm1284ConnectMode, 0x08
	ICCM_ECP_W_RLE	enum	IrComm1284ConnectMode, 0x10
	ICCM_EPP	enum	IrComm1284ConnectMode, 0x20

IrComm1284DataTransfer	etype	byte

	ICDT_ECP_WO_RLE	enum	IrComm1284DataTransfer, 0x10
	ICDT_ECP_W_RLE	enum	IrComm1284DataTransfer, 0x11
	ICDT_EPP_READ	enum	IrComm1284DataTransfer, 0x20
	ICDT_EPP_WRITE	enum	IrComm1284DataTransfer, 0x21

IrCommStatusQueryResponse	record
				: 4
	ICSQR_PAPER_END		: 1
	ICSQR_SELECTED		: 1
	ICSQR_IO_ERROR		: 1
	ICSQR_TIME_OUT		: 1
IrCommStatusQueryResponse	end

IrCommTimeOutResponse	etype	byte

	ICTOR_ACCEPTED	enum	IrCommTimeOutResponse, 0x00
	ICTOR_NOT_SUPP	enum	IrCommTimeOutResponse, 0x01

;
; The control channel is used in all the cooked service types to carry
; control parameters which transmit the state of the non-data circuits
; in RS-232 and Centronics, and transmit setup and status information
; between devices.  "PL" is the parameter value length in bytes, and
; "PV" is the parameter value.
;

IrCommControlParameters	etype	byte
;
; General control parameters used in all 3 cooked service types
;
	ICCP_SERVICE_TYPE	enum	IrCommControlParameters, 0x00
	;
	; Must be sent before any data is sent, either as part of the
	; InitialControlParameters during a connect request, or in a
	; separate TTP data packet.  If not sent, the default is the
	; highest of the services offered for the duration of the
	; connection.
	;
	; PL = 1
	; PV = IrCommServiceType
;
; Control parameters used in 3-wire
;
	ICCP_DATA_RATE		enum	IrCommControlParameters, 0x10
	; If not sent, the data rate is undefined.
	;
	; PL = 4
	; PV = dword Data Rate in bits/second

	ICCP_DATA_FORMAT	enum	IrCommControlParameters, 0x11
	; If not sent, the default is 8 bit, No parity, 1 stop bit.
	;
	; PL = 1
	; PV = IrCommDataFormat

	ICCP_FLOW_CONTROL	enum	IrCommControlParameters, 0x12
	; If not sent, the default is no flow control.
	;
	; PL = 1
	; PV = IrCommFlowControl

	ICCP_XON_XOFF		enum	IrCommControlParameters, 0x13
	; Characters to be used for XON/XOFF and ENQ/ACK.  The
	; defaults are 0x11/0x13 for XON/XOFF, and 0x05/0x06 for
	; ENQ/ACK.
	;
	; PL = 2
	; PV = Byte sequence (XON char followed by XOFF char)

	ICCP_ENQ_ACK		enum	IrCommControlParameters, 0x14
	;
	; PL = 2
	; PV = Byte sequence (ENQ char followed by ACK char)

	ICCP_LINE_STATUS	enum	IrCommControlParameters, 0x15
	;
	; PL = 1
	; PV = IrCommLineStatus

	ICCP_BREAK		enum	IrCommControlParameters, 0x16
	;
	; PL = 1
	; PV = IrCommBreak
;
; Parameter IDs 0x17-0x1F are reserved for future 3-Wire parameters.
;

;
; Additional 9-wire parameters
;
	ICCP_DTE		enum	IrCommControlParameters, 0x20
	;
	; PL = 1
	; PV = IrCommDTESetting

	ICCP_DCE		enum	IrCommControlParameters, 0x21
	;
	; PL = 1
	; PV = IrCommDCESetting

	ICCP_POLL		enum	IrCommControlParameters, 0x22
	;
	; No data

;
; Parameter Ids 0x23-0x2F are reserved for future 9-Wire parameters.
;

;
; Centronics control parameters
;
	ICCP_STATUS_QUERY	enum	IrCommControlParameters, 0x30
	;
	; No data

	ICCP_SET_TIMEOUT	enum	IrCommControlParameters, 0x31
	;
	; PL = 1
	; PV = byte (Timeout value in seconds)

	ICCP_1284_MODE_SUPPORT	enum	IrCommControlParameters, 0x32
	;
	; No data

	ICCP_1284_DEVICE_ID	enum	IrCommControlParameters, 0x33
	;
	; No data

	ICCP_1284_MODE		enum	IrCommControlParameters, 0x34
	;
	; PL = varies
	; PV = 1st byte: IrComm1284SelectMode; 2nd byte: extensibility link

	ICCP_1284_ECP_PPP	enum	IrCommControlParameters, 0x35
	;
	; PL = 2
	; PV = 	1st byte: IrComm1284DataTransfer; 
	;	2nd byte: if ECP, channel number; if EPP, channel address


	ICCP_STATUS_QUERY_RESP	enum	IrCommControlParameters, 0x38
	;
	; PL = 1
	; PV = IrCommStatusQueryResponse

	ICCP_TIMEOUT_RESP	enum	IrCommControlParameters, 0x39
	;
	; PL = 1
	; PV = IrCommTimeOutResponse

	ICCP_1284_MODE_SUPPORT_RESP enum IrCommControlParameters, 0x3A
	;
	; PL = 1
	; PV = IrComm1284SelectMode

	ICCP_1284_DEVICE_ID_RESP enum	IrCommControlParameters, 0x3B
	ICCP_1284_MODE_RESP	enum	IrCommControlParameters, 0x3C
	ICCP_1284_ECP_PPP_RESP	enum	IrCommControlParameters, 0x3D


