COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1991 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		Keyboard Drivers -- Tandy 1000
FILE:		ekmapUS.def

AUTHOR:		Gene Anderson, Aug 28, 1989

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	eca	8/28/89		Initial revision
	ardeb	5/7/91		Changed to handle Tandy 1000 scan codes.

DESCRIPTION:
	contains keyboard map for U.S. extended keyboard
		
	$Id: kmapT1000.def,v 1.1 97/04/18 11:47:09 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

KeyboardMap	label	KeyboardTable

KbdHeader	KbdConvHeader <
		KEYMAP_US_EXTD,		;keyboard ID
		1,			;version / class
		KT_BOTH,		;keyboard type / # keys
		<1>			;keyboard flags -- keyboard handles
					; toggles for us (how nice)
>

ForceRef	KbdHeader

KbdExtendedScanCodes	label	byte
	byte	0xe0, 0xe1, 0, 0	;extensions on PS/2 keyboard

KbdExtendedScanTable	label	ExtendedScanDef
	byte	038h, 0e0h, 076h	; right alt key --> alt
	byte	01dh, 0e0h, 077h	; right ctrl key --> ctrl
	byte	035h, 0e0h, 078h	; keypad / key --> /
	byte	01ch, 0e0h, 079h	; keypad ENTER key --> ENTER
	byte	01dh, 0e1h, 01dh	; extended left ctrl --> ctrl
	byte	0,0,0
	byte	0,0,0
	byte	0,0,0
	byte	0,0,0
	byte	0,0,0
	byte	0,0,0
	byte	0,0,0
	byte	0,0,0
	byte	0,0,0
	byte	0,0,0
	byte	0,0,0
						; 48 bytes total

;
;	Byte 0: KeyDataFlags
;	Byte 1: unshifted
;	Byte 2: shifted
;	Byte 3; # of extended entry
;
KbdKeyDefTable	KeyDef	<					; SCAN CODE   1
	KEY_SOLO,					; KD_keyType
	<C_CTRL VC_ESCAPE>,				; KD_char
	<C_CTRL CS_CONTROL>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE   2
	KD_EXTENDED or KEY_NONALPHA,			; KD_keyType
	<C_BSW C_ONE>,					; KD_char
	<C_BSW C_EXCLAMATION>,				; KD_shiftChar
	6						; KD_extEntry
>, <								; SCAN CODE   3
	KD_EXTENDED or KEY_NONALPHA,			; KD_keyType
	<C_BSW C_TWO>,					; KD_char
	<C_BSW C_AT_SIGN>,				; KD_shiftChar
	7						; KD_extEntry
>, <								; SCAN CODE   4
	KD_EXTENDED or KEY_NONALPHA,			; KD_keyType
	<C_BSW C_THREE>,				; KD_char
	<C_BSW C_NUMBER_SIGN>,				; KD_shiftChar
	8						; KD_extEntry
>, <								; SCAN CODE   5
	KD_EXTENDED or KEY_NONALPHA,			; KD_keyType
	<C_BSW C_FOUR>,					; KD_char
	<C_BSW C_DOLLAR_SIGN>,				; KD_shiftChar
	9						; KD_extEntry
>, <								; SCAN CODE   6
	KD_EXTENDED or KEY_NONALPHA,			; KD_keyType
	<C_BSW C_FIVE>,					; KD_char
	<C_BSW C_PERCENT>,				; KD_shiftChar
	10						; KD_extEntry
>, <								; SCAN CODE   7
	KD_EXTENDED or KEY_NONALPHA,			; KD_keyType
	<C_BSW C_SIX>,					; KD_char
	<C_BSW C_ASCII_CIRCUMFLEX>,			; KD_shiftChar
	11						; KD_extEntry
>, <								; SCAN CODE   8
	KD_EXTENDED or KEY_NONALPHA,			; KD_keyType
	<C_BSW C_SEVEN>,				; KD_char
	<C_BSW C_AMPERSAND>,				; KD_shiftChar
	12						; KD_extEntry
>, <								; SCAN CODE   9
	KD_EXTENDED or KEY_NONALPHA,			; KD_keyType
	<C_BSW C_EIGHT>,				; KD_char
	<C_BSW C_ASTERISK>,				; KD_shiftChar
	13						; KD_extEntry
>, <								; SCAN CODE   a
	KD_EXTENDED or KEY_NONALPHA,			; KD_keyType
	<C_BSW C_NINE>,					; KD_char
	<C_BSW C_LEFT_PAREN>,				; KD_shiftChar
	14						; KD_extEntry
>, <								; SCAN CODE   b
	KD_EXTENDED or KEY_NONALPHA,			; KD_keyType
	<C_BSW C_ZERO>,					; KD_char
	<C_BSW C_RIGHT_PAREN>,				; KD_shiftChar
	15						; KD_extEntry
>, <								; SCAN CODE   c
	KD_EXTENDED or KEY_NONALPHA,			; KD_keyType
	<C_BSW C_MINUS>,				; KD_char
	<C_BSW C_UNDERSCORE>,				; KD_shiftChar
	4						; KD_extEntry
>, <								; SCAN CODE   d
	KD_EXTENDED or KEY_NONALPHA,			; KD_keyType
	<C_BSW C_EQUAL>,				; KD_char
	<C_BSW C_PLUS>,					; KD_shiftChar
	16						; KD_extEntry
>, <								; SCAN CODE   e
	KEY_SOLO,					; KD_keyType
	<C_CTRL VC_BACKSPACE>,				; KD_char
	<C_CTRL CS_CONTROL>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE   f
	KEY_SOLO,					; KD_keyType
	<C_CTRL VC_TAB>,				; KD_char
	<C_CTRL CS_CONTROL>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  10
	KD_EXTENDED or KEY_ALPHA,			; KD_keyType
	<C_BSW C_SMALL_Q>,				; KD_char
	<C_BSW C_CAP_Q>,				; KD_shiftChar
	17						; KD_extEntry
>, <								; SCAN CODE  11
	KD_EXTENDED or KEY_ALPHA,			; KD_keyType
	<C_BSW C_SMALL_W>,				; KD_char
	<C_BSW C_CAP_W>,				; KD_shiftChar
	18						; KD_extEntry
>, <								; SCAN CODE  12
	KD_EXTENDED or KD_ACCENTABLE or KEY_ALPHA,	; KD_keyType
	<C_BSW C_SMALL_E>,				; KD_char
	<C_BSW C_CAP_E>,				; KD_shiftChar
	19						; KD_extEntry
>, <								; SCAN CODE  13
	KD_EXTENDED or KEY_ALPHA,			; KD_keyType
	<C_BSW C_SMALL_R>,				; KD_char
	<C_BSW C_CAP_R>,				; KD_shiftChar
	20						; KD_extEntry
>, <								; SCAN CODE  14
	KD_EXTENDED or KEY_ALPHA,			; KD_keyType
	<C_BSW C_SMALL_T>,				; KD_char
	<C_BSW C_CAP_T>,				; KD_shiftChar
	21						; KD_extEntry
>, <								; SCAN CODE  15
	KD_EXTENDED or KD_ACCENTABLE or KEY_ALPHA,	; KD_keyType
	<C_BSW C_SMALL_Y>,				; KD_char
	<C_BSW C_CAP_Y>,				; KD_shiftChar
	22						; KD_extEntry
>, <								; SCAN CODE  16
	KD_EXTENDED or KD_ACCENTABLE or KEY_ALPHA,	; KD_keyType
	<C_BSW C_SMALL_U>,				; KD_char
	<C_BSW C_CAP_U>,				; KD_shiftChar
	23						; KD_extEntry
>, <								; SCAN CODE  17
	KD_EXTENDED or KD_ACCENTABLE or KEY_ALPHA,	; KD_keyType
	<C_BSW C_SMALL_I>,				; KD_char
	<C_BSW C_CAP_I>,				; KD_shiftChar
	24						; KD_extEntry
>, <								; SCAN CODE  18
	KD_EXTENDED or KD_ACCENTABLE or KEY_ALPHA,	; KD_keyType
	<C_BSW C_SMALL_O>,				; KD_char
	<C_BSW C_CAP_O>,				; KD_shiftChar
	25						; KD_extEntry
>, <								; SCAN CODE  19
	KD_EXTENDED or KEY_ALPHA,			; KD_keyType
	<C_BSW C_SMALL_P>,				; KD_char
	<C_BSW C_CAP_P>,				; KD_shiftChar
	26						; KD_extEntry
>, <								; SCAN CODE  1a
	KD_EXTENDED or KEY_NONALPHA,			; KD_keyType
	<C_BSW C_LEFT_BRACKET>,				; KD_char
	<C_BSW C_LEFT_BRACE>,				; KD_shiftChar
	27						; KD_extEntry
>, <								; SCAN CODE  1b
	KD_EXTENDED or KEY_NONALPHA,			; KD_keyType
	<C_BSW C_RIGHT_BRACKET>,			; KD_char
	<C_BSW C_RIGHT_BRACE>,				; KD_shiftChar
	28						; KD_extEntry
>, <								; SCAN CODE  1c
	KEY_SOLO,					; KD_keyType
	<C_CTRL VC_ENTER>,				; KD_char
	<C_CTRL CS_CONTROL>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  1d
	KD_STATE_KEY or KEY_SHIFT,			; KD_keyType
	<C_CTRL VC_LCTRL>,				; KD_char
	<C_CTRL LCTRL>,					; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  1e
	KD_EXTENDED or KD_ACCENTABLE or KEY_ALPHA,	; KD_keyType
	<C_BSW C_SMALL_A>,				; KD_char
	<C_BSW C_CAP_A>,				; KD_shiftChar
	29						; KD_extEntry
>, <								; SCAN CODE  1f
	KD_EXTENDED or KEY_ALPHA,			; KD_keyType
	<C_BSW C_SMALL_S>,				; KD_char
	<C_BSW C_CAP_S>,				; KD_shiftChar
	30						; KD_extEntry
>, <								; SCAN CODE  20
	KD_EXTENDED or KEY_ALPHA,			; KD_keyType
	<C_BSW C_SMALL_D>,				; KD_char
	<C_BSW C_CAP_D>,				; KD_shiftChar
	31						; KD_extEntry
>, <								; SCAN CODE  21
	KD_EXTENDED or KEY_ALPHA,			; KD_keyType
	<C_BSW C_SMALL_F>,				; KD_char
	<C_BSW C_CAP_F>,				; KD_shiftChar
	32						; KD_extEntry
>, <								; SCAN CODE  22
	KD_EXTENDED or KEY_ALPHA,			; KD_keyType
	<C_BSW C_SMALL_G>,				; KD_char
	<C_BSW C_CAP_G>,				; KD_shiftChar
	33						; KD_extEntry
>, <								; SCAN CODE  23
	KEY_ALPHA,					; KD_keyType
	<C_BSW C_SMALL_H>,				; KD_char
	<C_BSW C_CAP_H>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  24
	KD_EXTENDED or KEY_ALPHA,			; KD_keyType
	<C_BSW C_SMALL_J>,				; KD_char
	<C_BSW C_CAP_J>,				; KD_shiftChar
	35						; KD_extEntry
>, <								; SCAN CODE  25
	KEY_ALPHA,					; KD_keyType
	<C_BSW C_SMALL_K>,				; KD_char
	<C_BSW C_CAP_K>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  26
	KD_EXTENDED or KEY_ALPHA,			; KD_keyType
	<C_BSW C_SMALL_L>,				; KD_char
	<C_BSW C_CAP_L>,				; KD_shiftChar
	37						; KD_extEntry
>, <								; SCAN CODE  27
	KD_EXTENDED or KEY_NONALPHA,			; KD_keyType
	<C_BSW C_SEMICOLON>,				; KD_char
	<C_BSW C_COLON>,				; KD_shiftChar
	38						; KD_extEntry
>, <								; SCAN CODE  28
	KD_EXTENDED or KEY_NONALPHA,			; KD_keyType
	<C_BSW C_SNG_QUOTE>,				; KD_char
	<C_BSW C_QUOTE>,				; KD_shiftChar
	39						; KD_extEntry
>, <								; SCAN CODE  29
	KEY_SOLO,					; KD_keyType
	<C_CTRL VC_UP>,					; KD_char
	<C_CTRL CS_CONTROL>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  2a
	KD_STATE_KEY or KEY_SHIFT,			; KD_keyType
	<C_CTRL VC_LSHIFT>,				; KD_char
	<C_CTRL LSHIFT>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  2b
	KEY_SOLO,					; KD_keyType
	<C_CTRL VC_LEFT>,				; KD_char
	<C_CTRL CS_CONTROL>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  2c
	KD_EXTENDED or KEY_ALPHA,			; KD_keyType
	<C_BSW C_SMALL_Z>,				; KD_char
	<C_BSW C_CAP_Z>,				; KD_shiftChar
	42						; KD_extEntry
>, <								; SCAN CODE  2d
	KD_EXTENDED or KEY_ALPHA,			; KD_keyType
	<C_BSW C_SMALL_X>,				; KD_char
	<C_BSW C_CAP_X>,				; KD_shiftChar
	43						; KD_extEntry
>, <								; SCAN CODE  2e
	KD_EXTENDED or KEY_ALPHA,			; KD_keyType
	<C_BSW C_SMALL_C>,				; KD_char
	<C_BSW C_CAP_C>,				; KD_shiftChar
	44						; KD_extEntry
>, <								; SCAN CODE  2f
	KD_EXTENDED or KEY_ALPHA,			; KD_keyType
	<C_BSW C_SMALL_V>,				; KD_char
	<C_BSW C_CAP_V>,				; KD_shiftChar
	45						; KD_extEntry
>, <								; SCAN CODE  30
	KD_EXTENDED or KEY_ALPHA,			; KD_keyType
	<C_BSW C_SMALL_B>,				; KD_char
	<C_BSW C_CAP_B>,				; KD_shiftChar
	46						; KD_extEntry
>, <								; SCAN CODE  31
	KD_EXTENDED or KD_ACCENTABLE or KEY_ALPHA,	; KD_keyType
	<C_BSW C_SMALL_N>,				; KD_char
	<C_BSW C_CAP_N>,				; KD_shiftChar
	47						; KD_extEntry
>, <								; SCAN CODE  32
	KD_EXTENDED or KEY_ALPHA,			; KD_keyType
	<C_BSW C_SMALL_M>,				; KD_char
	<C_BSW C_CAP_M>,				; KD_shiftChar
	48						; KD_extEntry
>, <								; SCAN CODE  33
	KD_EXTENDED or KEY_NONALPHA,			; KD_keyType
	<C_BSW C_COMMA>,				; KD_char
	<C_BSW C_LESS_THAN>,				; KD_shiftChar
	49						; KD_extEntry
>, <								; SCAN CODE  34
	KD_EXTENDED or KEY_NONALPHA,			; KD_keyType
	<C_BSW C_PERIOD>,				; KD_char
	<C_BSW C_GREATER_THAN>,				; KD_shiftChar
	50						; KD_extEntry
>, <								; SCAN CODE  35
	KD_EXTENDED or KEY_NONALPHA,			; KD_keyType
	<C_BSW C_SLASH>,				; KD_char
	<C_BSW C_QUESTION_MARK>,			; KD_shiftChar
	51						; KD_extEntry
>, <								; SCAN CODE  36
	KD_STATE_KEY or KEY_SHIFT,			; KD_keyType
	<C_CTRL VC_RSHIFT>,				; KD_char
	<C_CTRL RSHIFT>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  37
	KD_EXTENDED or KEY_NONALPHA,			; KD_keyType
	<C_CTRL VC_INVALID_KEY>,			; KD_char
	<C_CTRL VC_PRINTSCREEN>,			; KD_shiftChar
	3						; KD_extEntry
>, <								; SCAN CODE  38
	KD_STATE_KEY or KEY_SHIFT,			; KD_keyType
	<C_CTRL VC_LALT>,				; KD_char
	<C_CTRL LALT>,					; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  39
	KEY_NONALPHA or KD_EXTENDED or KD_ACCENTABLE,			; KD_keyType
	<C_BSW C_SPACE>,				; KD_char
	<C_BSW C_SPACE>,					; KD_shiftChar
	5						; KD_extEntry
>, <								; SCAN CODE  3a
	KD_STATE_KEY or KD_SET_LED or KEY_TOGGLE,	; KD_keyType
	<C_CTRL VC_CAPSLOCK>,				; KD_char
	<C_CTRL TOGGLE_CAPSLOCK>,			; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  3b
	KEY_SOLO,					; KD_keyType
	<C_CTRL VC_F1>,					; KD_char
	<C_CTRL CS_CONTROL>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  3c
	KEY_SOLO,					; KD_keyType
	<C_CTRL VC_F2>,					; KD_char
	<C_CTRL CS_CONTROL>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  3d
	KEY_SOLO,					; KD_keyType
	<C_CTRL VC_F3>,					; KD_char
	<C_CTRL CS_CONTROL>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  3e
	KEY_SOLO,					; KD_keyType
	<C_CTRL VC_F4>,					; KD_char
	<C_CTRL CS_CONTROL>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  3f
	KEY_SOLO,					; KD_keyType
	<C_CTRL VC_F5>,					; KD_char
	<C_CTRL CS_CONTROL>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  40
	KEY_SOLO,					; KD_keyType
	<C_CTRL VC_F6>,					; KD_char
	<C_CTRL CS_CONTROL>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  41
	KEY_SOLO,					; KD_keyType
	<C_CTRL VC_F7>,					; KD_char
	<C_CTRL CS_CONTROL>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  42
	KEY_SOLO,					; KD_keyType
	<C_CTRL VC_F8>,					; KD_char
	<C_CTRL CS_CONTROL>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  43
	KEY_SOLO,					; KD_keyType
	<C_CTRL VC_F9>,					; KD_char
	<C_CTRL CS_CONTROL>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  44
	KEY_SOLO,					; KD_keyType
	<C_CTRL VC_F10>,				; KD_char
	<C_CTRL CS_CONTROL>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  45
	KD_STATE_KEY or KD_SET_LED or KEY_TOGGLE,	; KD_keyType
	<C_CTRL VC_NUMLOCK>,				; KD_char
	<C_CTRL TOGGLE_NUMLOCK>,			; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  46
	KEY_SOLO,					; KD_keyType
	<C_CTRL VC_PAUSE>,				; KD_char
	<C_CTRL CS_CONTROL>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  47
	KD_EXTENDED or KEY_PAD,				; KD_keyType
	<C_BSW C_BACKSLASH>,				; KD_char
	<C_CTRL VC_NUMPAD_7>,				; KD_shiftChar
	52						; KD_extEntry
>, <								; SCAN CODE  48
	KD_EXTENDED or KEY_PAD,				; KD_keyType
	<C_BSW C_ASCII_TILDE>,				; KD_char
	<C_CTRL VC_NUMPAD_8>,				; KD_shiftChar
	52						; KD_extEntry
>, <								; SCAN CODE  49
	KEY_PAD,					; KD_keyType
	<C_CTRL VC_PREVIOUS>,				; KD_char
	<C_CTRL VC_NUMPAD_9>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  4a
	KEY_SOLO,					; KD_keyType
	<C_CTRL VC_DOWN>,				; KD_char
	<C_CTRL CS_CONTROL>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  4b
	KD_EXTENDED or KEY_PAD,				; KD_keyType
	<C_BSW C_VERTICAL_BAR>,				; KD_char
	<C_CTRL VC_NUMPAD_4>,				; KD_shiftChar
	52						; KD_extEntry
>, <								; SCAN CODE  4c
	KEY_PAD,					; KD_keyType
	<C_CTRL VC_INVALID_KEY>,			; KD_char
	<C_CTRL VC_NUMPAD_5>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  4d
	KEY_PAD,					; KD_keyType
	<C_CTRL VC_INVALID_KEY>,			; KD_char
	<C_CTRL VC_NUMPAD_6>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  4e
	KEY_SOLO,					; KD_keyType
	<C_CTRL VC_RIGHT>,				; KD_char
	<C_CTRL CS_CONTROL>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  4f
	KEY_PAD,					; KD_keyType
	<C_CTRL VC_END>,				; KD_char
	<C_CTRL VC_NUMPAD_1>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  50
	KD_EXTENDED or KEY_PAD,				; KD_keyType
	<C_BSW C_BACKQUOTE>,				; KD_char
	<C_CTRL VC_NUMPAD_2>,				; KD_shiftChar
	52						; KD_extEntry
>, <								; SCAN CODE  51
	KEY_PAD,					; KD_keyType
	<C_CTRL VC_NEXT>,				; KD_char
	<C_CTRL VC_NUMPAD_3>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  52
	KEY_PAD,					; KD_keyType
	<C_CTRL VC_INVALID_KEY>,			; KD_char
	<C_CTRL VC_NUMPAD_0>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  53
	KD_EXTENDED or KEY_PAD,				; KD_keyType
	<C_CTRL VC_DEL>,				; KD_char
	<C_CTRL VC_NUMPAD_MINUS>,			; KD_shiftChar
	2						; KD_extEntry
>, <								; SCAN CODE  54
	KD_STATE_KEY or KD_EXTENDED or KD_SET_LED or KEY_TOGGLE,; KD_keyType
	<C_CTRL VC_SCROLLLOCK>,				; KD_char
	<C_CTRL TOGGLE_SCROLLLOCK>,			; KD_shiftChar
	1						; KD_extEntry
>, <								; SCAN CODE  55
	KEY_PAD,					; KD_keyType
	<C_CTRL VC_INS>,				; KD_char
	<C_CTRL VC_NUMPAD_PLUS>,			; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  56
	KEY_SOLO,					; KD_keyType
	<C_BSW VC_NUMPAD_PERIOD>,			; KD_char
	<C_CTRL CS_CONTROL>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  57
	KEY_SOLO,					; KD_keyType
	<C_CTRL VC_ENTER>,				; KD_char
	<C_CTRL CS_CONTROL>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  58
	KEY_SOLO,					; KD_keyType
	<C_CTRL VC_HOME>,				; KD_char
	<C_CTRL CS_CONTROL>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  59
	KEY_SOLO,					; KD_keyType
	<C_CTRL VC_F11>,				; KD_char
	<C_CTRL CS_CONTROL>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  5a
	KEY_SOLO,					; KD_keyType
	<C_CTRL VC_F12>,				; KD_char
	<C_CTRL CS_CONTROL>,				; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  5b
	0,						; KD_keyType
	<C_CTRL 0>,					; KD_char
	<C_CTRL 0>,					; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  5c
	0,						; KD_keyType
	<C_CTRL 0>,					; KD_char
	<C_CTRL 0>,					; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  5d
	0,						; KD_keyType
	<C_CTRL 0>,					; KD_char
	<C_CTRL 0>,					; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  5e
	0,						; KD_keyType
	<C_CTRL 0>,					; KD_char
	<C_CTRL 0>,					; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  5f
	0,						; KD_keyType
	<C_CTRL 0>,					; KD_char
	<C_CTRL 0>,					; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  60
; NEVER USED (conflicts w/PS/2 E0 codes)
	0,						; KD_keyType
	<C_CTRL 0>,					; KD_char
	<C_CTRL 0>,					; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  61
; NEVER USED (conflicts w/PS/2 E1 codes)
	0,						; KD_keyType
	<C_CTRL 0>,					; KD_char
	<C_CTRL 0>,					; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  62
	0,						; KD_keyType
	<C_CTRL 0>,					; KD_char
	<C_CTRL 0>,					; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  63
	0,						; KD_keyType
	<C_CTRL 0>,					; KD_char
	<C_CTRL 0>,					; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  64
	0,						; KD_keyType
	<C_CTRL 0>,					; KD_char
	<C_CTRL 0>,					; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  65
	0,						; KD_keyType
	<C_CTRL 0>,					; KD_char
	<C_CTRL 0>,					; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  66
	0,						; KD_keyType
	<C_CTRL 0>,					; KD_char
	<C_CTRL 0>,					; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  67
	0,						; KD_keyType
	<C_CTRL 0>,					; KD_char
	<C_CTRL 0>,					; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  68
	0,						; KD_keyType
	<C_CTRL 0>,					; KD_char
	<C_CTRL 0>,					; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  69
	0,						; KD_keyType
	<C_CTRL 0>,					; KD_char
	<C_CTRL 0>,					; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  6a
	0,						; KD_keyType
	<C_CTRL 0>,					; KD_char
	<C_CTRL 0>,					; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  6b
	0,						; KD_keyType
	<C_CTRL 0>,					; KD_char
	<C_CTRL 0>,					; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  6c
	0,						; KD_keyType
	<C_CTRL 0>,					; KD_char
	<C_CTRL 0>,					; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  6d
	0,						; KD_keyType
	<C_CTRL 0>,					; KD_char
	<C_CTRL 0>,					; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  6e
	0,						; KD_keyType
	<C_CTRL 0>,					; KD_char
	<C_CTRL 0>,					; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  6f
	0,						; KD_keyType
	<C_CTRL 0>,					; KD_char
	<C_CTRL 0>,					; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  70
	0,						; KD_keyType
	<C_CTRL 0>,					; KD_char
	<C_CTRL 0>,					; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  71
	0,						; KD_keyType
	<C_CTRL 0>,					; KD_char
	<C_CTRL 0>,					; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  72
	0,						; KD_keyType
	<C_CTRL 0>,					; KD_char
	<C_CTRL 0>,					; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  73
	0,						; KD_keyType
	<C_CTRL 0>,					; KD_char
	<C_CTRL 0>,					; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  74
	0,						; KD_keyType
	<C_CTRL 0>,					; KD_char
	<C_CTRL 0>,					; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  75
	0,						; KD_keyType
	<C_CTRL 0>,					; KD_char
	<C_CTRL 0>,					; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  76
	0,						; KD_keyType
	<C_CTRL 0>,					; KD_char
	<C_CTRL 0>,					; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  77
	0,						; KD_keyType
	<C_CTRL 0>,					; KD_char
	<C_CTRL 0>,					; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  78
	0,						; KD_keyType
	<C_CTRL 0>,					; KD_char
	<C_CTRL 0>,					; KD_shiftChar
	0						; KD_extEntry
>, <								; SCAN CODE  79
	0,						; KD_keyType
	<C_CTRL 0>,					; KD_char
	<C_CTRL 0>,					; KD_shiftChar
	0						; KD_extEntry
>

; VALUES of 7a & above conflict w/keyboard
; response codes, & so are not used.
							; 484 bytes
; Define maximum scan code so we can pass the buck if we don't recognize
; something
KBD_MAX_SCAN	equ length KbdKeyDefTable

;
; Table for extended definitions:
;    charSysFlags	ExtVirtualBits		;keys that are virtual
;    charAccents	ExtAccentBits		;keys that are accents
;    ctrlChar		byte			;<ctrl>-key
;    shiftCtrlChar	byte			;<shift><ctrl>-key
;    altChar		byte			;<alt>-key
;    shiftAltChar	byte			;<shift><alt>-key
;    ctrlAltChar	byte			;<ctrl><alt>-key
;    shiftCtrlAltChar	byte			;<shift><ctrl><alt>-key
;

KbdExtendedDefTable \
	ExtendedDef <					; EXT 0: NUM LOCK
	EV_KEY or EV_SHIFT or EV_CTRL or EV_SHIFT_CTRL,
	0,
	<C_CTRL VC_BREAK>, <C_CTRL VC_BREAK>,
	<>, <>,
	<>, <>
>,<							; EXT 1: SCROLL LOCK
	EV_KEY or EV_SHIFT or EV_CTRL or EV_SHIFT_CTRL,
	0,
	<C_CTRL VC_BREAK>, <C_CTRL VC_BREAK>,
	<>, <>,
	<>, <>
>,<							; EXT 2: DEL / .
	EV_KEY or EV_SHIFT or EV_CTRL_ALT or EV_SHIFT_CTRL_ALT,
	0,
	<>, <>,
	<>, <>,
	<C_CTRL VC_SYSTEMRESET>, <C_CTRL VC_SYSTEMRESET>
>,<							; EXT 3: PrtSc / *
	EV_KEY or EV_SHIFT,
	0,
	<>, <>,
	<>, <>,
	<>, <>
>,<							; EXT 4: -_
	0,0,
	<C_BSW C_OPTHYPHEN>, <>,
	<>, <>,
	<C_BSW C_ENDASH>, <C_BSW C_EMDASH>
>,<							; EXT 5: space
	0,0,
	<>, <>,
	<C_BSW C_NONBRKSPACE>, <C_BSW C_EMSPACE>,
	<C_BSW C_ENSPACE>, <C_BSW C_THINSPACE>
>,<							; EXT 6: 1!
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_EXCLAMDOWN>, <>
>,<							; EXT 7: 2@
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_TRADEMARK>, <>
>,<							; EXT 8: 3#
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_STERLING>, <C_BSW C_FRACTION>
>,<							; EXT 9: 4$
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_CENT>, <C_BSW C_CURRENCY>
>,<							; EXT 10: 5%
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_INFINITY>, <C_BSW C_PERTHOUSAND>
>,<							; EXT 11: 6^
	0,
	EV_SHIFT_CTRL_ALT,				;accent?
	<>, <>,
	<>, <>,
	<C_BSW C_SECTION>, <C_BSW C_CIRCUMFLEX>
>,<							; EXT 12: 7&
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_PARAGRAPH>, <>
>,<							; EXT 13: 8*
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_BULLET>, <C_BSW C_DEGREE>
>,<							; EXT 14: 9(
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_ORDFEMININE>, <>
>,<							; EXT 15: 0)
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_ORDMASCULINE>, <C_BSW C_CNTR_DOT>
>,<							; EXT 16: =+
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_NOTEQUAL>, <C_BSW C_PLUSMINUS>
>,<							; EXT 17: qQ
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_L_OE>, <C_BSW C_U_OE>
>,<							; EXT 18: wW
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_U_SIGMA>, <C_BSW C_MACRON>
>,<							; EXT 19: eE
	0,
	EV_CTRL_ALT,					;accent?
	<>, <>,
	<>, <>,
	<C_BSW C_ACUTE>, <C_BSW C_CEDILLA>
>,<							; EXT 20: rR
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_REGISTERED>, <C_BSW C_RING>
>,<							; EXT 21: tT
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_DAGGER>, <C_BSW C_DBLDAGGER>
>,<							; EXT 22: yY
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_YEN>, <C_BSW C_OGONEK>
>,<							; EXT 23: uU
	0,
	EV_CTRL_ALT,					;accent?
	<>, <>,
	<>, <>,
	<C_BSW C_DIERESIS>, <C_BSW C_HUNGARUMLAT>
>,<							; EXT 24: iI
	0,
	EV_CTRL_ALT,					;accent?
	<>, <>,
	<>, <>,
	<C_BSW C_CIRCUMFLEX>, <C_BSW C_LI_DOTLESS>
>,<							; EXT 25: oO
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_LO_SLASH>, <C_BSW C_UO_SLASH>
>,<							; EXT 26: pP
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_L_PI>, <C_BSW C_U_PI>
>,<							; EXT 27: [{
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_QUOTEDBLLEFT>, <C_BSW C_QUOTEDBLRIGHT>
>,<							; EXT 28: }]
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_QUOTESNGLEFT>, <C_BSW C_QUOTESNGRIGHT>
>,<							; EXT 29: aA
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_LA_RING>, <C_BSW C_UA_RING>
>,<							; EXT 30: sS
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_GERMANDBLS>, <C_BSW C_CARON>
>,<							; EXT 31: dD
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_PARTIAL_DIFF>, <C_BSW C_DOTACCENT>
>,<							; EXT 32: fF
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_FLORIN>, <>
>,<							; EXT 33: gG
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_COPYRIGHT>, <>
>,<							; EXT 34: FREE
	0,0,
	<>, <>,
	<>, <>,
	<>, <>
>,<							; EXT 35: jJ
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_U_DELTA>, <>
>,<							; EXT 36:FREE
	0,0,
	<>, <>,
	<>, <>,
	<>, <>
>,<							; EXT 37: lL
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_LOGICAL_NOT>, <C_BSW C_SNGQUOTELOW>
>,<							; EXT 38: ;:
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_ELLIPSIS>, <C_BSW C_DBLQUOTELOW>
>,<							; EXT 39: 
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_L_AE>, <C_BSW C_U_AE>
>,<							; EXT 40: `~
	0,
	EV_CTRL_ALT or EV_SHIFT_CTRL_ALT,		;accent?
	<>, <>,
	<>, <>,
	<C_BSW C_GRAVE>, <C_BSW C_TILDE>
>,<							; EXT 41: \|
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_GUILLEDBLLEFT>, <C_BSW C_GUILLEDBLRIGHT>
>,<							; EXT 42: zZ
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_U_OMEGA>, <C_BSW C_BREVE>
>,<							; EXT 43: xX
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_APPROX_EQUAL>, <>
>,<							; EXT 44: cC
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_LC_CEDILLA>, <C_BSW C_UC_CEDILLA>
>,<							; EXT 45: vV
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_RADICAL>, <C_BSW C_LOZENGE>
>,<							; EXT 46: bB
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_INTEGRAL>, <>
>,<							; EXT 47: nN
	0,EV_CTRL_ALT or EV_SHIFT_CTRL_ALT,		;accent?
	<>, <>,
	<>, <>,
	<C_BSW C_TILDE>, <C_BSW C_TILDE>
>,<							; EXT 48: mM
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_L_MU>, <>
>,<							; EXT 49:
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_LESSEQUAL>, <C_BSW C_GUILSNGLEFT>
>,<							; EXT 50:
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_GREATEREQUAL>, <C_BSW C_GUILSNGRIGHT>
>,<							; EXT 51: /?
	0,0,
	<>, <>,
	<>, <>,
	<C_BSW C_DIVISION>, <C_BSW C_QUESTIONDOWN>
>,<							; EXT 52: numpad & real
							;  chars (2/`, 4/|,
							;  7/`, 8/~)
	EV_SHIFT,		; unshifted isn't virtual
	0,
	<>, <>,
	<>, <>,
	<>, <>
>,<							; EXT 53:
	0,0,
	<>, <>,
	<>, <>,
	<>, <>
>,<							; EXT 54:
	0,0,
	<>, <>,
	<>, <>,
	<>, <>
>,<							; EXT 55:
	0,0,
	<>, <>,
	<>, <>,
	<>, <>
>

KbdAccentables	label	Chars
	byte	' ','a','A','e','E','i','I','o','O','u','U','n','N','y','Y',0
						; Accentable chars

KbdAccentTable:
AccentDef <<					;accents themselves
	C_DIERESIS,
	C_ACUTE,
	C_TILDE,
	C_GRAVE,
	C_CIRCUMFLEX
>>,<<						;accents for 'a'
	C_LA_DIERESIS,
	C_LA_ACUTE,
	C_LA_TILDE,
	C_LA_GRAVE,
	C_LA_CIRCUMFLEX
>>,<<						;accents for 'A'
	C_UA_DIERESIS,
	C_UA_ACUTE,
	C_UA_TILDE,
	C_UA_GRAVE,
	C_UA_CIRCUMFLEX
>>,<<						; accents for 'e'
	C_LE_DIERESIS,
	C_LE_ACUTE,
	0,
	C_LE_GRAVE,
	C_LE_CIRCUMFLEX
>>,<<						; accents for 'E'
	C_UE_DIERESIS,
	C_UE_ACUTE,
	0,
	C_UE_GRAVE,
	C_UE_CIRCUMFLEX
>>,<<						; accents for 'i'
	C_LI_DIERESIS,
	C_LI_ACUTE,
	0,
	C_LI_GRAVE,
	C_LI_CIRCUMFLEX
>>,<<						; accents for 'I'
	C_UI_DIERESIS,
	C_UI_ACUTE,
	0,
	C_UI_GRAVE,
	C_UI_CIRCUMFLEX
>>,<<						; accents for 'o'
	C_LO_DIERESIS,
	C_LO_ACUTE,
	C_LO_TILDE,
	C_LO_GRAVE,
	C_LO_CIRCUMFLEX
>>,<<						; accents for 'O'
	C_UO_DIERESIS,
	C_UO_ACUTE,
	C_UO_TILDE,
	C_UO_GRAVE,
	C_UO_CIRCUMFLEX
>>,<<						; accents for 'u'
	C_LU_DIERESIS,
	C_LU_ACUTE,
	0,
	C_LU_GRAVE,
	C_LU_CIRCUMFLEX
>>,<<						; accents for 'U'
	C_UU_DIERESIS,
	C_UU_ACUTE,
	0,
	C_UU_GRAVE,
	C_UU_CIRCUMFLEX
>>,<<						; accents for 'n'
	0,0,
	C_LN_TILDE
>>,<<						; accents for 'N'
	0,0,
	C_UN_TILDE
>>,<<						; accents for 'y'
	C_LY_DIERESIS,
	C_LY_ACUTE
>>,<<						; accents for 'Y'
	C_UY_DIERESIS,
	C_UY_ACUTE
>>,<<						; unused
>>

