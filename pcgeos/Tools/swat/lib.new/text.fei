table enter $fatalerr_info_table text::SUM_OF_VARIOUS_HEIGHTS_IS_NOT_RIGHT {
 During calculation the text object assumes that the following value:
	SUM(cached region heights) + insertedSpace - deletedSpace - rippleHeight
 will be the same as:
	SUM(line heights)

 The insertedSpace is the amount of space inserted into the current region.

 The deletedSpace is the amount of space deleted at the end of the current
 region.

 The rippleHeight is the amount of space which has been rippled backwards
 from later regions. These lines are accounted for in the insertedSpace, so
 this value should balance those already accumulated lines.
}
table enter $fatalerr_info_table text::FID_CONTROLLER_TOO_MANY_FONTS { The font controller was told to build a list with too many entries.
 The FontCreateList() routine may have been passed garbage.}
table enter $fatalerr_info_table text::FID_CONTROLLER_CUSTOM_FONT_ENTRY_BAD_LENGTH { The geos.ini file for the font controller contained a bad custom font
 entry ("fontmenu="). The string is a series of 4-digit hex values, and
 hence should be a multiple of 4 bytes long.}
table enter $fatalerr_info_table text::FID_CONTROLLER_CUSTOM_FONT_ENTRY_BAD_CHAR { The geos.ini file for the font controller contained a bad custom font
 entry ("fontmenu="). The string is a series of hex values, and hence
 should only contain characters in [0-9,a-f].}
table enter $fatalerr_info_table text::FID_CONTROLLER_BAD_FONT_HINT { The font controller was given a hint that specified something not
 applicable, like FEF_STRING.}
table enter $fatalerr_info_table text::VIS_TEXT_NAME_NOT_FOUND_FOR_INDEX { The text object was unable to map a specified index to a name.}
table enter $fatalerr_info_table text::VIS_TEXT_NAME_CANT_MODIFY_CURRENT_FILE { The "current file" entry is not a real name, but an attempt was made to
 modify it.}
table enter $fatalerr_info_table text::VIS_TEXT_OBJECT_MUST_HAVE_NAME_ARRAY { The caller attempted to perform a name operation on a text object that does
 not have a name array.}
table enter $fatalerr_info_table text::UNDO_NOT_TURNED_ON { An undo routine was called when VTF_ALLOW_UNDO was not set.
}
table enter $fatalerr_info_table text::CACHED_UNDO_ITEM_NOT_DELETED { After starting a new undo item, the old undo item did not get deleted	
}
table enter $fatalerr_info_table text::CANNOT_UPDATE_TYPING_UNDO_ACTION { An internal error has occurred in trying to update a typing undo action
}
table enter $fatalerr_info_table text::ALL_OBJECTS_IN_REPLACE_ALL_MUST_HAVE_SAME_VTF_ALLOW_UNDO_VALUE { A replace all spanned multiple objects, and VTF_ALLOW_UNDO was not clear
 or set in all the objects (the bits must be the same in each object).
}
table enter $fatalerr_info_table text::UNDOABLE_OBJECT_MUST_BE_RUN_BY_PROCESS_THREAD { An object that was run on the UI thread has undo.
}
table enter $fatalerr_info_table text::BAD_TEXT_UNDO_TYPE { A MSG_VIS_TEXT_UNDO message was sent to this object with an unrecognized
 UAS_appType field.}
table enter $fatalerr_info_table text::UNDO_INFO_CONTAINS_NO_RUNS { An undo huge array is empty - this is an invalid state, as it should never
 have been added if there were no runs in it.}
table enter $fatalerr_info_table text::NO_RUNS_IN_RANGE { While creating an undo huge array, we find that there are no runs to put in
 it, which is an invalid state (we should have checked this before calling
 TA_AppendRunsInRangeToHugeArray()).}
table enter $fatalerr_info_table text::UNDO_RESOURCE_LOADED_EVEN_THOUGH_IGNORING_UNDO { An undo routine was called while the app is ignoring undo actions. This
 should have been caught earlier, so the undo resource would not be loaded
 in.}
table enter $fatalerr_info_table text::NO_CHAR_CHOICES { The HWR library returned *no* character choices to the FilterChar routine.}
table enter $fatalerr_info_table text::TOO_MANY_CHAR_CHOICES { The HWR library returned > 200 character choices to the FilterChar routine.}
table enter $fatalerr_info_table text::INSERTING_NULL_CHARACTER { VTFInsert was called with DL = 0}
table enter $fatalerr_info_table text::INK_RECEIVED_BY_NON_EDITABLE_OBJECT { An ink notification was received by a non-editable object}
table enter $fatalerr_info_table text::BAD_CONTEXT_LOCATION { A bad ContextLocation etype was passed with MSG_META_GET_CONTEXT}
table enter $fatalerr_info_table text::BAD_CONTEXT_POSITION { An invalid GCP_position value was passed in}
table enter $fatalerr_info_table text::BAD_VIS_TEXT_REPLACE_FLAGS { Bad VisTextReplaceFlags were passed to the run code}
table enter $fatalerr_info_table text::BAD_TEXT_REFERENCE_TYPE { A bad TextReferenceType was passed to the run code}
table enter $fatalerr_info_table text::BAD_VIS_TEXT_INT_FLAGS { VTI_intFlags had an invalid value for the VTIF_ACTIVE_SEARCH_SPELL field}
table enter $fatalerr_info_table text::GRAPHIC_IN_TRANSFER_ITEM_NOT_VM_BASED_GSTRING { A CIF_TEXT transfer format was created for a single C_GRAPHIC character, and
 the associated gstring-based graphic is not simply a VM based graphic string,
 but is either an lmem- or db-based graphic string. This could only come
 about (I hope) if the message to create the format was subclassed.
 }
table enter $fatalerr_info_table text::TOO_MANY_FORMATS_IN_TRANSFER_ITEM { About to add a CIF_GRAPHICS_STRING format to a transfer item and found there
 are already the max number in the item.}
table enter $fatalerr_info_table text::BAD_VIS_TEXT_HWR_FLAGS { Bad VisTextHWRFlags were passed to MSG_VIS_TEXT_REPLACE_WITH_HWR
}
table enter $fatalerr_info_table text::APPENDING_TOO_MANY_SPACES { VisTextReplaceWithHWR was called with AX > 50
}
table enter $fatalerr_info_table text::MUST_BE_FOCUS_TO_GENERATE_CONTEXT_NOTIFICATION { MSG_META_GENERATE_CONTEXT_NOTIFICATION was received by a non-focus text
 object.}
table enter $fatalerr_info_table text::CUSTOM_FILTER_START_RANGE_IS_AFTER_END_RANGE { A ATTR_VIS_TEXT_CUSTOM_FILTER was added with invalid ranges VTCFD_endOfRange
 had a value that was less than VTCFD_startOfRange}
table enter $fatalerr_info_table text::TEXT_STRING_CONTAINS_NULL { A text string was passed with an invalid length - there was a null byte
 before the end of the string.}
table enter $fatalerr_info_table text::BAD_COMPRESS_GRAPHIC_PARAMS_STRUCT {
 The CompressGraphicFrame structure on the stack has been corrupted. (EC only)}
table enter $fatalerr_info_table text::VIS_TEXT_BAD_BITMAP_COMMAND {
 In the process of compressing a bitmap, an unknown graphic bitmap command
 was encountered in the original gstring which can't be reproduced in the
 compressed gstring.}
table enter $fatalerr_info_table text::VIS_TEXT_CAN_ONLY_LOAD_GSTRING_FROM_VMBLOCK {
 An attempt was made to load a graphic gstring which is not stored in a 
 VMBlock.  VisTextGraphic gstrings are only stored in VMBlocks.}
table enter $fatalerr_info_table text::VIS_TEXT_ILLEGAL_BITMAP_FORMAT { The passed format cannot be used to compress bitmaps.
}
table enter $fatalerr_info_table text::VIS_TEXT_BAD_GRAPHIC_ELEMENT { The passed VisTextGraphic contains invalid data.
}
table enter $fatalerr_info_table text::VIS_TEXT_GRAPHIC_BAD_GSTRING_ELEMENT { In the process of parsing a VisTextGraphic gstring to compress its
 bitmaps, an unexpected gstring element was encountered.
}
table enter $fatalerr_info_table text::ODD_SIZE_FOR_DBCS_TEXT { The text stored for an object in DBCS is an odd number of bytes.  This should
 never happen, as in DBCS all characters are two bytes.  It is likely something
 that has not been converted to DBCS yet.}
table enter $fatalerr_info_table text::ILLEGAL_WORD_PART_TYPE { An illegal value for WordPartType was passed to one of the word selection
 routines.}
table enter $fatalerr_info_table text::TEXT_FAR_POINTER_TO_MOVABLE_XIP_RESORCE { This means that a fptr to a movable code segment was passed to a function
 that does not like that.  
}
table enter $fatalerr_info_table text::VIS_TEXT_UPDATE_GRAPHIC_FLAGS_INVALID { Invalid flags were passed to VisTextUpdateGraphicElement
}
table enter $fatalerr_info_table text::VIS_TEXT_GRAPHIC_ELEMENT_FREED_UNEXPECTEDLY { Removing a reference to a graphic caused it to be removed, but
 its reference count should not have gone to zero because it was
 greater than 1 before removing the reference.
}
table enter $fatalerr_info_table text::VIS_TEXT_NAME_NOT_IN_USE_IN_CLIPBOARD { A name array element that was not in use got copied to the clipboard
 and now it is trying to be pasted from the clipboard.}
table enter $fatalerr_info_table text::VIS_TEXT_CANNOT_REVERT_SMALL_TEXT_OBJECT { There was an error trying to add another region to the text object
 and the text library is going to force the document to revert, but this
 text object is not a large text object, so there should never have
 been an error adding a region.}
table enter $fatalerr_info_table text::VIS_TEXT_CHARSET_RELEASE_NOT_RECEIVED { Two Charset function key first presses were received without release
 press in between. Is GenView blocking all the keyboard releases?
 (dontSendKbdReleases)}
table enter $fatalerr_info_table text::VIS_TEXT_CHARSET_ILLEGAL_SELECTION { Unexpected values of VTI_selectStart/End
}
table enter $fatalerr_info_table text::COULD_NOT_FIND_WORD_EDGE { For some reason, we FindNextWordEdge or FindPrevWordEdge returned an offset
 that was not at a word edge.}
