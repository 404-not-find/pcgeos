#!/bin/csh -f
#
# blowjob
#
# A shell script for recursively descending the pcgeos directory tree and
# extracting the headers from .asm, .doc, and .def files. the headers are
# placed into the Doc/Headers file.
#
# This script was initially called getfileheaders, then shortened to 
# getheaders, and eventually to gethead, which begged that I change the
# name to blowjob.
#
#	blowjob takes these optional parameters:
#
#		-rcslog		Collect rcslog info
#		-useold		Use old file list
#		-filesonly	Only generate file list, don't extract
#				headers
#		-prepend	Prepend a list of files to the header file
#		-sort		Sort the list by filename
#
#	These arguments may abbreviated to their unique initial characters.
#
#	$Id: blowjob,v 1.7 89/07/21 14:03:46 matt Exp $
# 

unalias find
set clobber
# nice
# set verbose

set homebase = /staff/pcgeos
set output = $homebase/Doc/headers
set temp = $homebase/Doc/headers.lst
set dirlist = ( Spec Include Kernel Driver Library )
@ prepend = 0
@ filesonly = 0
@ rcsflag = 0
@ useold = 0

# Check for arguments and do da right thing...
foreach i ($*)
   switch ($i)
      case *-f*:
   	@ filesonly = 1
   	echo "only generating file list"
	breaksw
      case *-p*:
   	@ prepend = 1
	breaksw
      case *-r*:
   	@ rcsflag = 1
	echo "including RCS info"
	breaksw
      case *-u*:
   	@ useold = 1
   	echo "using old file list"
	breaksw
      case *-s*:
   	@ sort = 1
	breaksw
   endsw
end

# Specify what to do on ^C
onintr abend

# See if we need to generate a new file list and do so if necessary
if !($useold) then
   if (-e $temp) then
      rm $temp
   endif
   echo "generating new file list"
   # Go through the supplied directory list and collect all the interesting
   # files in a temporary list.
   foreach i ( $dirlist )
      find $homebase/$i \( -name '*.def' -o -name '*.asm' -o  -name '*.doc' \) -exec echo {} \; >> $temp
   end
endif 

# Determine number of files in the list
set i = `wc -l $temp`
@ numfiles = $i[1]
echo "there are $numfiles files in the file list"

# Sort the file list if requested
if ($sort) then
   echo "sorting file list"
   # Sort -b(ignore blanks) -u(include unique lines only) -f(fold upper->lower)
   sort -buf $temp -o $temp
endif

# Generate header file if we're supposed to
if !($filesonly) then
   # Remove old output file 
   if (-e $output) then
      echo "removing old $output file"
      rm $output
   endif
   echo "generating new $output output file"
   # If prepend switch is on, add the file list to the header file
   if ($prepend) then
      echo "CONTENTS:" >> $output
      echo " " >> $output
      cat $temp >> $output
      echo "" >> $output
   endif
   # Now go through the temporary file list and extract the header info
   @ i = 1
   while ($i <= $numfiles)
      set filename = `sed -n "$i p" $temp`
      hdr -p $filename >> $output
      if ($rcsflag) then
         echo " " >> $output; rlog $filename >> $output
      endif
      @ i++
   end
endif

# Clean up and exit
exitcleanly:
# rm $temp
exit

abend:
echo " "
echo "Oh\! You tease\! You stopped the blowjob early..."
# rm $output; echo "removing $output output file"
exit 1
