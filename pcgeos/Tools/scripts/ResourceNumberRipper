#!/bin/sh -
##############################################################################
#
# 	Copyright (c) GeoWorks 1992 -- All Rights Reserved
#
# PROJECT:	PC GEOS
# MODULE:	checkInclude
# FILE: 	checkInclude
# AUTHOR: 	Josh     Wed Nov  4 
#
# REVISION HISTORY:
#	Name	Date		Description
#	----	----		-----------
#	josh	11/19/92	get resource numbers from a sym file
#
# DESCRIPTION:
#	A script to produce assembly equates for a geode's resources
#       and the longname.
#
#	Used to compile a chunk description file for ResEdit.
#       ResEdit needs the numbers of the resources so it can match
#	the names with the numbers in the geode.
#
#	It needs the name of the geode so it can find the geode based on
#	the longname in the app directories.
#
#	$Id: ResourceNumberRipper,v 1.2 92/11/20 18:58:41 josh Exp $
#
###############################################################################



#
# get the names of resources out of a geode as stored in the .sym file.
# returns them one to a line
# ignores the first resource (which is just a map of the other resources)

GetResourceNames () { 
	printobj $1 | grep 'global module' | grep -v '(null)' | sed s/://g ; 
}

# take a stream of segment names and make assembly output 
# to define <segment>_const to its segname's resource number

MakeAsmOutput () {
	awk 'BEGIN {count = 1} \
		   {printf "\t%s_const \t\tEQU %d\n" ,$1,count++ }' 
}

# Now make a file with assembly equates for <segment-name>_const 
# and its resouce number. Make two passes to get uppercase versions 
# too.


GetResourceNames *.sym  |  MakeAsmOutput 

gpfile=`ls *.gp`
src_dir=`echo $PWD |  sed "s,/$USER,,"`
gpfile=${gpfile:-${src_dir}/*.gp}

echo longname_const EQU `grep longname ${gpfile} | sed s/longname//g`

