We accept as many arguments as desired, with the conversion parameters being
specified before any file to be converted.

cvtpcx can be used to convert a single icon, or a predefined grid of icons
in predefined formats. 11 formats and 3 grids are currently defined. Each
format is known by its abbreviation, which is used for the -d option (see
below), forming the name of the moniker produced for a particular grid
position, and forming the name of the resource in which the moniker is
placed.

The defined formats are:
    Abbr  Color  Aspect        Size      Style  Width  Height
    ----  -----  ------------  --------  -----  -----  ------
    LC    4-bit  normal        large     icon    64      40
    LM    Mono   normal        large     icon    64      40
    SC    4-bit  normal        standard  icon    48      30
    SM    Mono   normal        standard  icon    48      30
    LCGA  Mono   verySquished  large     icon    64      18
    SCGA  Mono   verySquished  tiny      icon    48      14
    YC    4-bit  normal        tiny      icon    32      20
    YM    Mono   normal        tiny      icon    32      20
    TC    4-bit  normal        tiny      tool    15      15
    TM    Mono   normal        tiny      tool    15      15
    TCGA  Mono   verySquished  tiny      tool    15      10

The grids are sequences of these formats laid out with a common top edge,
from left to right, and a one pixel margin between each pair of icons, and
around the grid as a whole. Three grids exist, currently. They are:
    Flag    Formats
    ----    --------------------------------------------------
    -l      LC, LM, SC, SM, LCGA, SCGA
    -L      LC, LM, SC, SM, LCGA, SCGA, YC, YM, TM, TCGA
            (the YC and YM icons are used for application icons on
            handheld devices, while the TM and TCGA icons are used
            for the Presentation Manager system menu)
    -z      TC, TM, TCGA

The following parameters are useful for both grid and non-grid conversions:
    -G                  Produce goc output instead of uic

    -g                  Do not put resulting bitmaps in gstrings. The bitmap
                        is still in a chunk, but no gstring opcodes surround
                        it.

    -j                  Only output the gstring (don't create a moniker or
                        put the gstring in a chunk)

    -2                  Use 2.0 constants in the resulting gstring/bitmap.

    -f                  Uses GrFillBitmap instead of GrDrawBitmap for all
                        monochrome bitmaps.  Also implies the use of 2.0
                        constants, since this will not work prior to
                        version 2.0 as GrFillBitmap didn't exist.

    -t                  Causes the bitmap to be drawn relative to the
                        current pen position if the program decides to
                        optimize the moniker by drawing the bitmap somewhere
                        other than 0,0. All monikers destined for the
                        token database should be created with this flag.

    -u                  Insist the resulting bitmaps remain uncompacted. By
                        default, cvtpcx will determine if it's worthwhile and
                        automatically compact each bitmap for you.

    -o<filename>        Specify where the moniker(s) should be placed.

The following parameters are useful when converting things by grid:
    -m<pixel>           Pixel to be masked out. Any pixel containing this
                        color (a decimal number) will be given a 0 bit in
                        the mask for the color bitmap. Defaults to none.

    -x<xoffset>         Specifies the left edge of the grid (the X coord-
                        inate of the 1-pixel margin to the left of the left-
                        most icon in the grid.)

    -y<yoffset>         Specifies the top edge of the grid (the X coord-
                        inate of the 1-pixel margin to the left of the left-
                        most icon in the grid.)

    -n<moniker name>    Allows specifying the core name to give the moniker.
                        The name for each moniker in a grid is formed thus:
                            <moniker name><format abbrev>Moniker
                        For instance -nHello would create "HelloLCMoniker"
                        for the leftmost icon in the "-l" grid.

                        In addition, if no output file is specified (using
                        the "-o" option), the output file becomes
                            mkr<moniker name>.<extension>

    -d<format(s)>       Argument is a comma-separated list of one or more
                        format abbreviations, indicating the grid doesn't
                        contain an icon in that format, so no moniker should
                        be produced for it.

    -r<resource>        Specifies the string (other than the default "App")
                        to begin the name of each resource. The resource
                        names are of the form
                            <resource><format abbrev>MonikerResource
                        (this is all uppercase for GOC output).

    -R                  Don't put out resource start/end directives; just
                        produce the monikers, one after another.

When converting a single icon, no start/end resource directives are
produced. The -n option may still be used to name the moniker, but no
format abbreviation will appear between the <moniker name> and "Moniker".
The following parameters are useful only for converting single icons:
    -w<width>           width of resulting bitmap (input will be trimmed
                        or extended (but masked) as necessary to accomodate
                        this).Defaults to Standard size (48)

    -h<height>          height of resulting bitmap (input will be trimmed
                        or extended (masked) as necessary to accomodate
                        this)...Defaults to Standard size (30)

    -S<style>           <style> is one of the defined moniker styles: text,
                        abbrevText, graphicText, icon, or tool. It defaults to
                        icon. (The "-S" option is only for 2.0 and above.)

    -s<size>            <size> is one of the defined moniker sizes: large,
                        standard, or tiny. It defaults to standard

    -a<aspect>          <aspect> is one of the defined aspectRatio values:
                        normal (vga), squished (ega) or verySquished (cga).
                        Defaults to squished.

    -b                  Forces creation of a single bitplane (B&W) icon,
                        even if the source is 16 colors. Any pixel that isn't
                        black (pixel 0) is set to 0 in the resulting bitmap.
                        Black pixels are, of course, set to 1.

    -B                  Similar, but any pixel that isn't white (pixel 15)
                        or the mask (set by "-m") is set to 1.

    -N                  map the colors to the indices for the Nokia device


Once given, these parameters apply to all subsequent files, unless they
are given again.
