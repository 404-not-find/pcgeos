COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) Geoworks 1991 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		
FILE:		spreadsheetCutCopyConstant.def

AUTHOR:		Cheng, 6/91

ROUTINES:
	Name			Description
	----			-----------
	
REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	Cheng	6/91		Initial revision

DESCRIPTION:
		
	$Id: spreadsheetCutCopyConstant.def,v 1.1 97/04/07 11:14:40 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@


;*******************************************************************************
;
;	STRUCTURES FOR CUTTING AND COPYING
;
;*******************************************************************************

MAX_CELL_SIZE	= size CellCommon + 256

CutCopyStackFrame	struct
	CCSF_vmFileHan			word	; handle of the transfer file
	CCSF_transferHdrVMHan		word
	CCSF_textTransferHdrVMHan	word

	CCSF_objBlkHan			word
	CCSF_ssheetChunkHan		word

	CCSF_transferItemFlag		word	; TransferItemFlags
	CCSF_copyFlag			byte	; boolean - non zero => copy
	;
	; the size of the range
	;
	CCSF_numRows			word
	CCSF_numCols			word

	CCSF_workBuf			byte MAX_CELL_SIZE dup (?)

	; fields for ?

	CCSF_styleChanged		byte	; boolean - style has changed
	CCSF_curCellType		CellType
	CCSF_curCellSize		word

	;
	; info for the import/export library
	;
	CCSF_startRow			word
	CCSF_startCol			word

	;
	; fields for text scraps
	;
	CCSF_textObject			optr	; associated text object
	CCSF_prevTextCell		CellReference
	CCSF_prevTextStyle		word

CutCopyStackFrame	ends

;*******************************************************************************
;
;	TRANSLATION TABLE STRUCTURES
;
;*******************************************************************************

TRANS_TABLE_SIG		= 7763h
TRANS_TABLE_ENTRY_SIG	= 1265h

TranslationTable	struct
	TT_han		word
	TT_size		word
	TT_sig		word
TranslationTable	ends

TranslationTableAction		etype	word, 0, 2
TTA_TRANSLATE			enum	TranslationTableAction
	;
	; Just translate from the srcToken to the dstToken.
	;
TTA_ADD_SRC_DEFINITION		enum	TranslationTableAction
	;
	; The name had no definition in the destination. Set the definition
	; for the destination name (dstToken) to the definition for the
	; source name.
	;
TTA_ADD_SRC_NAME_AND_DEF	enum	TranslationTableAction
	;
	; The name does not exist at all in the destination. Create a new
	; name and a new definition for the source name, then save the
	; new token as the dstToken for translation later.
	; 
TTA_GENERATE_NAME		enum	TranslationTableAction
	;
	; The name exists in the destination, but the user wants to use
	; the definition from the source document. As a result we need to
	; generate a name on the fly and make this the dstToken.
	;
TTA_CREATE_UNDEFINED		enum	TranslationTableAction
	;
	; The name was undefined (but referenced) in the source and does
	; not exist at all in the destination. As a result we need to
	; create an undefined name and use this as the dstToken.
	;

TranslationTableEntry	struct
	TTE_action	TranslationTableAction
		;
		; This is the action to take for this translation entry
		; as part of setting the names up for translating.
		;
		
	TTE_srcToken	word
		;
		; This is the token associated with the name in the source
		; document. We will be replacing all references to this token
		; with references to the dstToken as part of pasting the
		; new cell data.
		;

	TTE_dstToken	word
		;
		; This is the token associated with the name in the dest
		; document. This assumes that the name actually exists. There
		; are a few cases where this name will not exist yet.
		;

	TTE_sig		word
		;
		; Signature byte. It's here to occupy space.
		;
TranslationTableEntry	ends

;*******************************************************************************
;
;	STRUCTURES FOR PASTING
;
;*******************************************************************************

PasteStackFrame		struct
	;-----------------------------------------------------------------------
	; vars for the transfer header

	PSF_ssheetObjBlkHan		word	; save ds:LMBH_handle
	PSF_ssheetObjChunkHan		word	; save si
	PSF_ssheetObjChunkOffset	word	; save di

	PSF_vmFileHan			word
	PSF_hdrBlkVMHan			word
	PSF_sourceID			dword
	PSF_sourceEqualsDest		byte	; boolean

	PSF_saveLmbhHan			word	; storage used by
						; PasteCellCallback
	PSF_saveES			word

	;-----------------------------------------------------------------------
	; enum vars

	PSF_selectedRange		Rectangle

	PSF_singleCellSelected		byte	; boolean

	PSF_scrapRows			word
	PSF_scrapCols			word

	PSF_rowMultiple			word
	PSF_colMultiple			word

	PSF_rowCount			word
	PSF_colCount			word

	PSF_instanceRow			word
	PSF_instanceCol			word

	;-----------------------------------------------------------------------
	; vars for names

	PSF_oldNameToken		word
	PSF_oldNameLength		word
SBCS<	PSF_oldNameBuf			char MAX_NAME_LENGTH+1 dup (?)	>
DBCS<	PSF_oldNameBuf			wchar MAX_NAME_LENGTH+1 dup (?)	>

	PSF_newNameToken		word
	PSF_newNameLength		word
SBCS<	PSF_newNameBuf			char MAX_NAME_LENGTH+1 dup (?)	>
DBCS<	PSF_newNameBuf			wchar MAX_NAME_LENGTH+1 dup (?)	>

	PSF_defLength			word
;;;	PSF_definition			byte SPREADSHEET_SCRAP_MAX_LENGTH dup (?)

	PSF_newFormatAdded		byte	; boolean
	PSF_newNameAdded		byte	; boolean

	;-----------------------------------------------------------------------
	; vars for pasting
	PSF_cellEntry			SSMetaEntry
;;;	PSF_cellBuf			byte MAX_CELL_SIZE dup (?)
	PSF_cellBuf			label byte
;;;	PSF_oldNameBuf			label byte
SBCS<	PSF_definition			char SPREADSHEET_SCRAP_MAX_LENGTH dup (?)	>
DBCS<	PSF_definition			wchar SPREADSHEET_SCRAP_MAX_LENGTH dup (?)	>

	PSF_styleEntry			SSMetaEntry
	PSF_styleBuf			CellAttrs

	PSF_formatTransTbl		TranslationTable
	PSF_nameTransTbl		TranslationTable

	PSF_conflictFormatAdded		byte	; boolean flag
	PSF_conflictResNum		word	; the last resolution num used
	PSF_maxNameLength		word	; max length of name
	PSF_newNameCount		word	; names added for paste
						; word to keep size aligned
	PSF_clearDest			BooleanWord

PasteStackFrame		ends

