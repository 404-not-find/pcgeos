/***********************************************************************
 *
 *	Copyright (c) GeoWorks 1992 -- All Rights Reserved
 *
 * PROJECT:	PCGEOS
 * MODULE:	uiEdit.ui
 * FILE:	uiEdit.ui
 *
 * AUTHOR:  	Gene Anderson: Jul 20, 1992
 *
 * REVISION HISTORY:
 *	Date	  Name	    Description
 *	----	  ----	    -----------
 *	7/20/92	  gene	    Initial version
 *
 * DESCRIPTION:
 *	Spreadsheet edit controller
 *
 * 	$Id: uiEdit.ui,v 1.1 97/04/07 11:12:11 newdeal Exp $
 *
 ***********************************************************************/

#include "Art/mkrInsertRow.ui"
#include "Art/mkrInsertColumn.ui"
#include "Art/mkrDeleteRow.ui"
#include "Art/mkrDeleteColumn.ui"

start SSEditUI, notDetachable;

/******************************************************************************
 *	"Clear"
 *****************************************************************************/

ClearDB = GenInteraction {
	genStates = default -usable;
	moniker = 'l', "Clear";
	children =
		ClearOptionsList,
		ClearTrigger;
	visibility = dialog;
	type = command;
	hints = {
		HINT_CENTER_WINDOW,
		ATTR_GEN_HELP_CONTEXT {
			char "dbClear", 0
		}
	}
}

ClearOptionsList = GenBooleanGroup {
	children =
		ClearDataEntry,
		ClearNotesEntry,
		ClearAttrsEntry;
	selectedBooleans = "mask SCF_CLEAR_DATA or \
				mask SCF_CLEAR_NOTES or \
				mask SCF_CLEAR_ATTRIBUTES";
	hints = {
		HINT_ORIENT_CHILDREN_VERTICALLY,
		HINT_DRAW_IN_BOX,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT
	}
}

ClearDataEntry = GenBoolean {
	moniker = 'D', "Data";
	identifier = "mask SCF_CLEAR_DATA";
}

ClearNotesEntry = GenBoolean {
	moniker = 'N', "Notes";
	identifier = "mask SCF_CLEAR_NOTES";
}

ClearAttrsEntry = GenBoolean {
	moniker = 'A', "Attributes";
	identifier = "mask SCF_CLEAR_ATTRIBUTES";
}

ClearTrigger = GenTrigger {
	moniker = "Clear";
	hints = {
		HINT_SEEK_REPLY_BAR,
		HINT_DEFAULT_DEFAULT_ACTION
	}
	action = MSG_SSEC_CLEAR, "TO_OBJ_BLOCK_OUTPUT";
}

/******************************************************************************
 *	"Insert"
 *****************************************************************************/
/* Since there is some special UI arrangement in JEDI for Insert and Delete
   controller, so we have to make some UI arrangement here too.		     */


#ifdef GPC

InsertGroup = GenInteraction {
	genStates = default -usable;
	children =
	    InsertRowMenuItem, InsertColumnMenuItem;
}

InsertRowMenuItem = GenTrigger {
	moniker = "Insert Rows";
	action = MSG_SSEC_INSERT_DELETE_ROW_COLUMN, "TO_OBJ_BLOCK_OUTPUT";
	hints = {
		ATTR_GEN_TRIGGER_ACTION_DATA { word mask SIF_COMPLETE }
	}
}

InsertColumnMenuItem = GenTrigger {
	moniker = "Insert Columns";
	action = MSG_SSEC_INSERT_DELETE_ROW_COLUMN, "TO_OBJ_BLOCK_OUTPUT";
	hints = {
		ATTR_GEN_TRIGGER_ACTION_DATA { word mask SIF_COMPLETE or \
						mask SIF_COLUMNS }
	}
}

#else /* GPC */

InsertDB = GenInteraction {
	genStates = default -usable;
	moniker = 'I', "Insert Row/Column";
	children =
		InsertOptions,
		InsertTrigger;
	visibility = dialog;
	type = command;
	hints = {
		HINT_CENTER_WINDOW,
		HINT_INTERACTION_SINGLE_USAGE,
		ATTR_GEN_HELP_CONTEXT {
			char "dbInsRowCol", 0
		}
	}
}

InsertTrigger = GenTrigger {
	moniker = 'I', "Insert";
	genAttributes = default +signalInteractionComplete;
	action = MSG_SSEC_DO_INSERT, "TO_OBJ_BLOCK_OUTPUT";
	hints = {
		HINT_DEFAULT_DEFAULT_ACTION,
		HINT_SEEK_REPLY_BAR
	}
}

InsertOptions = GenItemGroup {
	children =
		InsertRowItem,
		InsertColumnItem;
	hints = {
		HINT_ORIENT_CHILDREN_VERTICALLY
	}
}

InsertRowItem = GenItem {
	moniker = 'R', "Rows";
	identifier = "mask SIF_COMPLETE";
}

InsertColumnItem = GenItem {
	moniker = 'C', "Columns";
	identifier = "mask SIF_COMPLETE or \
			mask SIF_COLUMNS";
}

#endif /* GPC */

/******************************************************************************
 *	"Delete"
 *****************************************************************************/
/* Since there is some special UI arrangement in JEDI for Insert and Delete
   controller, so we have to make some UI arrangement here too.		     */


#ifdef GPC

DeleteGroup = GenInteraction {
	genStates = default -usable;
	children =
	    DeleteRowMenuItem, DeleteColumnMenuItem;
}

DeleteRowMenuItem = GenTrigger {
	moniker = "Delete Rows";
	action = MSG_SSEC_INSERT_DELETE_ROW_COLUMN, "TO_OBJ_BLOCK_OUTPUT";
	hints = {
		ATTR_GEN_TRIGGER_ACTION_DATA { word mask SIF_COMPLETE or \
						mask SIF_DELETE }
	}
}

DeleteColumnMenuItem = GenTrigger {
	moniker = "Delete Columns";
	action = MSG_SSEC_INSERT_DELETE_ROW_COLUMN, "TO_OBJ_BLOCK_OUTPUT";
	hints = {
		ATTR_GEN_TRIGGER_ACTION_DATA { word mask SIF_COMPLETE or \
						mask SIF_COLUMNS or \
						mask SIF_DELETE }
	}
}

#else /* GPC */

DeleteDB = GenInteraction {
	genStates = default -usable;
	moniker = 'e', "Delete Row/Column";
	children =
		DeleteOptions,
		DeleteTrigger;
	visibility = dialog;
	type = command;
	hints = {
		HINT_CENTER_WINDOW,
		HINT_INTERACTION_SINGLE_USAGE,
		ATTR_GEN_HELP_CONTEXT {
			char "dbDelRowCol", 0
		}
	}
}


DeleteTrigger = GenTrigger {
	moniker = 'D', "Delete";
	genAttributes = default +signalInteractionComplete;
	action = MSG_SSEC_DO_DELETE, "TO_OBJ_BLOCK_OUTPUT";
	hints = {
		HINT_DEFAULT_DEFAULT_ACTION,
		HINT_SEEK_REPLY_BAR
	}
}

DeleteOptions = GenItemGroup {
	children =
		DeleteRowItem,
		DeleteColumnItem;
	hints = {
		HINT_ORIENT_CHILDREN_VERTICALLY
	}
}

DeleteRowItem = GenItem {
	moniker = 'R', "Rows";
	identifier = "mask SIF_COMPLETE or \
			mask SIF_DELETE";
}

DeleteColumnItem = GenItem {
	moniker = 'C', "Columns";
	identifier = "mask SIF_COMPLETE or \
			mask SIF_COLUMNS or \
			mask SIF_DELETE";
}

#endif /* GPC */

end SSEditUI;

start SSEditToolUI, notDetachable;

/******************************************************************************
 *	tools
 *****************************************************************************/

InsertRowTrigger = GenTrigger {
	genStates = default -usable;
	TOOL_MONIKER_LIST(InsertRow)
	action = MSG_SSEC_INSERT_DELETE_ROW_COLUMN, "TO_OBJ_BLOCK_OUTPUT";
	hints = {
		ATTR_GEN_TRIGGER_ACTION_DATA { word mask SIF_COMPLETE },
		ATTR_GEN_FOCUS_HELP { optr SSECInsertRowName }
	}
}

InsertColumnTrigger = GenTrigger {
	genStates = default -usable;
	TOOL_MONIKER_LIST(InsertColumn)
	action = MSG_SSEC_INSERT_DELETE_ROW_COLUMN, "TO_OBJ_BLOCK_OUTPUT";
	hints = {
		ATTR_GEN_TRIGGER_ACTION_DATA { word mask SIF_COMPLETE or \
						mask SIF_COLUMNS },
		ATTR_GEN_FOCUS_HELP { optr SSECInsertColumnName }
	}
}

DeleteRowTrigger = GenTrigger {
	genStates = default -usable;
	TOOL_MONIKER_LIST(DeleteRow)
	action = MSG_SSEC_INSERT_DELETE_ROW_COLUMN, "TO_OBJ_BLOCK_OUTPUT";
	hints = {
		ATTR_GEN_TRIGGER_ACTION_DATA { word mask SIF_COMPLETE or \
						mask SIF_DELETE },
		ATTR_GEN_FOCUS_HELP { optr SSECDeleteRowName }
	}
}

DeleteColumnTrigger = GenTrigger {
	genStates = default -usable;
	TOOL_MONIKER_LIST(DeleteColumn)
	action = MSG_SSEC_INSERT_DELETE_ROW_COLUMN, "TO_OBJ_BLOCK_OUTPUT";
	hints = {
		ATTR_GEN_TRIGGER_ACTION_DATA { word mask SIF_COMPLETE or \
						mask SIF_COLUMNS or \
						mask SIF_DELETE },
		ATTR_GEN_FOCUS_HELP { optr SSECDeleteColumnName }
	}
}

end SSEditToolUI;

/****************************************************************************
 *	Strings for controllers
 ***************************************************************************/

start ControlStrings, data;

chunk SSECName = "Spreadsheet Edit";

chunk SSECClearName = "Clear";

chunk SSECInsertName = "Insert Row/Column";
chunk SSECDeleteName = "Delete Row/Column";

chunk SSECInsertRowName = "Insert Row";
chunk SSECInsertColumnName = "Insert Column";
chunk SSECDeleteRowName = "Delete Row";
chunk SSECDeleteColumnName = "Delete Column";

end ControlStrings;
