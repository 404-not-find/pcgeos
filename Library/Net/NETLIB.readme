COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1990 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		Net Library
FILE:		NETLIB.readme

AUTHOR:		In Sik Rhee  4/93

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	Insik	4/16/93		Connections
	Insik	4/16/93		Net Paths

DESCRIPTION:

	Notes regarding Net Library development

	$Id: NETLIB.readme,v 1.1.12.1 97/03/29 04:57:50 canavese Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

This is a text describing some of the peculiar behaviors regarding the net
library, as it functions now.

.....

Connections:

The net library does not yet do dynamic loading/unloading of drivers.  It
will load the drivers which are in the geos.ini file under

InitDrivers={			; example
	nw.geo
	comm.geo
}

A future change is to make the changes necessary to allow dynamic loading
and unloading.  

To do so, one may need to add to the Net Library API -- specifically to add
and remove a supported driver.  An elegant solution would be to make the 
library determine whether or not a given driver is open when the user makes
a call, and open it and initialize it automatically... and also to close 
a driver when the last reference to it is removed (I don't know whether 
this approach will work for all drivers, but for COMM it should be so that
when a user calls CommClosePort and the last port has been closed, the 
driver can be off-loaded)

.....

net paths:

currently, the net library can only access 1 driver.  (stupid, since it can
load multiple drivers upon startup.)  To make it access multiple drivers, 
a couple of significant changes must be made.  

-- right now, there is a DomainName field in the geos.ini file which defines
	the active driver -- /COMM and /NETWARE to be specific.  What needs
	to happen is that the application should be passing this string 
	directly to the library whenever a call is made.  this means that 
	significant API changes need to be made to the net library, and also
	EVERY app that uses the net library must be changed as well (not an
	easy task).

-- to further comply to aforementioned net lib specs, we should be using 
	domain names and subdomain names, so that, for example, the comm
	driver should not have port numbers, but names like COM1, COM2, etc
	and a string for the socket instead of an ID.

	//COMM/COM1/RFSD - this would refer to the RFSD link.
	//COMM/COM1/SOLITAIRE - a multiplayer solitaire (?) would use this
		path...

	as you can see, this will mean a significant overhaul to existing
	network library and application code...

a quick-and easy hack to allow multiple driver access would be to simply
assign a fixed constant handle to each driver and store in kdata somewhere.
bad side to this -- if in the future a 3rd party writes a net driver, they
will not be able to link to our system.  

.....


