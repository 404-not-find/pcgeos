COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) Berkeley Softworks 1989 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		PostScript Translation Library
FILE:		exportMacro.def

AUTHOR:		Jim DeFrisco, 5 March 1991

MACROS:
	Name			Description
	----			-----------
	EmitPS			- write out some code from the PSCode resource

	
REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	Jim	3/91		Initial revision


DESCRIPTION:
	Just a few macros to make things easier
		

	$Id: exportMacro.def,v 1.1 97/04/07 11:25:33 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@


COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		EmitPS
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

SYNOPSIS:	Write out a string to the output stream

ASSUMES:	bx	- handle of EPSExportLowStreamStruct
		ds	- pointer to locked PSCode resource segment

PASS:		label of character array in PSCode segment

RETURN:		carry	- set if some error in StreamWrite
				(ax = error code)

DESTROYED:	cx, dx, ax

PSEUDO CODE/STRATEGY:
		Just write it out

KNOWN BUGS/SIDE EFFECTS/IDEAS:
		none

REVISION HISTORY:
		Name	Date		Description
		----	----		-----------
		Jim	03/91		Initial version

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

EmitPS		macro	charString
		clr	al			;; handle errors
		mov	dx, offset &charString	;; get offset to routine
		mov	cx, length &charString	;; get length of array
		call	SendToStream		;; write it out
ifdef tgs
		local	done
		jnc	done
		mov	tgs.TGS_writeErr, ax
done:
endif
endm



COMMENT @----------------------------------------------------------------------

	memmov	dest, source [,useReg]

	FUNCTION:
		Move memory using push/pop (or an intermediate register)
	ARGUMENTS:
		dest   -- destination to move TO
		source -- source to move FROM
		useReg -- register to use for fast version
	DESTROYS:
		nothing (useReg destroyed if that option chosen)
	EXPANDS TO:
		? bytes/29 cycles	(push/pop version)
		4 bytes/ 4 cycles	(useReg version)

-------------------------------------------------------------------------------@
memmov	macro 	dest, source, usereg
	segmov	dest, source, usereg
endm
