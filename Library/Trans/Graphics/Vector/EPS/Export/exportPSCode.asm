
COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) Berkeley Softworks 1991 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		PostScript Translation Library
FILE:		exportPSCode.asm

AUTHOR:		Jim DeFrisco, 14 Feb 1991

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	Jim	2/91		Initial revision


DESCRIPTION:
	This file contains the contents of the PostScript code snippets that 
	will be emitted by this library
		

	$Id: exportPSCode.asm,v 1.1 97/04/07 11:25:29 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@


PSCode	segment	resource

;------------------------------------------------------------------------
;	A note about coding conventions:
;	For the PostScript code generated by this library, I have used a 
;	few conventions.  First, all variables are entirely in lower case
;	leters.  All procedures are entirely in upper case letters.  Both
;	are limited to three letters maximum.
;
;	I'm also using an abbreviated header for each PS code snippet.  They
;	are so small that the full procedure header seemed overkill...
;------------------------------------------------------------------------

;startScriptCode	label	char

	; misc stuff
emitCRLF	char	NL
emitSSM		char	" SS"			; Sub/Superscript 
emitDUL		char	" UL"			; DrawUnderLine
ForceRef	emitDUL

	; page/object stuff
emitSO		char	"SO", NL		; - StartObject
emitEO		char	"EO", NL		; - EndObject
emitSave	char	"/pso save def", NL	; - add page level save object
emitRestore	char	"pso restore showpage", NL ; - restore from plso
emitBP		char	"BP", NL 		; - Begin Page
emitEP		char	"EP", NL 		; - EndPage
emitStartDict	char	"GWDict begin", NL 	; - Begin geoworks dict
emitEndDict	char	"end", NL 		; - end geoworks dict
emitNC		char	"/#copies "		; /#copies <numcopies> def
emitDef		char	" def", NL		; for variable definition
emitOpenPath	char	"SPM newpath "		; starting a path

;
; Currently, we only handle A4 (and US Letter).  More paper sizes can be added
; here and in EmitDocSetup -- brianc 4/1/96 (no foolin')
;
emitA4		char	"a4", NL		; to set A4 paper

	; transformation matrix stuff
emitSDT		char	"SDT", NL		; SetDefaultTransform
emitSOT		char	" SOT", NL		; <matrix> SetObjectTransform
emitSPT		char	" concat", NL	; <matrix> SetObjectTransform
emitRPM		char	"RPM "			; SaveMatrix

	; drawing stuff
emitLW		char	" LW "			; <width> LineWidth
emitLJ		char	" LJ "			; <join> LineJoin
emitLC		char	" LC "			; <cap> LineCap
emitLM		char	" LM "			; <limit> MiterLimit
emitSC		char	" SGC "			; <r> <g> <b> SetGEOSColor
emitDL		char	" DL", NL		; <x1> <y1> <x2> <y2> DrawLine
emitDML		char	" DML", NL		; DrawMaskLine
emitDLT		char	" DLT", NL		; <x2> <y2> DrawLineTo
emitDRLT	char	" DRLT", NL		; <dx2> <dy2> DrawRelLineTo
emitDC		char	" DC", NL		; DrawCurve
emitDRC		char	" DRC", NL		; DrawCurve
emitDMC		char	" DMC", NL		; DrawMaskCurve
emitDMPL	char	" DMPL", NL		; DrawMaskPolyLine
emitDMPG	char	" DMPG", NL		; DrawMaskPolygon
emitDPL		char	" DPL", NL		; ..<xn> <yn> <#coords>Polyline
emitDPG		char	" DPG", NL		; ..<xn> <yn> <#coords> Polygon
emitFR		char	" FR", NL		; <x1> <y1> <x2> <y2> FillRect
emitFMR		char	" FMR", NL		; FillMaskRect
emitDR		char	" DR", NL		; <x1> <y1> <x2> <y2> DrawRect
emitDMR		char	" DMR", NL		; DrawMaskRect
emitFE		char	" FE", NL	     	; FillEllispe
emitFME		char	" FME", NL	     	; FillMaskEllipse
emitDE		char	" DE", NL	     	; DrawEllipse
emitDME		char	" DME", NL	     	; DrawMaskEllipse
emitDAO		char	" DAO", NL		; DrawArc, OPEN
emitDAC		char	" DAC", NL		;	   CHORD
emitDAP		char	" DAP", NL		;	   PIE
emitDMAO	char	" DMAO", NL		; DrawMaskArc, OPEN
emitDMAC	char	" DMAC", NL		;	       CHORD
emitDMAP	char	" DMAP", NL		;	       PIE
emitFAC		char	" FAC", NL		; FillArc, CHORD
emitFAP		char	" FAP", NL		;	   PIE
emitFMAC	char	" FMAC", NL		; FillMaskArc, CHORD
emitFMAP	char	" FMAP", NL		;	       PIE
emitFPW		char	" FPW", NL		; FillPolygon (winding)
emitFPO		char	" FPO", NL		; FillPolygon (odd-even)
emitFPMW	char	" FPMW", NL		; FillPolyMask (winding)
emitFPMO	char	" FPMO", NL		; FillPolyMask (odd-even)
emitOpenBracket	char	"[ "			; open array bracket
emitCloseBracket char	"] "			; close array bracket
emitCloseBrackets char	"] ] "			; close array bracket
emitDSG		char	" DSG", NL		; DrawStyleGroup
emitDMB		char	" DMB", NL		; DrawMonoBitmap
emitDCB		char	" DCB", NL		; DrawColorBitmap
emitDGB		char	" DGB", NL		; Draw4BitGreyBitmap
emitDXB		char	" DXB", NL		; Draw8BitGreyBitmap
emitDS		char	" DS", NL		; DrawSpline
emitDST		char	" DST", NL		; DrawSplineTo
emitDMS		char	" DMS", NL		; DrawMaskSpline
emitDMST	char	" DMST", NL		; DrawMaskSplineTo
emitDRR		char	" DRR", NL		; DrawRoundRect
emitDMRR	char	" DMRR", NL		; DrawMaskRoundRect
emitFRR		char	" FRR", NL		; FillRoundRect
emitFMRR	char	" FMRR", NL		; FillMaskRoundRect
emitPL		char	" L M "			; line path construction
emitPLT		char	" L "			; line path construction
emitPRLT	char	" RLT "			; line path construction
emitPC		char	" CCP",NL		; curve path construction
emitPCT		char	" CCTP",NL		; curveto path construction
emitPRC		char	" rcurveto",NL		; curve path construction
emitCAPO	char	" CAPO",NL		; arc path construction
emitCAPC	char	" CAPC closepath",NL	; arc path construction
emitCAPP	char	" CAPP closepath",NL	; arc path construction
emitPPG		char	" CPP closepath",NL	; polygon path construction
emitPPL		char	" CPP",NL		; polyline path construction
emitPS		char	" CPCP",NL		; spline path construction
emitPST		char	" CPRCP",NL		; splineto path construction
emitPE		char	" CEP closepath",NL	; ellipse path construction
emitClip	char	" closepath RPM clip", NL ; append to clippath
emitPR		char	" CRP closepath",NL	; rect path construction
emitPRR		char	" CRRP closepath",NL	; roundedrect path construction
emitDP		char	" RM stroke",NL		; DrawPath
emitFPOdd	char	" FPaO",NL		; FillPath even/odd
emitFPWind	char	" FPaW",NL		; FillPath winding
emitFPMOdd	char	" FPaMO",NL 		; FillPath mask e/o
emitFPMWind	char	" FPaMW",NL   		; FillPath mask w
emitPSG		char	" PSG",NL		; PathStyleGroup
	; line dash (opening bracket and values are added directly)
emitLD      char    "] 0 LD "       ; only what's needed

;endScriptCode	label	char

PSCode	ends
