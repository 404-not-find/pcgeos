/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
start GrObjTCMonikerResource, data;
visMoniker PasteInsideTCMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = normal;
	color = color4;
	cachedSize = 15, 15;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 156
		Bitmap <15,15,0,BMF_4BIT or mask BMT_MASK>
	db	0x00, 0x00
	db	0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x20
	db	0x7f, 0xfc
	db	0x21, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x20
	db	0x7f, 0xfe
	db	0x21, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x10
	db	0xff, 0xfe
	db	0x10, 0x19, 0x99, 0x99, 0x99, 0x99, 0x10, 0x10
	db	0xff, 0xfe
	db	0x1f, 0x09, 0x99, 0x99, 0x99, 0x99, 0x0f, 0x10
	db	0xff, 0xfe
	db	0x10, 0x19, 0x99, 0x99, 0x99, 0x99, 0x10, 0x10
	db	0xff, 0xfe
	db	0x1f, 0x09, 0x99, 0x00, 0x09, 0x99, 0x0f, 0x10
	db	0xff, 0xfe
	db	0x10, 0x19, 0x00, 0xff, 0xf0, 0x09, 0x10, 0x10
	db	0xff, 0xfe
	db	0x1f, 0x00, 0xff, 0xff, 0xff, 0xf0, 0x0f, 0x10
	db	0xff, 0xfe
	db	0x10, 0x10, 0xf0, 0x0f, 0x00, 0xf0, 0x10, 0x10
	db	0x7f, 0xfc
	db	0x21, 0x0f, 0xf0, 0x0f, 0x00, 0xff, 0x01, 0x20
	db	0x7f, 0xfc
	db	0x21, 0x0f, 0xff, 0xff, 0xff, 0xff, 0x01, 0x20
	db	0x7f, 0xfc
	db	0x21, 0x11, 0x11, 0x0f, 0xf0, 0x11, 0x11, 0x20
	db	0x03, 0xc0
	db	0x22, 0x22, 0x22, 0x0f, 0xf0, 0x22, 0x22, 0x20
	db	0x01, 0x80
	db	0x22, 0x22, 0x22, 0x20, 0x02, 0x22, 0x22, 0x20
		GSEndString
	}
}
end GrObjTCMonikerResource;
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
start GrObjTMMonikerResource, data;
visMoniker PasteInsideTMMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 15, 15;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 36
		Bitmap <15,15,0,BMF_MONO>
	db	0x00, 0x00
	db	0x7f, 0xfc
	db	0x40, 0x04
	db	0xc0, 0x07
	db	0xa0, 0x0b
	db	0xc0, 0x07
	db	0xa3, 0x8b
	db	0xcc, 0x67
	db	0xb0, 0x1b
	db	0xd6, 0xd7
	db	0x66, 0xcc
	db	0x60, 0x0c
	db	0x7e, 0x7c
	db	0x02, 0x40
	db	0x01, 0x80
		GSEndString
	}
}
end GrObjTMMonikerResource;
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
start GrObjTCGAMonikerResource, data;
visMoniker PasteInsideTCGAMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = verySquished;
	color = gray1;
	cachedSize = 15, 10;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 26
		Bitmap <15,10,0,BMF_MONO>
	db	0x00, 0x00
	db	0x7f, 0xfc
	db	0x40, 0x04
	db	0x40, 0x3c
	db	0x40, 0x7c
	db	0x40, 0xe4
	db	0x41, 0xc4
	db	0x41, 0x84
	db	0x7f, 0xfc
	db	0x00, 0x00
		GSEndString
	}
}
end GrObjTCGAMonikerResource;
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
start GrObjTCMonikerResource, data;
visMoniker BreakoutPasteInsideTCMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = normal;
	color = color4;
	cachedSize = 15, 15;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 156
		Bitmap <15,15,0,BMF_4BIT or mask BMT_MASK>
	db	0x00, 0x00
	db	0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x20
	db	0x7f, 0xfc
	db	0x21, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x20
	db	0x7f, 0xfc
	db	0x21, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x20
	db	0x7f, 0xfc
	db	0x21, 0x19, 0x99, 0x99, 0x99, 0x99, 0x11, 0x20
	db	0x7f, 0xfc
	db	0x21, 0x19, 0x99, 0x99, 0x00, 0x09, 0x11, 0x20
	db	0x7f, 0xfc
	db	0x21, 0x19, 0x99, 0x00, 0xff, 0xf0, 0x01, 0x20
	db	0x7f, 0xfc
	db	0x21, 0x19, 0x90, 0xff, 0xff, 0xff, 0xf0, 0x20
	db	0x7f, 0xfc
	db	0x21, 0x19, 0x90, 0xf0, 0x0f, 0x00, 0xf0, 0x20
	db	0x7f, 0xfe
	db	0x21, 0x19, 0x0f, 0xf0, 0x0f, 0x00, 0xff, 0x00
	db	0x7f, 0xfe
	db	0x21, 0x19, 0x0f, 0xff, 0xff, 0xff, 0xff, 0x00
	db	0x7f, 0xfe
	db	0x21, 0x19, 0x0f, 0xf0, 0xff, 0xf0, 0xff, 0x00
	db	0x7f, 0xfc
	db	0x21, 0x11, 0x10, 0xf0, 0x00, 0x00, 0xf0, 0x20
	db	0x7f, 0xfc
	db	0x21, 0x11, 0x10, 0xff, 0x00, 0x0f, 0xf0, 0x20
	db	0x03, 0xf8
	db	0x22, 0x22, 0x22, 0x00, 0xff, 0xf0, 0x02, 0x20
	db	0x00, 0xe0
	db	0x22, 0x22, 0x22, 0x22, 0x00, 0x02, 0x22, 0x20
		GSEndString
	}
}
end GrObjTCMonikerResource;
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
start GrObjTMMonikerResource, data;
visMoniker BreakoutPasteInsideTMMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 15, 15;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 36
		Bitmap <15,15,0,BMF_MONO>
	db	0x00, 0x00
	db	0x7f, 0xfc
	db	0x40, 0x04
	db	0x40, 0x04
	db	0x40, 0xe4
	db	0x43, 0x1c
	db	0x44, 0x04
	db	0x45, 0xb4
	db	0x49, 0xb3
	db	0x48, 0x03
	db	0x49, 0x13
	db	0x45, 0xf4
	db	0x7c, 0xe4
	db	0x03, 0x18
	db	0x00, 0xe0
		GSEndString
	}
}
end GrObjTMMonikerResource;
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
start GrObjTCGAMonikerResource, data;
visMoniker BreakoutPasteInsideTCGAMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = verySquished;
	color = gray1;
	cachedSize = 15, 10;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 26
		Bitmap <15,10,0,BMF_MONO>
	db	0x01, 0xf0
	db	0x7f, 0xfc
	db	0x47, 0x1c
	db	0x4e, 0x0f
	db	0x4c, 0x07
	db	0x4c, 0x07
	db	0x4e, 0x0f
	db	0x47, 0x1c
	db	0x7f, 0xfc
	db	0x01, 0xf0
		GSEndString
	}
}
end GrObjTCGAMonikerResource;
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
start GrObjTCMonikerResource, data;
visMoniker DuplicateTCMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = normal;
	color = color4;
	cachedSize = 15, 15;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 156
		Bitmap <15,15,0,BMF_4BIT or mask BMT_MASK>
	db	0x0e, 0x00
	db	0x22, 0x22, 0x00, 0x02, 0x22, 0x22, 0x22, 0x20
	db	0x3f, 0x80
	db	0x22, 0x00, 0xff, 0xf0, 0x02, 0x22, 0x22, 0x20
	db	0x7f, 0xc0
	db	0x20, 0xff, 0xff, 0xff, 0xf0, 0x22, 0x22, 0x20
	db	0x7f, 0xc0
	db	0x20, 0xf0, 0x0f, 0x00, 0xf0, 0x22, 0x22, 0x20
	db	0xff, 0xe0
	db	0x0f, 0xf0, 0x0f, 0x00, 0x00, 0x02, 0x22, 0x20
	db	0xff, 0xf8
	db	0x0f, 0xff, 0xff, 0x0f, 0xff, 0xf0, 0x02, 0x20
	db	0xff, 0xfc
	db	0x0f, 0xf0, 0xf0, 0xff, 0xff, 0xff, 0xf0, 0x20
	db	0x7f, 0xfc
	db	0x20, 0xf0, 0x00, 0xf0, 0x0f, 0x00, 0xf0, 0x20
	db	0x7f, 0xfe
	db	0x20, 0xff, 0x0f, 0xf0, 0x0f, 0x00, 0xff, 0x00
	db	0x3f, 0xfe
	db	0x22, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0x00
	db	0x0f, 0xfe
	db	0x22, 0x22, 0x0f, 0xf0, 0xff, 0xf0, 0xff, 0x00
	db	0x07, 0xfc
	db	0x22, 0x22, 0x20, 0xf0, 0x00, 0x00, 0xf0, 0x20
	db	0x07, 0xfc
	db	0x22, 0x22, 0x20, 0xff, 0x00, 0x0f, 0xf0, 0x20
	db	0x03, 0xf8
	db	0x22, 0x22, 0x22, 0x00, 0xff, 0xf0, 0x02, 0x20
	db	0x00, 0xe0
	db	0x22, 0x22, 0x22, 0x22, 0x11, 0x12, 0x22, 0x20
		GSEndString
	}
}
end GrObjTCMonikerResource;
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
start GrObjTMMonikerResource, data;
visMoniker DuplicateTMMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 15, 15;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 36
		Bitmap <15,15,0,BMF_MONO>
	db	0x0e, 0x00
	db	0x31, 0x80
	db	0x40, 0x40
	db	0xdb, 0x40
	db	0x9b, 0xe0
	db	0x82, 0x18
	db	0x94, 0x04
	db	0x5d, 0xb4
	db	0x49, 0xb3
	db	0x38, 0x03
	db	0x09, 0x13
	db	0x05, 0xf7
	db	0x04, 0xe4
	db	0x03, 0x18
	db	0x00, 0xe0
		GSEndString
	}
}
end GrObjTMMonikerResource;
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
start GrObjTCGAMonikerResource, data;
visMoniker DuplicateTCGAMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = verySquished;
	color = gray1;
	cachedSize = 15, 10;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 26
		Bitmap <15,10,0,BMF_MONO>
	db	0x0f, 0x00
	db	0x3f, 0xc0
	db	0x71, 0xe0
	db	0xc7, 0xf8
	db	0xce, 0x1c
	db	0x78, 0x07
	db	0x38, 0x07
	db	0x0e, 0x1c
	db	0x07, 0xf8
	db	0x01, 0xe0
		GSEndString
	}
}
end GrObjTCGAMonikerResource;
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
start GrObjTCMonikerResource, data;
visMoniker CloneTCMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = normal;
	color = color4;
	cachedSize = 15, 15;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 156
		Bitmap <15,15,0,BMF_4BIT or mask BMT_MASK>
	db	0x00, 0x00
	db	0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x20
	db	0x18, 0x30
	db	0x22, 0x21, 0x12, 0x22, 0x22, 0x11, 0x22, 0x20
	db	0x3c, 0x78
	db	0x22, 0x1f, 0xf1, 0x22, 0x21, 0xff, 0x12, 0x20
	db	0x3c, 0x78
	db	0x22, 0x1f, 0xf1, 0x22, 0x21, 0xff, 0x12, 0x20
	db	0x18, 0x30
	db	0x22, 0x21, 0x12, 0x22, 0x22, 0x11, 0x22, 0x20
	db	0x3c, 0x78
	db	0x22, 0x11, 0x11, 0x22, 0x21, 0x11, 0x12, 0x20
	db	0x7e, 0xfc
	db	0x21, 0x11, 0x11, 0x12, 0x11, 0x11, 0x11, 0x20
	db	0xdb, 0xb6
	db	0x11, 0x21, 0x12, 0x11, 0x12, 0x11, 0x21, 0x10
	db	0x99, 0x32
	db	0x12, 0x21, 0x12, 0x21, 0x22, 0x11, 0x22, 0x10
	db	0x18, 0x30
	db	0x22, 0x21, 0x12, 0x22, 0x22, 0x11, 0x22, 0x20
	db	0x18, 0x30
	db	0x22, 0x21, 0x12, 0x22, 0x22, 0x11, 0x22, 0x20
	db	0x3c, 0x78
	db	0x22, 0x11, 0x11, 0x22, 0x21, 0x11, 0x12, 0x20
	db	0x7e, 0xfc
	db	0x21, 0x11, 0x11, 0x12, 0x11, 0x11, 0x11, 0x20
	db	0xe7, 0xce
	db	0x11, 0x12, 0x21, 0x11, 0x11, 0x22, 0x11, 0x10
	db	0xc3, 0x86
	db	0x11, 0x22, 0x22, 0x11, 0x12, 0x22, 0x21, 0x10
		GSEndString
	}
}
end GrObjTCMonikerResource;
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
start GrObjTMMonikerResource, data;
visMoniker CloneTMMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 15, 15;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 36
		Bitmap <15,15,0,BMF_MONO>
	db	0x00, 0x00
	db	0x18, 0x30
	db	0x24, 0x48
	db	0x24, 0x48
	db	0x18, 0x30
	db	0x3c, 0x78
	db	0x7e, 0xfc
	db	0xdb, 0xb7
	db	0x99, 0x33
	db	0x18, 0x30
	db	0x18, 0x30
	db	0x3c, 0x78
	db	0x7e, 0xfc
	db	0xe7, 0xcf
	db	0xc3, 0x87
		GSEndString
	}
}
end GrObjTMMonikerResource;
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
start GrObjTCGAMonikerResource, data;
visMoniker CloneTCGAMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = verySquished;
	color = gray1;
	cachedSize = 15, 10;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 26
		Bitmap <15,10,0,BMF_MONO>
	db	0x18, 0x30
	db	0x24, 0x48
	db	0x18, 0x30
	db	0x3c, 0x78
	db	0x7e, 0xfc
	db	0x99, 0x33
	db	0x18, 0x30
	db	0x18, 0x30
	db	0x7e, 0xfc
	db	0xe7, 0xcf
		GSEndString
	}
}
end GrObjTCGAMonikerResource;
