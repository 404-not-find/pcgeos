start GrObjOtherColorMonikerResource, data;
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker HorizontalGradientColorMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color4;
	cachedSize = 52, 25;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 367
		Bitmap <52,25,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xf8, 0xcc, 0xfa, 0xce, 0xf7, 0xee
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xfd, 0xcc, 0xf0, 0xec, 0xfc, 0xee
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xfb, 0xcc, 0x03, 0xce, 0xcc, 0xce, 0xcc, 0xfc, 
		0xce, 0x03, 0xee, 0xce, 0xee, 0xce, 0xfa, 0xee
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xfe, 0xcc, 0x03, 0xec, 0xcc, 0xec, 0xcc, 0xf6, 
		0xec, 0x03, 0xee, 0xec, 0xee, 0xec, 0xfd, 0xee
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xf8, 0xcc, 0xfa, 0xce, 0xf7, 0xee
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xfd, 0xcc, 0xf0, 0xec, 0xfc, 0xee
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xf9, 0xcc, 0x08, 0xce, 0xcc, 0xce, 0xcc, 0xce, 
		0xee, 0xce, 0xee, 0xce, 0xf8, 0xee
	db	0xfb, 0xff, 0x00, 0xf0
	db	0x04, 0xcc, 0xec, 0xcc, 0xec, 0xcc, 0xf2, 0xec, 
		0x05, 0xee, 0xec, 0xee, 0xec, 0xee, 0xee
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xf8, 0xcc, 0xfa, 0xce, 0xf7, 0xee
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xfd, 0xcc, 0xf0, 0xec, 0xfc, 0xee
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xfb, 0xcc, 0x03, 0xce, 0xcc, 0xce, 0xcc, 0xfc, 
		0xce, 0x03, 0xee, 0xce, 0xee, 0xce, 0xfa, 0xee
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xfe, 0xcc, 0x03, 0xec, 0xcc, 0xec, 0xcc, 0xf6, 
		0xec, 0x03, 0xee, 0xec, 0xee, 0xec, 0xfd, 0xee
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xf8, 0xcc, 0xfa, 0xce, 0xf7, 0xee
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xfd, 0xcc, 0xf0, 0xec, 0xfc, 0xee
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xf9, 0xcc, 0x08, 0xce, 0xcc, 0xce, 0xcc, 0xce, 
		0xee, 0xce, 0xee, 0xce, 0xf8, 0xee
	db	0xfb, 0xff, 0x00, 0xf0
	db	0x04, 0xcc, 0xec, 0xcc, 0xec, 0xcc, 0xf2, 0xec, 
		0x05, 0xee, 0xec, 0xee, 0xec, 0xee, 0xee
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xf8, 0xcc, 0xfa, 0xce, 0xf7, 0xee
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xfd, 0xcc, 0xf0, 0xec, 0xfc, 0xee
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xfb, 0xcc, 0x03, 0xce, 0xcc, 0xce, 0xcc, 0xfc, 
		0xce, 0x03, 0xee, 0xce, 0xee, 0xce, 0xfa, 0xee
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xfe, 0xcc, 0x03, 0xec, 0xcc, 0xec, 0xcc, 0xf6, 
		0xec, 0x03, 0xee, 0xec, 0xee, 0xec, 0xfd, 0xee
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xf8, 0xcc, 0xfa, 0xce, 0xf7, 0xee
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xfd, 0xcc, 0xf0, 0xec, 0xfc, 0xee
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xf9, 0xcc, 0x08, 0xce, 0xcc, 0xce, 0xcc, 0xce, 
		0xee, 0xce, 0xee, 0xce, 0xf8, 0xee
	db	0xfb, 0xff, 0x00, 0xf0
	db	0x04, 0xcc, 0xec, 0xcc, 0xec, 0xcc, 0xf2, 0xec, 
		0x05, 0xee, 0xec, 0xee, 0xec, 0xee, 0xee
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xf8, 0xcc, 0xfa, 0xce, 0xf7, 0xee
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker RadialEllipseGradientColorMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color4;
	cachedSize = 52, 25;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 442
		Bitmap <52,25,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0x06, 0x00, 0x00, 0x3f, 0xff, 0x80, 0x00, 0x00
	db	0xf8, 0x22, 0xfa, 0xcc, 0x00, 0xc2, 0xf8, 0x22
	db	0x06, 0x00, 0x07, 0xff, 0xff, 0xfc, 0x00, 0x00
	db	0xfb, 0x22, 0x00, 0x2c, 0xf5, 0xcc, 0xfa, 0x22
	db	0x01, 0x00, 0x3f, 0xfe, 0xff, 0x01, 0x80, 0x00
	db	0xfc, 0x22, 0xf2, 0xcc, 0x00, 0xc2, 0xfc, 0x22
	db	0x00, 0x00, 0xfd, 0xff, 0x01, 0xe0, 0x00
	db	0xfd, 0x22, 0xf0, 0xcc, 0x00, 0xc2, 0xfd, 0x22
	db	0x00, 0x03, 0xfd, 0xff, 0x01, 0xf8, 0x00
	db	0xfe, 0x22, 0xfb, 0xcc, 0xfa, 0xce, 0xfb, 0xcc, 
		0x00, 0xc2, 0xfe, 0x22
	db	0x00, 0x0f, 0xfd, 0xff, 0x01, 0xfe, 0x00
	db	0x01, 0x22, 0x22, 0xfc, 0xcc, 0xf5, 0xec, 0xfd, 
		0xcc, 0x02, 0xc2, 0x22, 0x22
	db	0x00, 0x1f, 0xfc, 0xff, 0x00, 0x00
	db	0x01, 0x22, 0x2c, 0xfe, 0xcc, 0xf2, 0xce, 0xfd, 
		0xcc, 0x01, 0x22, 0x22
	db	0x00, 0x3f, 0xfc, 0xff, 0x00, 0x80
	db	0x00, 0x22, 0xfe, 0xcc, 0xef, 0xec, 0x03, 0xcc, 
		0xcc, 0xc2, 0x22
	db	0x00, 0x7f, 0xfc, 0xff, 0x00, 0xc0
	db	0x02, 0x2c, 0xcc, 0xcc, 0xfb, 0xce, 0xf9, 0xee, 
		0xfc, 0xce, 0xfe, 0xcc, 0x00, 0x22
	db	0x00, 0x7f, 0xfc, 0xff, 0x00, 0xc0
	db	0x02, 0x2c, 0xcc, 0xcc, 0xfe, 0xec, 0xf4, 0xee, 
		0xfd, 0xec, 0x02, 0xcc, 0xcc, 0x22
	db	0xfb, 0xff, 0x00, 0xe0
	db	0x01, 0xcc, 0xcc, 0xfe, 0xce, 0xf1, 0xee, 0x04, 
		0xce, 0xce, 0xcc, 0xcc, 0xc2
	db	0xfb, 0xff, 0x00, 0xe0
	db	0x03, 0xcc, 0xcc, 0xec, 0xec, 0xf0, 0xee, 0xfe, 
		0xec, 0x01, 0xcc, 0xc2
	db	0xfb, 0xff, 0x00, 0xe0
	db	0x03, 0xcc, 0xcc, 0xce, 0xce, 0xef, 0xee, 0x03, 
		0xce, 0xcc, 0xcc, 0xc2
	db	0xfb, 0xff, 0x00, 0xe0
	db	0x03, 0xcc, 0xcc, 0xec, 0xec, 0xf0, 0xee, 0xfe, 
		0xec, 0x01, 0xcc, 0xc2
	db	0xfb, 0xff, 0x00, 0xe0
	db	0x01, 0xcc, 0xcc, 0xfe, 0xce, 0xf1, 0xee, 0x04, 
		0xce, 0xce, 0xcc, 0xcc, 0xc2
	db	0x00, 0x7f, 0xfc, 0xff, 0x00, 0xc0
	db	0x02, 0x2c, 0xcc, 0xcc, 0xfe, 0xec, 0xf4, 0xee, 
		0xfd, 0xec, 0x02, 0xcc, 0xcc, 0x22
	db	0x00, 0x7f, 0xfc, 0xff, 0x00, 0xc0
	db	0x02, 0x2c, 0xcc, 0xcc, 0xfb, 0xce, 0xf9, 0xee, 
		0xfc, 0xce, 0xfe, 0xcc, 0x00, 0x22
	db	0x00, 0x3f, 0xfc, 0xff, 0x00, 0x80
	db	0x00, 0x22, 0xfe, 0xcc, 0xef, 0xec, 0x03, 0xcc, 
		0xcc, 0xc2, 0x22
	db	0x00, 0x1f, 0xfc, 0xff, 0x00, 0x00
	db	0x01, 0x22, 0x2c, 0xfe, 0xcc, 0xf2, 0xce, 0xfd, 
		0xcc, 0x01, 0x22, 0x22
	db	0x00, 0x0f, 0xfd, 0xff, 0x01, 0xfe, 0x00
	db	0x01, 0x22, 0x22, 0xfc, 0xcc, 0xf5, 0xec, 0xfd, 
		0xcc, 0x02, 0xc2, 0x22, 0x22
	db	0x00, 0x03, 0xfd, 0xff, 0x01, 0xf8, 0x00
	db	0xfe, 0x22, 0xfb, 0xcc, 0xfa, 0xce, 0xfb, 0xcc, 
		0x00, 0xc2, 0xfe, 0x22
	db	0x00, 0x00, 0xfd, 0xff, 0x01, 0xe0, 0x00
	db	0xfd, 0x22, 0xf0, 0xcc, 0x00, 0xc2, 0xfd, 0x22
	db	0x01, 0x00, 0x3f, 0xfe, 0xff, 0x01, 0x80, 0x00
	db	0xfc, 0x22, 0xf2, 0xcc, 0x00, 0xc2, 0xfc, 0x22
	db	0x06, 0x00, 0x07, 0xff, 0xff, 0xfc, 0x00, 0x00
	db	0xfb, 0x22, 0x00, 0x2c, 0xf5, 0xcc, 0xfa, 0x22
	db	0x06, 0x00, 0x00, 0x3f, 0xff, 0x80, 0x00, 0x00
	db	0xf8, 0x22, 0xfa, 0xcc, 0x00, 0xc2, 0xf8, 0x22
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker RadialRectGradientColorMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color4;
	cachedSize = 52, 25;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 290
		Bitmap <52,25,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xe7, 0xcc
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xe7, 0xcc
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xe7, 0xcc
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xe7, 0xcc
	db	0xfb, 0xff, 0x00, 0xf0
	db	0x01, 0xcc, 0xcc, 0xeb, 0xec, 0x01, 0xcc, 0xcc
	db	0xfb, 0xff, 0x00, 0xf0
	db	0x01, 0xcc, 0xcc, 0xeb, 0xce, 0x01, 0xcc, 0xcc
	db	0xfb, 0xff, 0x00, 0xf0
	db	0x01, 0xcc, 0xcc, 0xeb, 0xec, 0x01, 0xcc, 0xcc
	db	0xfb, 0xff, 0x00, 0xf0
	db	0x01, 0xcc, 0xcc, 0xeb, 0xce, 0x01, 0xcc, 0xcc
	db	0xfb, 0xff, 0x00, 0xf0
	db	0x03, 0xcc, 0xcc, 0xec, 0xec, 0xf0, 0xee, 0xfe, 
		0xec, 0x01, 0xcc, 0xcc
	db	0xfb, 0xff, 0x00, 0xf0
	db	0x03, 0xcc, 0xcc, 0xce, 0xce, 0xef, 0xee, 0x03, 
		0xce, 0xce, 0xcc, 0xcc
	db	0xfb, 0xff, 0x00, 0xf0
	db	0x03, 0xcc, 0xcc, 0xec, 0xec, 0xf0, 0xee, 0xfe, 
		0xec, 0x01, 0xcc, 0xcc
	db	0xfb, 0xff, 0x00, 0xf0
	db	0x03, 0xcc, 0xcc, 0xce, 0xce, 0xef, 0xee, 0x03, 
		0xce, 0xce, 0xcc, 0xcc
	db	0xfb, 0xff, 0x00, 0xf0
	db	0x03, 0xcc, 0xcc, 0xec, 0xec, 0xf0, 0xee, 0xfe, 
		0xec, 0x01, 0xcc, 0xcc
	db	0xfb, 0xff, 0x00, 0xf0
	db	0x03, 0xcc, 0xcc, 0xce, 0xce, 0xef, 0xee, 0x03, 
		0xce, 0xce, 0xcc, 0xcc
	db	0xfb, 0xff, 0x00, 0xf0
	db	0x03, 0xcc, 0xcc, 0xec, 0xec, 0xf0, 0xee, 0xfe, 
		0xec, 0x01, 0xcc, 0xcc
	db	0xfb, 0xff, 0x00, 0xf0
	db	0x03, 0xcc, 0xcc, 0xce, 0xce, 0xef, 0xee, 0x03, 
		0xce, 0xce, 0xcc, 0xcc
	db	0xfb, 0xff, 0x00, 0xf0
	db	0x01, 0xcc, 0xcc, 0xeb, 0xec, 0x01, 0xcc, 0xcc
	db	0xfb, 0xff, 0x00, 0xf0
	db	0x01, 0xcc, 0xcc, 0xeb, 0xce, 0x01, 0xcc, 0xcc
	db	0xfb, 0xff, 0x00, 0xf0
	db	0x01, 0xcc, 0xcc, 0xeb, 0xec, 0x01, 0xcc, 0xcc
	db	0xfb, 0xff, 0x00, 0xf0
	db	0x01, 0xcc, 0xcc, 0xeb, 0xce, 0x01, 0xcc, 0xcc
	db	0xfb, 0xff, 0x00, 0xf0
	db	0x01, 0xcc, 0xcc, 0xeb, 0xec, 0x01, 0xcc, 0xcc
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xe7, 0xcc
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xe7, 0xcc
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xe7, 0xcc
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xe7, 0xcc
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker VerticalGradientColorMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color4;
	cachedSize = 52, 25;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 305
		Bitmap <52,25,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xe7, 0xcc
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xe7, 0xcc
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xe7, 0xcc
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xe7, 0xcc
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xe7, 0xec
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xe7, 0xcc
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xe7, 0xec
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xfe, 0xcc, 0x00, 0xce, 0xfe, 0xcc, 0x00, 0xce, 
		0xfe, 0xcc, 0x00, 0xce, 0xfe, 0xcc, 0x00, 0xce, 
		0xfe, 0xcc, 0x00, 0xce, 0xfe, 0xcc, 0x02, 0xce, 
		0xcc, 0xcc
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xe7, 0xec
	db	0xfb, 0xff, 0x00, 0xf0
	db	0x19, 0xce, 0xcc, 0xce, 0xcc, 0xce, 0xcc, 0xce, 
		0xcc, 0xce, 0xcc, 0xce, 0xcc, 0xce, 0xcc, 0xce, 
		0xcc, 0xce, 0xcc, 0xce, 0xcc, 0xce, 0xcc, 0xce, 
		0xcc, 0xce, 0xcc
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xe7, 0xec
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xe7, 0xce
	db	0xfb, 0xff, 0x00, 0xf0
	db	0x01, 0xec, 0xee, 0xfe, 0xec, 0x00, 0xee, 0xfe, 
		0xec, 0x00, 0xee, 0xfe, 0xec, 0x00, 0xee, 0xfe, 
		0xec, 0x00, 0xee, 0xfe, 0xec, 0x00, 0xee, 0xfe, 
		0xec, 0x00, 0xee
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xe7, 0xce
	db	0xfb, 0xff, 0x00, 0xf0
	db	0x19, 0xee, 0xec, 0xee, 0xec, 0xee, 0xec, 0xee, 
		0xec, 0xee, 0xec, 0xee, 0xec, 0xee, 0xec, 0xee, 
		0xec, 0xee, 0xec, 0xee, 0xec, 0xee, 0xec, 0xee, 
		0xec, 0xee, 0xec
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xe7, 0xce
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xe7, 0xee
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xe7, 0xce
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xe7, 0xee
	db	0xfb, 0xff, 0x00, 0xf0
	db	0x19, 0xce, 0xee, 0xce, 0xee, 0xce, 0xee, 0xce, 
		0xee, 0xce, 0xee, 0xce, 0xee, 0xce, 0xee, 0xce, 
		0xee, 0xce, 0xee, 0xce, 0xee, 0xce, 0xee, 0xce, 
		0xee, 0xce, 0xee
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xe7, 0xee
	db	0xfb, 0xff, 0x00, 0xf0
	db	0x19, 0xee, 0xce, 0xee, 0xce, 0xee, 0xce, 0xee, 
		0xce, 0xee, 0xce, 0xee, 0xce, 0xee, 0xce, 0xee, 
		0xce, 0xee, 0xce, 0xee, 0xce, 0xee, 0xce, 0xee, 
		0xce, 0xee, 0xce
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xe7, 0xee
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xe7, 0xee
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xe7, 0xee
		GSEndString
	}
}
end GrObjOtherColorMonikerResource;
start GrObjOtherMonoMonikerResource, data;
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker HorizontalGradientMonoMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 52, 25;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 181
		Bitmap <52,25,0,BMF_MONO>
	db	0xff, 0xff, 0xea, 0xaa, 0x00, 0x00, 0x00
	db	0xff, 0x55, 0x55, 0x55, 0x55, 0x40, 0x00
	db	0xff, 0xfb, 0xba, 0xa8, 0x88, 0x00, 0x00
	db	0xfd, 0xdd, 0x55, 0x55, 0x51, 0x10, 0x00
	db	0xff, 0xff, 0xea, 0xaa, 0x00, 0x00, 0x00
	db	0xff, 0x55, 0x55, 0x55, 0x55, 0x40, 0x00
	db	0xff, 0xff, 0xbb, 0x88, 0x80, 0x00, 0x00
	db	0xdd, 0xd5, 0x55, 0x55, 0x55, 0x11, 0x00
	db	0xff, 0xff, 0xea, 0xaa, 0x00, 0x00, 0x00
	db	0xff, 0x55, 0x55, 0x55, 0x55, 0x40, 0x00
	db	0xff, 0xfb, 0xba, 0xa8, 0x88, 0x00, 0x00
	db	0xfd, 0xdd, 0x55, 0x55, 0x51, 0x10, 0x00
	db	0xff, 0xff, 0xea, 0xaa, 0x00, 0x00, 0x00
	db	0xff, 0x55, 0x55, 0x55, 0x55, 0x40, 0x00
	db	0xff, 0xff, 0xbb, 0x88, 0x80, 0x00, 0x00
	db	0xdd, 0xd5, 0x55, 0x55, 0x55, 0x11, 0x00
	db	0xff, 0xff, 0xea, 0xaa, 0x00, 0x00, 0x00
	db	0xff, 0x55, 0x55, 0x55, 0x55, 0x40, 0x00
	db	0xff, 0xfb, 0xba, 0xa8, 0x88, 0x00, 0x00
	db	0xfd, 0xdd, 0x55, 0x55, 0x51, 0x10, 0x00
	db	0xff, 0xff, 0xea, 0xaa, 0x00, 0x00, 0x00
	db	0xff, 0x55, 0x55, 0x55, 0x55, 0x40, 0x00
	db	0xff, 0xff, 0xbb, 0x88, 0x80, 0x00, 0x00
	db	0xdd, 0xd5, 0x55, 0x55, 0x55, 0x11, 0x00
	db	0xff, 0xff, 0xea, 0xaa, 0x00, 0x00, 0x00
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker RadialEllipseGradientMonoMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 52, 25;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 181
		Bitmap <52,25,0,BMF_MONO>
	db	0x00, 0x00, 0x3f, 0xff, 0x80, 0x00, 0x00
	db	0x00, 0x07, 0xff, 0xff, 0xfc, 0x00, 0x00
	db	0x00, 0x3f, 0xff, 0xff, 0xff, 0x80, 0x00
	db	0x00, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00
	db	0x03, 0xff, 0xea, 0xaa, 0xff, 0xf8, 0x00
	db	0x0f, 0xfd, 0x55, 0x55, 0x57, 0xfe, 0x00
	db	0x1f, 0xea, 0xaa, 0xaa, 0xaa, 0xff, 0x00
	db	0x3f, 0x55, 0x55, 0x55, 0x55, 0x5f, 0x80
	db	0x7e, 0xaa, 0x80, 0x00, 0x2a, 0xaf, 0xc0
	db	0x7d, 0x50, 0x00, 0x00, 0x01, 0x57, 0xc0
	db	0xfa, 0x80, 0x00, 0x00, 0x00, 0x2b, 0xe0
	db	0xf5, 0x00, 0x00, 0x00, 0x00, 0x15, 0xe0
	db	0xfa, 0x00, 0x00, 0x00, 0x00, 0x0b, 0xe0
	db	0xf5, 0x00, 0x00, 0x00, 0x00, 0x15, 0xe0
	db	0xfa, 0x80, 0x00, 0x00, 0x00, 0x2b, 0xe0
	db	0x7d, 0x50, 0x00, 0x00, 0x01, 0x57, 0xc0
	db	0x7e, 0xaa, 0x80, 0x00, 0x2a, 0xaf, 0xc0
	db	0x3f, 0x55, 0x55, 0x55, 0x55, 0x5f, 0x80
	db	0x1f, 0xea, 0xaa, 0xaa, 0xaa, 0xff, 0x00
	db	0x0f, 0xfd, 0x55, 0x55, 0x57, 0xfe, 0x00
	db	0x03, 0xff, 0xea, 0xaa, 0xff, 0xf8, 0x00
	db	0x00, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00
	db	0x00, 0x3f, 0xff, 0xff, 0xff, 0x80, 0x00
	db	0x00, 0x07, 0xff, 0xff, 0xfc, 0x00, 0x00
	db	0x00, 0x00, 0x3f, 0xff, 0x80, 0x00, 0x00
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker RadialRectGradientMonoMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 52, 25;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 148
		Bitmap <52,25,BMC_PACKBITS,BMF_MONO>
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xfb, 0xff, 0x00, 0xf0
	db	0x00, 0xf5, 0xfc, 0x55, 0x00, 0xf0
	db	0x00, 0xfa, 0xfc, 0xaa, 0x00, 0xf0
	db	0x00, 0xf5, 0xfc, 0x55, 0x00, 0xf0
	db	0x00, 0xfa, 0xfc, 0xaa, 0x00, 0xf0
	db	0x00, 0xf5, 0xfd, 0x00, 0x01, 0x15, 0xf0
	db	0x00, 0xfa, 0xfd, 0x00, 0x01, 0x0a, 0xf0
	db	0x00, 0xf5, 0xfd, 0x00, 0x01, 0x15, 0xf0
	db	0x00, 0xfa, 0xfd, 0x00, 0x01, 0x0a, 0xf0
	db	0x00, 0xf5, 0xfd, 0x00, 0x01, 0x15, 0xf0
	db	0x00, 0xfa, 0xfd, 0x00, 0x01, 0x0a, 0xf0
	db	0x00, 0xf5, 0xfd, 0x00, 0x01, 0x15, 0xf0
	db	0x00, 0xfa, 0xfd, 0x00, 0x01, 0x0a, 0xf0
	db	0x00, 0xf5, 0xfc, 0x55, 0x00, 0xf0
	db	0x00, 0xfa, 0xfc, 0xaa, 0x00, 0xf0
	db	0x00, 0xf5, 0xfc, 0x55, 0x00, 0xf0
	db	0x00, 0xfa, 0xfc, 0xaa, 0x00, 0xf0
	db	0x00, 0xf5, 0xfc, 0x55, 0x00, 0xf0
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xfb, 0xff, 0x00, 0xf0
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker VerticalGradientMonoMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 52, 25;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 94
		Bitmap <52,25,BMC_PACKBITS,BMF_MONO>
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xfb, 0x55, 0x00, 0x50
	db	0xfb, 0xff, 0x00, 0xf0
	db	0xfb, 0x55, 0x00, 0x50
	db	0xfb, 0xfe, 0x00, 0xf0
	db	0xfb, 0x55, 0x00, 0x50
	db	0xfb, 0xbb, 0x00, 0xb0
	db	0xfb, 0x55, 0x00, 0x50
	db	0xfb, 0xaa, 0x00, 0xa0
	db	0xfb, 0x45, 0x00, 0x40
	db	0xfb, 0xaa, 0x00, 0xa0
	db	0xfb, 0x11, 0x00, 0x10
	db	0xfb, 0xaa, 0x00, 0xa0
	db	0xfa, 0x00
	db	0xfb, 0xaa, 0x00, 0xa0
	db	0xfa, 0x00
	db	0xfb, 0x88, 0x00, 0x80
	db	0xfa, 0x00
	db	0xfb, 0x22, 0x00, 0x20
	db	0xfa, 0x00
	db	0xfa, 0x00
	db	0xfa, 0x00
		GSEndString
	}
}
end GrObjOtherMonoMonikerResource;
