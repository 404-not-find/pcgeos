start GrObjOtherColorMonikerResource, data;
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker SkewHCMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color4;
	cachedSize = 41, 25;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 462
		Bitmap <41,25,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0xfb, 0x00
	db	0xed, 0x22, 0x00, 0x20
	db	0xfb, 0x00
	db	0xed, 0x22, 0x00, 0x20
	db	0xfb, 0x00
	db	0xed, 0x22, 0x00, 0x20
	db	0xfd, 0x00, 0x01, 0x80, 0x00
	db	0xf1, 0x22, 0x00, 0xf2, 0xfe, 0x22, 0x00, 0x20
	db	0x05, 0x7f, 0xff, 0xf8, 0x01, 0x80, 0x00
	db	0x00, 0x21, 0xf8, 0x11, 0x00, 0x12, 0xfd, 0x22, 
		0x01, 0x2f, 0xf2, 0xfe, 0x22, 0x00, 0x20
	db	0x05, 0x7f, 0xff, 0xf8, 0x03, 0x80, 0x00
	db	0x00, 0x21, 0xf8, 0x11, 0x00, 0x12, 0xfd, 0x22, 
		0x01, 0xf0, 0xf2, 0xfe, 0x22, 0x00, 0x20
	db	0x05, 0x3f, 0xff, 0xfc, 0x07, 0x80, 0x00
	db	0x01, 0x22, 0x11, 0xf9, 0x99, 0x00, 0x11, 0xfe, 
		0x22, 0x02, 0x2f, 0x00, 0xf2, 0xfe, 0x22, 0x00, 
		0x20
	db	0x05, 0x3f, 0xff, 0xfc, 0x0f, 0xff, 0x00
	db	0x01, 0x22, 0x11, 0xf9, 0x99, 0x00, 0x11, 0xfe, 
		0x22, 0x01, 0xf0, 0x00, 0xfd, 0xff, 0x00, 0x20
	db	0x05, 0x1f, 0xff, 0xfe, 0x1f, 0xff, 0x00
	db	0x02, 0x22, 0x21, 0x19, 0xfa, 0x99, 0x03, 0x91, 
		0x12, 0x22, 0x2f, 0xfc, 0x00, 0x01, 0x0f, 0x20
	db	0x05, 0x1f, 0xff, 0xfe, 0x3f, 0xff, 0x00
	db	0x02, 0x22, 0x21, 0x19, 0xfa, 0x99, 0x03, 0x91, 
		0x12, 0x22, 0xf0, 0xfc, 0x00, 0x01, 0x0f, 0x20
	db	0x05, 0x0f, 0xff, 0xff, 0x1f, 0xff, 0x00
	db	0x02, 0x22, 0x22, 0x11, 0xf9, 0x99, 0x02, 0x11, 
		0x22, 0x2f, 0xfc, 0x00, 0x01, 0x0f, 0x20
	db	0x05, 0x0f, 0xff, 0xff, 0x0f, 0xff, 0x00
	db	0x02, 0x22, 0x22, 0x11, 0xf9, 0x99, 0x04, 0x11, 
		0x22, 0x22, 0xf0, 0x00, 0xfd, 0xff, 0x00, 0x20
	db	0x05, 0x07, 0xff, 0xff, 0x87, 0x80, 0x00
	db	0x03, 0x22, 0x22, 0x21, 0x19, 0xfa, 0x99, 0x05, 
		0x91, 0x12, 0x22, 0x2f, 0x00, 0xf2, 0xfe, 0x22, 
		0x00, 0x20
	db	0x05, 0x07, 0xff, 0xff, 0x83, 0x80, 0x00
	db	0x03, 0x22, 0x22, 0x21, 0x19, 0xfa, 0x99, 0x05, 
		0x91, 0x12, 0x22, 0x22, 0xf0, 0xf2, 0xfe, 0x22, 
		0x00, 0x20
	db	0x05, 0x03, 0xff, 0xff, 0xc1, 0x80, 0x00
	db	0xfe, 0x22, 0x00, 0x11, 0xf9, 0x99, 0x04, 0x11, 
		0x22, 0x22, 0x2f, 0xf2, 0xfe, 0x22, 0x00, 0x20
	db	0x05, 0x03, 0xff, 0xff, 0xc0, 0x80, 0x00
	db	0xfe, 0x22, 0x00, 0x11, 0xf9, 0x99, 0x00, 0x11, 
		0xfe, 0x22, 0x00, 0xf2, 0xfe, 0x22, 0x00, 0x20
	db	0x05, 0x01, 0xff, 0xff, 0xe0, 0x00, 0x00
	db	0xfe, 0x22, 0x01, 0x21, 0x19, 0xfa, 0x99, 0x01, 
		0x91, 0x12, 0xfb, 0x22, 0x00, 0x20
	db	0x05, 0x01, 0xff, 0xff, 0xe0, 0x00, 0x00
	db	0xfe, 0x22, 0x01, 0x21, 0x19, 0xfa, 0x99, 0x01, 
		0x91, 0x12, 0xfb, 0x22, 0x00, 0x20
	db	0x05, 0x00, 0xff, 0xff, 0xf0, 0x00, 0x00
	db	0xfd, 0x22, 0x00, 0x11, 0xf9, 0x99, 0x00, 0x11, 
		0xfb, 0x22, 0x00, 0x20
	db	0x05, 0x00, 0xff, 0xff, 0xf0, 0x00, 0x00
	db	0xfd, 0x22, 0x00, 0x11, 0xf9, 0x99, 0x00, 0x11, 
		0xfb, 0x22, 0x00, 0x20
	db	0x05, 0x00, 0x7f, 0xff, 0xf8, 0x00, 0x00
	db	0xfd, 0x22, 0x01, 0x21, 0x19, 0xfa, 0x99, 0x01, 
		0x91, 0x12, 0xfc, 0x22, 0x00, 0x20
	db	0x05, 0x00, 0x7f, 0xff, 0xf8, 0x00, 0x00
	db	0xfd, 0x22, 0x00, 0x21, 0xf8, 0x11, 0x00, 0x12, 
		0xfc, 0x22, 0x00, 0x20
	db	0x05, 0x00, 0x3f, 0xff, 0xfc, 0x00, 0x00
	db	0xfc, 0x22, 0xf7, 0x11, 0xfc, 0x22, 0x00, 0x20
	db	0xfb, 0x00
	db	0xed, 0x22, 0x00, 0x20
	db	0xfb, 0x00
	db	0xed, 0x22, 0x00, 0x20
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker SkewVCMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color4;
	cachedSize = 25, 41;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 638
		Bitmap <25,41,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0xfd, 0x00
	db	0xf5, 0x22, 0x00, 0x20
	db	0x03, 0x00, 0x00, 0x18, 0x00
	db	0xf8, 0x22, 0x03, 0x21, 0x12, 0x22, 0x20
	db	0x03, 0x00, 0x00, 0x78, 0x00
	db	0xf9, 0x22, 0x04, 0x21, 0x11, 0x12, 0x22, 0x20
	db	0x03, 0x00, 0x01, 0xf8, 0x00
	db	0xfa, 0x22, 0x05, 0x21, 0x11, 0x11, 0x12, 0x22, 
		0x20
	db	0x03, 0x00, 0x07, 0xf8, 0x00
	db	0xfb, 0x22, 0x06, 0x21, 0x11, 0x19, 0x91, 0x12, 
		0x22, 0x20
	db	0x03, 0x00, 0x1f, 0xf8, 0x00
	db	0xfc, 0x22, 0x07, 0x21, 0x11, 0x19, 0x99, 0x91, 
		0x12, 0x22, 0x20
	db	0x03, 0x00, 0x7f, 0xf8, 0x00
	db	0xfd, 0x22, 0x08, 0x21, 0x11, 0x19, 0x99, 0x99, 
		0x91, 0x12, 0x22, 0x20
	db	0x03, 0x01, 0xff, 0xf8, 0x00
	db	0xfe, 0x22, 0x02, 0x21, 0x11, 0x19, 0xfe, 0x99, 
		0x03, 0x91, 0x12, 0x22, 0x20
	db	0x03, 0x07, 0xff, 0xf8, 0x00
	db	0x04, 0x22, 0x22, 0x21, 0x11, 0x19, 0xfd, 0x99, 
		0x03, 0x91, 0x12, 0x22, 0x20
	db	0x03, 0x1f, 0xff, 0xf8, 0x00
	db	0x03, 0x22, 0x21, 0x11, 0x19, 0xfc, 0x99, 0x03, 
		0x91, 0x12, 0x22, 0x20
	db	0x03, 0x3f, 0xff, 0xf8, 0x00
	db	0x02, 0x22, 0x11, 0x19, 0xfb, 0x99, 0x03, 0x91, 
		0x12, 0x22, 0x20
	db	0x03, 0x3f, 0xff, 0xf8, 0x00
	db	0x01, 0x22, 0x11, 0xfa, 0x99, 0x03, 0x91, 0x12, 
		0x22, 0x20
	db	0x03, 0x3f, 0xff, 0xf8, 0x00
	db	0x01, 0x22, 0x11, 0xfa, 0x99, 0x03, 0x91, 0x12, 
		0x22, 0x20
	db	0x03, 0x3f, 0xff, 0xf8, 0x00
	db	0x01, 0x22, 0x11, 0xfa, 0x99, 0x03, 0x91, 0x12, 
		0x22, 0x20
	db	0x03, 0x3f, 0xff, 0xf8, 0x00
	db	0x01, 0x22, 0x11, 0xfa, 0x99, 0x03, 0x91, 0x12, 
		0x22, 0x20
	db	0x03, 0x3f, 0xff, 0xf8, 0x00
	db	0x01, 0x22, 0x11, 0xfa, 0x99, 0x03, 0x91, 0x12, 
		0x22, 0x20
	db	0x03, 0x3f, 0xff, 0xf8, 0x00
	db	0x01, 0x22, 0x11, 0xfa, 0x99, 0x03, 0x91, 0x12, 
		0x22, 0x20
	db	0x03, 0x3f, 0xff, 0xf8, 0x00
	db	0x01, 0x22, 0x11, 0xfa, 0x99, 0x03, 0x91, 0x12, 
		0x22, 0x20
	db	0x03, 0x3f, 0xff, 0xf8, 0x00
	db	0x01, 0x22, 0x11, 0xfa, 0x99, 0x03, 0x91, 0x12, 
		0x22, 0x20
	db	0x03, 0x3f, 0xff, 0xf8, 0x00
	db	0x01, 0x22, 0x11, 0xfa, 0x99, 0x03, 0x91, 0x12, 
		0x22, 0x20
	db	0x03, 0x3f, 0xff, 0xf8, 0x00
	db	0x01, 0x22, 0x11, 0xfb, 0x99, 0x04, 0x91, 0x11, 
		0x12, 0x22, 0x20
	db	0x03, 0x3f, 0xff, 0xe0, 0x00
	db	0x01, 0x22, 0x11, 0xfc, 0x99, 0x05, 0x91, 0x11, 
		0x12, 0x22, 0x22, 0x20
	db	0x03, 0x3f, 0xff, 0x80, 0x00
	db	0x01, 0x22, 0x11, 0xfd, 0x99, 0x02, 0x91, 0x11, 
		0x12, 0xfe, 0x22, 0x00, 0x20
	db	0x03, 0x3f, 0xfe, 0x00, 0x00
	db	0x01, 0x22, 0x11, 0xfe, 0x99, 0x02, 0x91, 0x11, 
		0x12, 0xfd, 0x22, 0x00, 0x20
	db	0x03, 0x3f, 0xf8, 0x00, 0x00
	db	0x06, 0x22, 0x11, 0x99, 0x99, 0x91, 0x11, 0x12, 
		0xfc, 0x22, 0x00, 0x20
	db	0x03, 0x3f, 0xe0, 0x00, 0x00
	db	0x05, 0x22, 0x11, 0x99, 0x91, 0x11, 0x12, 0xfb, 
		0x22, 0x00, 0x20
	db	0x03, 0x3f, 0x81, 0x00, 0x00
	db	0x07, 0x22, 0x11, 0x91, 0x11, 0x12, 0x22, 0x22, 
		0x2f, 0xfd, 0x22, 0x00, 0x20
	db	0x03, 0x3e, 0x03, 0x80, 0x00
	db	0x03, 0x22, 0x11, 0x11, 0x12, 0xfe, 0x22, 0x01, 
		0xf0, 0xf2, 0xfe, 0x22, 0x00, 0x20
	db	0x03, 0x38, 0x07, 0xc0, 0x00
	db	0x02, 0x22, 0x11, 0x12, 0xfe, 0x22, 0x02, 0x2f, 
		0x00, 0x0f, 0xfe, 0x22, 0x00, 0x20
	db	0x03, 0x20, 0x0f, 0xe0, 0x00
	db	0x01, 0x22, 0x12, 0xfd, 0x22, 0x06, 0xf0, 0x00, 
		0x00, 0xf2, 0x22, 0x22, 0x20
	db	0x03, 0x00, 0x1f, 0xf0, 0x00
	db	0xfc, 0x22, 0x00, 0x2f, 0xfe, 0x00, 0x03, 0x0f, 
		0x22, 0x22, 0x20
	db	0x03, 0x00, 0x3f, 0xf8, 0x00
	db	0xfc, 0x22, 0x00, 0xf0, 0xfd, 0x00, 0x02, 0xf2, 
		0x22, 0x20
	db	0x03, 0x00, 0x7f, 0xfc, 0x00
	db	0xfd, 0x22, 0x08, 0x2f, 0xff, 0xff, 0x00, 0x0f, 
		0xff, 0xff, 0x22, 0x20
	db	0x03, 0x00, 0x07, 0xc0, 0x00
	db	0xfb, 0x22, 0x02, 0x2f, 0x00, 0x0f, 0xfe, 0x22, 
		0x00, 0x20
	db	0x03, 0x00, 0x07, 0xc0, 0x00
	db	0xfb, 0x22, 0x02, 0x2f, 0x00, 0x0f, 0xfe, 0x22, 
		0x00, 0x20
	db	0x03, 0x00, 0x07, 0xc0, 0x00
	db	0xfb, 0x22, 0x02, 0x2f, 0x00, 0x0f, 0xfe, 0x22, 
		0x00, 0x20
	db	0x03, 0x00, 0x07, 0xc0, 0x00
	db	0xfb, 0x22, 0x02, 0x2f, 0x00, 0x0f, 0xfe, 0x22, 
		0x00, 0x20
	db	0x03, 0x00, 0x07, 0xc0, 0x00
	db	0xfb, 0x22, 0x02, 0x2f, 0x00, 0x0f, 0xfe, 0x22, 
		0x00, 0x20
	db	0x03, 0x00, 0x07, 0xc0, 0x00
	db	0xfb, 0x22, 0x02, 0x2f, 0x00, 0x0f, 0xfe, 0x22, 
		0x00, 0x20
	db	0x03, 0x00, 0x07, 0xc0, 0x00
	db	0xfb, 0x22, 0x02, 0x2f, 0xff, 0xff, 0xfe, 0x22, 
		0x00, 0x20
	db	0xfd, 0x00
	db	0xf5, 0x22, 0x00, 0x20
		GSEndString
	}
}
end GrObjOtherColorMonikerResource;
start GrObjOtherMonoMonikerResource, data;
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker SkewHMMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 41, 25;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 150
		Bitmap <41,25,BMC_PACKBITS,BMF_MONO>
	db	0xfb, 0x00
	db	0xfb, 0x00
	db	0xfb, 0x00
	db	0xfb, 0x00
	db	0x02, 0x7f, 0xff, 0xf8, 0xfe, 0x00
	db	0x05, 0x7f, 0xff, 0xf8, 0x01, 0x00, 0x00
	db	0x05, 0x35, 0x55, 0x5c, 0x03, 0x00, 0x00
	db	0x05, 0x3a, 0xaa, 0xac, 0x07, 0x00, 0x00
	db	0x05, 0x1d, 0x55, 0x56, 0x0f, 0xfe, 0x00
	db	0x05, 0x1a, 0xaa, 0xae, 0x1f, 0xfe, 0x00
	db	0x05, 0x0d, 0x55, 0x57, 0x0f, 0xfe, 0x00
	db	0x05, 0x0e, 0xaa, 0xab, 0x07, 0x00, 0x00
	db	0x05, 0x07, 0x55, 0x55, 0x83, 0x00, 0x00
	db	0x05, 0x06, 0xaa, 0xab, 0x81, 0x00, 0x00
	db	0x05, 0x03, 0x55, 0x55, 0xc0, 0x00, 0x00
	db	0x05, 0x03, 0xaa, 0xaa, 0xc0, 0x00, 0x00
	db	0x05, 0x01, 0xd5, 0x55, 0x60, 0x00, 0x00
	db	0x05, 0x01, 0xaa, 0xaa, 0xe0, 0x00, 0x00
	db	0x05, 0x00, 0xd5, 0x55, 0x70, 0x00, 0x00
	db	0x05, 0x00, 0xea, 0xaa, 0xb0, 0x00, 0x00
	db	0x05, 0x00, 0x75, 0x55, 0x58, 0x00, 0x00
	db	0x05, 0x00, 0x7f, 0xff, 0xf8, 0x00, 0x00
	db	0x05, 0x00, 0x3f, 0xff, 0xfc, 0x00, 0x00
	db	0xfb, 0x00
	db	0xfb, 0x00
		GSEndString
	}
}
/*
 * Moniker generated from grobj.pcx with pixel 2 masked out
 */
visMoniker SkewVMMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 25, 41;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 170
		Bitmap <25,41,0,BMF_MONO>
	db	0x00, 0x00, 0x00, 0x00
	db	0x00, 0x00, 0x18, 0x00
	db	0x00, 0x00, 0x78, 0x00
	db	0x00, 0x01, 0xf8, 0x00
	db	0x00, 0x07, 0xd8, 0x00
	db	0x00, 0x1e, 0xb8, 0x00
	db	0x00, 0x7d, 0x58, 0x00
	db	0x01, 0xea, 0xb8, 0x00
	db	0x07, 0xd5, 0x58, 0x00
	db	0x1e, 0xaa, 0xb8, 0x00
	db	0x3d, 0x55, 0x58, 0x00
	db	0x3a, 0xaa, 0xb8, 0x00
	db	0x35, 0x55, 0x58, 0x00
	db	0x3a, 0xaa, 0xb8, 0x00
	db	0x35, 0x55, 0x58, 0x00
	db	0x3a, 0xaa, 0xb8, 0x00
	db	0x35, 0x55, 0x58, 0x00
	db	0x3a, 0xaa, 0xb8, 0x00
	db	0x35, 0x55, 0x58, 0x00
	db	0x3a, 0xaa, 0xb8, 0x00
	db	0x35, 0x55, 0x78, 0x00
	db	0x3a, 0xab, 0xe0, 0x00
	db	0x35, 0x57, 0x80, 0x00
	db	0x3a, 0xbe, 0x00, 0x00
	db	0x35, 0x78, 0x00, 0x00
	db	0x3b, 0xe0, 0x00, 0x00
	db	0x37, 0x80, 0x00, 0x00
	db	0x3e, 0x01, 0x00, 0x00
	db	0x38, 0x03, 0x80, 0x00
	db	0x20, 0x07, 0xc0, 0x00
	db	0x00, 0x0f, 0xe0, 0x00
	db	0x00, 0x1f, 0xf0, 0x00
	db	0x00, 0x03, 0x80, 0x00
	db	0x00, 0x03, 0x80, 0x00
	db	0x00, 0x03, 0x80, 0x00
	db	0x00, 0x03, 0x80, 0x00
	db	0x00, 0x03, 0x80, 0x00
	db	0x00, 0x03, 0x80, 0x00
	db	0x00, 0x03, 0x80, 0x00
	db	0x00, 0x00, 0x00, 0x00
	db	0x00, 0x00, 0x00, 0x00
		GSEndString
	}
}
end GrObjOtherMonoMonikerResource;
