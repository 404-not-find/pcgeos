/*
 *	Copyright (c) GeoWorks 1992 -- All Rights Reserved
 *
 * PROJECT:	PC GEOS 
 * MODULE:	
 * FILE:	uiRotateControl.ui
 *
 * AUTHOR:	Jon Witort
 *
 * REVISION HISTORY:
 *	Name	Date		Description
 *	----	----		-----------
 *	jon	24 feb 1992	initial perversion
 *
 * DESCRIPTION:
 *	UI description for GrObjRotateControl stuff
 *
 * 	$Id: uiRotateControl.ui,v 1.1 97/04/04 18:05:30 newdeal Exp $
 *
 */

#include "Art/mkrRotate.ui"

start	GrObjRotateControlUI, notDetachable;

GrObjRotate45DegreesCWTrigger = GenTrigger {
	genStates = default -usable;
	moniker = Moniker45DegreesCW;
	action = MSG_GORC_ROTATE, "TO_OBJ_BLOCK_OUTPUT";
	hints = {
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	0
			word	315
		}
	}
}

GrObjRotate90DegreesCWTrigger = GenTrigger {
	genStates = default -usable;
	moniker = Moniker90DegreesCW;
	action = MSG_GORC_ROTATE, "TO_OBJ_BLOCK_OUTPUT";
	hints = {
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	0
			word	270
		}
	}
}

GrObjRotate135DegreesCWTrigger = GenTrigger {
	genStates = default -usable;
	moniker = Moniker135DegreesCW;
	action = MSG_GORC_ROTATE, "TO_OBJ_BLOCK_OUTPUT";
	hints = {
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	0
			word	225
		}
	}
}

GrObjRotate180DegreesTrigger = GenTrigger {
	genStates = default -usable;
	moniker = Moniker180Degrees;
	action = MSG_GORC_ROTATE, "TO_OBJ_BLOCK_OUTPUT";
	hints = {
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	0
			word	180
		}
	}
}

GrObjRotate135DegreesCCWTrigger = GenTrigger {
	genStates = default -usable;
	moniker = Moniker135DegreesCCW;
	action = MSG_GORC_ROTATE, "TO_OBJ_BLOCK_OUTPUT";
	hints = {
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	0
			word	135
		}
	}
}

GrObjRotate90DegreesCCWTrigger = GenTrigger {
	genStates = default -usable;
	moniker = Moniker90DegreesCCW;
	action = MSG_GORC_ROTATE, "TO_OBJ_BLOCK_OUTPUT";
	hints = {
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	0
			word	90
		}
	}
}

GrObjRotate45DegreesCCWTrigger = GenTrigger {
	genStates = default -usable;
	moniker = Moniker45DegreesCCW;
	action = MSG_GORC_ROTATE, "TO_OBJ_BLOCK_OUTPUT";
	hints = {
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	0
			word	45
		}
	}
}

visMoniker Moniker45DegreesCW = data {
#ifdef DO_DBCS
	byte 7
	wchar	"Rotate 45", C_DEGREE_SIGN, " Clockwise", 0;
#else
	char	7, "Rotate 45", C_DEGREE, " Clockwise", 0;
#endif
}

visMoniker Moniker90DegreesCW = data {
#ifdef DO_DBCS
	byte	7
	wchar	"Rotate 90", C_DEGREE_SIGN, " Clockwise", 0;
#else
	char	7, "Rotate 90", C_DEGREE, " Clockwise", 0;
#endif
}

visMoniker Moniker135DegreesCW = data {
#ifdef DO_DBCS
	byte	7
	wchar	"Rotate 135", C_DEGREE_SIGN, " Clockwise", 0;
#else
	char	7, "Rotate 135", C_DEGREE, " Clockwise", 0;
#endif
}

visMoniker Moniker180Degrees = data {
#ifdef DO_DBCS
	byte	8
	wchar	"Rotate 180", C_DEGREE_SIGN, 0;
#else
	char	8, "Rotate 180", C_DEGREE, 0;
#endif
}

visMoniker Moniker135DegreesCCW = data {
#ifdef DO_DBCS
	byte	8
	wchar	"Rotate 135", C_DEGREE_SIGN, " Counterclockwise", 0;
#else
	char	8, "Rotate 135", C_DEGREE, " Counterclockwise", 0;
#endif
}

visMoniker Moniker90DegreesCCW = data {
#ifdef DO_DBCS
	byte	8
	wchar	"Rotate 90", C_DEGREE_SIGN, " Counterclockwise", 0;
#else
	char	8, "Rotate 90", C_DEGREE, " Counterclockwise", 0;
#endif
}

visMoniker Moniker45DegreesCCW = data {
#ifdef DO_DBCS
	byte	8
	wchar	"Rotate 45", C_DEGREE_SIGN, " Counterclockwise", 0;
#else
	char	8, "Rotate 45", C_DEGREE, " Counterclockwise", 0;
#endif
}

GrObjCustomRotateInteraction = GenInteraction {
	genStates = default -usable;
	moniker = 'C', "Custom Rotate";
	children =	GrObjCustomRotateMonikerAndValue,
			GrObjCustomRotateReplyApply;
	type = command;
	visibility = dialog;
	hints = {
			HINT_CENTER_CHILDREN_HORIZONTALLY,
			ATTR_GEN_HELP_CONTEXT {
				char "dbCustomRot", 0
			}
	}
}

GrObjCustomRotateMonikerAndValue = GenInteraction {
	children = GrObjCustomRotateMoniker, GrObjCustomRotateValue;
	hints = {
		HINT_ORIENT_CHILDREN_HORIZONTALLY,
		HINT_CENTER_CHILDREN_VERTICALLY
	}
}

GrObjCustomRotateMoniker = GenGlyph {
	moniker = list {
		RotateCMoniker,
		RotateMMoniker
	}
}

GrObjCustomRotateValue = GenValue {
	moniker = "Degrees";
	value = 0;
	minimum = -359;
	maximum = 359;
	increment = 1;
	displayFormat = integer;
	hints = {
		HINT_PLACE_MONIKER_TO_RIGHT
	}
}

GrObjCustomRotateReplyApply = GenTrigger {
	moniker = "Rotate";
	/* no signalInteractionComplete */
	hints = {
		HINT_SEEK_REPLY_BAR,
		ATTR_GEN_TRIGGER_INTERACTION_COMMAND {word IC_APPLY}
	}
	action = MSG_GORC_CUSTOM_ROTATE, "TO_OBJ_BLOCK_OUTPUT";

}

end	GrObjRotateControlUI;

start GrObjControlUIStrings, data;

chunk GORCName = "Rotation";
chunk GORC45CWName = "45 Degrees Clockwise";
chunk GORC90CWName = "90 Degrees Clockwise";
chunk GORC135CWName = "135 Degrees Clockwise";
chunk GORC180Name = "180 Degrees";
chunk GORC135CCWName = "135 Degrees Counterclockwise";
chunk GORC90CCWName = "90 Degrees Counterclockwise";
chunk GORC45CCWName = "45 Degrees Counterclockwise";
chunk GORCCustomName = "Custom Rotation";

end GrObjControlUIStrings;
