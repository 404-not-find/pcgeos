COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1994 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		
FILE:		mailboxAdmin.def

AUTHOR:		Adam de Boor, Apr  7, 1994

MACROS:
	Name			Description
	----			-----------

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	ardeb	4/ 7/94		Initial revision


DESCRIPTION:
	Interface to the Admin module, which manages the main Mailbox
	Administrative file.
		
	$Id: mailboxAdmin.def,v 1.1 97/04/05 01:19:50 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

Resident	segment	resource

global	MailboxGetAdminFile:far
;	Desc:	Get the handle of the administrative file.
;
;	Pass:	nothing
;	Return:	bx	= file handle
;

Resident	ends

Init	segment	resource

global	AdminInit:near
;	Desc:	Open/Create the administrative file and initialize the
;		transient data structures that are stored in the file.
;
;	Pass:	nothing
;	Return:	carry set if file couldn't be opened/created
;

Init	ends

Admin	segment	resource

global	AdminExit:far
;	Desc:	Close down the administrative file. Called only when no further
;		use can possibly be made of the files, because the mailbox
;		library is entirely unhooked from anything that might provoke
;		it.
;
;	Pass:	nothing
;	Return:	nothing
;

global	AdminGetInbox:far
;	Desc:	Retrieve the inbox DBQ
;
;	Pass:	nothing
;	Return:	bxdi	= DBQ handle for the inbox
;

global	AdminGetOutbox:far
;	Desc:	Retrieve the outbox DBQ
;
;	Pass:	nothing
;	Return:	bxdi	= DBQ handle for the outbox
;

global	AdminGetDataDriverMap:far
;	Desc:	Retrieve the DMap handle for the MailboxStorage -> driver map
;
;	Pass:	nothing
;	Return:	ax	= DMap handle for the data driver map
;

global	AdminGetTransportDriverMap:far
;	Desc:	Retrieve the DMap handle for the MailboxTransport -> driver map
;
;	Pass:	nothing
;	Return:	ax	= DMap handle for the transport driver map
;

global	AdminGetMediaStatusMap:far
;	Desc:	Retrieve the file & handle for the tracking of available and
;		connected media.
;
;	Pass:	nothing
;	Return:	bx	= file handle
;		ax	= VM block handle
;

global	AdminGetMediaTransportMap:far
;	Desc:	Retrieve the file & handle for the mapping of transport
;		media to transport driver(s).
;
;	Pass:	nothing
;	Return:	bx	= file handle
;		ax	= VM block handle
;

global	AdminGetVMStore:far
;	Desc:	Retrieve the file & handle for tracking VM files that hold
;		message bodies.
;
;	Pass:	nothing
;	Return:	bx	= file handle
;		ax	= VM block handle
;

global	AdminAllocTALID:far
;	Desc:	Allocate a Transport Address List ID number.
;
;	Pass:	nothing
;	Return:	ax	= tal ID
;

global	AdminGetOutboxMedia:far
;	Desc:	Retrieve the vptr of the outbox media map
;
;	Pass:	nothing
;	Return:	^vbx:ax	= outbox media map
;

global	AdminGetAppTokens:far
;	Desc:	Retrieve the vptr of the map that tracks application tokens.
;
;	Pass:	nothing
;	Return	^vbx:ax	= app tokens map
;

global	AdminGetReasons:far
;	Desc:	Retrieve the vptr of the map that holds reasons for transmission
;		failure.
;
;	Pass:	nothing
;	Return:	^vbx:ax	= failure-reason map
;

global	AdminGetAutoDeliveryTimeout:far
;	Desc:	Get the time to wait before delivering a message
;		automatically in the absence of user response.
;	Pass:	nothing
;	Return:	cx	= # of ticks
;

Admin	ends


