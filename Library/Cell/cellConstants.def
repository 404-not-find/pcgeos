COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) Berkeley Softworks 1990 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		
FILE:		cellConstants.def

AUTHOR:		John Wedgwood, Dec 5, 1990

	
REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	jcw	12/ 5/90	Initial revision


DESCRIPTION:
	Constants internal to the cell library.
		
	$Id: cellConstants.def,v 1.1 97/04/04 17:44:50 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

DEFAULT_CELL_SIZE	=	30	; Size of a cell when it is first
					;   allocated.

ROW_BLOCK_ID		=	0x0506	; ID number for the row block

INITIAL_ROW_BLOCK_FREE_SPACE	equ	258

if ERROR_CHECK

;
; Error codes.
;
CELL_CANNOT_FREE_NON_EMPTY_ARRAY		enum FatalErrors
CELL_PASSED_SEGMENT_HAS_NO_HANDLE		enum FatalErrors
CELL_PASSED_SEGMENT_IN_UNLOCKED_BLOCK		enum FatalErrors
CELL_PASSED_OFFSET_PAST_END_OF_BLOCK		enum FatalErrors
CELL_PASSED_SIZE_IS_TOO_LARGE			enum FatalErrors
CELL_PASSED_DB_ITEM_HAS_BAD_GROUP		enum FatalErrors
CELL_PASSED_RANGE_HAS_UNORDERED_ROWS		enum FatalErrors
CELL_PASSED_RANGE_HAS_UNORDERED_COLUMNS		enum FatalErrors
SPARSE_ARRAY_ELEMENTS_ARE_NOT_ORDERED		enum FatalErrors

ROW_BLOCK_MUST_EXIST				enum FatalErrors
ROW_MUST_EXIST					enum FatalErrors
CELL_MUST_EXIST					enum FatalErrors
ROW_IS_OUT_OF_BOUNDS				enum FatalErrors
ONLY_SPECIAL_CALLBACKS_CAN_FREE_CELLS		enum FatalErrors
ROW_ELEMENTS_ARE_NOT_ORDERED			enum FatalErrors
RANGE_ENUM_NESTED_TOO_DEEPLY			enum FatalErrors
RANGE_ENUM_FLAGS_ARE_SCREWED			enum FatalErrors
NO_FREEING_ALLOWED_NOW				enum FatalErrors
THERE_MUST_BE_SOME_DATA_TO_SWAP			enum FatalErrors
SOME_KEY_IS_ALREADY_LOCKED			enum FatalErrors
THERE_IS_NO_LOCKED_KEY				enum FatalErrors
ROW_AND_ROW_BLOCK_MUST_EXIST			enum FatalErrors
CELL_ALREADY_EXISTED_BEFORE			enum FatalErrors

CELL_PASSED_BAD_PARAMS				enum FatalErrors
CELL_PASSED_BAD_FILE				enum FatalErrors

RANGE_ENUM_PARAMS_MUST_BE_ON_STACK		enum FatalErrors
; The parameters to RangeEnum() must be passed on the stack.  In C,
; this means they must be declared as a local variable.
MUST_PASS_REF_ROW_FLAGS_TO_RETURN_REF_ROW_FLAGS_MODIFIED	enum FatalErrors
; If your callback wants to return REF_ROW_FLAGS_MODIFIED, you need to
; pass REF_ROW_FLAGS to RangeEnum().

endif

;
; This structures is used in the Row insertion/deletion code.
;
InsertRowParams	struct
    IRP_source		word		; Current row
    IRP_dest		word		; Destination row
    IRP_end		word		; Place to stop
    IRP_increment	word		; Amount to increment by (+/- 1)
    
    IRP_sourceBlock	word		; Source row block
    IRP_destBlock	word		; Destination row block
    
    IRP_nextSource	word		; Offset to start of next src row block
    IRP_nextDest	word		; Offset to start of next dst row block
    
    IRP_callback	word		; Callback routine for moving data
InsertRowParams	ends
