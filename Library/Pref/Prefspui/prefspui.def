COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1994 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		Prefspui
FILE:		prefspui.def

AUTHOR:		Tony Requist, Sep 12, 1994

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	tony	9/12/94		Initial revision


DESCRIPTION:
	Definitions for SPUI module of Preferences
		
	$Id: prefspui.def,v 1.1 97/04/05 01:42:52 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

;-----------------------------------------------------------------------------
;	CONSTANTS		
;-----------------------------------------------------------------------------

INITIAL_DEMO_INI_BUFFER_SIZE	equ	4096
;	Most .ini's will be 3k, so start our default a bit bigger
; and hope we don't have to reallocate very much.
;


DESCRIPTION_TEXT_MAX_LENGTH	equ	32		; 30 chars+null+allign

LabelText	type	DESCRIPTION_TEXT_MAX_LENGTH dup (char)

NameAndLabel	struct
	NAL_filename	FileLongName
	NAL_label	LabelText
NameAndLabel	ends

;
;		FatalErrors
;

ERROR_CANT_I_EVEN_ALLOCATE_A_SIMPLE_BLOCK	enum FatalErrors
; Gosh, the system is really hurt'n.  I can't even allocate the
; a small block (or chunk).  Punt.
;

;
;		Warnings
;
WARNING_PSDL_BAD_ITEM_INFO_READ			enum	Warnings
;	Somewhere along the way to reading data for the item
; we had a failure, so the item data is bad, but it isn't worth
; crashing, so just keep going anyway (now that I've let you know...)
;

WARNING_PSDL_GRRRR_NOT_ENOUGH_MEMORY		enum	Warnings
;	There wasn't enough memory to load this .ini into memory,
; and so I'm just going to skip it (and warn you in SWAT) instead
; of crashing.
;

WARNING_PSDL_FILE_IS_JUST_TOO_DAMN_BIG		enum	Warnings
;	We are going to allocate a block to read the demo .ini file
; into, but the filesize was bigger than reasonable.  We expect them
; to be in the range of 1-5k, but this was over 20k.  Come on, get serious.
; I'm going to skip this entry...
;

WARNING_PSDL_SKIPPING_ITEM			enum	Warnings
;	We will be skipping this item, as it was invalid for some reason.
;

WARNING_PSDL_NO_CR_FOUND_AFTER_CATEGORY		enum	Warnings
;	For some reason we didn't find a C_CR after we found our
; category.  This shouldn't happen unless the demo category line is
; the last line of the file, and that shouldn't happen either.
;

WARNING_PSDL_LABEL_MUST_BE_TRUNCATED_TO_FIT	enum	Warnings
;	The label text was greater than 31 characters, and so we
; have to truncate it so we can have the null terminator.
;

WARNING_PSDL_BAD_SEARCH_PATH			enum	Warnings
;	Either the ATTR_GEN_PATH_DATA doesn't exist for the object
; or the path stored there can't be changed to (i.e. is invalid).
;

WARNING_COULDNT_WRITE_OUT_CINI_FILE		enum	Warnings
;	What it says.  So we will skip the reboot.
;

;-----------------------------------------------------------------------------
;	CLASSES		
;-----------------------------------------------------------------------------

PrefSpuiDialogClass	class PrefDialogClass

;------------------------------  Messages  ---------------------------------

MSG_PSD_APPLY_COMPLEX	message
;	Concatenate the .ini's in CINI and write them to a file,
; link the ini to this new one and reboot.
;
; Context:	Sent when a complex ini file has been chosen
; Source:	A PrefSpuiDynamicListClass object
; Destination:  The PrefDialogClass
; Interception: Not Likely...
;
; Pass:		nothing
; Return:	nothing
; Destroyed:	ax, cx, dx, bp
;

;---------------------------  Instance data  -------------------------------
	PSDI_ignoreApply	byte		; set to ignore redundant
						;  apply messages from complex
						;  dynamic lists because we
						;  really only need one to
						;  tell us...

;---------------------------  Variable data  -------------------------------
PrefSpuiDialogClass	endc


;
;		PrefSpuiDynamicListClass
;
PrefSpuiDynamicListClass	class	PrefDynamicListClass
;------------------------------  Messages  ---------------------------------
MSG_PSDL_INIT_ITEM	message
;	Initialize the structures for an item.  This includes grabbing
; the item's label from its .ini file and stuffing it in the the
; NameAndLabel structure.
;
; Context:	Sent on initialization for each item.
; Source:	Itself
; Destination:  Itself
; Interception: Subclasses will want to for special item info
;
; Pass:		current directory set to object's ATTR_GEN_PATH_DATA
;		bp	= inherited stack frame from PSDLGetItemInfo
; Return:	carry set on error
; Destroyed:	ax, cx, dx, bp
;


MSG_PSDL_REMOVE_ITEM	message
;	Any item that failed part of its processing will be removed
; from our list, so that we only show good items.  This will be called
; for each item needing to be removed.
;
; Context:	Sent after processing all the items
; Source:	Itself
; Destination:  Itself
; Interception: Subclasses will need to update any lists they keep.
;
; Pass:		bp	= item number to remove
; Return:	nothing
; Destroyed:	ax, cx, dx, bp
;


MSG_PSDL_ITEM_REQUESTED	message
;
;
; Context:	Sent when the dynamic List needs to get the moniker
;		of an item
; Source:	The GenDynamicList code
; Destination:  Any PrefSpuiDynamicListClass object
; Interception: Not likely...
;
; Pass:		*ds:si	= PrefSpuiDynamicListClass object
;		bp	= requested item's position
; Return:	nothing
; Destroyed:	ax, cx, dx, bp
;

MSG_PSDL_GET_SELECTED_INI_FILE_TEXT	message
;	Open up the .ini file of the selected item and read its
; text into a buffer.
;
; Context:	Sent to combine the text of the CINI .ini files
; Source:	The PrefDialog
; Destination:  A PrefSpuiDynamicListClass object
; Interception: Not likely...
;
; Pass:		nothing
; Return:	carry	= set on error
;				dx, cx = destroyed
;			= clear on success
;				dx	= hptr of block of text
;					= garbage if no selections(i.e. no .ini)
;				cx	= size of block
;					= zero if no selections (i.e. no .ini)
; Destroyed:	ax
;


;---------------------------  Instance data  -------------------------------
	PSDLI_nameArray		hptr.NameAndLabel	; block of an array
							;  of NameAndLabel
							;  structures
;---------------------------  Variable data  -------------------------------
PrefSpuiDynamicListClass	endc



;
;		PSDescDynamicListClass
;
PSDescriptiveDLClass	class	PrefSpuiDynamicListClass
;------------------------------  Messages  ---------------------------------
MSG_PSDDL_ITEM_SELECTED	message
;	An item was selected, so fill our text object with the description
; text in our ChunkArray.
;
; Context:	Sent when an item has been selected
; Source:	Itself
; Destination:  Itself
; Interception: Not likely...
;
; Pass:		cx	= current selection
;		dl	= GenItemGroupStateFlags
; Return:	nothing
; Destroyed:	ax, cx, dx, bp
;

MSG_PSDDL_APPLY	message
;	Write out the correct ini string and reboot
;
; Context:	Sent when a new demo has been chosen
; Source:	Itself
; Destination:  Itself
; Interception: Not likely...
;
; Pass:		nothing
; Return:	nothing
; Destroyed:	nothing
;


;---------------------------  Instance data  -------------------------------
	PSDDLI_descTextArray	lptr	; Variable sized ChunkArray of
					;   description text.  Allocated
					;   in the PrefSpuiStrings resource.

	PSDDLI_descTextObj	optr	; optr of the text object to fill
					;   with the description of the
					;   selected item.

;---------------------------  Variable data  -------------------------------
PSDescriptiveDLClass	endc


;-----------------------------------------------------------------------------
;	VARIABLES		
;-----------------------------------------------------------------------------
 
idata	segment
	PrefSpuiDialogClass
	PrefSpuiDynamicListClass
	PSDescriptiveDLClass
idata	ends

;-----------------------------------------------------------------------------
;	Exported routines		
;-----------------------------------------------------------------------------
 
PrefSpuiCode	segment resource

global PrefSpuiGetPrefSpuiTree:far
;
global PrefSpuiGetModuleInfo:far

PrefSpuiCode	ends
