/***********************************************************************
 *
 *      Copyright (c) 1996-97 Breadbox Computer Company
 *                            All Rights Reserved
 *
 * PROJECT:      Extended UI Library
 * FILE:         StatBar.goc
 * AUTHOR:	 Falk Rehwagen, 8 January 1996
 *
 * DESCRIPTION:
 *      This file defines ExtUIStatusBarClass
 *
 ***********************************************************************/

/*
 ***********************************************************************
 *     Include files
 ***********************************************************************
 */

@include "ExtUI\StatBar.goh"
@include <ansi\string.h>
@include <graphics.h>


/*
 **********************************************************************
 *     Declaration of classes
 **********************************************************************
 */

@classdecl ExtUIStatusBarClass;


/*
 ***********************************************************************
 *     Code for ExtUIStatusClass
 ***********************************************************************
 */

/***********************************************************************
 *
 * MESSAGE:      MSG_VIS_RECALC_SIZE for ExtUIStatusBarClass
 *
 * DESCRIPTION: Return size of status bar
 *
 * PARAMTERS:
 * (???)
 *
 * KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:
 *
 * REVISION HISTORY:
 *	Name	Date			Description
 *	----	----			-----------
 *	falk	8 Jan 95		Initial Revision
 *
 ***********************************************************************/
@method ExtUIStatusBarClass, MSG_VIS_RECALC_SIZE
{
  word nwidth, nwidth2, nheight;
  GStateHandle gstate;

  gstate = @call oself::MSG_VIS_VUP_CREATE_GSTATE();

  nwidth = @call oself::MSG_SPEC_CONVERT_SIZE(
								 pself->SBI_width, gstate);
  nwidth2 = @call oself::MSG_SPEC_CONVERT_SIZE(
								 SST_WIDE_CHAR_WIDTHS|4, gstate);
  nheight = @call oself::MSG_SPEC_CONVERT_SIZE(
								 SST_LINES_OF_TEXT|1, gstate) + 3;

  if(nwidth2 > nwidth)
	 nwidth = nwidth2;

  if((width < 0x8000)&&(nwidth > width))
	 nwidth = width;
  if((height < 0x8000)&&(nheight > height))
	 nheight = height;

  GrDestroyState(gstate);

  return(MAKE_SIZE_DWORD(nwidth, nheight));
}

/***********************************************************************
 *
 * MESSAGE:      MSG_VIS_DRAW for ExtUIStatusBarClass
 *
 * DESCRIPTION: Draws the stats bar visually
 *
 * PARAMTERS:
 *	void(DrawFlags drawFlags, GStateHandle gstate)
 *
 * KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:
 *
 * REVISION HISTORY:
 *	Name	Date			Description
 *	----	----			-----------
 *	falk	8 Jan 95		Initial Revision
 *        
 ***********************************************************************/
@method ExtUIStatusBarClass, MSG_VIS_DRAW
{
  char buffer[LOCAL_DISTANCE_BUFFER_SIZE];
  Rectangle rect;
  word m;
  word start, starty;

	 LocalFixedToAscii(buffer, MakeWWFixed(pself->SBI_status), 0);
	 strcat(buffer, "%");
	 GrSaveState(gstate);
	 @call oself::MSG_VIS_GET_BOUNDS(&rect);
	 starty=((rect.R_bottom-rect.R_top-1)-IntegerOf(GrFontMetrics(gstate,
			GFMI_ASCENT)))/2-IntegerOf(GrFontMetrics(gstate,
			GFMI_ACCENT))+1;
	 start=(rect.R_right-rect.R_left-1)/2-GrTextWidth(gstate,buffer,0)/2;
	 GrSetLineColor(gstate, CF_INDEX, C_BLUE, 0, 0);
	 GrSetAreaColor (gstate, CF_INDEX, C_BLUE, 0, 0);
	 GrDrawRect (gstate, rect.R_left,
			rect.R_top,
			rect.R_right-1,
			rect.R_bottom-1);
         m=((rect.R_right-rect.R_left-1)*((dword) pself->SBI_status))/100;

	 if(m!=0)
	 {
		GrFillRect (gstate, rect.R_left+1,
			rect.R_top+1,
			rect.R_left+1+m,
			rect.R_bottom-1);
		GrSetClipRect(gstate, PCT_REPLACE, rect.R_left+1,rect.R_top+1,
												  rect.R_left+1+m, rect.R_bottom-1);
	 GrSetTextColor(gstate, CF_INDEX, C_WHITE, 0, 0);
	 GrDrawText(gstate, rect.R_left+start, rect.R_top+starty, buffer, 0);
	 };
	 GrSetAreaColor(gstate, CF_INDEX, C_WHITE, 0,0);
	 if(m!=(rect.R_right-rect.R_left-1))
	 {
		GrSetClipRect(gstate, PCT_REPLACE, rect.R_left+m+2,rect.R_top+1,
												  rect.R_right-1, rect.R_bottom-1);
		GrFillRect (gstate, rect.R_left+m+2,
				rect.R_top+1,
				rect.R_right-1,
				rect.R_bottom-1);
	 GrSetTextColor(gstate, CF_INDEX, C_BLACK, 0, 0);
	 GrDrawText(gstate, rect.R_left+start, rect.R_top+starty, buffer, 0);
	 };
	 GrRestoreState(gstate);
  @callsuper();
}

/***********************************************************************
 *
 * MESSAGE:      MSG_SB_SET_STATUS_VALUE for ExtUIStatusBarClass
 *
 * DESCRIPTION: Sets the current status and update the bar
 *
 * PARAMTERS:
 *	Boolean(byte value)
 *
 * KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:
 *
 * REVISION HISTORY:
 *	Name	Date			Description
 *	----	----			-----------
 *	falk	8 Jan 95		Initial Revision
 *
 ***********************************************************************/
@method ExtUIStatusBarClass, MSG_SB_SET_STATUS_VALUE
{
  if(pself->SBI_status!=value)
  {
	 pself->SBI_status = value;
	 @send self::MSG_VIS_REDRAW_ENTIRE_OBJECT();
  };
  return(pself->SBI_progress);
}

/***********************************************************************
 *
 * MESSAGE:      MSG_SB_GET_STATUS_VALUE for ExtUIStatusBarClass
 *
 * DESCRIPTION: Reads the current status and update the bar
 *
 * PARAMTERS:
 *	void(byte value)
 *
 * KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:
 *
 * REVISION HISTORY:
 *	Name	Date			Description
 *	----	----			-----------
 *	falk	10 Feb 96	Initial Revision
 *
 ***********************************************************************/
@method ExtUIStatusBarClass, MSG_SB_GET_STATUS_VALUE
{
  return(pself->SBI_status);
}

/***********************************************************************
 *
 * MESSAGE:      MSG_SB_SET_WIDTH for ExtUIStatusBarClass
 *
 * DESCRIPTION: Sets the current status size
 *
 * PARAMTERS:
 *	void(word *width)
 *
 * KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:
 *
 * REVISION HISTORY:
 *	Name	Date			Description
 *	----	----			-----------
 *	falk	10 Feb 96	Initial Revision
 *
 ***********************************************************************/
@method ExtUIStatusBarClass, MSG_SB_SET_WIDTH
{
  pself->SBI_width = *width;
  @send oself::MSG_VIS_MARK_INVALID(VOF_GEOMETRY_INVALID|VOF_IMAGE_INVALID
												,VUM_NOW);
}

/***********************************************************************
 *
 * MESSAGE:      MSG_SB_GET_WIDTH for ExtUIStatusBarClass
 *
 * DESCRIPTION: Reads the current status bar size
 *
 * PARAMTERS:
 *	void(word *width)
 *
 * KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:
 *
 * REVISION HISTORY:
 *	Name	Date			Description
 *	----	----			-----------
 *	falk	10 Feb 96	Initial Revision
 *
 ***********************************************************************/
@method ExtUIStatusBarClass, MSG_SB_GET_WIDTH
{
  *width = pself->SBI_width;
}

/***********************************************************************
 *
 * MESSAGE:      MSG_SB_START_PPOCESS for ExtUIStatusBarClass
 *
 * DESCRIPTION: Sets the current status and update the bar
 *
 * PARAMTERS:
 *	void(void)
 *
 * KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:
 *
 * REVISION HISTORY:
 *	Name	Date			Description
 *	----	----			-----------
 *	falk	10 Feb 96	Initial Revision
 *
 ***********************************************************************/
@method ExtUIStatusBarClass, MSG_SB_START_PROCESS
{
  pself->SBI_progress = TRUE;
  @call oself::MSG_SB_SET_STATUS_VALUE(0);
  @send oself::MSG_GEN_SET_USABLE(VUM_NOW);
}

/***********************************************************************
 *
 * MESSAGE:      MSG_SB_STOP_PROCESS for ExtUIStatusBarClass
 *
 * DESCRIPTION: Sets the current status and update the bar
 *
 * PARAMTERS:
 *	byte(void)
 *
 * KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:
 *
 * REVISION HISTORY:
 *	Name	Date			Description
 *	----	----			-----------
 *	falk	10 Jan 96	Initial Revision
 *
 ***********************************************************************/
@method ExtUIStatusBarClass, MSG_SB_STOP_PROCESS
{
  @send oself::MSG_GEN_SET_NOT_USABLE(VUM_NOW);
  return(pself->SBI_status);
}

/***********************************************************************
 *
 * MESSAGE:      MSG_SB_STOP_PROGRESS for ExtUIStatusBarClass
 *
 * DESCRIPTION: Stops the progress
 *
 * PARAMTERS:
 *	void(void)
 *
 * KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:
 *
 * REVISION HISTORY:
 *	Name	Date			Description
 *	----	----			-----------
 *	falk	10 Jan 96	Initial Revision
 *
 ***********************************************************************/
@method ExtUIStatusBarClass, MSG_SB_STOP_PROGRESS
{
  pself->SBI_progress = FALSE;
}

/***********************************************************************
 *
 * MESSAGE:      MSG_SB_END_PROCESS for ExtUIStatusBarClass
 *
 * DESCRIPTION: Ends the status bar process as follows:
 *              - sets the value to 100%
 *              - sets the status bar not usable (hide)
 *
 * PARAMTERS:
 *	void(byte value)
 *
 * KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:
 *
 * REVISION HISTORY:
 *	Name	Date			Description
 *	----	----			-----------
 *	falk	10 Jan 96	Initial Revision
 *
 ***********************************************************************/
@method ExtUIStatusBarClass, MSG_SB_END_PROCESS
{
  pself->SBI_progress = FALSE;
  @call oself::MSG_SB_SET_STATUS_VALUE(100);
  @send oself::MSG_SB_STOP_PROCESS();
}

/***********************************************************************
 *
 * MESSAGE:      MSG_SB_SET_COLORS for ExtUIStatusBarClass
 *
 * DESCRIPTION: Sets the color of following part of the status bar:
 *               - border (SBI_borderCol)
 *               - already processed part (SBI_readyCol)
 *               - text of the ready part (SBI_readyTextCol)
 *               - not processed part (SBI_openCol)
 *               - text of not processed part (SBI_openTextCol)
 *
 * PARAMTERS:
 *  void(ExtUIStatBarColors *colors)
 *
 * KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:
 *
 * REVISION HISTORY:
 *	Name	Date			Description
 *	----	----			-----------
 *	falk	10 Feb 96	Initial Revision
 *
 ***********************************************************************/
@method ExtUIStatusBarClass, MSG_SB_SET_COLORS
{
  pself->SBI_borderCol = colors->SBC_border;
  pself->SBI_readyCol = colors->SBC_ready;
  pself->SBI_openCol = colors->SBC_openCol;
  pself->SBI_readyTextCol = colors->SBC_readyTextCol;
  pself->SBI_openTextCol = colors->SBC_openTextCol;
  @send self::MSG_VIS_REDRAW_ENTIRE_OBJECT();
}

/***********************************************************************
 *
 * MESSAGE:      MSG_SB_GET_COLORS for ExtUIStatusBarClass
 *
 * DESCRIPTION: Reads the color of following part of the status bar:
 *               - border (SBI_borderCol)
 *               - already processed part (SBI_readyCol)
 *               - text of the ready part (SBI_readyTextCol)
 *               - not processed part (SBI_openCol)
 *               - text of not processed part (SBI_openTextCol)
 *
 * PARAMTERS:
 *  void(ExtUIStatBarColors *colors)
 *
 * KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:
 *
 * REVISION HISTORY:
 *	Name	Date			Description
 *	----	----			-----------
 *	falk	10 Feb 96	Initial Revision
 *
 ***********************************************************************/
@method ExtUIStatusBarClass, MSG_SB_GET_COLORS
{
  colors->SBC_border = pself->SBI_borderCol;
  colors->SBC_ready = pself->SBI_readyCol;
  colors->SBC_openCol = pself->SBI_openCol;
  colors->SBC_readyTextCol = pself->SBI_readyTextCol;
  colors->SBC_openTextCol = pself->SBI_openTextCol;
  @send self::MSG_VIS_REDRAW_ENTIRE_OBJECT();
}

/***********************************************************************
 *
 * MESSAGE:      MSG_SB_SET_FONT for ExtUIStatusBarClass
 *
 * DESCRIPTION: Sets the current font and font size for percent
 *              value in the status bar
 *
 * PARAMTERS:
 *	void(FontID id, WWFixedAsDWord pntsize)
 *
 * KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:
 *
 * REVISION HISTORY:
 *	Name	Date			Description
 *	----	----			-----------
 *	falk	10 Feb 96	Initial Revision
 *
 ***********************************************************************/
@method ExtUIStatusBarClass, MSG_SB_SET_FONT
{
  pself->SBI_fontid = id;
  pself->SBI_pntSize = pntsize;
  @send oself::MSG_VIS_MARK_INVALID(VOF_GEOMETRY_INVALID|VOF_IMAGE_INVALID
												,VUM_NOW);
}

/***********************************************************************
 *
 * MESSAGE:      MSG_SB_GET_FONT for ExtUIStatusBarClass
 *
 * DESCRIPTION: Reads the current font and point size settings for
 *              the status bar percent value
 *
 * PARAMTERS:
 *	void(FontID *id, WWFixedAsDWord *pntsize)
 *
 * KNOWN BUGS/SIDE EFFECTS/CAVEATS/IDEAS:
 *
 * REVISION HISTORY:
 *	Name	Date			Description
 *	----	----			-----------
 *	falk	10 Feb 96	Initial Revision
 *
 ***********************************************************************/
@method ExtUIStatusBarClass, MSG_SB_GET_FONT
{
  *id = pself->SBI_fontid;
  *pntsize = pself->SBI_pntSize;
}


