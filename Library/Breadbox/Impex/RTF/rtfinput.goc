@include <stdapp.goh>
@include <impex.goh>
#include "rtfinput.h"
#include "import.h"
#include "warnings.h"
#include "global.h"

#define INPUT_BUFFER_SIZE 512

FileHandle hInput;
char acInputBuf[512];
int nInputBufPos;
int nInputBufLen;
dword nInputFileSize;
dword nInputFilePos;
int cUnGet;

void InputInit(FileHandle fh)
    {
    hInput = fh;
    nInputBufPos = INPUT_BUFFER_SIZE;
    nInputBufLen = 0;
    nInputFilePos = 0;
    nInputFileSize = FileSize(fh);
    RTFReportStatus(nInputFileSize, nInputFilePos);
    cUnGet = -1;
    }

static void InputFillBuf(void)
    {
    nInputBufLen = FileRead (hInput, acInputBuf, INPUT_BUFFER_SIZE, FALSE);
    if (nInputBufLen < 0)
        SetError(TE_FILE_READ);
    else
    	{
	    nInputFilePos += nInputBufLen;
	    if (!RTFReportStatus(nInputFileSize, nInputFilePos))
	    	SetError(TE_ERROR);
    	}
    nInputBufPos = 0;
    }

Boolean InputEof(void)
    {
    return (nInputBufLen < 0);
    }

int InputGet(void)
    {
    int c;

    if (InputEof())
    	{
	    RTFReportStatus(nInputFileSize, nInputFilePos);
        c = EOF;
    	}
    else if (cUnGet >= 0)
        {
        c = (unsigned char)cUnGet;
        cUnGet = -1;
        }
    else
        {
        if (nInputBufPos == INPUT_BUFFER_SIZE)
            InputFillBuf();
        if (nInputBufPos >= nInputBufLen)
            {
            nInputBufLen = -1;
            c = EOF;
            }
        else
            c = (unsigned char)acInputBuf[nInputBufPos++];
        }
    return c;
    }

void InputUnGet(char c)
    {
    if (cUnGet < 0)
        cUnGet = c;
    else
        /* No successive un-gets! */
        EC_WARNING(RTF_WARNING_TWO_UNGETS_ILLEGAL);
    }
