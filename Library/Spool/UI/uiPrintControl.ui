/*****************************************************************************
 * Project:	PC GEOS
 * Module:	Spool
 * File:	UI/uiPrintControl.ui
 *
 * Author:	Don Reeves
 *
 *	This file contains the user interface description for the print
 *	control object.
 *
	$Id: uiPrintControl.ui,v 1.2 98/01/27 21:28:39 gene Exp $
 *
 *****************************************************************************/

#define	PAGE_ORDER_OPTIONS FALSE

/* #include "mkrFax.ui" */
/* #include "mkrPrint.ui" */

#include "mkrFaxTool.ui"
#ifdef GPC_ART
start AppTCMonikerResource, data;
#include "mkrPrintToolTC.ui"
end AppTCMonikerResource;
#else
#include "mkrPrintTool.ui"
#endif

#define SPOOL_DIALOG_GEN_TEXT_DEFAULT_CHAR_WIDTH	50

/*****************************************************************************
 *                       Additional class definitions
 *****************************************************************************/

class	SpoolSummons	= GenInteraction, master {
	summonsFlags	= byteComp : 0;		/* SpoolSummonsFlags */
	pageExcl	= wordComp : 0;		/* start with All selected */
	firstPage	= wordComp : 0;
	lastPage	= wordComp : 0;		/* first & last page range */
	firstUserPage	= wordComp : 1;
	lastUserPage	= wordComp : 1;		/* first & last select pages */
	numPrinters	= wordComp : 0;
	validPrinters	= wordComp : 0;
	dataHandle	= hptrComp : null;
	dataLength	= wordComp : 0;
	sysDefPrinter	= wordComp : -1;	/* system's default printer */
	appDefPrinter	= wordComp : -1;	/* app's default printer */
	curPrinter	= wordComp : -1;	/* current printer selection */
	printInfoChunk	= nptrComp : null;
	cachedDriver	= hptrComp : null;
	printerUIState	= hptrComp : null;

	printAttrs	= wordComp : 0;		/* SpoolPrintControlAttrs */
	printerAttrs	= byteComp : 0;		/* SpoolSummonsPrinterAttrs */
	printerInfo	= byteComp : 0;		/* SpoolSummonsPrinterInfo */

	timeout		= wordComp : 0;		/* timeout value (seconds) */
	retries		= byteComp : 0;		/* maximum # of retries */
	numCopies	= byteComp : 0;		/* number of copies */
	spoolOptions	= byteComp : 0;		/* SpoolOptions for the user */

	backupPrinter	= wordComp : -1;	/* backup printer selection */
	backuptimeout	= wordComp : 0;		/* backup timeout */
	backupretries	= byteComp : 0;		/* backup retries */
	backupFlags	= byteComp : 0;		/* backup flags */

	/* Post-2.0 instance data */

	driverType	= byteComp : 0;		/* PrinterDriverType */
	driverAttrs	= wordComp : -1;	/* PrintControlAttrs */

	default type = command;
	default visibility = dialog;
	default attributes = default +modal;
}

class	SpoolChange	= GenInteraction {
	default type = command;
	default visibility = dialog;
	default attributes = default +modal;
}

class	SizeVerifyDialog	= GenInteraction {
}

/*****************************************************************************
 *                       PrintController UI resource
 *****************************************************************************/

start	PrintControlUI, notDetachable;


PrintTrigger = GenTrigger {
	genAttributes = default +initiatesBusyState;
	PRINT_TRIGGER_VALUES
	action = MSG_PRINT_CONTROL_INITIATE_OUTPUT_UI, "TO_OBJ_BLOCK_OUTPUT";
	genStates = default -usable;
	hints = {
		HINT_TRIGGER_BRINGS_UP_WINDOW,
#ifdef GPC_ONLY
#if DO_DBCS
		ATTR_GEN_EXTRA_KBD_ACCELERATORS {
		    KeyboardShortcut <0, 0, 0, 0, C_SYS_F3 and 0xfff>
		},
#else
		ATTR_GEN_EXTRA_KBD_ACCELERATORS {
		    KeyboardShortcut <0, 0, 0, 0, CS_CONTROL and 0xf, VC_F3>
		},
#endif	/* DO_DBCS */
#endif	/* GPC_ONLY */
		ATTR_GEN_TRIGGER_ACTION_DATA {
			byte	PDT_PRINTER
		}
	}
}

FaxTrigger = GenTrigger {
	genAttributes = default +initiatesBusyState;
	FAX_TRIGGER_VALUES
	action = MSG_PRINT_CONTROL_INITIATE_OUTPUT_UI, "TO_OBJ_BLOCK_OUTPUT";
	genStates = default -usable;
	hints = {
		HINT_TRIGGER_BRINGS_UP_WINDOW,
		ATTR_GEN_TRIGGER_ACTION_DATA {
			byte	PDT_FACSIMILE
		}
	}
}

end	PrintControlUI;



/*****************************************************************************
 *                 PrintController Toolboc UI resource
 *****************************************************************************/

start	PrintControlToolboxUI, notDetachable;

PrintToolTrigger = GenTrigger {
	genAttributes = default +initiatesBusyState;
	moniker = list {
#ifdef GPC_ART
		PrintToolTCMoniker
#else
		PrintToolTCMoniker,
		PrintToolTMMoniker,
		PrintToolTCGAMoniker
#endif
	}
	action = MSG_PRINT_CONTROL_INITIATE_OUTPUT_UI, "TO_OBJ_BLOCK_OUTPUT";
	genStates = default -usable;
	hints = {
		HINT_TRIGGER_BRINGS_UP_WINDOW,
		ATTR_GEN_TRIGGER_ACTION_DATA {
			byte	PDT_PRINTER
		},
		ATTR_GEN_FOCUS_HELP {
			optr	PrintHelpString
		}
	}
}

FaxToolTrigger = GenTrigger {
	genAttributes = default +initiatesBusyState;
	moniker = list {
		FaxToolTCMoniker,
		FaxToolTMMoniker,
		FaxToolTCGAMoniker
	}
	action = MSG_PRINT_CONTROL_INITIATE_OUTPUT_UI, "TO_OBJ_BLOCK_OUTPUT";
	genStates = default -usable;
	hints = {
		HINT_TRIGGER_BRINGS_UP_WINDOW,
		ATTR_GEN_TRIGGER_ACTION_DATA {
			byte	PDT_FACSIMILE
		},
		ATTR_GEN_FOCUS_HELP {
			optr	FaxHelpString
		}
	}
}

end	PrintControlToolboxUI;



/*****************************************************************************
 *                 PrintController strings resource
 *****************************************************************************/

start	ControlStrings, data;

chunk	PCName			= "Print Control";

chunk	PrintTriggerName	= "Print Button";
chunk	FaxTriggerName		= "Fax Button";

chunk	PrintTriggerToolName	= "Print Tool";
chunk	FaxTriggerToolName	= "Fax Tool";

chunk	PrintHelpString		= "Print current document";
chunk	FaxHelpString		= "Fax current document";

end	ControlStrings;



/*****************************************************************************
 *                 Print Dialog Box UI resourc
 *****************************************************************************/

start	PrintUI, notDetachable;

PrintDialogBox = SpoolSummons {
	moniker = PrintDialogBoxMonikerPrint;
	genStates = default -usable;
	attributes = default +notUserInitiatable;
	children =
		PrinterGroup,
		DocumentGroup,
		PrintTriggerGroup,
		PrintFileDialogBox;
	summonsFlags = "mask SSF_RELOAD_PRINTER_LIST or mask SSF_UPDATE_MONIKERS";
	numCopies = 1;
	spoolOptions = "SpoolOptions <SFT_DELETE_FILE, SC_DONT_COLLATE, SC_DONT_ROTATE, SO_NORMAL_ORDER, SO_NORMAL_ORDER, SS_TILE, SSJA_SAVE_JOB>";
	driverType = PDT_ALL;
	hints = {
		ATTR_GEN_INTERACTION_ABIDE_BY_INPUT_RESTRICTIONS,
		ATTR_GEN_HELP_CONTEXT {
			char	"dbPrint", 0
		}
	}
}

visMoniker PrintDialogBoxMonikerPrint	= "Print";
visMoniker PrintDialogBoxMonikerFax	= "Fax";


/****************************************
 * The Printer Group
 ****************************************/

PrinterGroup = GenInteraction {
	moniker = PrinterGroupMonikerPrint;
	children =
		PrinterUpperGroup,
		PrinterLowerGroup;
	hints = {
		HINT_ORIENT_CHILDREN_VERTICALLY,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		HINT_DRAW_IN_BOX
	}
}

visMoniker PrinterGroupMonikerPrint	= "Printer Options";
visMoniker PrinterGroupMonikerFax	= "Fax Options";

PrinterUpperGroup = GenInteraction {
#if	!_NO_PRINTER_LIST_MONIKER
	moniker = PrinterUpperGroupMonikerPrint;
#endif
	children =
		PrinterChoice;
	hints = {
		HINT_EXPAND_WIDTH_TO_FIT_PARENT

	}
}

#if	_NO_PRINTER_LIST_MONIKER
#define	PrinterUpperGroupMonikerPrint	0
#else
visMoniker PrinterUpperGroupMonikerPrint	= "Printer:";
#endif
visMoniker PrinterUpperGroupMonikerFax		= "Fax:";

PrinterChoice = GenDynamicList {
	queryMsg = MSG_SPOOL_SUMMONS_REQUEST_PRINTER_MONIKER;
	destination = PrintDialogBox;
	hints = {
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		HINT_ITEM_GROUP_MINIMIZE_SIZE,
		HINT_ITEM_GROUP_DISPLAY_CURRENT_SELECTION,
		HINT_FIXED_SIZE {
			SpecWidth   <>
			SpecHeight  <SST_LINES_OF_TEXT, 1>
			word	1
		},
		ATTR_GEN_ITEM_GROUP_STATUS_MSG {
			word	MSG_SPOOL_SUMMONS_PRINTER_SELECTED
		}
	}
}



PrinterLowerGroup = GenInteraction {
	children = 
		PrinterPaperSize,
		PrinterSpacing,
		PrinterChangeBox;
	hints = {
		HINT_ORIENT_CHILDREN_HORIZONTALLY,
		HINT_CENTER_CHILDREN_VERTICALLY,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT
	}
}

PrinterPaperSize = GenGlyph {
}

PrinterSpacing = GenInteraction {
	hints = {
		HINT_EXPAND_WIDTH_TO_FIT_PARENT
	}
}


/****************************************
 * Document Options
 ****************************************/

DocumentGroup = GenInteraction {
	moniker = "Document Options";
	children =
		OutputGroup,
		PageGroup,
		CopyGroup;
	hints = {
		HINT_ORIENT_CHILDREN_VERTICALLY,
		HINT_DRAW_IN_BOX,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT
	}
}


/****************************************
 * Output Group
 ****************************************/

OutputGroup = GenInteraction {
	children = 
		OutputQualityChoices,
		OutputTypeChoices;
	hints = {
		HINT_ORIENT_CHILDREN_VERTICALLY,
/* allow parent centering to work */
		HINT_CENTER_CHILDREN_ON_MONIKERS
	}
}


/****************************************
 * Type of Output
 ****************************************/

OutputTypeChoices = GenBooleanGroup {
	children =
		TextModeEntry;
	destination = PrintDialogBox;
	hints = {
		HINT_ORIENT_CHILDREN_HORIZONTALLY,
		ATTR_GEN_BOOLEAN_GROUP_STATUS_MSG {
			word	MSG_SPOOL_SUMMONS_SET_OUTPUT_TYPE
		}
	}
}

TextModeEntry = GenBoolean {
	moniker = "Text Only (Fastest)";
	identifier = "1";
}


/****************************************
 * Quality of Output
 ****************************************/

OutputQualityChoices = GenItemGroup {
	moniker = OutputQualityChoicesMonikerPrint;
	children =
#if _GPC
		LowEntry,
		MediumEntry,
		HighEntry;
#else
		HighEntry,
		MediumEntry,
		LowEntry;
#endif
	hints = {
		HINT_ORIENT_CHILDREN_HORIZONTALLY
	}
}

visMoniker OutputQualityChoicesMonikerShort	= "Quality:";
visMoniker OutputQualityChoicesMonikerPrint	= "Print Quality:";
visMoniker OutputQualityChoicesMonikerFax	= "Fax Quality:";

HighEntry = GenItem {
	moniker = HighEntryMonikerPrint;
	identifier = "PQT_HIGH";
}

#if _GPC
visMoniker HighEntryMonikerPrint	= "High (Sharp Text)";
#else
visMoniker HighEntryMonikerPrint	= "High";
#endif
visMoniker HighEntryMonikerFax		= "Fine";

MediumEntry = GenItem {
#if _GPC
	moniker = "Standard";
#else
	moniker = "Medium";
#endif
	identifier = "PQT_MEDIUM";
#if	_NO_MEDIUM_QUALITY
	genStates = default -usable;
#endif
}

LowEntry = GenItem {
	moniker = LowEntryMonikerPrint;
	identifier = "PQT_LOW";
}

visMoniker LowEntryMonikerShort	= "Low";
#if _GPC
visMoniker LowEntryMonikerPrint	= "Low";
#else
visMoniker LowEntryMonikerPrint	= "Low (Fast)";
#endif
visMoniker LowEntryMonikerFax	= "Standard";

		
/****************************************
 * Page Group
 ****************************************/

PageGroup = GenInteraction {
	children =
		PageControl;
/*		PageOrderOptions;	*/
	hints = {
		HINT_ORIENT_CHILDREN_VERTICALLY,
		HINT_CENTER_CHILDREN_ON_MONIKERS
	}			
}

PageControl = GenInteraction {
	moniker = PageControlMonikerPrint;
	children =
		PageChoices,
		PageFrom,
		PageTo;
	hints = {
		HINT_ORIENT_CHILDREN_HORIZONTALLY,
		HINT_CENTER_CHILDREN_VERTICALLY
	}
}

visMoniker PageControlMonikerShort	= "Pages:";
visMoniker PageControlMonikerPrint	= "Print Pages:";
visMoniker PageControlMonikerFax	= "Fax Pages:";

PageChoices = GenItemGroup {
	children =
		AllEntry,
		SelectedEntry;
	selection = 0;
	numSelections = 1;
	destination = PrintDialogBox;
	hints = {
		HINT_ORIENT_CHILDREN_HORIZONTALLY,
		ATTR_GEN_ITEM_GROUP_STATUS_MSG {
			word	MSG_SPOOL_SUMMONS_SET_PAGE_EXCL
		}
	}
}

AllEntry = GenItem {
	moniker = "All";
	identifier = 0;
}

SelectedEntry = GenItem {
	moniker = "From";
	identifier = 1;
}

PageFrom = GenValue {
	value = 0;
	minimum = 0;
	maximum = 1;
	destination = PrintDialogBox;
	hints = {
		ATTR_GEN_VALUE_STATUS_MSG {
			word	MSG_SPOOL_SUMMONS_SET_PAGE_FROM
		}
	}
}

PageTo = GenValue {
	moniker = "to";
	value = 0;
	minimum = 0;
	maximum = 1;
	destination = PrintDialogBox;
	hints = {
		ATTR_GEN_VALUE_STATUS_MSG {
			word	MSG_SPOOL_SUMMONS_SET_PAGE_TO
		}
	}
}



PageOrderOptions = GenBooleanGroup {
	children =
		PageOrderReverse,
		PageOrderOddEven;
	applyMsg = MSG_SPOOL_SUMMONS_SET_PAGE_ORDER_OPTIONS;
	destination = PrintDialogBox;
	genStates  = default -enabled;		/* initially disabled */
}

PageOrderReverse = GenBoolean {
	moniker = "Reverse Order";
	identifier = "mask SO_REVERSE_ORDER";
}

PageOrderOddEven = GenBoolean {
	moniker = "Odd/Even";
	identifier = "mask SO_ODD_EVEN";
}

/****************************************
 * CopyGroup
 ****************************************/

CopyGroup = GenInteraction {
	children =
		CopyAmount,
		CopyChoices;
	hints = {
		HINT_ORIENT_CHILDREN_HORIZONTALLY,
		HINT_CENTER_CHILDREN_VERTICALLY
	}
}

CopyAmount = GenValue {
	moniker = "Number of Copies:";
	value = 1;
	minimum = 1;
	maximum = 99;
	destination = PrintDialogBox;
	hints = {
		ATTR_GEN_VALUE_STATUS_MSG {
			word	MSG_SPOOL_SUMMONS_SET_NUM_COPIES
		}
	}
}

CopyChoices = GenBooleanGroup {
	children =
		CopyChoiceCollate;
	applyMsg = MSG_SPOOL_SUMMONS_SET_COLLATE_MODE;
	destination = PrintDialogBox;
}

CopyChoiceCollate = GenBoolean {
	moniker = "Collate";
	identifier = "mask SO_COLLATE";
#if	_NO_COLLATE
	genStates  = default -enabled, -usable;
#else
	genStates  = default -enabled;		/* initially disabled */
#endif
}



/****************************************
 * Print Action
 ****************************************/

/* this interaction exists to allow both triggers to be permanently set not-
 * usable when operating in address-control mode */
PrintTriggerGroup = GenInteraction {
	children = PrintOKTrigger,
#ifdef GPC_ONLY
	        PrintCancelTrigger,
#endif
		PrintToFileTrigger;
}

PrintOKTrigger = GenTrigger {
	moniker = PrintOKTriggerMonikerPrint;
	action = MSG_PRINT_CONTROL_PRINT, "PCPT_PRINT_CTRL";
	genAttributes = default +initiatesInputIgnore;
	hints = {
		HINT_DEFAULT_DEFAULT_ACTION,
		HINT_SEEK_REPLY_BAR
	}
}

visMoniker PrintOKTriggerMonikerPrint	= 'P', "Print";
visMoniker PrintOKTriggerMonikerFax	= 'F', "Fax";

PrintToFileTrigger = GenTrigger {
	moniker = 'F', "Print To File";
	genStates = default -usable;
	action = MSG_GEN_INTERACTION_INITIATE, PrintFileDialogBox;
	hints = {
		HINT_TRIGGER_BRINGS_UP_WINDOW,
		HINT_SEEK_REPLY_BAR
	}
}

#ifdef GPC_ONLY
PrintCancelTrigger = GenTrigger {
    moniker = "VMO_CANCEL", "Don't Print";
    genAttributes = default +signalInteractionComplete;
    hints = {
	ATTR_GEN_TRIGGER_INTERACTION_COMMAND {word IC_DISMISS},
	HINT_SEEK_REPLY_BAR
    }
}
#endif



/*****************************************************************************
 *                    Change Printer Options Dialog Box
 *****************************************************************************/

PrinterChangeBox = SpoolChange {
	moniker = "Options";
	children =
		PrinterOptions,
		OptionsOKTrigger,
#ifndef GPC_ONLY
		OptionsSaveTrigger,
#endif
		OptionsCancelTrigger;
	hints = {
		HINT_INTERACTION_SINGLE_USAGE,
		ATTR_GEN_INIT_FILE_PROPAGATE_TO_CHILDREN,
		ATTR_GEN_HELP_CONTEXT {
			char	"dbPrintOpts", 0
		},
		ATTR_GEN_HELP_FILE {
			char	"spool   ",0
		}
	}
}

PrinterOptions = GenInteraction {
	children = 
		PrinterOptionsExplanation,
		PrinterOptionsSeparator,
		PrinterPageSizeControl;
/*		PrinterOptionsSubGroup; */
	hints = {
		HINT_ORIENT_CHILDREN_VERTICALLY,
		ATTR_GEN_INIT_FILE_PROPAGATE_TO_CHILDREN
	}
}

PrinterOptionsExplanation = GenText {
	text = "Use these options to change the configuration of your printer. These will not affect the layout of your document.";
	genAttributes = default +readOnly;
	hints = {
		ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
	}
}

PrinterOptionsSeparator = GenGlyph {
	hints = {
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		HINT_GLYPH_SEPARATOR
	}
}

#if 0
		HINT_IF_SYSTEM_ATTRS { SystemAttrs mask SA_HORIZONTALLY_TINY },
			HINT_FIXED_SIZE {
				SpecWidth <SST_PIXELS, 246>
				SpecHeight <>
			},
		HINT_ELSE,
			HINT_FIXED_SIZE {
				SpecWidth <SST_PIXELS, 350>
				SpecHeight <>
			},
		HINT_ENDIF

#endif


#if 0
PrinterOptionsSubGroup = GenInteraction {
	children = 
		TimeoutRetryGroup,
		PrintToOptionsList;
	hints = {
		HINT_ORIENT_CHILDREN_VERTICALLY,
		HINT_CENTER_CHILDREN_ON_MONIKERS,
		ATTR_GEN_INIT_FILE_PROPAGATE_TO_CHILDREN
	}
}
#endif


/****************************************
 * Paper Size Control
 ****************************************/

PrinterPageSizeControl = PageSizeControl {
	pageSizeAttrs = "mask PZCA_ACT_LIKE_GADGET or \
			 mask PZCA_PAPER_SIZE or \
			 mask PZCA_LOAD_SAVE_OPTIONS";
	type = organizational;
	visibility = subGroup;
	hints = {
		HINT_CENTER_CHILDREN_ON_MONIKERS,
		ATTR_GEN_USES_HIERARCHICAL_INIT_FILE_CATEGORY,
		ATTR_GEN_CONTROL_PROHIBIT_UI {word mask PSIZECF_MARGINS}
	}
}


/****************************************
 * Timeout and Retry Options
 ****************************************/

/* Will be added dynamically as child of PrinterPageSizeControl */

TimeoutRetryGroup = GenInteraction {
	moniker = "Timeout (sec):";
	children =
		TimeoutValue,
		RetryValue;
	genStates = default -usable;
	hints = {
		HINT_ORIENT_CHILDREN_HORIZONTALLY,
		ATTR_GEN_INIT_FILE_PROPAGATE_TO_CHILDREN
	}
}

TimeoutValue = GenValue {
	minimum = 1;
	maximum = 255;
	applyMsg = MSG_SPOOL_SUMMONS_SET_TIMEOUT;
	destination = PrintDialogBox;
	hints = {
		ATTR_GEN_USES_HIERARCHICAL_INIT_FILE_CATEGORY,
		ATTR_GEN_INIT_FILE_KEY {char "timeout",0}
	}
}

RetryValue = GenValue {
	moniker = " Retries:";
	minimum = 0;
	maximum = 255;
	applyMsg = MSG_SPOOL_SUMMONS_SET_RETRY;
	destination = PrintDialogBox;
	hints = {
		ATTR_GEN_USES_HIERARCHICAL_INIT_FILE_CATEGORY,
		ATTR_GEN_INIT_FILE_KEY {char "retries",0}
	}
}


/****************************************
 * Print To File Options
 ****************************************/

/* Will be added dynamically as child of PrinterPageSizeControl */

PrintToOptionsList = GenItemGroup {
	moniker = "Print To:";
	children =
		PrintToPrinterEntry,
		PrintToFileEntry;
	destination = PrintDialogBox;
	genStates = default -usable;
	hints = {
		ATTR_GEN_ITEM_GROUP_STATUS_MSG {
			word	MSG_SPOOL_SUMMONS_SET_PRINT_TO_FILE
		},
		ATTR_GEN_USES_HIERARCHICAL_INIT_FILE_CATEGORY,
		ATTR_GEN_INIT_FILE_KEY {char "printTo",0}
	}
}

PrintToPrinterEntry = GenItem {
	moniker = "Printer";
	identifier = "0";
}

PrintToFileEntry = GenItem {
	moniker = "File";
	identifier = "1";
}


/****************************************
 * Options Response Group
 ****************************************/

OptionsOKTrigger = GenTrigger {
#ifdef GPC_ONLY
	moniker = 'C', "Change";
#else
	moniker = "OK";
#endif
	genAttributes = default +signalInteractionComplete;
	action = MSG_GEN_APPLY, PrinterChangeBox;
	hints = {
		HINT_SEEK_REPLY_BAR
	}
}

/* GPC_ONLY: No longer needed, as options are automatically saved */

#ifndef GPC_ONLY
OptionsSaveTrigger = GenTrigger {
	moniker = "Save Options";
	action = MSG_SPOOL_SUMMONS_SAVE_OPTIONS, PrintDialogBox;
	hints = {
		HINT_SEEK_REPLY_BAR
	}
}
#endif

OptionsCancelTrigger = GenTrigger {
#ifdef GPC_ONLY
	moniker = 'D', "Don't Change";
#endif
	genAttributes = default +signalInteractionComplete;
	action = MSG_GEN_RESET, PrinterChangeBox;
	hints = {
		ATTR_GEN_TRIGGER_INTERACTION_COMMAND {word IC_DISMISS},
		HINT_SEEK_REPLY_BAR
	}
}

/*
 * Only used on CGA systems where the printer-specific options are
 * changed into a separate dialog box.  See ND-000506.
 */
CGAMoreOptionsOKTrigger = GenTrigger {
	moniker = "OK";
	genAttributes = default +signalInteractionComplete;
	action = MSG_GEN_APPLY, PrinterChangeBox;
	hints = {
		HINT_SEEK_REPLY_BAR
	}
}

/*****************************************************************************
 *                      Print To/From File Dialog Box
 *****************************************************************************/

PrintFileDialogBox = GenInteraction {
	moniker = "Print To File";
	type = command;
	visibility = dialog;
	attributes = default +modal, +notUserInitiatable;
	children =
		PrintFileTopGroup,
		PrintFileNameText,
		PrintFileNonACReplyGroup;
}


/****************************************
 * Print-to-file top group
 ****************************************/

PrintFileTopGroup = GenInteraction {
	children =
		PrintFileFileSelector,
		PrintFileFormatList;
	hints = {
		HINT_ORIENT_CHILDREN_HORIZONTALLY
	}
}

PrintFileFileSelector = GenFileSelector {
	attributes = default +showFilesDisabled;
	fileCriteria = dirs;
	hints = {
		HINT_FILE_SELECTOR_SINGLE_ACTION,
		ATTR_GEN_PATH_DATA {
			GenFilePath <SP_SPOOL>
		}
	}
}


PrintFileFormatList = GenItemGroup {
	moniker = "File Format:";
	children =
		PrintFileFormatRawEntry,
		PrintFileFormatGEOSEntry;
	selection = "0";
	numSelections = 1;
	hints = {
		HINT_ORIENT_CHILDREN_VERTICALLY,
		HINT_PLACE_MONIKER_ABOVE
	}
}

PrintFileFormatRawEntry = GenItem {
	moniker = "PS (PostScript)";
	identifier = "0";
}

PrintFileFormatGEOSEntry = GenItem {
	moniker = "GEOS Meta-File";
	identifier = "1";
	genStates = default -usable;
}



/****************************************
 * Print File Text Group
 ****************************************/

PrintFileNameText = GenText {
	moniker = "File name:";
	maxLength = 12;
	text = "UNNAMED.PS";
	textDisplayAttributes =
		singleLineText,
		noWordWrapping;
	hints = {
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		ATTR_GEN_TEXT_LEGAL_DOS_FILENAMES
	}
}


/****************************************
 * Print File Reply Group
 ****************************************/

PrintFileNonACReplyGroup = GenInteraction {
	children = PrintFilePrintTrigger, PrintFileCancelTrigger;
	hints = { HINT_MAKE_REPLY_BAR }
}

PrintFilePrintTrigger = GenTrigger {
	moniker = "Print To File";
	action = MSG_PRINT_CONTROL_PRINT, "PCPT_PRINT_CTRL";
	genAttributes = default +signalInteractionComplete;
	hints = {
		HINT_DEFAULT_DEFAULT_ACTION
	}
}

PrintFileCancelTrigger = GenTrigger {
	/* moniker set by specific UI */
	genAttributes = default +signalInteractionComplete;
	action = MSG_GEN_GUP_INTERACTION_COMMAND, PrintDialogBox;
	hints = {
		ATTR_GEN_TRIGGER_INTERACTION_COMMAND {word IC_DISMISS},
		/* for MSG_GEN_GUP_INTERACTION_COMMAND */
		ATTR_GEN_TRIGGER_ACTION_DATA {word IC_DISMISS}
	}
}

end PrintUI;



/*****************************************************************************
 *                       Size Verify Dialog Box
 *****************************************************************************/

start	SizeVerifyUI, notDetachable;

SizeVerifyDialogBox = SizeVerifyDialog {
	type = multipleResponse;
	visibility = dialog;
	attributes = default
		+modal,
		+notUserInitiatable;
	children =
		AlertMessage,
		AlertScaleTrigger,
		AlertPrintTrigger,
		AlertCancelPrintingTrigger,
		AlertCancelFaxingTrigger;
	hints = {
		ATTR_GEN_HELP_CONTEXT {
			char	"dbPrintSize", 0
		},
		ATTR_GEN_HELP_FILE {
			char	"spool   ", 0
		}
	}
}

AlertMessage = GenText {
	genAttributes = readOnly;
	hints = {
		HINT_IF_SYSTEM_ATTRS { SystemAttrs mask SA_HORIZONTALLY_TINY },
			HINT_FIXED_SIZE {
				SpecWidth <SST_PIXELS, 240>
				SpecHeight <>
			},
		HINT_ELSE,
			HINT_MINIMUM_SIZE {
				SpecWidth <SST_AVG_CHAR_WIDTHS,
					SPOOL_DIALOG_GEN_TEXT_DEFAULT_CHAR_WIDTH>
				SpecHeight <>
			},
		HINT_ENDIF
	}
}

AlertPrintTrigger = GenTrigger {
	moniker = "Leave It Actual Size";
	action = MSG_PRINT_CONTROL_VERIFY_PRINT, "PCPT_PRINT_CTRL";
	genAttributes = default +signalInteractionComplete;
	hints = {
		HINT_SEEK_REPLY_BAR
	}
}

visMoniker ShortActualSizeMoniker	= "Actual Size";

AlertScaleTrigger = GenTrigger {
	moniker = 'S', "Scale to Fit";
	action = MSG_PRINT_CONTROL_VERIFY_SCALE, "PCPT_PRINT_CTRL";
	genAttributes = default +signalInteractionComplete;
	hints = {
		HINT_DEFAULT_DEFAULT_ACTION,
		HINT_SEEK_REPLY_BAR
	}
}

AlertCancelPrintingTrigger = GenTrigger {
	moniker = "VMO_CANCEL", "Cancel Printing";
	action = MSG_PRINT_CONTROL_VERIFY_CANCEL, "PCPT_PRINT_CTRL";
	genAttributes = default +signalInteractionComplete;
	hints = {
		HINT_SEEK_REPLY_BAR
	}
}

AlertCancelFaxingTrigger = GenTrigger {
	moniker = "VMO_CANCEL", "Cancel Fax";
	action = MSG_PRINT_CONTROL_VERIFY_CANCEL, "PCPT_PRINT_CTRL";
	genAttributes = default +signalInteractionComplete;
	hints = {
		HINT_SEEK_REPLY_BAR
	}
}

end	SizeVerifyUI;

	

/*****************************************************************************
 *                       Printing Progess Dialog Box
 *****************************************************************************/

start	ProgressUI, notDetachable;

ProgressDialogBox = GenInteraction {
	type = progress;
	visibility = dialog;
	attributes =
		default +modal,
		+notUserInitiatable;
	children =
		ProgressDocument,
		ProgressPage,
		ProgressText,
		ProgressPercent,
		ProgressCancelTrigger;
	hints = {
		HINT_CENTER_CHILDREN_HORIZONTALLY
	}		
}

ProgressDocument = GenText {
	genAttributes = readOnly;
	hints = {
		HINT_IF_SYSTEM_ATTRS { SystemAttrs mask SA_HORIZONTALLY_TINY },
			HINT_FIXED_SIZE {
				SpecWidth <SST_PIXELS, 240>
				SpecHeight <>
			},
		HINT_ELSE,
			HINT_MINIMUM_SIZE {
				SpecWidth <SST_AVG_CHAR_WIDTHS,
					SPOOL_DIALOG_GEN_TEXT_DEFAULT_CHAR_WIDTH>
				SpecHeight <>
			},
		HINT_ENDIF,
		ATTR_GEN_TEXT_DEFAULT_PARA_ATTR {
			word DEF_PARA_ATTR_CENTER
		}
	}
}

ProgressPage = GenText {
	genAttributes = readOnly;
	hints = {
		HINT_IF_SYSTEM_ATTRS { SystemAttrs mask SA_HORIZONTALLY_TINY },
			HINT_FIXED_SIZE {
				SpecWidth <SST_PIXELS, 240>
				SpecHeight <>
			},
		HINT_ELSE,
			HINT_MINIMUM_SIZE {
				SpecWidth <SST_AVG_CHAR_WIDTHS,
					SPOOL_DIALOG_GEN_TEXT_DEFAULT_CHAR_WIDTH>
				SpecHeight <>
			},
		HINT_ENDIF,
		ATTR_GEN_TEXT_DEFAULT_PARA_ATTR {
			word DEF_PARA_ATTR_CENTER
		}
	}
}

ProgressText = GenText {
	genAttributes = readOnly;
	text = "Processing the document...";
	hints = {
		HINT_IF_SYSTEM_ATTRS { SystemAttrs mask SA_HORIZONTALLY_TINY },
			HINT_FIXED_SIZE {
				SpecWidth <SST_PIXELS, 240>
				SpecHeight <>
			},
		HINT_ELSE,
			HINT_MINIMUM_SIZE {
				SpecWidth <SST_AVG_CHAR_WIDTHS,
					SPOOL_DIALOG_GEN_TEXT_DEFAULT_CHAR_WIDTH>
				SpecHeight <>
			},
		HINT_ENDIF,
		ATTR_GEN_TEXT_DEFAULT_PARA_ATTR {
			word DEF_PARA_ATTR_CENTER
		}
	}
}


ProgressPercent = GenValue {
	genAttributes = readOnly;
	moniker = "Percent Complete:";
	value = 0;
	minimum = 0;
	maximum = 100;
}

ProgressCancelTrigger = GenTrigger {
	moniker = "VMO_CANCEL", "Cancel Printing";
	action = MSG_PRINT_CONTROL_ABORT_PRINT_JOB, "PCPT_PRINT_CTRL";
	genAttributes = default +signalInteractionComplete;
	hints = {
		HINT_SEEK_REPLY_BAR,
		ATTR_GEN_TRIGGER_INTERACTION_COMMAND {word IC_STOP},
		ATTR_GEN_TRIGGER_ACTION_DATA {word IC_STOP}
	}
}

end	ProgressUI;



/*****************************************************************************
 *                            Spool Error Strings
 *****************************************************************************/

start	SpoolErrorBlock, data;

chunk ErrorArray = data {
	word	0				/* PCERR_EXTERNAL */
	word	0
	nptr	ErrorNoPrinters			/* PCERR_NO_PRINTERS */
	word	0				
	nptr	ErrorAllBadPrinters		/* PCERR_ALL_BAD_PRINTERS */
	word	0
	nptr	ErrorDriverNotFound		/* PCERR_DRIVER_NOT_FOUND */
	word	EAT_DRIVER_NAME
	nptr	ErrorPrinterNotKnown		/* PCERR_PRINTER_NOT_KNOWN */
	word	EAT_PRINTER_NAME
	nptr	ErrorInitFileCorrupt		/* PCERR_INIT_FILE_DEVICE */
	word	EAT_PRINTER_NAME
	nptr	ErrorInitFileCorrupt		/* PCERR_INIT_FILE_DRIVER */
	word	EAT_PRINTER_NAME
	nptr	ErrorNoMode			/* PCERR_NO_MODE_AVAIL */
	word	0
	nptr	ErrorFailFileCreate		/* PCERR_FAIL_FILE_CREATE */
	word	0
	nptr	ErrorSpoolFileNoRoom		/* PCERR_DISK_FULL */
	word	0
	nptr	ErrorDocSizeWarning		/* PCERR_DOC_WONT_FIT */
	word	EAT_PRINTER_NAME
}

chunk	ErrorNoPrinters		= "No printers have been installed. Use \\2 to install the printers you're using."
#if	_ERROR_CODES
				  "\\\r\\\rError Code: SL-39"
#endif
				  ;

chunk	ErrorAllBadPrinters	= "All the installed printers have become unusable. Use \\2 to delete them and reinstall the printers."
#if	_ERROR_CODES
				  "\\\r\\\rError Code: SL-40"
#endif
				  ;

chunk	ErrorDriverNotFound	= "Couldn't load the print driver: \\1. Free up some memory by closing windows and applications you're not using. If you're still unable to print, the driver may have been deleted and you should try reinstalling GEOS."
#if	_ERROR_CODES
				  "\\\r\\\rError Code: SL-41"
#endif
				  ;

chunk	ErrorPrinterNotKnown	= "Couldn't find the printer: \\1. Use \\2 to delete and reinstall this printer."
#if	_ERROR_CODES
				  "\\\r\\\rError Code: SL-42"
#endif
				  ;

chunk	ErrorInitFileCorrupt	= "Couldn't use the printer: \\1. Use \\2 to delete and reinstall this printer. If you're still unable to print, try reinstalling GEOS."
#if	_ERROR_CODES
				  "\\\r\\\rError Code: SL-43"
#endif
				  ;

chunk	ErrorNoMode		= "The selected printer can't print this type of document. Choose a printer that supports the print mode (graphics or text) used by this document."
#if	_ERROR_CODES
				  "\\\r\\\rError Code: SL-44"
#endif
				  ;

chunk	ErrorFailFileCreate	= "There is not enough space for the printer software to function. Try exiting to DOS and restarting GEOS. If this doesn't work, you should remove some files and try to print again."
#if	_ERROR_CODES
				  "\\\r\\\rError Code: SL-45"
#endif
				  ;

chunk	PreferenceManagerName	= "Preferences";


chunk	ErrorSpoolFileNoRoom	="Your print request has been aborted, because there is not enough space to complete the print job. Remove some files and try to print again."
#if	_ERROR_CODES
				 "\\\r\\\rError Code: SL-46"
#endif
				 ;

chunk	ErrorDocSizeWarning	="The selected document size is larger than the paper size you have selected for the printer: \\1. Tiling of print output will occur.";


/****************************************
 * Notification strings
 ****************************************/

chunk	SpoolDocWontFitPrint	= "The document you are trying to print, because of its page size or its margins, won't fit on the selected paper in your printer.\\\r\\\rDo you want to scale (reduce) the page to fit the paper, or do you want to leave the document actual size and have each page print across multiple sheets of paper?";

chunk	SpoolDocWontFitFax	= "The document page size is too large for the selected paper.  Do you want to scale the document or leave it actual size and have it faxed on multiple sheets of paper?";

#ifndef GPC_ONLY
chunk	SpoolPrinterOptsSaved	= "The printer settings have been saved.";
#endif

/****************************************
 * Hacked strings for special cases
 ****************************************/

chunk	ErrorNoPrintersGeneric	= "No printers have been installed."
#if	_ERROR_CODES
				  "\\\r\\\rError Code: SL-39"
#endif
				  ;

chunk	ErrorFailFileCreateGeneric = "There is insufficient space for printing. Remove some files and try to print again."
#if	_ERROR_CODES
				     "\\\r\\\rError Code: SL-45"
#endif
				     ;

end	SpoolErrorBlock;
