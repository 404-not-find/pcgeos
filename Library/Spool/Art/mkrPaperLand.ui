/*
 * Moniker generated from PCX/gpaper.pcx with pixel 13 masked out
 */
start AppSCMonikerResource, data;
visMoniker PaperLandSCMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color4;
	cachedSize = 48, 30;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 439
		Bitmap <48,30,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0xfb, 0x00
	db	0xe9, 0xdd
	db	0xfb, 0x00
	db	0xe9, 0xdd
	db	0xfb, 0x00
	db	0xe9, 0xdd
	db	0xfb, 0x00
	db	0xe9, 0xdd
	db	0x05, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xf3, 0x00, 0x00, 0x0d, 
		0xfd, 0xdd
	db	0x01, 0x00, 0x7f, 0xfe, 0xff, 0x00, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xf3, 0xff, 0x00, 0x08, 
		0xfd, 0xdd
	db	0x01, 0x00, 0x7f, 0xfe, 0xff, 0x00, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xf3, 0xff, 0x00, 0x08, 
		0xfd, 0xdd
	db	0x01, 0x00, 0x7f, 0xfe, 0xff, 0x00, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xf3, 0xff, 0x00, 0x08, 
		0xfd, 0xdd
	db	0x01, 0x00, 0x7f, 0xfe, 0xff, 0x00, 0x00
	db	0xfd, 0xdd, 0x04, 0xd0, 0xff, 0xf0, 0x00, 0x00, 
		0xf7, 0xff, 0x00, 0x08, 0xfd, 0xdd
	db	0x01, 0x00, 0x7f, 0xfe, 0xff, 0x00, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xf3, 0xff, 0x00, 0x08, 
		0xfd, 0xdd
	db	0x01, 0x00, 0x7f, 0xfe, 0xff, 0x00, 0x00
	db	0xfd, 0xdd, 0x04, 0xd0, 0xff, 0xf0, 0x00, 0x0f, 
		0xf7, 0xff, 0x00, 0x08, 0xfd, 0xdd
	db	0x01, 0x00, 0x7f, 0xfe, 0xff, 0x00, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xf3, 0xff, 0x00, 0x08, 
		0xfd, 0xdd
	db	0x01, 0x00, 0x7f, 0xfe, 0xff, 0x00, 0x00
	db	0xfd, 0xdd, 0x02, 0xd0, 0xff, 0xf0, 0xf7, 0x00, 
		0x02, 0x0f, 0xff, 0x08, 0xfd, 0xdd
	db	0x01, 0x00, 0x7f, 0xfe, 0xff, 0x00, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xf3, 0xff, 0x00, 0x08, 
		0xfd, 0xdd
	db	0x01, 0x00, 0x7f, 0xfe, 0xff, 0x00, 0x00
	db	0xfd, 0xdd, 0x02, 0xd0, 0xff, 0xf0, 0xf8, 0x00, 
		0xfe, 0xff, 0x00, 0x08, 0xfd, 0xdd
	db	0x01, 0x00, 0x7f, 0xfe, 0xff, 0x00, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xf3, 0xff, 0x00, 0x08, 
		0xfd, 0xdd
	db	0x01, 0x00, 0x7f, 0xfe, 0xff, 0x00, 0x00
	db	0xfd, 0xdd, 0x02, 0xd0, 0xff, 0xf0, 0xfa, 0x00, 
		0x00, 0x0f, 0xfd, 0xff, 0x00, 0x08, 0xfd, 0xdd
	db	0x01, 0x00, 0x7f, 0xfe, 0xff, 0x00, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xf3, 0xff, 0x00, 0x08, 
		0xfd, 0xdd
	db	0x01, 0x00, 0x7f, 0xfe, 0xff, 0x00, 0x00
	db	0xfd, 0xdd, 0x02, 0xd0, 0xff, 0xf0, 0xf8, 0x00, 
		0x03, 0x0f, 0xff, 0xff, 0x08, 0xfd, 0xdd
	db	0x01, 0x00, 0x7f, 0xfe, 0xff, 0x00, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xf3, 0xff, 0x00, 0x08, 
		0xfd, 0xdd
	db	0x01, 0x00, 0x7f, 0xfe, 0xff, 0x00, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xf3, 0xff, 0x00, 0x08, 
		0xfd, 0xdd
	db	0x01, 0x00, 0x7f, 0xfe, 0xff, 0x00, 0x00
	db	0xfd, 0xdd, 0x04, 0xd0, 0xff, 0xf0, 0x00, 0x00, 
		0xf7, 0xff, 0x00, 0x08, 0xfd, 0xdd
	db	0x01, 0x00, 0x7f, 0xfe, 0xff, 0x00, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xf3, 0xff, 0x00, 0x08, 
		0xfd, 0xdd
	db	0x01, 0x00, 0x7f, 0xfe, 0xff, 0x00, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xf3, 0xff, 0x00, 0x08, 
		0xfd, 0xdd
	db	0x01, 0x00, 0x7f, 0xfe, 0xff, 0x00, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xf3, 0x00, 0x00, 0x08, 
		0xfd, 0xdd
	db	0x01, 0x00, 0x3f, 0xfe, 0xff, 0x00, 0x00
	db	0xfc, 0xdd, 0xf2, 0x88, 0xfd, 0xdd
	db	0xfb, 0x00
	db	0xe9, 0xdd
	db	0xfb, 0x00
	db	0xe9, 0xdd
	db	0xfb, 0x00
	db	0xe9, 0xdd
	db	0xfb, 0x00
	db	0xe9, 0xdd
		GSEndString
	}
}
end AppSCMonikerResource;
/*
 * Moniker generated from PCX/gpaper.pcx with pixel 13 masked out
 */
start AppSMMonikerResource, data;
visMoniker PaperLandSMMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 48, 30;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 176
		Bitmap <48,30,BMC_PACKBITS,BMF_MONO>
	db	0xfb, 0x00
	db	0xfb, 0x00
	db	0xfb, 0x00
	db	0xfb, 0x00
	db	0x05, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00
	db	0x05, 0x00, 0x40, 0x00, 0x00, 0x03, 0x00
	db	0x05, 0x00, 0x40, 0x00, 0x00, 0x03, 0x00
	db	0x05, 0x00, 0x40, 0x00, 0x00, 0x03, 0x00
	db	0x05, 0x00, 0x47, 0xc0, 0x00, 0x03, 0x00
	db	0x05, 0x00, 0x40, 0x00, 0x00, 0x03, 0x00
	db	0x05, 0x00, 0x47, 0x80, 0x00, 0x03, 0x00
	db	0x05, 0x00, 0x40, 0x00, 0x00, 0x03, 0x00
	db	0x05, 0x00, 0x47, 0xff, 0xff, 0xe3, 0x00
	db	0x05, 0x00, 0x40, 0x00, 0x00, 0x03, 0x00
	db	0x05, 0x00, 0x47, 0xff, 0xff, 0x03, 0x00
	db	0x05, 0x00, 0x40, 0x00, 0x00, 0x03, 0x00
	db	0x05, 0x00, 0x47, 0xff, 0xf8, 0x03, 0x00
	db	0x05, 0x00, 0x40, 0x00, 0x00, 0x03, 0x00
	db	0x05, 0x00, 0x47, 0xff, 0xff, 0x83, 0x00
	db	0x05, 0x00, 0x40, 0x00, 0x00, 0x03, 0x00
	db	0x05, 0x00, 0x40, 0x00, 0x00, 0x03, 0x00
	db	0x05, 0x00, 0x47, 0xc0, 0x00, 0x03, 0x00
	db	0x05, 0x00, 0x40, 0x00, 0x00, 0x03, 0x00
	db	0x05, 0x00, 0x40, 0x00, 0x00, 0x03, 0x00
	db	0x01, 0x00, 0x7f, 0xfe, 0xff, 0x00, 0x00
	db	0x01, 0x00, 0x3f, 0xfe, 0xff, 0x00, 0x00
	db	0xfb, 0x00
	db	0xfb, 0x00
	db	0xfb, 0x00
	db	0xfb, 0x00
		GSEndString
	}
}
end AppSMMonikerResource;
/*
 * Moniker generated from PCX/gpaper.pcx with pixel 13 masked out
 */
start AppSCGAMonikerResource, data;
visMoniker PaperLandSCGAMoniker = {
	size = tiny;
	style = icon;
	aspectRatio = verySquished;
	color = gray1;
	cachedSize = 48, 14;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 87
		Bitmap <48,14,BMC_PACKBITS,BMF_MONO>
	db	0xfb, 0x00
	db	0x00, 0x00, 0xfd, 0xff, 0x00, 0x80
	db	0x01, 0x00, 0x80, 0xfe, 0x00, 0x00, 0x80
	db	0x01, 0x00, 0x9e, 0xfe, 0x00, 0x00, 0x80
	db	0x01, 0x00, 0x80, 0xfe, 0x00, 0x00, 0x80
	db	0x05, 0x00, 0x9f, 0xff, 0xff, 0xe0, 0x80
	db	0x01, 0x00, 0x80, 0xfe, 0x00, 0x00, 0x80
	db	0x05, 0x00, 0x9f, 0xff, 0xff, 0x80, 0x80
	db	0x01, 0x00, 0x80, 0xfe, 0x00, 0x00, 0x80
	db	0x05, 0x00, 0x9f, 0x80, 0x00, 0x00, 0x80
	db	0x01, 0x00, 0x80, 0xfe, 0x00, 0x00, 0x80
	db	0x00, 0x00, 0xfd, 0xff, 0x00, 0x80
	db	0xfb, 0x00
	db	0xfb, 0x00
		GSEndString
	}
}
end AppSCGAMonikerResource;
