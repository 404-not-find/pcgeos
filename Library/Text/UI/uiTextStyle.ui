/*
 * Project:	PC GEOS
 * Module:	Text
 * File:	UI/uiTextStyleControl.ui
 *
 * Author:	Tony Requist
 *
 *	This file contains the user interface description for a style control
 *
 *	$Id: uiTextStyle.ui,v 1.1 97/04/07 11:16:40 newdeal Exp $
 *
 */

#if !NO_CONTROLLERS	/*+++++++++++++++++++++++++++++++++++++++++++++++*/

#include "Art/mkrPlain.ui"
#include "Art/mkrBold.ui"
#include "Art/mkrItalic.ui"
#ifdef GPC_ART
start AppTCMonikerResource, data;
#include "Art/mkrUnderlineTC.ui"
end AppTCMonikerResource;
#else
#include "Art/mkrUnderline.ui"
#endif
#include "Art/mkrSuperscript.ui"
#include "Art/mkrSubscript.ui"
#include "Art/mkrStrikethru.ui"
#include "Art/mkrBoxed.ui"
#include "Art/mkrButton.ui"

/*
 * Style control
 */

start TextStyleControlUI, notDetachable;

PlainTextList = GenItemGroup {
	genStates = default -usable;
	children = PlainTextEntry;
	applyMsg = MSG_TSC_PLAIN_TEXT_CHANGE;
	destination = "TO_OBJ_BLOCK_OUTPUT";
}

PlainTextEntry = GenItem {
	moniker = 'P', "Plain Text";
	kbdAccelerator = shift control 'z';
	identifier = "0";
}

/* --- */

TextStyleList = GenBooleanGroup {
	genStates = default -usable;
	children =
		BoldEntry,
		ItalicEntry,
		UnderlineEntry,
		StrikeThruEntry,
		SuperscriptEntry,
		SubscriptEntry;
	applyMsg = MSG_TSC_STYLE_CHANGE;
	destination = "TO_OBJ_BLOCK_OUTPUT";
}

BoldEntry = GenBoolean {
	moniker = 'B', "Bold";
	kbdAccelerator = control 'b';
	identifier = "mask TS_BOLD";
}

ItalicEntry = GenBoolean {
	moniker = 'I', "Italic";
	kbdAccelerator = control 'i';
	identifier = "mask TS_ITALIC";
}

UnderlineEntry = GenBoolean {
	moniker = 'U', "Underline";
	kbdAccelerator = control 'u';
	identifier = "mask TS_UNDERLINE";
}

StrikeThruEntry = GenBoolean {
#ifdef GPC_TEXT_STYLE
	moniker = 'S', "Strikethrough";
#else
	moniker = 'S', "Strike Thru";
#endif
	identifier = "mask TS_STRIKE_THRU";
}

SuperscriptEntry = GenBoolean {
	moniker = '<', "Superscript (<)";
	identifier = "mask TS_SUPERSCRIPT";
}

SubscriptEntry = GenBoolean {
	moniker = '>', "Subscript (>)";
	identifier = "mask TS_SUBSCRIPT";
}

/* --- */

ExtendedStylesGroup = GenInteraction {
	genStates = default -usable;
	children = ExtendedStylesList;
}

ExtendedStylesList = GenBooleanGroup {
	children = BoxedEntry, ButtonEntry, IndexEntry, AllCapEntry,
		   SmallCapEntry;
	applyMsg = MSG_TSC_EXTENDED_STYLE_CHANGE;
	destination = "TO_OBJ_BLOCK_OUTPUT";
}

BoxedEntry = GenBoolean {
	moniker = 'x', "Boxed";
	identifier = "mask VTES_BOXED";
}

ButtonEntry = GenBoolean {
	moniker = 't', "Button";
	identifier = "mask VTES_BUTTON";
}

IndexEntry = GenBoolean {
	moniker = 'd', "Index";
	identifier = "mask VTES_INDEX";
}

AllCapEntry = GenBoolean {
	moniker = 'c', "All Cap";
	identifier = "mask VTES_ALL_CAP";
}

SmallCapEntry = GenBoolean {
	moniker = 'm', "Small Cap";
	identifier = "mask VTES_SMALL_CAP";
}

end TextStyleControlUI;

/*---*/

start TextStyleControlToolboxUI, notDetachable;

PlainTextToolList = GenItemGroup {
	genStates = default -usable;
	children = PlainTextToolEntry;
	applyMsg = MSG_TSC_PLAIN_TEXT_CHANGE;
	destination = "TO_OBJ_BLOCK_OUTPUT";
	hints = { HINT_SAME_ORIENTATION_AS_PARENT }
}

PlainTextToolEntry = GenItem {
	TOOL_MONIKER_LIST(Plain)
	identifier = "0";
	hints = { ATTR_GEN_FOCUS_HELP { optr PlainTextHelp } }
}

/* --- */

TextStyleToolList = GenBooleanGroup {
	genStates = default -usable;
	children =
		BoldToolEntry,
		ItalicToolEntry,
		UnderlineToolEntry,
		StrikeThruToolEntry,
		SuperscriptToolEntry,
		SubscriptToolEntry;
	applyMsg = MSG_TSC_STYLE_CHANGE; 
	destination = "TO_OBJ_BLOCK_OUTPUT";
	hints = { HINT_SAME_ORIENTATION_AS_PARENT }
}

BoldToolEntry = GenBoolean {
	TOOL_MONIKER_LIST(Bold)
	identifier = "mask TS_BOLD";
	hints = { ATTR_GEN_FOCUS_HELP { optr BoldHelp } }
}

ItalicToolEntry = GenBoolean {
	TOOL_MONIKER_LIST(Italic)
	identifier = "mask TS_ITALIC";
	hints = { ATTR_GEN_FOCUS_HELP { optr ItalicHelp } }
}

UnderlineToolEntry = GenBoolean {
#ifdef GPC_ART
	moniker = list { UnderlineTCMoniker }
#else
	TOOL_MONIKER_LIST(Underline)
#endif
	identifier = "mask TS_UNDERLINE";
	hints = { ATTR_GEN_FOCUS_HELP { optr UnderlineHelp } }
}

StrikeThruToolEntry = GenBoolean {
	TOOL_MONIKER_LIST(Strikethru)
	identifier = "mask TS_STRIKE_THRU";
	hints = { ATTR_GEN_FOCUS_HELP { optr StrikeThruName } }
}

SuperscriptToolEntry = GenBoolean {
	TOOL_MONIKER_LIST(Superscript)
	identifier = "mask TS_SUPERSCRIPT";
	hints = { ATTR_GEN_FOCUS_HELP { optr SuperscriptName } }
}

SubscriptToolEntry = GenBoolean {
	TOOL_MONIKER_LIST(Subscript)
	identifier = "mask TS_SUBSCRIPT";
	hints = { ATTR_GEN_FOCUS_HELP { optr SubscriptName } }
}

ExtendedStylesToolList = GenBooleanGroup {
	genStates = default -usable;
	children = BoxedToolEntry, ButtonToolEntry, IndexToolEntry,
		   AllCapToolEntry, SmallCapToolEntry;
	applyMsg = MSG_TSC_EXTENDED_STYLE_CHANGE;
	destination = "TO_OBJ_BLOCK_OUTPUT";
	hints = { HINT_SAME_ORIENTATION_AS_PARENT }
}

BoxedToolEntry = GenBoolean {
	TOOL_MONIKER_LIST(Boxed)
	identifier = "mask VTES_BOXED";
	hints = { ATTR_GEN_FOCUS_HELP { optr BoxedName } }
}

ButtonToolEntry = GenBoolean {
	TOOL_MONIKER_LIST(Button)
	identifier = "mask VTES_BUTTON";
	hints = { ATTR_GEN_FOCUS_HELP { optr ButtonName } }
}

IndexToolEntry = GenBoolean {
	MKR_TEXT(In)
	identifier = "mask VTES_INDEX";
	hints = { ATTR_GEN_FOCUS_HELP { optr IndexName } }
}

AllCapToolEntry = GenBoolean {
	MKR_TEXT(Al)
	identifier = "mask VTES_ALL_CAP";
	hints = { ATTR_GEN_FOCUS_HELP { optr AllCapName } }
}

SmallCapToolEntry = GenBoolean {
	MKR_TEXT(Sm)
	identifier = "mask VTES_SMALL_CAP";
	hints = { ATTR_GEN_FOCUS_HELP { optr SmallCapName } }
}

end TextStyleControlToolboxUI;

/*
 * Strings for controllers
 */

start ControlStrings, data;

chunk TSCName = "Text Style";

chunk AllCapName = "All Caps";
chunk SmallCapName = "Small Caps";
chunk IndexName = "Index";
chunk ButtonName = "Button";
chunk BoxedName = "Boxed";
chunk SuperscriptName = "Superscript";
chunk SubscriptName = "Subscript";
#ifdef GPC_TEXT_STYLE
chunk StrikeThruName = "Strikethrough";
#else
chunk StrikeThruName = "Strike Thru";
#endif
chunk UnderlineName = "Underline";
chunk ItalicName = "Italic";
chunk BoldName = "Bold";
chunk PlainTextName = "Plain Text";
chunk PlainTextHelp = "Remove any styles from selected text";
chunk BoldHelp = "Make selected text bold";
chunk ItalicHelp = "Italicize selected text";
chunk UnderlineHelp = "Underline selected text";

end ControlStrings;

#endif			/* !NO_CONTROLLERS ++++++++++++++++++++++++++++++*/

