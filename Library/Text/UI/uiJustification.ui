/*
 * Project:	PC GEOS
 * Module:	Text
 * File:	UI/uiJustificationControl.ui
 *
 * Author:	Tony Requist
 *
 *	This file contains the user interface description for a style control
 *
 *	$Id: uiJustification.ui,v 1.1 97/04/07 11:17:29 newdeal Exp $
 *
 */

#if !NO_CONTROLLERS	/*+++++++++++++++++++++++++++++++++++++++++++++++*/

#ifdef GPC_ART
start AppTCMonikerResource, data;
#include "Art/mkrLeftTC.ui"
#include "Art/mkrCenterTC.ui"
#include "Art/mkrRightTC.ui"
#include "Art/mkrFullTC.ui"
end AppTCMonikerResource;
#else
#include "Art/mkrLeft.ui"
#include "Art/mkrCenter.ui"
#include "Art/mkrRight.ui"
#include "Art/mkrFull.ui"
#endif

#ifdef UIC_CHAR_JUSTIFICATION
#include "Art/mkrFullChar.ui"
#endif

/*
 * Justification control
 */

start JustificationControlUI, notDetachable;

JustificationList = GenItemGroup {
	genStates = default -usable;
#ifdef UIC_CHAR_JUSTIFICATION
	children = LeftEntry, CenterEntry, RightEntry, FullEntry, FullCharEntry;
#else
	children = LeftEntry, CenterEntry, RightEntry, FullEntry;
#endif
	applyMsg = MSG_JC_SET_JUSTIFICATION;
	destination = "TO_OBJ_BLOCK_OUTPUT";
}

LeftEntry = GenItem {
	moniker = 'L', "Left";
	kbdAccelerator = control 'l';
	identifier = "J_LEFT shl offset VTPAA_JUSTIFICATION";
}


RightEntry = GenItem {
	moniker = 'R', "Right";
	kbdAccelerator = control 'r';
	identifier = "J_RIGHT shl offset VTPAA_JUSTIFICATION";
}


CenterEntry = GenItem {
	moniker = 'C', "Center";
	kbdAccelerator = control 'e';
	identifier = "J_CENTER shl offset VTPAA_JUSTIFICATION";
}

visMoniker FullMoniker = 'F', "Full";

visMoniker GeneralMoniker = 'G', "General";

FullEntry = GenItem {
	moniker = FullMoniker;
	kbdAccelerator = control 'j';
	identifier = "J_FULL shl offset VTPAA_JUSTIFICATION";
}

#ifdef UIC_CHAR_JUSTIFICATION

FullCharEntry = GenItem {
	moniker = "Japanese";
	identifier = "J_FULL shl offset VTPAA_JUSTIFICATION or mask TMMF_CHARACTER_JUSTIFICATION";
}

#endif

end JustificationControlUI;

/*---*/

start JustificationControlToolboxUI, notDetachable;

JustificationToolList = GenItemGroup {
	genStates = default -usable;
#ifdef UIC_CHAR_JUSTIFICATION
	children = LeftToolEntry, CenterToolEntry, RightToolEntry,
			FullToolEntry, FullCharToolEntry;
#else
	children = LeftToolEntry, CenterToolEntry, RightToolEntry,
			FullToolEntry;
#endif
	applyMsg = MSG_JC_SET_JUSTIFICATION;
	destination = "TO_OBJ_BLOCK_OUTPUT";
	hints = { HINT_SAME_ORIENTATION_AS_PARENT }
}

LeftToolEntry = GenItem {
#ifdef GPC_ART
	moniker = list { LeftTCMoniker }
#else
	TOOL_MONIKER_LIST(Left)
#endif
	identifier = "J_LEFT shl offset VTPAA_JUSTIFICATION";
	hints = { ATTR_GEN_FOCUS_HELP { optr LeftHelp } }
}


RightToolEntry = GenItem {
#ifdef GPC_ART
	moniker = list { RightTCMoniker }
#else
	TOOL_MONIKER_LIST(Right)
#endif
	identifier = "J_RIGHT shl offset VTPAA_JUSTIFICATION";
	hints = { ATTR_GEN_FOCUS_HELP { optr RightHelp } }
}


CenterToolEntry = GenItem {
#ifdef GPC_ART
	moniker = list { CenterTCMoniker }
#else
	TOOL_MONIKER_LIST(Center)
#endif
	identifier = "J_CENTER shl offset VTPAA_JUSTIFICATION";
	hints = { ATTR_GEN_FOCUS_HELP { optr CenterHelp } }
}


FullToolEntry = GenItem {
#ifdef GPC_ART
	moniker = list { FullTCMoniker }
#else
	TOOL_MONIKER_LIST(Full)
#endif
	identifier = "J_FULL shl offset VTPAA_JUSTIFICATION";
	hints = { ATTR_GEN_FOCUS_HELP { optr FullHelp } }	
}

#ifdef UIC_CHAR_JUSTIFICATION
FullCharToolEntry = GenItem {
	TOOL_MONIKER_LIST(FullChar)
	identifier = "J_FULL shl offset VTPAA_JUSTIFICATION or mask TMMF_CHARACTER_JUSTIFICATION";
	hints = { ATTR_GEN_FOCUS_HELP { optr FullCharName } }
}
#endif

end JustificationControlToolboxUI;

/*
 * Strings for controllers
 */

start ControlStrings, data;

chunk JCName = "Justification";

chunk FullName = "Full";
chunk CenterName = "Center";
chunk RightName = "Right";
chunk LeftName = "Left";
chunk FullHelp = "Full-justify (stretch) text between left and right margins";
chunk GeneralHelp = "General (default) justification";
chunk CenterHelp = "Center text between the left and right margins";
chunk RightHelp = "Align selected text to right margin";
chunk LeftHelp = "Align selected text to left margin";

#ifdef UIC_CHAR_JUSTIFICATION
chunk FullCharName = "Character";
#endif

end ControlStrings;

#endif			/* !NO_CONTROLLERS ++++++++++++++++++++++++++++++*/

