/*
 * Project:	PC GEOS
 * Module:	Text
 * File:	UI/uiBorderControl.ui
 *
 * Author:	Tony Requist
 *
 *	This file contains the user interface description for a style control
 *
 *	$Id: uiBorder.ui,v 1.1 97/04/07 11:17:33 newdeal Exp $
 *
 */

/*
 * Border control
 */

#if !NO_CONTROLLERS	/*+++++++++++++++++++++++++++++++++++++++++++++++*/

start BorderControlUI, notDetachable;

SimpleBorderList = GenItemGroup {
	genStates = default -usable;
	children = NoBorderEntry, ThinLineBorderEntry, ThickLineBorderEntry,
		   DoubleLineBorderEntry, ShadowTopLeftBorderEntry;
	applyMsg = MSG_BC_SET_SIMPLE_BORDER;
	destination = "TO_OBJ_BLOCK_OUTPUT";
}

NoBorderEntry = GenItem {
	moniker = 'N', "None";
	identifier = "((1*8) shl offset BCBF_WIDTH)";
}

ThinLineBorderEntry = GenItem {
	moniker = 'T', "Thin";
	identifier = "mask VTPBF_LEFT or mask VTPBF_TOP or mask VTPBF_RIGHT"
		     " or mask VTPBF_BOTTOM or ((1*8) shl offset BCBF_WIDTH)";
}

ThickLineBorderEntry = GenItem {
	moniker = 'h', "Thick";
	identifier = "mask VTPBF_LEFT or mask VTPBF_TOP or mask VTPBF_RIGHT"
		     " or mask VTPBF_BOTTOM or ((3*8) shl offset BCBF_WIDTH)";
}

DoubleLineBorderEntry = GenItem {
	moniker = 'D', "Double-Line";
	identifier = "mask VTPBF_LEFT or mask VTPBF_TOP or mask VTPBF_RIGHT"
		     " or mask VTPBF_BOTTOM or mask VTPBF_DOUBLE"
		     " or ((1*8) shl offset BCBF_WIDTH)";
}

ShadowTopLeftBorderEntry = GenItem {
	moniker = 'S', "Shadowed";
	identifier = "mask VTPBF_LEFT or mask VTPBF_TOP or mask VTPBF_RIGHT"
		     " or mask VTPBF_BOTTOM or mask VTPBF_SHADOW"
		     " or ((1*8) shl offset BCBF_WIDTH)";
}

/***/

CustomBorderBox = TextSuspendOnApplyInteraction {
	genStates = default -usable;
	moniker = 'C', "Custom Border";
	children = BorderSidesInnerGroup, BorderSpinGroup, BorderTypeGroup;
	type = properties;
	visibility = dialog;
	hints = {
		ATTR_GEN_HELP_CONTEXT { char "dbCustBdr", 0 }
	}
}

BorderSidesInnerGroup = GenInteraction {
	children = BorderSidesList, BorderInnerLinesList;
	hints = { 
		HINT_IF_SYSTEM_ATTRS { SystemAttrs mask SA_HORIZONTALLY_TINY },
			HINT_ORIENT_CHILDREN_VERTICALLY,
		HINT_ELSE,
			HINT_ORIENT_CHILDREN_HORIZONTALLY,
		HINT_ENDIF
	}
}

BorderSidesList = GenBooleanGroup {
	moniker = "Sides to Border:";
	children = BorderLeftEntry, BorderTopEntry, BorderRightEntry,
		   BorderBottomEntry;
	applyMsg = MSG_BC_SET_BORDER_BITS; 
	destination = "TO_OBJ_BLOCK_OUTPUT";
	hints = { 
		HINT_IF_SYSTEM_ATTRS { SystemAttrs mask SA_HORIZONTALLY_TINY },
			HINT_ORIENT_CHILDREN_VERTICALLY,
			HINT_WRAP_AFTER_CHILD_COUNT {
				word	2
			},
		HINT_ELSE,
			HINT_ORIENT_CHILDREN_HORIZONTALLY,
		HINT_ENDIF,

	    	ATTR_GEN_ITEM_GROUP_STATUS_MSG { dw MSG_BC_BORDER_SIDES_STATUS }
	}
}

BorderLeftEntry = GenBoolean {
	moniker = 'L', "Left";
	identifier = "mask VTPBF_LEFT";
}

BorderTopEntry = GenBoolean {
	moniker = 'T', "Top";
	identifier = "mask VTPBF_TOP";
}

BorderRightEntry = GenBoolean {
	moniker = 'R', "Right";
	identifier = "mask VTPBF_RIGHT";
}

BorderBottomEntry = GenBoolean {
	moniker = 'B', "Bottom";
	identifier = "mask VTPBF_BOTTOM";
}

BorderInnerLinesList = GenBooleanGroup {
	children = BorderInnerLinesEntry;
	applyMsg = MSG_BC_SET_BORDER_BITS;
	destination = "TO_OBJ_BLOCK_OUTPUT";
	genStates = default -enabled;
}

BorderInnerLinesEntry = GenBoolean {
	moniker = 'I', "Draw Inner Lines";
	identifier = "mask VTPBF_DRAW_INNER_LINES";
}

/***/

BorderSpinGroup = GenInteraction {
	children = BorderWidthSpin, BorderSpacingSpin;
	hints = { 
		HINT_IF_SYSTEM_ATTRS { SystemAttrs mask SA_HORIZONTALLY_TINY },
			HINT_ORIENT_CHILDREN_VERTICALLY,
		HINT_ELSE,
			HINT_ORIENT_CHILDREN_HORIZONTALLY,
		HINT_ENDIF
	}
}

BorderWidthSpin = GenValue {
	moniker = 'W', "Border Width (points):";
	displayFormat = points;
	value = 1;
	minimum = 1;
	minimumFrac = 0;
	maximum = 31;
	maximumFrac = 0; 
	increment = 1;
	applyMsg = MSG_BC_SET_BORDER_WIDTH;
	destination = "TO_OBJ_BLOCK_OUTPUT";
}

BorderSpacingSpin = GenValue {
	moniker = 'S', "Border Spacing (points):";
	displayFormat = points;
	value = 1;
	minimum = 1;
	minimumFrac = 0;
	maximum = 31;
	maximumFrac = 0;
	increment = 1;
	applyMsg = MSG_BC_SET_BORDER_SPACING;
	destination = "TO_OBJ_BLOCK_OUTPUT";
}

/***/

BorderTypeGroup = GenInteraction {
	moniker = "Border Type";
	children = BorderTypesList, BorderShadowAnchorList,
		   BorderShadowWidthSpin, BorderWidthBetweenLinesSpin;
	hints = { HINT_DRAW_IN_BOX, HINT_EXPAND_WIDTH_TO_FIT_PARENT }
}

BorderTypesList = GenItemGroup {
	moniker = "Type:";
	children = BorderNormalEntry, BorderShadowEntry, BorderDoubleLineEntry;
	applyMsg = MSG_BC_SET_BORDER_TYPE;
	destination = "TO_OBJ_BLOCK_OUTPUT";
	hints = {
		HINT_IF_SYSTEM_ATTRS { SystemAttrs mask SA_HORIZONTALLY_TINY },
			HINT_ORIENT_CHILDREN_VERTICALLY,
			HINT_WRAP_AFTER_CHILD_COUNT {
				word	2
			},
		HINT_ELSE,
			HINT_ORIENT_CHILDREN_HORIZONTALLY,
		HINT_ENDIF,

	    	ATTR_GEN_ITEM_GROUP_STATUS_MSG { dw MSG_BC_BORDER_TYPE_STATUS } 
	}
}

BorderNormalEntry = GenItem {
	moniker = 'N', "Normal";
	identifier = "BT_NORMAL";
}

BorderShadowEntry = GenItem {
	moniker = 'h', "Shadow";
	identifier = "BT_SHADOW";
}

BorderDoubleLineEntry = GenItem {
	moniker = 'D', "Double Line";
	identifier = "BT_DOUBLE_LINE";
}

/***/

BorderShadowAnchorList = GenItemGroup {
	moniker = "Shadow Anchor:";
	children = AnchorTopLeftEntry, AnchorTopRightEntry,
		   AnchorBottomLeftEntry, AnchorBottomRightEntry;
	applyMsg = MSG_BC_SET_BORDER_ANCHOR;
	destination = "TO_OBJ_BLOCK_OUTPUT";
	hints = {
		HINT_IF_SYSTEM_ATTRS { SystemAttrs mask SA_HORIZONTALLY_TINY },
			HINT_PLACE_MONIKER_ABOVE,
			HINT_ORIENT_CHILDREN_VERTICALLY,
			HINT_WRAP_AFTER_CHILD_COUNT {
				word	2
			},
		HINT_ELSE,
			HINT_ORIENT_CHILDREN_HORIZONTALLY,
		HINT_ENDIF
	}
}

AnchorTopLeftEntry = GenItem {
	moniker = 'o', "Top Left";
	identifier = "SA_TOP_LEFT";
}

AnchorTopRightEntry = GenItem {
	moniker = 'g', "Top Right";
	identifier = "SA_TOP_RIGHT";
}

AnchorBottomLeftEntry = GenItem {
	moniker = 'f', "Bottom Left";
	identifier = "SA_BOTTOM_LEFT";
}

AnchorBottomRightEntry = GenItem {
	moniker = 'm', "Bottom Right";
	identifier = "SA_BOTTOM_RIGHT";
}

BorderShadowWidthSpin = GenValue {
	moniker = 'a', "Shadow Width (points):";
	displayFormat = points;
	value = 1;
	minimum = 1;
	minimumFrac = 0;
	maximum = 31;
	maximumFrac = 0;
	increment = 1;
	applyMsg = MSG_BC_SET_SHADOW_WIDTH;
	destination = "TO_OBJ_BLOCK_OUTPUT";
	hints = { 
		HINT_PLACE_MONIKER_TO_LEFT,
	}
}

/***/


BorderWidthBetweenLinesSpin = GenValue {
	moniker = 'e', "Width Between Double Lines (points):";
	displayFormat = points;
	value = 1;
	minimum = 1;
	minimumFrac = 0;
	maximum = 31;
	maximumFrac = 0;
	increment = 1;
	applyMsg = MSG_BC_SET_SHADOW_WIDTH;
	destination = "TO_OBJ_BLOCK_OUTPUT";
	hints = { 
		HINT_IF_SYSTEM_ATTRS { SystemAttrs mask SA_HORIZONTALLY_TINY },
			HINT_PLACE_MONIKER_ABOVE,
		HINT_ELSE,
			HINT_PLACE_MONIKER_TO_LEFT,
		HINT_ENDIF
	}
}

end BorderControlUI;

/*---*/

/*
 * Strings for controllers
 */

start ControlStrings, data;

chunk BCName = "Paragraph Border";

chunk CustomBorderName = "Custom Paragraph Border";
chunk SimpleBorderName = "Simple Paragraph Border";

end ControlStrings;

#endif			/* !NO_CONTROLLERS ++++++++++++++++++++++++++++++*/


