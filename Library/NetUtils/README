Before you use NetUtils library
===============================

	There are 2 utilities in this library: HugeLMem and Queue.  

	HugeLMem is basically a large heap consisting of many LMem blocks that
can manage a large number of buffers of variable sizes.  This utility is used 
by network drivers to manage the buffers created for incoming and outgoing 
packets.  HugeLMem deals with synchronization issues to allow these buffers to 
be passed among Geodes(as data packets travel through layers of protocols).  
Since each buffer is allocated in a LMem block along with other buffers, 
buffers cannot be resized( maybe downsized though).  Also, when locking and unlocking these buffers, one must use HugeLMemLock and HugeLMemUnlock routines.  
Buffers that are locked with MemLock are not protected from other threads 
coming in and allocating buffers in the same block, which may result in 
shifting the block.

	Queue mechanism is implementation of a general queue mechanism.  It
has a small overhead and does not consume any global handle.  Each queue is
implemented as a chunk in a LMem block.  Queues are designed to be shared among
multiple threads.  This is done using Mem(Un)LockShared/Excl in the kernel.
So, in order to access any data in the LMem block containing queues, one
must use Mem(Un)LockShared/Excl.

$Id: README,v 1.1.13.1 97/03/29 05:49:51 canavese Exp $

