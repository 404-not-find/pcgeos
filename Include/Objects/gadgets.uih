/***********************************************************************
 *
 *	Copyright (c) Geoworks 1994 -- All Rights Reserved
 *
 * PROJECT:	  Interface Gadgets
 * MODULE:	  Gadgets
 * FILE:	  gadgets.uih
 *
 * AUTHOR:  	  Skarpi Hedinsson, Jun 24, 1994
 *
 * REVISION HISTORY:
 *	Name	Date		Description
 *	----	----		-----------
 *	SH	6/24/94    	Initial version
 *	PB	9/29/94		Added BatteryIndicatorClass definitions
 *
 * DESCRIPTION:
 *	Descriptions of classes for the uic
 *
 * 	$Id: gadgets.uih,v 1.1 97/04/04 14:19:39 newdeal Exp $
 *
 ***********************************************************************/

/*
 * DateSelectorClass
 */

class DateSelector = GenControl {
	default genStates = default +enabled;
	
	date = typeComp "DateStruct" : "1995,1,1,0,0";
	dateType = enumComp word {
		longCondensedDate,
		longDate,
		shortDate,
		zeroPaddedShortDate,
		week,
		weekYear,
		month,
		shortMonth,
		monthYear,
		shortMonthYear,
		shortMonthShortYear,
		year,
		yearText
		} : longCondensedDate;
	textWidth = wordComp : 0;
	actionMsg = wordComp : 0;
}

/*
 * DateInputClass
 */

class DateInput = GenControl {
	default genStates = default +enabled;

	date 		= typeComp "DateStruct" : "1995,1,1,0,0";
	actionMsg	= wordComp : 0;

}

/*
 * TimeInputClass
 */

class TimeInput = GenControl, kbdPath {
	default genStates = default +enabled;

	time 			= typeComp "TimeStruct" : "-1,-1,-1";
	incrementValue 		= wordComp : 5;
	incrementAltValue 	= wordComp : 1;
	timeType 		= enumComp word {
					timeOfDay,
					timeInterval,
					timeOffset
					} : timeOfDay;
	actionMsg		= wordComp : 0;
	ampmMode		= wordComp : "BB_FALSE"; /* INTERNAL */
}

/*
 * TimerClass
 */

class Timer = GenControl {
	default genStates = default +enabled;
	
	timerHandle 	= wordComp : 0;
	time 		= typeComp "StopwatchStruct" : "0,0,0,0";
	countdownTime 	= typeComp "StopwatchStruct" : "0,0,0,0";
	actionMsg	= wordComp : 0;
	style		= enumComp word {
				countdown,
				stopwatch
			    } : countdown;
	startCount	= dwordComp : 0;
	remainder	= wordComp : 0;
}

/*
 * RepeatTriggerClass
 */

class RepeatTrigger = GenTrigger {
	timerHandle 	= wordComp :  0;
	timerID		= wordComp :  0;
	repeatCount	= wordComp :  0;
	repeatRate	= wordComp : 10;
	accelerate	= byteComp :  1;	/* true */
}


/*
 * BatteryIndicatorClass
 */

class	BatteryIndicator = GenGlyph {

	orientation = enumComp word (0,2) {
			vertical,
			horizontal,
			longHorizontal
			} : horizontal; 

	/* Internal use only: */

	life = wordComp : -1;
	timerHan = wordComp : 0;
	timerID	 = wordComp : 0;
    	mixModeClear = byteComp : "MM_CLEAR";
}
