COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) Geoworks 1996 -- All Rights Reserved

PROJECT:	GEOS
MODULE:		Hardware Breakpoints
FILE:		intelbrk.def

AUTHOR:		Eric Weber, Jun 21, 1996

MACROS:
	Name			Description
	----			-----------

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	EW	6/21/96   	Initial revision


DESCRIPTION:
	Data types for manipulating the Intel 80386 debug registers
		
	$Id: intelbrk.def,v 1.1 97/05/23 07:58:16 weber Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

HwBreakLen			etype	byte, 0, 1
	HBL_BYTE		enum	HwBreakLen
	HBL_WORD		enum	HwBreakLen
	HBL_UNDEFINED		enum	HwBreakLen
	HBL_DWORD		enum	HwBreakLen

HwBreakType			etype	byte, 0, 1
	HBT_INSTRUCTION		enum	HwBreakType
	HBT_WRITE		enum	HwBreakType
	HBT_UNDEFINED		enum	HwBreakType
	HBT_READ_WRITE		enum	HwBreakType

;
; the high word of DR7 indicates the type and size of each breakpoint
;
DR7high	record
	DR7H_LEN3 HwBreakLen:2	; size of brk3
	DR7H_RW3  HwBreakType:2	; type of brk3
	DR7H_LEN2 HwBreakLen:2	; size of brk2
	DR7H_RW2  HwBreakType:2	; type of brk2
	DR7H_LEN1 HwBreakLen:2	; size of brk1
	DR7H_RW1  HwBreakType:2	; type of brk1
	DR7H_LEN0 HwBreakLen:2	; size of brk0
	DR7H_RW0  HwBreakType:2	; type of brk0
DR7high	end

;
; the low word of DR7 enables or disables breakpoints
;
; Notes:
;
;   The GD flag prevents unauthorized modification of the debug registers,
;   and is cleared any time a breakpoint exception is taken.
;
;   The GE and LE flags are ignored on the 486.  On the 386 they cause
;   the traps or faults to be taken at the exact instruction causing them.
;
;   The LE<n> flags are cleared on every task switch
;
DR7low	record
	:2			; reserved
	DR7L_GD:1		; write protect debug registers
	:3			; reserved
	DR7L_GE:1		; global exact match - 386 only
	DR7L_LE:1		; local exact match - 386 only
	DR7L_G3:1		; global enable brk3
	DR7L_L3:1		; local enable brk3
	DR7L_G2:1		; global enable brk2
	DR7L_L2:1		; local enable brk2
	DR7L_G1:1		; global enable brk1
	DR7L_L1:1		; local enable brk1
	DR7L_G0:1		; global enable brk0
	DR7L_L0:1		; local enable brk0
DR7low	end

DR7reg	struct
	DR7R_low	DR7low
	DR7R_high	DR7high
DR7reg	ends

;
; the high word DR6 is unused
; the low word of DR6 indicates why a breakpoint trap was taken
;
DR6low	record
	DR6L_BT:1	; task switch breakpoint (TSS->T == 1)
	DR6L_BS:1	; single-step breakpoint (TF ==1 )
	DR6L_BD:1	; attempt to modify DR regs while DR7L_GD is set
	:9
	DR6L_B3:1	; breakpoint 3 taken
	DR6L_B2:1	; breakpoint 2 taken
	DR6L_B1:1	; breakpoint 1 taken
	DR6L_B0:1	; breakpoint 0 taken
DR6low	end

DR6reg	struct
	DR6R_low	DR6low
	DR6R_high	word
DR6reg	ends

IntelDebugRegs	struct
	IDR_7	DR7reg
	IDR_6	DR6reg
	IDR_3	dword
	IDR_2	dword
	IDR_1	dword
	IDR_0	dword
IntelDebugRegs	ends
