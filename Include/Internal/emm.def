COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1992 -- All Rights Reserved

PROJECT:	PC/GEOS
FILE:		emm.def


REVISION HISTORY:
	
	Name	Date		Description
	----	----		-----------
	atw	3/ 2/94		Initial revision


DESCRIPTION:
	Contains directives for the 	
		
	$Id: emm.def,v 1.1 97/04/04 14:13:55 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

SetDef __EMM

EMMFunctions	etype	word
    EMF_GET_STATUS	enum	EMMFunctions, 0x4000	; 3.0
    EMF_GET_PAGE_FRAME	enum	EMMFunctions, 0x4100	; 3.0
    EMF_GET_NUM_PAGES	enum	EMMFunctions, 0x4200	; 3.0
    EMF_ALLOC		enum	EMMFunctions, 0x4300	; 3.0
    EMF_MAP_BANK	enum	EMMFunctions, 0x4400	; 3.0
    EMF_FREE		enum	EMMFunctions, 0x4500	; 3.0
    EMF_GET_VERSION	enum	EMMFunctions, 0x4600	; 3.0
    EMF_GET_MAP		enum	EMMFunctions, 0x4700	; 3.0
    EMF_SET_MAP		enum	EMMFunctions, 0x4800	; 3.0
    EMF_GET_NUM_HANDLES	enum	EMMFunctions, 0x4b00	; 3.0
    EMF_QUERY_PAGES	enum	EMMFunctions, 0x4c00	; 3.0
    EMF_QUERY_ALL_PAGES	enum	EMMFunctions, 0x4d00	; 3.0
    EMF_GET_MAP_PTR	enum	EMMFunctions, 0x4e00	; 3.2
    EMF_SET_MAP_PTR	enum	EMMFunctions, 0x4e01	; 3.2
    EMF_XCHG_MAP_PTR	enum	EMMFunctions, 0x4e02	; 3.2
    EMF_GET_MAP_SIZE	enum	EMMFunctions, 0x4e03	; 3.2
    EMF_GET_PART_MAP	enum	EMMFunctions, 0x4f00	; 4.0
    EMF_SET_PART_MAP 	enum	EMMFunctions, 0x4f01	; 4.0
    EMF_GET_PART_MAP_SIZE enum	EMMFunctions, 0x4f02	; 4.0
    EMF_MAP_MANY	enum	EMMFunctions, 0x5000	; 4.0
    EMF_MAP_MANY_SEG	enum	EMMFunctions, 0x5001	; 4.0
    EMF_REALLOC		enum	EMMFunctions, 0x5100	; 4.0
    EMF_GET_ATTR	enum	EMMFunctions, 0x5200	; 4.0
    EMF_SET_ATTR	enum	EMMFunctions, 0x5201	; 4.0
    EMF_HAS_ATTR?	enum	EMMFunctions, 0x5202	; 4.0
    EMF_GET_NAME	enum	EMMFunctions, 0x5300	; 4.0
    EMF_SET_NAME	enum	EMMFunctions, 0x5301	; 4.0
    EMF_GET_ALL_NAMES	enum	EMMFunctions, 0x5400	; 4.0
    EMF_SEARCH		enum	EMMFunctions, 0x5401	; 4.0
    EMF_GET_TOTAL_HANDLES enum	EMMFunctions, 0x5402	; 4.0
    EMF_MAP_AND_JUMP	enum	EMMFunctions, 0x5500	; 4.0
    EMF_MAP_AND_JUMP_SEG enum	EMMFunctions, 0x5501	; 4.0
    EMF_MAP_AND_CALL	enum	EMMFunctions, 0x5600	; 4.0
    EMF_MAP_AND_CALL_SEG enum	EMMFunctions, 0x5601	; 4.0
    EMF_MAP_AND_CALL_STACK_SIZE enum EMMFunctions, 0x5602; 4.0
    EMF_MOVE_REGION	enum	EMMFunctions, 0x5700	; 4.0
    EMF_XCHG_REGION	enum	EMMFunctions, 0x5701	; 4.0
    EMF_GET_BANKS	enum	EMMFunctions, 0x5800	; 4.0
    EMF_GET_NUM_BANKS	enum	EMMFunctions, 0x5801	; 4.0
    EMF_GET_HW_CONFIG	enum	EMMFunctions, 0x5900	; 4.0
    EMF_GET_RAW_PAGE_COUNT enum	EMMFunctions, 0x5901	; 4.0
    EMF_ALLOC_STD_PAGES	enum	EMMFunctions, 0x5a00	; 4.0
    EMF_ALLOC_RAW_PAGES	enum	EMMFunctions, 0x5a01	; 4.0
    EMF_GET_ALT_SET 	enum 	EMMFunctions, 0x5b00	; 4.0
    EMF_SET_ALT_SET 	enum 	EMMFunctions, 0x5b01	; 4.0
    EMF_GET_ALT_SET_SAVE_SIZE enum EMMFunctions, 0x5b02 ; 4.0
    EMF_ALLOC_ALT_SET 	enum 	EMMFunctions, 0x5b03	; 4.0
    EMF_FREE_ALT_SET 	enum 	EMMFunctions, 0x5b04	; 4.0
    EMF_ALLOC_DMA_SET	enum	EMMFunctions, 0x5b05	; 4.0
    EMF_ENABLE_DMA_SET	enum	EMMFunctions, 0x5b06	; 4.0
    EMF_DISABLE_DMA_SET	enum	EMMFunctions, 0x5b07	; 4.0
    EMF_FREE_DMA_SET	enum	EMMFunctions, 0x5b08	; 4.0
    EMF_PREPARE_FOR_WARM_BOOT enum EMMFunctions, 0x5c00	; 4.0
    EMF_ENABLE_OS_FUNCS	enum	EMMFunctions, 0x5d00	; 4.0
    EMF_DISABLE_OS_FUNCS enum	EMMFunctions, 0x5d01	; 4.0
    EMF_GET_OS_KEY	enum	EMMFunctions, 0x5d02	; 4.0

EMM_INT		equ	67h



EMMAddr		struct
    EMMA_type	byte		; 0 => conventional, 1 = expanded
    EMMA_handle	word		; handle, if expanded
    EMMA_addr	fptr		; segment:offset if conventional
    				; bank:offset if expanded.
EMMAddr		ends

EMMMoveParams	struct
    EMMMP_length	sdword
    EMMMP_source	EMMAddr
    EMMMP_dest		EMMAddr
EMMMoveParams	ends

EMMGetBanks	struct
    EMMGB_physicalPageSegment	sptr	;The segment of the physical page...
    EMMGB_physicalPageNumber	word	;...corresponding with this number
EMMGetBanks	ends

EMMGetAllHandlePages	struct
	EMMGAHP_emmHandle	word
	; An open EMM handle

	EMMGAHP_pagesOwned	word
	; Pages owned by the handle
EMMGetAllHandlePages	ends

PHYSICAL_PAGE_SIZE	equ	0x4000
MAX_PHYSICAL_PAGES	equ	(0x100000/PHYSICAL_PAGE_SIZE)
MAX_EMM_HANDLES		equ	256
EMM_HANDLE_NAME_SIZE	equ	8

UNMAP_BANK		equ	0xffff
; The value to pass to EMF_MAP_BANK to unmap all memory from the passed
; physical bank  
