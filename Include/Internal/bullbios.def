COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1992 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		Bullet
FILE:		bullbios.def

AUTHOR:		Jeremy Dashe, Oct  7, 1993

	
REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	jeremy	10/ 7/93		Initial revision


DESCRIPTION:
	This file contains interesting Bullet hardware-specific
	constants.
		
	$Id: bullbios.def,v 1.1 97/04/04 14:15:23 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

SetDef __BULLBIOS

BULLET_ADDR_REGISTER		equ	0x006c		
BULLET_DATA_REGISTER		equ	0x006e

BULLET_NUMBER_OF_HANDLES	equ	2500
;
; The Bullet XIP'ed kernel is approximately 265,000 bytes, so it requires
; 14 16K segments.  The current memory map has available 16K chunk at DC00,
; a 64K chunk at C000, and everything from B400 down, with the exception of
; 5000K reserved for Vadem's BIOS.
;
; Constants used for banking geos.c0 into memory
;
BULLET_1ST_KERNEL_EMS_SEGMENT		equ	0xdc	; high byte of segment
BULLET_NUM_1ST_KERNEL_EMS_WINDOWS	equ	1	; geos.c0 = 16K
;
; Constants used for banking geos.c1 into memory
;
BULLET_2ND_KERNEL_EMS_SEGMENT		equ	0xc0	; high byte of segment
if	FULL_EXECUTE_IN_PLACE
    BULLET_NUM_2ND_KERNEL_EMS_WINDOWS	equ	2
    BULLET_NUM_3RD_KERNEL_EMS_WINDOWS	equ	8	;
else
    BULLET_NUM_2ND_KERNEL_EMS_WINDOWS	equ	4	; geos.c1 = 64K
    BULLET_NUM_3RD_KERNEL_EMS_WINDOWS	equ	9	; geos.c2 ~ 144K
endif
;
; Constants used for banking geos.c2 into memory.  We use some upper
; conventional memory banks for XIP.  If these change, update the
; BULLET_XIP_UPPER_MEMORY_* equates below.
;

BULLET_TOP_OF_3RD_KERNEL_EMS_SEGMENT	equ	0xb4	; top of geos.c2
BULLET_3RD_KERNEL_EMS_SEGMENT		equ 	\
	BULLET_TOP_OF_3RD_KERNEL_EMS_SEGMENT - 	\
	BULLET_NUM_3RD_KERNEL_EMS_WINDOWS * 4		; start of geos.c2

;
; These constants are used to map the upper memory banks back to RAM,
; or wherever they were before.
;
if	FULL_EXECUTE_IN_PLACE
; The # 16K pages from the top of memory (0xa000) to the bottom of the
; lowest kernel EMS segment
BULLET_NUM_16K_PAGES	equ	(0xa0 - BULLET_3RD_KERNEL_EMS_SEGMENT)/4
else
BULLET_NUM_16K_PAGES	equ	BULLET_NUM_3RD_KERNEL_EMS_WINDOWS
endif

BulletPageMap	struct
	BPM_ems_segment		byte		; The segment being mapped
	BPM_original_segment	word		; The VG230's mapping pointer
BulletPageMap	ends


;
; This is where to look for a pointer to Vadem's 5K XBIOS writable area.
; If this changes, update Kernel/Boot/bootBoot.asm.
;
BULLET_XBIOS_RAM_POINTER		equ	40eh

;;;
;;; This space is needed by Vadem for socket services and the BIOS password.  
;;; MAKE SURE THEY USE NO MORE THAN 5K. (5K = 1400h).  Also must be EVEN.
;;; If this changes, UPDATE Kernel/Boot/bootBoot.asm.
;;;
BULLET_XBIOS_BUFFER_SIZE		equ	1400h
CheckHack <BULLET_XBIOS_BUFFER_SIZE le 1400h>
CheckHack <(BULLET_XBIOS_BUFFER_SIZE and 1) ne 1>

BULLET_HEAPSPACE_RESERVED_FOR_BIOS	equ 	BULLET_XBIOS_BUFFER_SIZE / 16
					; # of paragraphs used by Vadem BIOS

BULLET_TOP_OF_HEAP		equ	(BULLET_3RD_KERNEL_EMS_SEGMENT shl 8) \
					- BULLET_HEAPSPACE_RESERVED_FOR_BIOS
					; top of heap adjusted for Vadem BIOS

;
; This is the location of the first kernel segment in the ROM image.
; The high nybble of the high byte of the word -- b0 -- points to ROM;
; the low nybble of the high byte and the entire low byte (12 bits
; altogether) indicate which 16K page in ROM to point to.
;
BULLET_ROM_KERNEL_SEGMENT	equ	0xb01e 	; 01e == the 30th 16K page.
BULLET_ROM_AREA			equ	0xb0

BULLET_BANK_SIZE		equ	0x4000		; 16K bytes

BULLET_BIOS_READ_CMOS_WORD	equ	10h
BULLET_BIOS_WRITE_CMOS_WORD	equ	11h
BULLET_BIOS_INTERRUPT		equ	1ah

BULLET_MIN_RAMDISK_PAGES	equ	8		; 128K ramdisk
BULLET_GET_RAMDISK_PAGES	equ	1ch		; Ramdisk pages byte

BULLET_PASSWORD_ENABLE		equ	80h		; Password enable bit
BULLET_CMOS_SYSTEM_STATUS	equ	24h		; System status byte
