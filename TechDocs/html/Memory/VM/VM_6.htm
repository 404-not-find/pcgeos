<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: VM_6.htm,v 1.1 97/06/02 15:54:35 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> VM File Attributes</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="subsectionTitle">
<A HREF="index.htm">Virtual Memory</A>: 2.4 <A HREF="VM_2.htm">VM Structure</A>: 
VM File Attributes</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="VM_2.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="VM_5.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">2.3 Virtual Memory Blocks</A> 
<!-- to next --> | <A HREF="VM_7.htm"><IMG SRC="../../docImages/nextUp.gif" BORDER="0" ALT="Next: ">3 Using Virtual Memory</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<PRE>VMAttributes</PRE>
<P>
<A NAME="IX_VMA_&ldots;">
 </A>
<A NAME="IX_VMAttributes">
 </A>
Each VM file has a set of attributes which determine how the VM Manager treats the file. These attributes are specified by a set of <CODE>
VMAttributes</CODE>
 flags. When a VM file is created, all of these attributes are off; after a file has been created, you can change the attributes with <CODE>
VMSetAttributes()</CODE>
 (see <A HREF="VM_a.htm#95629"> Changing VM File Attributes</A>
). The following flags are available:</P>
<DL>
<DT>
VMA_SYNC_UPDATE</DT><DD>
<A NAME="26076">
 </A>
Allow synchronous updates only. Instructs VM Manager to update the file only when you call un updating routine (<CODE>
VMUpdate()</CODE>
, <CODE>
VMSave()</CODE>
, etc.). This attribute is <EM>
off</EM>
 by default (indicating that the VM manager should feel free to update blocks whenever they are unlocked). You should set this attribute if the file might not be in a consistent state every time a block is unlocked.</DD>
<DT>
VMA_BACKUP</DT><DD>
Maintain a backup copy of all data. The file can then be restored to its last stored state. This is described above.</DD>
<DT>
VMA_OBJECT_RELOC</DT><DD>
Use the built-in object relocation routines. This attribute must be set if the VM file contains object blocks.</DD>
<DT>
VMA_NOTIFY_DIRTY</DT><DD>
If this attribute is set, the VM Manager will notify all threads which have the VM file open when the file changes from clean to dirty. It notifies threads by sending a <CODE>
MSG_META_VM_FILE_DIRTY</CODE>
 to each process that has the file open. (This message is defined for <CODE>
MetaClass</CODE>
, so any object can handle it.)</DD>
<DT>
VMA_NO_DISCARD_IF_IN_USE</DT><DD>
If this attribute is set, the VM manager will not discard LMem blocks of type LMEM_TYPE_OBJ_BLOCK if <CODE>
OLMBH_inUseCount</CODE>
 is non-zero. This attribute must be set if the file contains object blocks. If this attribute is set, each object block will be kept in memory as long as any thread is using an object in the block.</DD>
<DT>
VMA_COMPACT_OBJ_BLOCK</DT><DD>
If set, the VM manager will unrelocate generic-object blocks before writing them. It does this by calling <CODE>
CompactObjBlock()</CODE>
. This allows a VM file to contain generic object blocks.</DD>
<DT>
VMA_SINGLE_THREAD_ACCESS</DT><DD>
Set this if only a single thread will be accessing the file. This allows optimizations in <CODE>
VMLock()</CODE>
. This attribute must be set if the VM file contains object blocks.</DD>
<DT>
VMA_OBJECT_ATTRS</DT><DD>
This is not, strictly speaking, a VM attribute. Rather, it is a mask which combines the flags VMA_OBJECT_RELOC, VMA_NO_DISCARD_IF_IN_USE, and VMA_SINGLE_THREAD_ACCESS. All of these attributes must be set if the file contains object blocks. <A NAME="marker=377549">
 </A>
</DD>
</DL>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="VM_2.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="VM_5.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">2.3 Virtual Memory Blocks</A> 
<!-- to next --> | <A HREF="VM_7.htm"><IMG SRC="../../docImages/nextUp.gif" BORDER="0" ALT="Next: ">3 Using Virtual Memory</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
