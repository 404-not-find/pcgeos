<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: Memory_7.htm,v 1.1 97/06/02 15:51:29 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Requesting Memory</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="subsectionTitle">
<A HREF="index.htm">Memory Management</A>: 3.2 <A HREF="Memory_5.htm">Using Global Memory</A>: 
Requesting Memory</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="Memory_5.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Memory_6.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">3.1 Memory Etiquette</A> 
<!-- to next --> | <A HREF="Memory_8.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">3.3 Freeing Memory</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<PRE>MemAlloc(), MemAllocSetOwner(), MemReAlloc()</PRE>
<P>
When you need a block of raw memory, you must use one of the kernel's memory allocation routines. You also must use kernel memory routines to change the size of a block or to reallocate space for a discarded block.</P>
<P>
<CODE>
MemAlloc()</CODE>
<A NAME="IX_MemAlloc()">
 </A>
 creates a block and assigns a handle to it. The routine must be passed the size (in bytes) of the block to be allocated, along with the <CODE>
HeapAllocFlags</CODE>
 and <CODE>
HeapFlags</CODE>
 for that block. <CODE>
MemAlloc()</CODE>
 will set the block's owner as the owner of the thread that called it. It will return the handle of the newly-allocated block. </P>
<P>
<CODE>
MemAllocSetOwner()</CODE>
<A NAME="IX_MemAllocSetOwner()">
 </A>
 is the same as <CODE>
MemAlloc()</CODE>
, except that the caller explicitly sets the owner of the new block by passing the handle of the owning geode. Like <CODE>
MemAlloc()</CODE>
, it returns the handle of the new block. This is commonly used by drivers and shared libraries, which allocate memory owned by the geode which calls them. When the block's owner exits, the block will be freed, even if the block's creator is still running.</P>
<P>
If you request a fixed block or pass the flag HAF_LOCK, the block will be allocated locked on the heap. However, the routine will still return just the memory handle. To translate this handle to a pointer, call the routine <CODE>
MemDeref()</CODE>
. <CODE>
MemDeref()</CODE>
 is passed a block's handle and returns a pointer to the block (or a null pointer if the block has been discarded).</P>
<P>
<A NAME="IX_MemReAlloc()">
 </A>
To change the size of a block, call the routine <A NAME="41911">
 </A>
<CODE>
MemReAlloc()</CODE>
. This routine is also used to allocate memory for a block that has been discarded. The routine is passed the memory handle, the new size, and the <CODE>
HeapAllocFlags</CODE>
; it returns the block's memory handle. You can reallocate a fixed or locked block; however, the block may be moved on the global heap to satisfy the request. (This is the only way a fixed block can move.) As with <CODE>
MemAlloc()</CODE>
, you can request that the memory manager lock the block after reallocating it; you will then have to call <CODE>
MemDeref()</CODE>
 to get the address of the block. Note that if the new size is <EM>
smaller</EM>
 than the original size, the routine is guaranteed to succeed, and the block will not move from its current position. Reallocating a block to zero bytes discards the block but preserves its handle; the block can then be reallocated later.</P>
<P>
If the memory manager is unable to accommodate a request, it will return an error condition. The requestor can prevent error messages by passing the flag HAF_NO_ERR; this will result in a system error if the memory cannot be allocated. Passing HAF_NO_ERR is therefore strongly discouraged.</P>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="Memory_5.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Memory_6.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">3.1 Memory Etiquette</A> 
<!-- to next --> | <A HREF="Memory_8.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">3.3 Freeing Memory</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
