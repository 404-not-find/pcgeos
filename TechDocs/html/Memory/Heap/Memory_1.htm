<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: Memory_1.htm,v 1.1 97/06/02 15:50:58 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Design Philosophy</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="sectionTitle">
<A HREF="index.htm">Memory Management</A>: 1 
Design Philosophy</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="index.htm"><IMG SRC="../../docImages/prevUp.gif" BORDER="0" ALT="Prev: ">Memory Management</A> 
<!-- to next --> | <A HREF="Memory_2.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">2 The Structure of Memory</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<P>
Some systems make each application maintain and manage its own memory. In a multitasking system, this is not only difficult and time-consuming but also potentially dangerous, as applications can easily start trashing memory used by other processes. GEOS protects and relieves applications by providing comprehensive memory management.</P>
<P>
The GEOS memory management system is designed to meet rigorous demands. Some of the requirements are</P>
<UL>
<LI>
Independence of memory location<BR>
Ideally, an application should not have to keep track of the address of each of its data items; rather, the memory management system should allow the application to reference its memory virtually.</LI>
<LI>
Hardware independence<BR>
Applications are much easier to write and maintain if they can ignore hardware specifics. An application should be able to specify its memory requirements in generic terms (&quot;I need a package this big which behaves in this way&quot;) and let the memory manager worry about where it comes from.</LI>
<LI>
Efficient use of memory<BR>
A good operating system should be able to rearrange memory in order to gather as much space as possible. It should also be able to discard certain data or copy it to mass-storage devices (like a hard disk) if more memory is needed.</LI>
<LI>
Management of Shared Data<BR>
Applications should be able to share common data or code. In a multitasking system, proper synchronization of shared resources is essential to maintain data integrity.</LI>
</UL>
<P>
The GEOS memory manager meets all of these needs. Applications often take advantage of the memory manager without trying; for example, the memory manager swaps methods into memory when messages need to be handled. Applications can also request memory at run-time, either by requesting raw memory from the memory manager, or by creating Virtual Memory files through the VM library (see <A HREF="../../Memory/VM/index.htm">the VM chapter</A>).</P><HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="index.htm"><IMG SRC="../../docImages/prevUp.gif" BORDER="0" ALT="Prev: ">Memory Management</A> 
<!-- to next --> | <A HREF="Memory_2.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">2 The Structure of Memory</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
