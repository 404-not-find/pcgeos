<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: GenView_12.htm,v 1.1 97/06/02 16:30:05 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Document and View Size</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="subsectionTitle">
<A HREF="index.htm">GenView</A>: 4.4 <A HREF="GenView_e.htm">Advanced Concepts and Uses</A>: 
<A NAME="80151">
 </A>
Document and View Size</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="GenView_e.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="GenView_11.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">4.3 Drawing the Document</A> 
<!-- to next --> | <A HREF="GenView_13.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">4.5 Document Scaling</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<P>
Typically, the document's size will be independent of the view's size. The visual relationship between the two is maintained with the use of scrollers. In these situations, the view will size itself according to the size of its parent Primary window. However, you can change the sizing behavior of the view simply by setting attributes or applying hints.</P>

<H2 CLASS="HeadingC">
Setting the View's Size</H2>
<PRE>HINT_INITIAL_SIZE, HINT_MINIMUM_SIZE, HINT_MAXIMUM_SIZE, HINT_FIXED_SIZE</PRE>
<P>
Although the view normally sizes itself to fit the specifications of its parent window, you can change this behavior by applying one of four hints or by setting vertical or horizontal attributes.</P>
<UL>
<LI>
<CODE>
HINT_INITIAL_SIZE<BR>
</CODE>
This hint sets the initial size of the view to a given width and height. The view window will never shrink smaller than the size set with this hint.</LI>
<LI>
<CODE>
HINT_MINIMUM_SIZE<BR>
</CODE>
This hint sets the smallest possible size of the view window. The view's initial size is unaffected by this hint except to ensure that the parent Primary opens large enough to accommodate the view window.</LI>
<LI>
<CODE>
HINT_MAXIMUM_SIZE<BR>
</CODE>
This hint sets the maximum allowable size of the view window. This may be used in place of or in addition to the document bounds.</LI>
<LI>
<CODE>
HINT_FIXED_SIZE<BR>
</CODE>
This hint has the effect of setting initial, minimum, and maximum sizes at once to set a permanent size for the view window.</LI>
</UL>
<P>
All the above hints deal with the structure <CODE>
CompSizeHintArgs</CODE>
. This structure allows specification of size in any of a number of different formats including pixels, percentage of screen size, multiples of character widths, number of text lines, and others.</P>
<P>
You may also set GVDA_NO_LARGER_THAN_CONTENT and/or GVDA_NO_SMALLER_THAN_CONTENT in the <CODE>
GVI_horizAttrs</CODE>
 and <CODE>
GVI_vertAttrs</CODE>
 attribute fields to ensure that the view stays with the content's size. These attributes can be set as follows:</P>
<PRE>GVI_horizAttrs = @default
                | GVDA_NO_LARGER_THAN_CONTENT
                | GVDA_NO_SMALLER_THAN_CONTENT;</PRE>
<PRE>GVI_vertAttrs = @default
                | GVDA_NO_LARGER_THAN_CONTENT
                | GVDA_NO_SMALLER_THAN_CONTENT;</PRE>
<P>
The above lines will ensure that the view will remain exactly the same size as the content (within screen boundaries).</P>
<P>
You can also instruct the view window to snap its width or height to a multiple of the current horizontal or vertical increment. To do this, set the <CODE>
GVI_vertAttrs</CODE>
 or <CODE>
GVI_horizAttrs</CODE>
 attribute GVDA_SIZE_A_MULTIPLE_OF_INCREMENT as below:</P>
<PRE>GVI_horizAttrs = @default
                | GVDA_SIZE_A_MULTIPLE_OF_INCREMENT;</PRE>
<PRE>GVI_vertAttrs = @default
                | GVDA_SIZE_A_MULTIPLE_OF_INCREMENT;</PRE>


<H2 CLASS="HeadingC">
Leaving Room for Scrollers</H2>
<PRE>HINT_VIEW_LEAVE_ROOM_FOR_VERT_SCROLLER, HINT_VIEW_LEAVE_ROOM_FOR_HORIZ_SCROLLER</PRE>
<P>
Occasionally, you may want to leave extra room for scroller objects even when your view will not have scrollers. You can do so with the hints <CODE>
HINT_VIEW_LEAVE_ROOM_FOR_VERT_SCROLLER</CODE>
<A NAME="IX_HINT_VIEW_LEAVE_ROOM_FOR_VERT_SCROLLER">
 </A>
 and <CODE>
HINT_VIEW_LEAVE_ROOM_FOR_HORIZ_SCROLLER</CODE>
<A NAME="IX_HINT_VIEW_LEAVE_ROOM_FOR_HORIZ_SCROLLER">
 </A>
. Although these hints will not affect the size of the view's window, they will affect the view's geometry with respect to its parent window.</P>


<H2 CLASS="HeadingC">
Adjusting the view's Size</H2>
<PRE>MSG_GEN_VIEW_CALC_WIN_SIZE</PRE>
<P>
When determining its size initially, the view sends itself the message <CODE>
MSG_GEN_VIEW_CALC_WIN_SIZE</CODE>
. This message, while not useful to applications in and of itself, may be subclassed to get special window sizing behavior. When this message is sent, it includes a suggested window size; by subclassing the GenView and altering the functionality of this message, you can return a different suggested size. The new suggestion will be used to set the view's new size, except at very small sizes--the view will make itself large enough to show scrollers and other children if required.</P>

<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_VIEW_CALC_WIN_SIZE">
 </A>
MSG_GEN_VIEW_CALC_WIN_SIZE</H4>
<PRE CLASS="syntax">SizeAsDWord MSG_GEN_VIEW_CALC_WIN_SIZE(
        word	width,		/* suggested new width of view window */
        word	height);		/* suggested new height of view window */</PRE>
<P>
This message is sent by the view to itself when it is first being initialized. It takes a suggested size and returns a new suggested size, adjusted for specific conditions.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any GenView object.</P>
<P CLASS="refField">
Parameters:	<CODE>
width</CODE>
	The new suggested width of the view window.</P>
<DL>
<DT>
<CODE>
height</CODE>
</DT><DD>The new suggested height of the view window.</DD>
</DL>
<P CLASS="refField">
Return:	A dword representing both the height and the width determined by the method. The width occupies the low word, and the height occupies the high word.</P>
<P CLASS="refField">
Interception:	If you require special sizing behavior from your GenView window, subclass this method. Be sure to call the superclass in the handler.</P>


<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="GenView_e.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="GenView_11.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">4.3 Drawing the Document</A> 
<!-- to next --> | <A HREF="GenView_13.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">4.5 Document Scaling</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
