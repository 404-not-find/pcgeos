<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: VisClass_15.htm,v 1.1 97/06/02 16:49:37 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Visible Object Window Operations</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="subsectionTitle">
<A HREF="index.htm">VisClass</A>: 5.5 <A HREF="VisClass_10.htm">Working with Visible Object Trees</A>: 
Visible Object Window Operations</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="VisClass_10.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="VisClass_14.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">5.4 Sending Messages Through the Tree</A> 
<!-- to next --> | <A HREF="VisClass_16.htm"><IMG SRC="../../docImages/nextUp.gif" BORDER="0" ALT="Next: ">6 Visible Layers and 32-Bit Graphics</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<PRE>MSG_VIS_OPEN_WIN, MSG_VIS_CLOSE_WIN, MSG_VIS_WIN_ABOUT_TO_BE_CLOSED, MSG_VIS_MOVE_RESIZE_WIN</PRE>
<P>
<A NAME="IX_Windows:specific ui operations">
 </A>
Typically, windows will be managed entirely by generic UI objects and the Specific UI library currently in use. You can, however, manage your own <CODE>
VisClass</CODE>
-based window objects by using messages normally used only by Specific UI objects. This is a difficult and complex task, however, and it is not recommended. The four messages used for this purpose are detailed below.</P>

<H4 CLASS="RefETitle">
<A NAME="IX_MSG_VIS_OPEN_WIN">
 </A>
MSG_VIS_OPEN_WIN</H4>
<PRE CLASS="syntax">void	MSG_VIS_OPEN_WIN(
        WindowHandle parentWindow);</PRE>
<P>
This message is sent to a window or portal object to open its window. The graphics window will be opened and drawn on the screen, and a visual update will propagate down the displayed visible tree.</P>
<P CLASS="refField">
Source:	Visual update mechanism.</P>
<P CLASS="refField">
Destination:	A window group (VTF_IS_WINDOW) or portal (VTF_IS_PORTAL) object.</P>
<P CLASS="refField">
Parameters:	<CODE>
parentWindow</CODE>
	The window handle of the open window in which the new window will be created.</P>
<P CLASS="refField">
Return:	Nothing.</P>
<P CLASS="refField">
Interception:	The window group or portal must intercept in order to open the new graphics window and set initial parameters (<CODE>
VCI_window</CODE>
).</P>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_VIS_CLOSE_WIN">
 </A>
MSG_VIS_CLOSE_WIN</H4>
<PRE CLASS="syntax">void	MSG_VIS_CLOSE_WIN();</PRE>
<P>
This message is sent to a window or portal object that has its graphics window currently on the screen. The window and its visible branch will be closed (taken off the screen).</P>
<P CLASS="refField">
Source:	Visual update mechanism.</P>
<P CLASS="refField">
Destination:	A window group (VTF_IS_WINDOW) or portal (VTF_IS_PORTAL) object.</P>
<P CLASS="refField">
Interception:	The window group or portal may intercept if more needs to be done than simply closing the graphics window.</P>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_VIS_WIN_ABOUT_TO_BE_CLOSED">
 </A>
MSG_VIS_WIN_ABOUT_TO_BE_CLOSED</H4>
<PRE CLASS="syntax">void	MSG_VIS_WIN_ABOUT_TO_BE_CLOSED();</PRE>
<P>
This message notifies the recipient that the window it's displayed in is about to be closed. The default handler for this will remove the visible branch of the window off the screen so no redraws will occur before the window closes.</P>
<P CLASS="refField">
Source:	Visual update mechanism.</P>
<P CLASS="refField">
Destination:	The window group (VTF_IS_WINDOW) or portal (VTF_IS_PORTAL) object that is being closed; the message will then propagate down the visible tree.</P>
<P CLASS="refField">
Interception:	May be intercepted by either the window group or the VisContent object if the default behavior is not appropriate for the object.</P>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_VIS_MOVE_RESIZE_WIN">
 </A>
MSG_VIS_MOVE_RESIZE_WIN</H4>
<PRE CLASS="syntax">void	MSG_VIS_MOVE_RESIZE_WIN();</PRE>
<P>
This message causes the window object to move and/or resize itself based on the bounds of its content object. This message is used only by window or portal objects and is rarely, if ever, used by objects in your applications.</P>
<P CLASS="refField">
Source:	Part of the visual update mechanism--typically called by the window object on itself in its <CODE>
MSG_VIS_UPDATE_WINDOWS_AND_IMAGE</CODE>
 handler.</P>
<P CLASS="refField">
Destination:	The window group (VTF_IS_WINDOW) or portal (VTF_IS_PORTAL) object to be resized or moved.</P>
<P CLASS="refField">
Interception:	The window object may intercept if it does not want to resize to the bounds of its content object.</P>

<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="VisClass_10.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="VisClass_14.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">5.4 Sending Messages Through the Tree</A> 
<!-- to next --> | <A HREF="VisClass_16.htm"><IMG SRC="../../docImages/nextUp.gif" BORDER="0" ALT="Next: ">6 Visible Layers and 32-Bit Graphics</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
