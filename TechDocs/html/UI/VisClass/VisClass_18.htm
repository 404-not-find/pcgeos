<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: VisClass_18.htm,v 1.1 97/06/02 16:49:58 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Using 16-Bit Drawing Commands</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="subsectionTitle">
<A HREF="index.htm">VisClass</A>: 6.2 <A HREF="VisClass_16.htm">Visible Layers and 32-Bit Graphics</A>: 
Using 16-Bit Drawing Commands</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="VisClass_16.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="VisClass_17.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">6.1 Using Visible Document Layers</A> 
<!-- to next --> | <A HREF="VisClass_19.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">6.3 The 16-Bit Limit on Visual Bounds</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<P>
<A NAME="IX_Drawing:in 16 bits">
 </A>
All the GEOS drawing commands are based on 16-bit coordinates. Drawing may only occur within a 16-bit graphics space. The graphics system does, however, support extended translations of the 16-bit graphics space within 32-bit coordinates.</P>
<P>
This means that you can think of the large document space as a number of smaller, 16-bit &quot;local&quot; graphics spaces. When you need to draw anything, you first use an extended translation to get near your drawing point in the large document. Then you can draw using 16-bit offsets from the point to which you translated. </P>
<P>
The application using the extended translation can do so in two different ways: It can store a 32-bit translation with each visible object, or it can store a 32-bit translation in a visible composite, thereby making the entire visible branch under the composite in a 32-bit graphics space. Visible trees implementing layer objects must use the second option; the layer must contain the translation for the entire visible branch that it manages. If a simple large visible tree does not need layers, it may wish to use the first solution.</P>
<P>
The first of the two solutions is simple but takes up additional memory and time; each object, when it draws, must translate the coordinates, draw, then translate back. Two translations for each object could significantly affect drawing performance unless visual updates are handled carefully.</P>
<P>
The other solution, storing a translation in the composite object, requires just two translations for the entire branch headed by the composite. Whenever the composite receives <CODE>
MSG_VIS_DRAW</CODE>
 or <CODE>
MSG_VIS_VUP_CREATE_GSTATE</CODE>
, it executes the translation on the GState. As long as the translation is always relative to the GState's current transformation (done using <CODE>
GrApplyTranslationDWord()</CODE>
), and as long as the translation is undone before the GState is returned to the caller, drawing will be done properly.</P>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="VisClass_16.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="VisClass_17.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">6.1 Using Visible Document Layers</A> 
<!-- to next --> | <A HREF="VisClass_19.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">6.3 The 16-Bit Limit on Visual Bounds</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
