<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: VisClass_1c.htm,v 1.1 97/06/02 16:50:17 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Handling Mouse Events</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="subsectionTitle">
<A HREF="index.htm">VisClass</A>: 6.6 <A HREF="VisClass_16.htm">Visible Layers and 32-Bit Graphics</A>: 
Handling Mouse Events</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="VisClass_16.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="VisClass_1b.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">6.5 Managing 32-Bit Geometry</A> 
<!-- to next --> | <A HREF="VisClass_1d.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">6.7 Setting Up the Objects</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<P>
<A NAME="IX_Input:large mouse input;Mouse:in 32 bits">
 </A>
The GenView is built to support large documents, though its default is normal-sized documents. Thus, you can request the view to send large mouse events, which carry with them 32 bits of integer and 16 bits of fraction in each dimension. The visible classes have no default handlers for these messages, so your own classes will have to handle them appropriately.</P>
<P>
The large mouse events are the equivalent of their 16-bit counterparts. They just carry different data to represent the coordinates of the pointer. All the mouse events, both large and normal, are described in <A HREF="../../SysObjects/Input/index.htm">the Input chapter</A>.</P><P>
Normal composite objects will not be affected by large mouse events; the composite will continue to send the event on to the proper child as if it were in a 16-bit document. Layer and content objects, however, must process these messages differently.</P>
<P>
If no object within the visible tree has the mouse grabbed, the content of the tree must decide which layer object should receive the mouse events. How the content and layer objects negotiate this is up to the particular application; some applications may consider that one layer is &quot;on top of&quot; the others, and other applications may determine which layer is the most appropriate based on the event context. By default, the large mouse events are passed by <CODE>
VisContentClass</CODE>
 straight on to the first layer child. If you want a more complex scheme, you will have to subclass <CODE>
VisContentClass</CODE>
 and intercept these messages.</P>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="VisClass_16.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="VisClass_1b.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">6.5 Managing 32-Bit Geometry</A> 
<!-- to next --> | <A HREF="VisClass_1d.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">6.7 Setting Up the Objects</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
