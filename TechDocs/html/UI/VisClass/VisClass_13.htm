<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: VisClass_13.htm,v 1.1 97/06/02 16:49:25 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Getting Visible Tree Information</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="subsectionTitle">
<A HREF="index.htm">VisClass</A>: 5.3 <A HREF="VisClass_10.htm">Working with Visible Object Trees</A>: 
Getting Visible Tree Information</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="VisClass_10.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="VisClass_12.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">5.2 Adding and Removing</A> 
<!-- to next --> | <A HREF="VisClass_14.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">5.4 Sending Messages Through the Tree</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<PRE><A NAME="Objects"> </A>MSG_VIS_FIND_CHILD, MSG_VIS_FIND_CHILD_AT_POSITION, MSG_VIS_COUNT_CHILDREN, MSG_VIS_FIND_PARENT</PRE>
<P>
When an application manages a visible object tree, it will most likely need to find children, count children, or get the optr of a particular object in the tree. <CODE>
VisClass</CODE>
 offers four messages to provide this bookkeeping information. These four messages are listed below.</P>

<H4 CLASS="RefETitle">
<A NAME="IX_MSG_VIS_FIND_CHILD">
 </A>
MSG_VIS_FIND_CHILD</H4>
<PRE CLASS="syntax">word	MSG_VIS_FIND_CHILD(
        optr	object);</PRE>
<P>
This message returns the zero-based position of the specified child among the parent's children.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any visible composite object.</P>
<P CLASS="refField">
Parameters:	<CODE>
object</CODE>
	The optr of the child to be found.</P>
<P CLASS="refField">
Return:	The zero-based position of the child in the parent's child list. (E.g., the first child returns zero, the second child returns one, the third child returns two, etc.) If <CODE>
object</CODE>
 is not the optr of one of the composite's children, the value -1 will be returned. If sent to a non-composite object, the message will also return -1.</P>
<P CLASS="refField">
Interception:	Unlikely.</P>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_VIS_FIND_CHILD_AT_POSITION">
 </A>
MSG_VIS_FIND_CHILD_AT_POSITION</H4>
<PRE CLASS="syntax">optr	MSG_VIS_FIND_CHILD_AT_POSITION(
        word	position);</PRE>
<P>
This message returns the optr of the child occupying the <CODE>
position</CODE>
 specified among the recipient's children.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any visible composite object.</P>
<P CLASS="refField">
Parameters:	<CODE>
position</CODE>
	The zero-based position of the child whose optr is to be returned.</P>
<P CLASS="refField">
Return:	The optr of the child occupying the passed <CODE>
position</CODE>
. If no child occupies that position, or if the message is sent to a non-composite object, the retuned value will be NullOptr.</P>
<P CLASS="refField">
Interception:	Unlikely.</P>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_VIS_COUNT_CHILDREN">
 </A>
MSG_VIS_COUNT_CHILDREN</H4>
<PRE CLASS="syntax">word	MSG_VIS_COUNT_CHILDREN();</PRE>
<P>
This message returns the number of children the recipient object has. The count is not zero-based; if a composite has five children, this message will return five.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any visible composite object.</P>
<P CLASS="refField">
Parameters:	None.</P>
<P CLASS="refField">
Return:	The number of children the object has. If the object has no children (includes non-composite objects), the return will be zero.</P>
<P CLASS="refField">
Interception:	Unlikely.</P>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_VIS_FIND_PARENT">
 </A>
MSG_VIS_FIND_PARENT</H4>
<PRE CLASS="syntax">optr	MSG_VIS_FIND_PARENT();</PRE>
<P>
This message returns the optr of the recipient's parent composite.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any visible composite object.</P>
<P CLASS="refField">
Parameters:	None.</P>
<P CLASS="refField">
Return:	The optr of the object's parent composite. If the message is sent to the top node of a visible tree, the return value will be NullOptr.</P>
<P CLASS="refField">
Interception:	Unlikely.</P>
<P CLASS="refField">
Tips:	If you want to send a message to your parent, use the <CODE>
@visParent</CODE>
 macro defined in the next section.</P>

<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="VisClass_10.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="VisClass_12.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">5.2 Adding and Removing</A> 
<!-- to next --> | <A HREF="VisClass_14.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">5.4 Sending Messages Through the Tree</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
