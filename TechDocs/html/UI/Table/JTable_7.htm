<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: JTable_7.htm,v 1.1 97/06/02 16:40:27 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Using a Table Object</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="sectionTitle">
<A HREF="index.htm">The Table Objects</A>: 4 
Using a Table Object</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> | <A HREF="JTable_8.htm"><IMG SRC="../../docImages/down.gif" BORDER="0" ALT="Down"></A> 
<!-- to previous --> | <A HREF="JTable_3.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">3 TableClass Instance Data</A> 
<!-- to next --> | <A HREF="JTable_10.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">5 TableContentClass</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<P>
The Table object is designed to be easy to use. You cannot use a <CODE>
TableClass</CODE>
 object directly; you will need to define a subclass of <CODE>
TableClass</CODE>
 in order to intercept certain required messages. You will also need to set a few instance fields when you define the Table in your source code.</P>
<P>
The Table object must appear within a TableContent object. If it is within a regular VisContent, crashes may result.</P>
<P>
When you create a Table object, you will need to set the following instance data fields (the other fields may be left with there default values):</P>
<DL>
<DT>
TI<CODE>
_rows</CODE>
</DT><DD>This is the number of rows in the <CODE>
Table</CODE>
. You may set this field to zero. (You can add and remove rows at run-time.) For more information, see <A HREF="JTable_6.htm#97804"> Working with Rows</A>
.</DD>
<DT>
TI<CODE>
_columns </CODE>
</DT><DD>This is the number of columns in the <CODE>
Table</CODE>
. This must be at least one. You cannot currently add or remove columns at run-time. For more information, see <A HREF="JTable_5.htm#59451"> Defining Columns</A>
.</DD>
<DT>
TI<CODE>
_visibleRows</DT><DD>
</CODE>
This is the number of rows visible on-screen at any one time; thus, this field, together with TI<CODE>
_rowHeight</CODE>
, define the height of a <CODE>
Table</CODE>
 object. This field must be at least 1.</DD>
<DT>
TI<CODE>
_columnDefinitions</DT><DD>
</CODE>
This is the handle of a chunk containing an array of <CODE>
TableColumnDefinition</CODE>
 structures, which specify the properties of the <CODE>
Table</CODE>
's columns. For more information, see <A HREF="JTable_5.htm#59451"> Defining Columns</A>
.</DD>
<DT>
TI<CODE>
_rowHeight</CODE>
</DT><DD>
This is the height of a row in points (72 points = 1 inch, so 28.3 points ª 1 centimeter). This must be larger than zero.</DD>
</DL>
<P>
In order to use a <CODE>
TableClass</CODE>
 object, you must define handlers for a few messages. As a general rule, your handlers should call the <CODE>
TableClass</CODE>
 handlers after they take their actions; in some cases, your handlers's main role is to add extra data to the message, which will be interpreted by the default handler. </P>
<P>
You should define handlers for the following tasks:</P>
<UL>
<LI>
You must define a handler for <CODE>
MSG_TABLE_QUERY_DRAW</CODE>
, which redraws a specified cell to a GState. (The <CODE>
TableClass</CODE>
 object doesn't actually know what the contents of the cells are; it relies on your subclass's code to draw the cells.) For more information, see <A HREF="JTable_8.htm#58532"> Drawing Cells</A>
.</LI>
<LI>
You may wish to define a handler for <CODE>
MSG_TABLE_SELECT</CODE>
. This will let you know when the user has selected a cell; you can perform appropriate actions, and decide whether to call the default handler (which highlights the selection and performs other selection actions). For more information, see <A HREF="JTable_9.htm#63407"> Selecting Cells</A>
.</LI>
<LI>
You should provide handlers for <CODE>
MSG_TABLE_START_EDIT_CELL_TEXT</CODE>
 and <CODE>
MSG_TABLE_DONE_EDIT_CELL_TEXT</CODE>
. These messages let the user edit the text in <CODE>
Table</CODE>
 cells. By subclassing the messages, you can provide the current cell contents for the user to edit, and store the user's text after he or she has finished entering it. For more information, see <A HREF="JTable_a.htm#33610"> Editing Cells</A>
.</LI>
<LI>
The <CODE>
Table</CODE>
 object supports drag-and-drop copying. However, it does not actually know what the cells contain, so it can't perform the copying itself. Instead, when the user performs a drag-and-drop operation, the <CODE>
Table</CODE>
 object sends <CODE>
MSG_TABLE_DRAG_DROP_COMPLETE</CODE>
; the application should intercept the message, and do any appropriate copying of data. For more information, see <A HREF="JTable_b.htm#58099"> Dragging and Dropping</A>
.</LI>
<LI>
You may want to implement your own custom scrolling behavior. (<CODE>
TableClass</CODE>
 supports auto-scrolling with the addition of the TF_ENABLE_AUTO_SCROLLING flag; auto scrolling does not, however, provide any visual UI (such as scroll buttons) to enable scrolling.) If you want custom scrolling behavior, you will need to implement scroll buttons in your TableView and appropriate messages to your Table object (such as <CODE>
MSG_TABLE_SCROLL_SINGLE_UP</CODE>
 and <CODE>
MSG_TABLE_SCROLL_SINGLE_DOWN)</CODE>
. For more information, see <A HREF="JTable_c.htm#13991"> Custom Scrolling Behavior</A>
.</LI>
<LI>
If you link a Locator object to your Table (see <A HREF="JTable_13.htm#60877"> LocatorClass</A>
) you will want to intercept <CODE>
MSG_TABLE_CHAR_LOCATE</CODE>
 and <CODE>
MSG_TABLE_STRING_LOCATE</CODE>
 to implement your own search methods. For more information, see <A HREF="JTable_d.htm#14433"> Handling Locator Searches</A>
.</LI>
<LI>
If you want to change your column definitions dynamically, you will need to define additional column definitions and switch which ones you use under the Table. There is no API currently for this behavior; you will need to write the messages and handle them yourself. This is discussed in <A HREF="JTable_f.htm#91726"> Changing Column Definitions</A>
.</LI>
</UL>
<P CLASS="subsectionLink">
<A HREF="JTable_8.htm">Drawing Cells</A></P>
<P CLASS="subsectionLink">
<A HREF="JTable_9.htm">Selecting Cells</A></P>
<P CLASS="subsectionLink">
<A HREF="JTable_a.htm">Editing Cells</A></P>
<P CLASS="subsectionLink">
<A HREF="JTable_b.htm">Dragging and Dropping</A></P>
<P CLASS="subsectionLink">
<A HREF="JTable_c.htm">Custom Scrolling Behavior</A></P>
<P CLASS="subsectionLink">
<A HREF="JTable_d.htm">Handling Locator Searches</A></P>
<P CLASS="subsectionLink">
<A HREF="JTable_e.htm">Table Headings</A></P>
<P CLASS="subsectionLink">
<A HREF="JTable_f.htm">Changing Column Definitions</A></P>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> | <A HREF="JTable_8.htm"><IMG SRC="../../docImages/down.gif" BORDER="0" ALT="Down"></A> 
<!-- to previous --> | <A HREF="JTable_3.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">3 TableClass Instance Data</A> 
<!-- to next --> | <A HREF="JTable_10.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">5 TableContentClass</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
