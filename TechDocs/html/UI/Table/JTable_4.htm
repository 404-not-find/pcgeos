<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: JTable_4.htm,v 1.1 97/06/02 16:40:12 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Table Attributes</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="subsectionTitle">
<A HREF="index.htm">The Table Objects</A>: 3.1 <A HREF="JTable_3.htm">TableClass Instance Data</A>: 
<A NAME="64956">
 </A>
Table Attributes</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="JTable_3.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="JTable_3.htm"><IMG SRC="../../docImages/prevUp.gif" BORDER="0" ALT="Prev: ">3 TableClass Instance Data</A> 
<!-- to next --> | <A HREF="JTable_5.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">3.2 Defining Columns</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<PRE>TableFlags, TableBorderFlags, MSG_TABLE_SET_FLAGS, MSG_TABLE_GET_FLAGS, MSG_TABLE_SET_BORDER_FLAGS, MSG_TABLE_GET_BORDER_FLAGS</PRE>
<P>
There are a few attributes which apply to the entire <CODE>
Table</CODE>
. Ordinarily, you would set these up when you define the <CODE>
Table</CODE>
, and leave them unchanged; however, you can get or change these attributes at will, by sending messages.</P>
<P>
<A NAME="33796">
 </A>
Every <CODE>
Table</CODE>
 has a record of <CODE>
TableFlags</CODE>
, stored in the instance data field TI<CODE>
_tableFlags</CODE>
. This record contains the following flags:</P>
<DL>
<DT>
TF_MAIN_TABLE</DT><DD>
This flag indicates that this Table is the main (primary) table below the TableContent object. A Table marked with this flag will be the one that is sent scroll messages from the TableView. This is important if you use a separate <CODE>
TableClass</CODE>
 object to contain headers for your table. (See <A HREF="JTable_e.htm#35718"> Table Headings</A>
.)</DD>
<DT>
TF_INTERNAL_DRAG_DROP</DT><DD>
This flag should not be modified; it is internally managed. If this flag is set, this indicates that the Table is in drag-and-drop mode from one location in the Table to another location within that same Table; this lets the user copy one cell to another.The user does this by start-selecting the cell he or she wants to copy, and dragging (&quot;hold-selecting&quot;) the pointer to the new location, then releasing the pointer (&quot;end-selecting&quot;); the cell's contents will be copied to the new location. If TF_EXIT_DRAG_DROP_UPON_COMPLETION is set, the <CODE>
Table</CODE>
 will automatically clear TF_INTERNAL_DRAG_DROP after every drag-drop operation. (See <A HREF="JTable_b.htm#58099"> Dragging and Dropping</A>
.)</DD>
<DT>
TF_EXTERNAL_DRAG_DROP</DT><DD>
This flag should not be modified; it is internally managed. If this flag is set, this indicates that the Table is in drag-and-drop mode from a location outside the Table to another location within the Table.</DD>
<DT>
TF_ENABLE_AUTO_SCROLLING</DT><DD>
If this flag is set, the <CODE>
Table</CODE>
 will automatically scroll whenever the user clicks the pointer inside the <CODE>
Table</CODE>
 and drags it across the top or bottom boundary. This flag does not affect any other scrolling behavior you may have added to your Table (such as scroll buttons in the parent TableView).</DD>
<DT>
TF_SELECTION_ALWAYS_VISIBLE</DT><DD>
If this flag is set, a Table's selection will always remain visible when scrolling. Any scrolling that might move the current selection off-screen will result in the movement of the selection (row by row) to stay visible. In other words, this flag does not ensure that the current selection remains visible; it only ensures that a selection bar exists on-screen.</DD>
<DT>
TF_FIXED_SELECTION</DT><DD>
This flag is currently unsupported.</DD>
<DT>
TF_EXIT_DRAG_DROP_UPON_COMPLETION</DT><DD>
If this flag is set, when the user finishes a drag-and-drop operation, the <CODE>
Table</CODE>
 will automatically leave drag-and-drop mode, clearing TF_INTERNAL_DRAG_DROP. (See <A HREF="JTable_b.htm#58099"> Dragging and Dropping</A>
.) If you do not set this flag, once you begin a drag and drop operation, you will need to manually exit drag and drop by clearing the TF_INTERNAL_DRAG_DROP flag yourself. (This is not recommended.)</DD>
<DT>
TF_TARGETABLE</DT><DD>
If this flag is set, the Table object will grab the target whenever it receives a <CODE>
MSG_META_START_SELECT</CODE>
. Unless your Table is display-only, you will probably always want this flag set.</DD>
<DT>
TF_NOTIFY_SELECTION_CHANGED</DT><DD>
If this flag is set, the Table object will send itself <CODE>
MSG_TABLE_NOTIFY_SELECTION_CHANGED</CODE>
 whenever the stored selection value changes. If you wish to have that message sent (and intercept it) you must set this flag.</DD>
</DL>
<P>
You may set these bits in TI<CODE>
_tableFlags</CODE>
 when you define the table object in your source file. If you wish to change the <CODE>
TableFlags</CODE>
 record of an existing <CODE>
Table</CODE>
 object, you must do this by sending the object <CODE>
MSG_TABLE_SET_FLAGS</CODE>
, not by editing TI<CODE>
_tableFlags</CODE>
 directly. You can find out the current settings of <CODE>
TI_tableFlags</CODE>
 by sending <CODE>
MSG_TABLE_GET_FLAGS</CODE>
 to the <CODE>
Table</CODE>
 object.</P>
<P>
<A NAME="71402">
 </A>
Each table object also has a record of <CODE>
TableBorderFlags</CODE>
, stored in the instance data field TI<CODE>
_borderFlags</CODE>
. This record specifies what borders should be drawn around the <CODE>
Table</CODE>
. This record has the following flags:</P>
<DL>
<DT>
TBF_BOX_BORDERS</DT><DD>
If this flag is set, a box will be drawn around the entire portion of the <CODE>
Table</CODE>
 visible on-screen. Setting this flag is equivalent to setting TBF_TOP_BORDER, TBF_BOTTOM_BORDER, TBF_LEFT_BORDER, and TBF_RIGHT_BORDER.</DD>
<DT>
TBF_TOP_BORDER</DT><DD>
If this flag is set, a line will be drawn at the top border of the portion of the <CODE>
Table</CODE>
 visible on-screen.</DD>
<DT>
TBF_BOTTOM_BORDER</DT><DD>
If this flag is set, a line will be drawn at the bottom border of the portion of the <CODE>
Table</CODE>
 visible on-screen.</DD>
<DT>
TBF_LEFT_BORDER</DT><DD>
If this flag is set, a line will be drawn at the left border of the portion of the <CODE>
Table</CODE>
 visible on-screen.</DD>
<DT>
TBF_RIGHT_BORDER</DT><DD>
If this flag is set, a line will be drawn at the right border of the portion of the <CODE>
Table</CODE>
 visible on-screen.</DD>
<DT>
TBF_BOX_MARGINS</DT><DD>
If this flag is set, margins will be added around the entire portion of the <CODE>
Table</CODE>
 visible on-screen. Setting this flag is equivalent to setting TBF_TOP_MARGIN, TBF_BOTTOM_MARGIN, TBF_LEFT_MARGIN, and TBF_RIGHT_MARGIN.</DD>
<DT>
TBF_TOP_MARGIN</DT><DD>
If this flag is set, a margin will be added along the top border of the portion of the <CODE>
Table</CODE>
 visible on-screen.</DD>
<DT>
TBF_BOTTOM_MARGIN</DT><DD>
If this flag is set, a margin will be added along the bottom border of the portion of the <CODE>
Table</CODE>
 visible on-screen.</DD>
<DT>
TBF_LEFT_MARGIN</DT><DD>
If this flag is set, a margin will be added along the left border of the portion of the <CODE>
Table</CODE>
 visible on-screen.</DD>
<DT>
TBF_RIGHT_MARGIN</DT><DD>
If this flag is set, a margin will be added along the right border of the portion of the <CODE>
Table</CODE>
 visible on-screen.</DD>
</DL>
<P>
To find out what <CODE>
TableBorderFlags</CODE>
 are currently set, send MSG_TABLE_GET_BORDER_FLAGS to the <CODE>
Table</CODE>
. As with <CODE>
TableFlags</CODE>
, you may set the instance field TI<CODE>
_borderFlags</CODE>
 in your source file, but you may not alter it directly at run-time; instead, you can set the field indirectly, by sending <CODE>
MSG_TABLE_SET_BORDER_FLAGS</CODE>
 to the <CODE>
Table</CODE>
 object.</P>

<H4 CLASS="RefETitle">
MSG_TABLE_GET_FLAGS</H4>
<PRE CLASS="syntax">TableFlags 	MSG_TABLE_GET_FLAGS();</PRE>
<P>
This message returns the current <CODE>
TableFlags</CODE>
 settings in the recipient's TI<CODE>
_tableFlags</CODE>
 field. To change this field, send <CODE>
MSG_TABLE_SET_FLAGS</CODE>
.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any <CODE>
TableClass</CODE>
 object.</P>
<P CLASS="refField">
Parameters:	None.</P>
<P CLASS="refField">
Return:	The <CODE>
TableFlags</CODE>
 record currently stored in the <CODE>
Table</CODE>
 object's TI<CODE>
_tableFlags</CODE>
 field.</P>
<P CLASS="refField">
Structures:	The <CODE>
TableFlags</CODE>
 record (see <A HREF="JTable_4.htm#33796"> Every Table has a record of TableFlags, stored in the instance data field TI_tableFlags. This record contains the following flags:</A>
).</P>


<H4 CLASS="RefETitle">
MSG_TABLE_SET_FLAGS</H4>
<PRE CLASS="syntax">void	MSG_TABLE_SET_FLAGS(
        TableFlags		setTableFlags,
        TableFlags		unsetTableFlags);</PRE>
<P>
This message alters the <CODE>
TableFlags</CODE>
 settings in the recipient's TI<CODE>
_tableFlags</CODE>
 field. To find out what the current settings are, send <CODE>
MSG_TABLE_GET_FLAGS</CODE>
.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any <CODE>
TableClass</CODE>
 object.</P>
<P CLASS="refField">
Parameters:	<CODE>
setTableFlags	</CODE>
All the flags in this record will be turned <EM>
on</EM>
.</P>
<DL>
<DT>
<CODE>
unsetTableFlags</CODE>
</DT><DD>All the flags in this record will be turned <EM>
off</EM>
.<EM>
</EM>
</DD>
</DL>
<P CLASS="refField">
Return:	Nothing.</P>
<P CLASS="refField">
Structures:	The <CODE>
TableFlags</CODE>
 record (see <A HREF="JTable_4.htm#33796"> Every Table has a record of TableFlags, stored in the instance data field TI_tableFlags. This record contains the following flags:</A>
).</P>


<H4 CLASS="RefETitle">
MSG_TABLE_GET_BORDER_FLAGS</H4>
<PRE CLASS="syntax">TableBorderFlags 	MSG_TABLE_GET_BORDER_FLAGS();</PRE>
<P>
This message returns the current <CODE>
TableBorderFlags</CODE>
 settings in the recipient's TI<CODE>
_borderFlags</CODE>
 field. To change this field, send <CODE>
MSG_TABLE_SET_BORDER_FLAGS</CODE>
.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any <CODE>
TableClass</CODE>
 object.</P>
<P CLASS="refField">
Parameters:	None.</P>
<P CLASS="refField">
Return:	The <CODE>
TableBorderFlags</CODE>
 record currently stored in the <CODE>
Table</CODE>
 object's TI<CODE>
_borderFlags</CODE>
 field.</P>
<P CLASS="refField">
Structures:	The <CODE>
TableBorderFlags</CODE>
 record (see <A HREF="JTable_4.htm#71402"> Each table object also has a record of TableBorderFlags, stored in the instance data field TI_borderFlags. This record specifies what borders should be drawn around the Table. This record has the following flags:</A>
).</P>


<H4 CLASS="RefETitle">
MSG_TABLE_SET_BORDER_FLAGS</H4>
<PRE CLASS="syntax">void	MSG_TABLE_SET_BORDER_FLAGS(
        TableBorderFlags		borderFlags);</PRE>
<P>
This message alters the <CODE>
TableBorderFlags</CODE>
 settings in the recipient's TI<CODE>
_borderFlags</CODE>
 field. To find out what the current settings are, send <CODE>
MSG_TABLE_GET_FLAGS</CODE>
.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any <CODE>
TableClass</CODE>
 object.</P>
<P CLASS="refField">
Parameters:	<CODE>
borderFlags</CODE>
	The current value in TI<CODE>
_borderFlags</CODE>
 will be replaced by the value in this record.</P>
<P CLASS="refField">
Return:	Nothing.</P>
<P CLASS="refField">
Structures:	The <CODE>
TableBorderFlags</CODE>
 record (see <A HREF="JTable_4.htm#71402"> Each table object also has a record of TableBorderFlags, stored in the instance data field TI_borderFlags. This record specifies what borders should be drawn around the Table. This record has the following flags:</A>
).</P>

<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="JTable_3.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="JTable_3.htm"><IMG SRC="../../docImages/prevUp.gif" BORDER="0" ALT="Prev: ">3 TableClass Instance Data</A> 
<!-- to next --> | <A HREF="JTable_5.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">3.2 Defining Columns</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
