<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: Text_19.htm,v 1.1 97/06/02 16:42:28 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Using VisText</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="sectionTitle">
<A HREF="index.htm">The Text Objects</A>: 5 
<A NAME="27116">
 </A>
Using VisText</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> | <A HREF="Text_1a.htm"><IMG SRC="../../docImages/down.gif" BORDER="0" ALT="Down"></A> 
<!-- to previous --> | <A HREF="Text_14.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">4 Text Object Chunks</A> 
<!-- to next --> | <A HREF="Text_22.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">6 Using GenText</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<P>
This section describes how to use a VisText object. At the time of documentation printing, <CODE>
VisTextClass</CODE>
 is undergoing improvement and will therefore be covered fully in future documentation releases. This section currently gives much useful information about the class, however.</P>
<P>
<A HREF="Text_19.htm#88328"> VisText Instance Fields</A>
 shows all the instance data fields of <CODE>
VisTextClass</CODE>
. Following the display are descriptions of the individual fields.</P>
<P CLASS="figTitle">
Code Display 10-19 <A NAME="88328">
 </A>
VisText Instance Fields</P>
<PRE><A NAME="IX_VTI_&ldots;  (VisText Instance)"> </A>/* These are all the instance data fields of the VisText. Many of them are used
 * internally by the class and should not be used by applications. Because they
 * are documented as internal, Geoworks reserves the right to change their meaning
 * or use at any time. Those that are internal are clearly noted as such. */</PRE>
<PRE>@instance ChunkHandle				VTI_text;
@instance word				VTI_charAttrRuns = VIS_TEXT_INITIAL_CHAR_ATTR;
@instance word				VTI_paraAttrRuns = VIS_TEXT_INITIAL_PARA_ATTR;
@instance VMFileHandle				VTI_vmFile = NullHandle;
@instance word				VTI_lines = 0;				/* INTERNAL */
@instance VisTextStorageFlags				VTI_storageFlags = (VTSF_DEFAULT_CHAR_ATTR |
						 VTSF_DEFAULT_PARA_ATTR);
@instance VisTextFeatures				VTI_features = 0;
@instance VisTextStates				VTI_state = 0;
@instance VisTextIntFlags				VTI_intFlags = 0;				/* INTERNAL */
@instance VisTextIntSelFlags				VTI_intSelFlags = 0;				/* INTERNAL */
@instance GSRefCountAndFlags				VTI_gsRefCount = 0;				/* INTERNAL */
@instance GStateHandle				VTI_gstate = NullHandle;				/* INTERNAL */
@instance word				VTI_gstateRegion = -1;				/* INTERNAL */
@instance dword				VTI_selectStart = 0;
@instance dword				VTI_selectEnd = 0;
@instance PointDWord				VTI_startEventPos = {0,0};				/* INTERNAL */
@instance dword				VTI_selectMinStart = 0;				/* INTERNAL */
@instance dword				VTI_selectMinEnd =0;				/* INTERNAL */
@instance dword				VTI_lastOffset = 0;				/* INTERNAL */
@instance word				VTI_goalPosition = 0;				/* INTERNAL */
@instance Point				VTI_cursorPos = {0,0};				/* INTERNAL */
@instance word				VTI_cursorRegion = 0;				/* INTERNAL */
@instance word				VTI_leftOffset = 0;				/* INTERNAL */
@instance byte				VTI_lrMargin = 0;
@instance byte				VTI_tbMargin = 0;
@instance ColorQuad				VTI_washColor = {
					C_WHITE,
					CF_INDEX,
					0, 0 }
@instance word				VTI_maxLength = 10000;
@instance VisTextFilters				VTI_filters = 0;
@instance optr				VTI_output;
@instance WBFixed				VTI_height = {0,0};				/* INTERNAL */
@instance word				VTI_lastWidth = -1;				/* INTERNAL */
@instance TimerHandle				VTI_timerHandle = NullHandle;				/* INTERNAL */
@instance word				VTI_timerID = 0;				/* INTERNAL */</PRE>
<P>
VTI_<CODE>
text</CODE>
 stores the ChunkHandle of the object's text chunk. This chunk will be stored within a chunk in the same resource as the text object. See <A HREF="Text_15.htm#60374"> The Text</A>
 for a full discussion of how to manipulate and alter text.</P>
<P>
VTI_<CODE>
storageFlags</CODE>
 contains flags related to how a VisText object stores its paragraph and character attributes. The composition of these flags affects the function of VTI_<CODE>
charAttrRuns</CODE>
 and VTI_<CODE>
paraAttrRuns</CODE>
.</P>
<P>
VTI_<CODE>
charAttrRuns</CODE>
 stores the character attributes for the text object. Depending on VTI_<CODE>
storageFlags</CODE>
, this instance field may contain a 16-bit record, a ChunkHandle to a <CODE>
VisTextCharAttr</CODE>
 structure, or a ChunkHandle to a chunk array of character style runs.</P>
<P>
VTI_<CODE>
paraAttrRuns</CODE>
 stores the paragraph attributes for the text object. Depending on GTI_<CODE>
storageFlags</CODE>
, this instance field may contain a 16-bit record, a ChunkHandle to a <CODE>
VisTextParaAttr</CODE>
 structure, or a ChunkHandle to a chunk array of paragraph style runs.</P>
<P>
VTI_<CODE>
features</CODE>
 stores a <CODE>
VisTextFeatures</CODE>
 record to display text within this text object. These features allow such utilities as word wrapping, hyphenation, smart quotes, etc. </P>
<P>
VTI_<CODE>
state</CODE>
 stores different states of type <CODE>
VisTextStates</CODE>
 that the text object can operate under, such as editable, selectable, targetable, etc.</P>
<P>
VTI_<CODE>
vmFile</CODE>
 stores the handle for a text object's associated VM file; this VM file will store the text if the text object incorporates the large model. This instance field is only used for text objects using the large model.</P>
<P>
VTI_<CODE>
selectStart</CODE>
 stores the character position of the selection's start. VTI_<CODE>
selectEnd</CODE>
 stores the character position of the selection's end. If both the selection start and selection end coincide, there is no selected text.</P>
<P>
<CODE>
VTI_lrMargin</CODE>
 stores the left and right margins of the paragraph in points. VTI_<CODE>
tbMargin</CODE>
 stores the top and bottom margins of the paragraph in points.</P>
<P>
VTI_<CODE>
washColor</CODE>
 stores the background color (of type <CODE>
ColorQuad</CODE>
) of the text object.</P>
<P>
VTI_<CODE>
maxLength</CODE>
 stores the maximum number of characters allowed in this text object (for non-large objects).</P>
<P>
VTI_<CODE>
filters</CODE>
 stores the <CODE>
VisTextFilters</CODE>
 in use by this text object. Filters allow your text object to accept or reject certain sets of characters. </P>
<P>
VTI_<CODE>
output</CODE>
 stores the destination for actions taken by this text object. <A NAME="marker=38878">
 </A>
</P>
<P CLASS="figTitle">
Code Display 10-20 VisText Variable Data</P>
<PRE>@vardata word		ATTR_VIS_TEXT_TYPE_RUNS;
@vardata word		ATTR_VIS_TEXT_GRAPHICS_RUNS;
@vardata word		ATTR_VIS_TEXT_REGION_ARRAY;
@vardata word		ATTR_VIS_TEXT_STYLE_ARRAY;
@vardata word		ATTR_VIS_TEXT_NAME_ARRAY;</PRE>
<PRE>@vardata word		ATTR_VIS_TEXT_SELECTED_TAB;
@vardata void		ATTR_VIS_TEXT_DO_NOT_INTERACT_WITH_SEARCH_CONTROL;
@vardata VisTextExtendedFilterType ATTR_VIS_TEXT_EXTENDED_FILTER;</PRE>
<PRE>typedef struct {
    word			VTSD_count;
    VisTextRange			VTSD_recalcRange;
    VisTextRange			VTSD_selectRange;
    dword			VTSD_showSelectionPos;
    WordFlags			VTSD_notifications;
    byte			VTSD_needsRecalc;
} VisTextSuspendData;</PRE>
<PRE>@vardata VisTextSuspendData ATTR_VIS_TEXT_SUSPEND_DATA;</PRE>
<PRE>@vardata void		ATTR_VIS_TEXT_NOTIFY_CONTENT;
@vardata void		ATTR_VIS_TEXT_DO_NOT_NOTIFY_CONTENT;
@vardata void		ATTR_VIS_TEXT_SEND_CONTEXT_NOTIFICATIONS_EVEN_IF_NOT_FOCUSED;</PRE>
<PRE>typedef struct {
    wchar		VTCFD_startOfRange;
    wchar		VTCFD_endOfRange;
} VisTextCustomFilterData;</PRE>
<PRE>@vardata ChunkHandle ATTR_VIS_TEXT_CUSTOM_FILTER;</PRE>
<PRE>@vardata word		ATTR_VIS_TEXT_CHAR_ATTR_INSERTION_TOKEN;
@vardata word		ATTR_VIS_TEXT_TYPE_INSERTION_TOKEN;</PRE>
<PRE>@vardata void		ATTR_VIS_TEXT_UPDATE_VIA_PROCESS;
@vardata void		ATTR_VIS_TEXT_DOES_NOT_ACCEPT_INK;
@vardata WBFixed		ATTR_VIS_TEXT_MINIMUM_SINGLE_LINE_HEIGHT;</PRE>
<PRE>@vardata word		ATTR_VIS_TEXT_ADD_SPACE_TO_ALL_LINES;</PRE>
<PRE>@vardata void		ATTR_VIS_TEXT_DONT_SHOW_POSITION_ON_GAINED_TARGET_EXCL;
@vardata void		ATTR_VIS_TEXT_SHOW_POSITION_ON_GAINED_TARGET_EXCL;</PRE>
<PRE>@vardata void		ATTR_VIS_TEXT_DONT_BEEP_ON_INSERTION_ERROR;</PRE>
<P>
ATTR_VIS_TEXT_TYPE_RUNS<A NAME="IX_ATTR_VIS_TEXT_TYPE_RUNS">
 </A>
 specifies the Type runs for this text object. You should not need type runs unless you need hyperlink capabilities. ATTR_VIS_TEXT_GRAPHIC_RUNS<A NAME="IX_ATTR_VIS_TEXT_GRAPHIC_RUNS">
 </A>
 specifies a graphics run to use within the text object.</P>
<P>
ATTR_VIS_TEXT_REGION_ARRAY<A NAME="IX_ATTR_VIS_TEXT_REGION_ARRAY">
 </A>
 specifies the array of regions defined for this text object. Text within the VisText will flow from each of the defined regions to the next region.<A NAME="IX_ATTR_VIS_TEXT_STYLE_ARRAY">
 </A>
 ATTR_VIS_TEXT_STYLE_ARRAY specifies the name array of styles used in the VisText's style sheets.</P>
<P>
 <CODE>
ATTR_VIS_TEXT_SELECTED_TAB</CODE>
<A NAME="IX_ATTR_VIS_TEXT_SELECTED_TAB">
 </A>
 specifies the position of the currently-selected tab, if any.</P>
<P>
<CODE>
ATTR_VIS_TEXT_DO_NOT_INTERACT_WITH_SEARCH_CONTROL</CODE>
<A NAME="IX_ATTR_VIS_TEXT_DO_NOT_INTERACT_WITH_SEARCH_CONTROL">
 </A>
 instructs the text object not to send the search-control notification.</P>
<P>
ATTR_VIS_TEXT_EXTENDED_FILTERS<A NAME="IX_ATTR_VIS_TEXT_EXTENDED_FILTERS">
 </A>
 stores the <CODE>
VisTextExtendedFilterType</CODE>
 to use instead of the <CODE>
VisTextFilters</CODE>
 stored within VTI_<CODE>
filters</CODE>
. Extended filters offer more powerful (and complex) filtering mechanisms for accepting and rejecting text. Including this attribute will affect the performance of your text object, however.<A NAME="marker=38606">
 </A>
</P>
<P>
ATTR_VIS_TEXT_SUSPEND_DATA<A NAME="IX_ATTR_VIS_TEXT_SUSPEND_DATA">
 </A>
 stores data to be used by the text object during a SUSPEND/UNSUSPEND operation (<CODE>
VisTextSuspendData</CODE>
).</P>
<P>
ATTR_VIS_TEXT_SEND_CONTEXT_NOTIFICATIONS_EVEN_IF_NOT_FOCUSED<A NAME="IX_ATTR_VIS_TEXT_SEND_CONTEXT_NOTIFICATIONS_EVEN_IF_NOT_FOCUSED">
 </A>
 sends out context notification even if the object is not focused. Applications must make sure that objects with this attribute do not get modified while another text object has the focus.</P>
<P>
ATTR_VIS_TEXT_UPDATE_VIA_PROCESS<A NAME="IX_ATTR_VIS_TEXT_UPDATE_VIA_PROCESS">
 </A>
 indicates that status updates must be sent via the process object (usually because there are targetable text objects in multiple threads).</P>
<P>
ATTR_VIS_TEXT_DOES_NOT_ACCEPT_INK<A NAME="IX_ATTR_VIS_TEXT_DOES_NOT_ACCEPT_INK">
 </A>
 indicates that the VisText object will not accept ink.</P>
<P>
ATTR_VIS_TEXT_MINIMUM_SINGLE_LINE_HEIGHT<A NAME="IX_ATTR_VIS_TEXT_MINIMUM_SINGLE_LINE_HEIGHT">
 </A>
 defines the height of one-line text objects so that custom graphics, etc. can be placed inside the text object.</P>
<P>
ATTR_VIS_TEXT_ADD_SPACE_TO_ALL_LINES<A NAME="IX_ATTR_VIS_TEXT_ADD_SPACE_TO_ALL_LINES">
 </A>
 adds additional spacing above all lines in a text object, and it takes a word argument. This optional attribute is intended to be added to objects that use accent characters that may draw above the top of the text's &quot;font box.&quot; This spacing value differs depending on the system that text is implemented on; only use this attribute if redraws are not drawing your text characters properly. This attribute will also affect any text lines that contain borders, adding additional space between the text and the border.</P>
<P>
<CODE>
ATTR_VIS_TEXT_DONT_SHOW_POSITION_ON_GAINED_TARGET_EXCL</CODE>
<A NAME="IX_ATTR_VIS_TEXT_DONT_SHOW_POSITION_ON_GAINED_TARGET_EXCL">
 </A>
 and <CODE>
ATTR_VIS_TEXT_SHOW_POSITION_ON_GAINED_TARGET_EXCL</CODE>
<A NAME="IX_ATTR_VIS_TEXT_SHOW_POSITION_ON_GAINED_TARGET_EXCL">
 </A>
 affect the display of the cursor within a text object upon gaining the target exclusive. By default, a VisText object will display the cursor upon gaining the target; a VisLargeText object, on the other hand, will not display this position. You may use either of these hints to override this default behavior.</P>
<P>
<CODE>
ATTR_VIS_TEXT_DONT_BEEP_ON_INSERTION_ERROR</CODE>
<A NAME="IX_ATTR_VIS_TEXT_DONT_BEEP_ON_INSERTION_ERROR">
 </A>
 indicates that the VisText object should not call the default error sound routine in cases where an insertion error occurs.</P>
<P CLASS="subsectionLink">
<A HREF="Text_1a.htm">VisText Features</A></P>
<P CLASS="subsectionLink">
<A HREF="Text_1b.htm">VisText States</A></P>
<P CLASS="subsectionLink">
<A HREF="Text_1c.htm">VisText VM File Storage</A></P>
<P CLASS="subsectionLink">
<A HREF="Text_1d.htm">Text Filters</A></P>
<P CLASS="subsectionLink">
<A HREF="Text_1e.htm">Key Functions</A></P>
<P CLASS="subsectionLink">
<A HREF="Text_1f.htm">Setting Text Confines</A></P>
<P CLASS="subsectionLink">
<A HREF="Text_20.htm">Output Messages</A></P>
<P CLASS="subsectionLink">
<A HREF="Text_21.htm">Getting Geometry Information</A></P>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> | <A HREF="Text_1a.htm"><IMG SRC="../../docImages/down.gif" BORDER="0" ALT="Down"></A> 
<!-- to previous --> | <A HREF="Text_14.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">4 Text Object Chunks</A> 
<!-- to next --> | <A HREF="Text_22.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">6 Using GenText</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
