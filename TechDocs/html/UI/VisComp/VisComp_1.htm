<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: VisComp_1.htm,v 1.1 97/06/02 16:52:09 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> VisCompClass Features</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="sectionTitle">
<A HREF="index.htm">VisComp</A>: 1 
VisCompClass Features</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="index.htm"><IMG SRC="../../docImages/prevUp.gif" BORDER="0" ALT="Prev: ">VisComp</A> 
<!-- to next --> | <A HREF="VisComp_2.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">2 VisCompClass Instance Data</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<P>
Composite visible objects provide several features and functions that normal visible objects can not. <CODE>
VisCompClass</CODE>
 has several instance data fields above and beyond those found in <CODE>
VisClass</CODE>
 (since <CODE>
VisCompClass</CODE>
 is a subclass of <CODE>
VisClass</CODE>
, it inherits all its instance data and methods). Although it only handles a few messages not defined in <CODE>
VisClass</CODE>
, it provides much more functionality. Some of the main features of composite objects are listed below:</P>
<UL>
<LI>
They can have children.<BR>
Normal visible objects can exist only as leaves of a visible object tree. <CODE>
VisCompClass</CODE>
 can have children, allowing the tree to be built to any number of levels. See <A HREF="../../UI/VisClass/VisClass_10.htm#50052">the VisClass chapter</A>for full information on visible trees.</LI>
<LI>
They can manage their children's geometry.<BR>
A composite's children can be managed arbitrarily by the composite, or the composite can use the geometry manager to automatically position and size its children. Since a composite can have other composites as its children, this sizing can descend recursively throughout the visible tree, making the entire tree's geometry completely self-managed. See <A HREF="VisComp_a.htm#13351"> Managing Geometry</A>
 for information on geometry management.</LI>
<LI>
They can create and manage their own windows.<BR>
Composite objects can create their own graphics windows. Though this is not typically done (except in Specific UI libraries), it is possible. See <A HREF="VisComp_b.htm#13783"> Managing Graphic Windows</A>
 for more information on windows.</LI>
<LI>
They support other <CODE>
VisClass</CODE>
 functions.<BR>
<CODE>
VisCompClass</CODE>
 inherits all the instance data fields and messages of <CODE>
VisClass</CODE>
. As such, it can do everything normal <CODE>
VisClass</CODE>
 objects can do. See <A HREF="../../UI/VisClass/index.htm">the VisClass chapter</A>for full information on <CODE>
VisClass</CODE>
.</LI>
</UL>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="index.htm"><IMG SRC="../../docImages/prevUp.gif" BORDER="0" ALT="Prev: ">VisComp</A> 
<!-- to next --> | <A HREF="VisComp_2.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">2 VisCompClass Instance Data</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
