<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: Lists_10.htm,v 1.1 97/06/02 16:36:17 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Altering Instance Data</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="subsectionTitle">
<A HREF="index.htm">The List Objects</A>: 4.3 <A HREF="Lists_d.htm">GenDynamicListClass</A>: 
Altering Instance Data</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="Lists_d.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Lists_f.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">4.2 DynamicList Basics</A> 
<!-- to next --> | <A HREF="Lists_11.htm"><IMG SRC="../../docImages/nextUp.gif" BORDER="0" ALT="Next: ">5 GenBooleanGroups</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<P>
You may alter the instance data of a GenDynamicList dynamically. Any of the appropriate GenItemGroup messages are valid for a GenDynamicList object except for <CODE>
MSG_GEN_ITEM_GROUP_GET_ITEM_OPTR</CODE>
.</P>

<H2 CLASS="HeadingC">
Altering the Number of Items</H2>
<PRE>MSG_GEN_DYNAMIC_LIST_INITIALIZE, MSG_GEN_DYNAMIC_LIST_GET_NUM_ITEMS</PRE>
<P>
In order to ensure the proper display of monikers in a dynamic list, the list object must know the total number of items that may be displayed. In most cases, you will set this number in the initial instance data for the object. In some cases, however, you will not initially know how many entries may be displayed; the total number of items will only be known after the data block is accessed. </P>
<P>
In these cases, you should use <CODE>
MSG_GEN_DYNAMIC_LIST_INITIALIZE</CODE>
, <CODE>
MSG_GEN_DYNAMIC_LIST_ADD_ITEMS</CODE>
 or <CODE>
MSG_GEN_DYNAMIC_LIST_REMOVE_ITEMS</CODE>
 to dynamically set the GDLI_<CODE>
numItems</CODE>
 instance field. You can retrieve the current number of items with <CODE>
MSG_GEN_DYNAMIC_LIST_GET_NUM_ITEMS</CODE>
.</P>

<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_DYNAMIC_LIST_INITIALIZE">
 </A>
MSG_GEN_DYNAMIC_LIST_INITIALIZE</H4>
<PRE CLASS="syntax">void	MSG_GEN_DYNAMIC_LIST_INITIALIZE(
        word	numItems);</PRE>
<P>
This message initializes a dynamic list, updating the display to reflect a new number of items or new data within the moniker list. If the list is already usable, this message invalidates all the current items and requests new monikers for all displayable items. The dynamic list will clear all previous selections; it will not scroll to any new selections. Use <CODE>
MSG_GEN_ITEM_GROUP_MAKE_ITEM_VISIBLE</CODE>
 to scroll to a selected item. </P>
<P>
This message is useful for cases when initially building a dynamic list without knowing the number of items; after you know the number of items, make sure to send the dynamic list this message.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any GenDynamicList object.</P>
<P CLASS="refField">
Parameters:	<EM>
numItems</EM>
	The new number of items for the dynamic list or GDLI_NO_CHANGE to keep the current number of selections.</P>
<P CLASS="refField">
Return:	Nothing.</P>
<P CLASS="refField">
Interception:	Generally not intercepted.</P>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_DYNAMIC_LIST_GET_NUM_ITEMS">
 </A>
MSG_GEN_DYNAMIC_LIST_GET_NUM_ITEMS</H4>
<PRE CLASS="syntax">word	MSG_GEN_DYNAMIC_LIST_GET_NUM_ITEMS();</PRE>
<P>
This message returns the current number of items for a dynamic list. If no items are within the list, this message returns zero. </P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any GenDynamicList object.</P>
<P CLASS="refField">
Parameters:	None.</P>
<P CLASS="refField">
Return:	The number of items in the GenDynamicList (GDLI_<CODE>
numItems</CODE>
).</P>



<H2 CLASS="HeadingC">
Adding and Removing Items Dynamically</H2>
<PRE>MSG_GEN_DYNAMIC_LIST_ADD_ITEMS, MSG_GEN_DYNAMIC_LIST_REMOVE_ITEMS, MSG_GEN_DYNAMIC_LIST_REMOVE_ITEM_LIST</PRE>
<P>
Part of the strength of a dynamic list is its ability to be easily updated with new data. <CODE>
MSG_GEN_DYNAMIC_LIST_ADD_ITEM</CODE>
S adds one or more new entries at any position in a dynamic list. The total number of items (GDLI_<CODE>
numItems</CODE>
) will be automatically incremented, and all entries after the added item will have their positions increased by one.</P>
<P>
The constants GDLP_FIRST and GDLP_LAST indicate either the first or last item, respectively, and are available for use with these messages.</P>
<P>
MSG_GEN_DYNAMIC_LIST_REMOVE_ITEMS removes one or more entries from any position within a dynamic list. The total number of items (GDLI_<CODE>
numItems</CODE>
) will be decremented, and all entries after the deleted item will have their positions decreased by one.</P>

<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_DYNAMIC_LIST_ADD_ITEMS">
 </A>
MSG_GEN_DYNAMIC_LIST_ADD_ITEMS</H4>
<PRE CLASS="syntax">void	MSG_GEN_DYNAMIC_LIST_ADD_ITEMS(
        word	item,
        word	numItems);</PRE>
<P>
This message adds an item after the position passed. All items that previously appeared at or after the position specified will have their positions incremented, and the total number of items will be incremented by <CODE>
numItems</CODE>
.</P>
<P>
Usually, you will send this message after a change in the moniker data occurs. The moniker for the new item will be requested when it is made visible.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any GenDynamicList object.</P>
<P CLASS="refField">
Parameters:	<EM>
item</EM>
	The position of the first item to be added to the list. You may pass GDLP_FIRST to add the items at the beginning of the list or GDLP_LAST to add them at the end.</P>
<DL>
<DT>
<CODE>
numItems</CODE>
</DT><DD>The number of items to add.</DD>
</DL>
<P CLASS="refField">
Return:	Nothing.</P>
<P CLASS="refField">
Interception:	Generally not intercepted.</P>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_DYNAMIC_LIST_REMOVE_ITEMS">
 </A>
MSG_GEN_DYNAMIC_LIST_REMOVE_ITEMS</H4>
<PRE CLASS="syntax">void	MSG_GEN_DYNAMIC_LIST_REMOVE_ITEMS(
        word	item,
        word	numItems);</PRE>
<P>
This message removes the specified item(s) from a dynamic list at the position passed. All items that previously appeared after those deleted will have their positions decremented, and the total number of items will be decremented by the number of items removed.</P>
<P>
Usually, you will send this message after a change in the moniker data. If the moniker for the deleted item is visible, a visual update will occur to reflect the list's new item positions. If the deleted item was selected, it will be deselected before being removed.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any GenDynamicList object.</P>
<P CLASS="refField">
Parameters:	<EM>
itemPosition</EM>
	The position of first item to be removed. GDLP_LAST or GDLP_FIRST specify the first or last position in the list.</P>
<DL>
<DT>
<CODE>
numItems</CODE>
</DT><DD>The number of items to be removed.</DD>
</DL>
<P CLASS="refField">
Return:	Nothing.</P>
<P CLASS="refField">
Interception:	Generally not intercepted.</P>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_DYNAMIC_LIST_REMOVE_ITEM_LIST">
 </A>
MSG_GEN_DYNAMIC_LIST_REMOVE_ITEM_LIST</H4>
<PRE CLASS="syntax">void	MSG_GEN_DYNAMIC_LIST_REMOVE_ITEM_LIST(
        word	*deletionList,
        word	numItems);</PRE>
<P>
This message removes a list of items from a dynamic list. Therefore, unlike MSG_GEN_DYNAMIC_LIST_REMOVE_ITEMS, this message can remove separate items that occur at different positions in the list. The message updates other item positions appropriately, causing a visual refresh, if necessary, and updates the total number of items.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any GenDynamic List.</P>
<P CLASS="refField">
Parameters:	<EM>
deletionList</EM>
	Pointer to buffer storing positions (word values) of the items to be removed.</P>
<DL>
<DT>
<EM>
numItems</EM>
</DT><DD>Number of items being deleted.</DD>
</DL>
<P CLASS="refField">
Interception:	Generally not intercepted.</P>


<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="Lists_d.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Lists_f.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">4.2 DynamicList Basics</A> 
<!-- to next --> | <A HREF="Lists_11.htm"><IMG SRC="../../docImages/nextUp.gif" BORDER="0" ALT="Next: ">5 GenBooleanGroups</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
