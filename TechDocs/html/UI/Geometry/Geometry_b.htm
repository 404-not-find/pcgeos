<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: Geometry_b.htm,v 1.1 97/06/02 16:33:44 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Using Custom Child Spacing</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="subsectionTitle">
<A HREF="index.htm">Managing UI Geometry</A>: 2.7 <A HREF="Geometry_4.htm">Arranging Your Generic Objects</A>: 
<A NAME="90342">
 </A>
Using Custom Child Spacing</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="Geometry_4.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Geometry_a.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">2.6 Using Monikers</A> 
<!-- to next --> | <A HREF="Geometry_c.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">2.8 Allowing Children to Wrap</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<PRE>HINT_CUSTOM_CHILD_SPACING, HINT_CUSTOM_CHILD_SPACING_IF_LIMITED_SPACE, HINT_MINIMIZE_CHILD_SPACING</PRE>
<P>
<A NAME="IX_HINT_CUSTOM_CHILD_SPACING">
 </A>
Normally, spacing of children within a composite is left entirely up to the specific UI. You can customize spacing, however, by using the hint <CODE>
HINT_CUSTOM_CHILD_SPACING</CODE>
. This hint takes a single argument of type <CODE>
SpecSizeSpec</CODE>
, described below.

</P>
<P>
<A NAME="IX_SpecSizeSpec">
 </A>
The <CODE>
SpecSizeSpec</CODE>
 structure defines both the spacing between children and how the spacing is determined. It exists as a record with two fields: The first field is a constant of type <CODE>
SpecSizeTypes</CODE>
, used to interpret the second field. The second field is data based on the type specified in the first field.</P>
<P>
<A NAME="IX_SST_&ldots;  (SpecSizeType type)">
 </A>
<A NAME="IX_SpecSizeTypes">
 </A>
The different types allowable in the first field are</P>
<DL>
<DT>
SST_PIXELS</DT><DD>Data specified in pixels.</DD>
<DT>
SST_PCT_OF_FIELD_WIDTH</DT><DD>
Data specified as a percentage of screen width. The data value is a fraction that gets multiplied by the width of the screen. Predefined fraction values to use in the data field are named PCT_<CODE>
xx</CODE>
, where the <CODE>
xx</CODE>
 represents any multiple of five between zero and 100 inclusive. You can get better accuracy by using your own value if desired, however.</DD>
<DT>
SST_PCT_OF_FIELD_HEIGHT</DT><DD>
Data specified as a percentage of screen height. As above except uses screen height rather than width.</DD>
<DT>
SST_AVG_CHAR_WIDTHS</DT><DD>
Data specified as a number that gets multiplied by the average width of a character in the font being used. The data may be between zero and 1023 inclusive.</DD>
<DT>
SST_WIDE_CHAR_WIDTHS</DT><DD>
Data is specified as a number that gets multiplied by the maximum width of the widest character in the font being used. The data may be between zero and 1023 inclusive.</DD>
<DT>
SST_LINES_OF_TEXT</DT><DD>
Data is specified as a number of text lines. The number will be multiplied by the height of a line of text in the font being used.</DD>
</DL>
<P>
Both fields of the record are defined by using the bitwise-or operator. If you had a composite that wanted to line all its children up exactly next to each other, for example, you would specify the hint as follows:</P>
<PRE>@object GenInteractionClass @MyComp = {
    GI_comp = @child1, @child2, @child3;
    HINT_CUSTOM_CHILD_SPACING = SST_PIXELS | 0;
}</PRE>
<P>
HINT_CUSTOM_CHILD_SPACING_IF_LIMITED_SPACE<A NAME="IX_HINT_CUSTOM_CHILD_SPACING_IF_LIMITED_SPACE">
 </A>
 also takes a <CODE>
SpecSizeSpec</CODE>
 to suggest a custom amount of spacing, but only implements this custom spacing if the specific UI determines that the children are already too tightly arranged. This hint may or may not be helpful, as the specific UI often allocates a minimum amount of spacing independent of this hint.</P>
<P>
HINT_MINIMIZE_CHILD_SPACING<A NAME="IX_HINT_MINIMIZE_CHILD_SPACING">
 </A>
 ensures that child spacing is kept to an absolute minimum, even if this means that object's edges will touch (in color systems) or even overlap (in black and white systems). </P>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="Geometry_4.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Geometry_a.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">2.6 Using Monikers</A> 
<!-- to next --> | <A HREF="Geometry_c.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">2.8 Allowing Children to Wrap</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
