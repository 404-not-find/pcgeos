<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: Values_8.htm,v 1.2 97/09/05 14:54:37 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Display Formats</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="subsectionTitle">
<A HREF="index.htm">GenValue</A>: 3.5 <A HREF="Values_3.htm">GenValue Basics</A>: 
<A NAME="96163">
 </A>
Display Formats</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="Values_3.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Values_7.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">3.4 GenValue States</A> 
<!-- to next --> | <A HREF="Values_9.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">3.6 Sending an Action</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<PRE>GVLI_displayFormat, MSG_GEN_VALUE_SET_DISPLAY_FORMAT, MSG_GEN_VALUE_GET_DISPLAY_FORMAT, ATTR_GEN_VALUE_METRIC_EQUIVALENT, ATTR_GEN_VALUE_DECIMAL_PLACES</PRE>
<P>
In addition to displaying an integer numerical value, a GenValue may also display numerical values of several other formats. These formats may be any one of the <CODE>
GenValueDisplayFormat</CODE>
 enumerations provided in <CODE>
GenValueClass</CODE>
. The allowed enumerations of type <CODE>
GenValueDisplayFormat</CODE>
<A NAME="IX_GenValueDisplayFormat">
 </A>
 are:</P>
<DL>
<DT>
	GVDF_INTEGER</DT><DD>
GVDF_DECIMAL<BR>
GVDF_POINTS<BR>
GVDF_INCHES<BR>
GVDF_CENTIMETERS<BR>
GVDF_MILLIMETERS<BR>
GVDF_PICAS<BR>
GVDF_EUR_POINTS<BR>
GVDF_CICEROS<BR>
GVDF_POINTS_OR_MILLIMETERS<BR>
GVDF_INCHES_OR_CENTIMETERS</DD>
</DL>
<P>
GVLI_<A NAME="IX_GVLI_displayFormat">
 </A>
<CODE>
displayFormat</CODE>
 controls how the values of the GenValue will be represented. For example, if the display format is in centimeters, the display will include the text &quot;cm&quot; after the numerical value; if the display includes a fractional part, a decimal point will be present. These display formats will also convert the values (which are stored as points) into the proper distance units for the textual display.</P>
<P>
By default, the value's fractional portion will be displayed using 3 places to the right of the decimal point. You may alter this number of places with ATTR_GEN_VALUE_DECIMAL_PLACES. You may only choose a number of decimal places between zero to four (inclusive), because of the limited text space offered within a GenValue.</P>
<P>
<A NAME="IX_GVDF_&ldots;">
 </A>
Your GenApplication object contains instance data which specifies whether the application is being run under US or metric units. This setting may affect the display of your units depending on the particular <CODE>
GenValueDisplayFormat</CODE>
. </P>
<DL>
<DT>
GVDF_INTEGER displays the value as an integer (the high word of the fixed point value) and ignores any fractional part. </DT>
<DT>
GVDF_DECIMAL displays the value as a decimal value. </DT>
<DT>
GVDF_POINTS displays the value in points (1/72 of an inch) regardless of whether metric or US units are specified for the application. </DT>
<DT>
GVDF_INCHES displays the value in inches regardless of whether metric or US units are specified for the application. </DT>
<DT>
GVDF_CENTIMETERS displays the value in centimeters regardless of whether metric or US units are specified for the application.</DT>
<DT>
GVDF_MILLIMETERS displays the value in millimeters regardless of whether metric or US units are specified for the application.</DT>
<DT>
GVDF_PICAS displays the value as a distance in picas. One pica is equal to 12 US Points, or 1/6 of an inch.</DT>
<DT>
GVDF_EUR_POINTS displays the value as a distance in European Points. One european point is about equal to 1.0656 US Points.</DT>
<DT>
GVDF_CICEROS displays the value as a distance in Ciceros. One Cicero is equal to 12 European Points.</DT>
<DT>
GVDF_POINTS_OR_MILLIMETERS and GVDF_INCHES_OR_CENTIMETERS are special cases. These display formats display the value in points (or inches) if US units are specified for the application; the value will be represented in millimeters (or centimeters) if metric units are instead specified.<A NAME="marker=474166">
 </A>
</DT>
</DL>
<P>
Importantly, <EM>
all</EM>
 distance units (inches, picas, centimeters, etc.) store their values as Points (1/72 inch). The system automatically converts these values (in Points) into the proper units of the GenValue's GVLI_<CODE>
displayFormat</CODE>
 when it displays the numerical value within the textual display.</P>
<P CLASS="figTitle">
Code Display 8-6 Setting a Distance Display Format</P>
<PRE>@object GenValueClass MyValue = {
    GI_visMoniker = &quot;My Value&quot;;
    GVLI_displayFormat = GVDF_INCHES;</PRE>
<PRE>/* For an initial value of 1 inch, the equivalent value in Points is 72. */
    GVLI_value = MakeWWFixed(72.0);</PRE>
<PRE>/* For an initial value of 1/2 inch, the equivalent value in Points is 36. */
    GVLI_increment = MakeWWFixed(36.0);
}</PRE>
<P>
 For example, if your display format is GVDF_INCHES and you wish to set an initial value of 1 inch and an increment of 1/2 an inch, you should set these values to 72 (points which equals 1 inch) and 36 (points which equals one-half inch) respectively. This is necessary because the system expects these values to be in Points for other system operations. A conversion table is provided below.
<IMG SRC="Values_8_DistanceUnit.gif">

</P>
<P>
Any increments for GVDF_POINTS_OR_MILLIMETERS or GVDF_INCHES_OR_CENTIMETERS are assumed to be in US units. If the application instead operates in metric, the increment will be automatically converted to a metric equivalent by the system; this metric equivalent will usually be rounded to a convenient numerical value. You may specify an ATTR_GEN_VALUE_METRIC_EQUIVALENT to override the default increment that the system calculates, however.</P>
<P>
For example, assume GVDF_INCHES_OR_CENTIMETERS is selected and the value and increment are 72 (points which equals 1 inch). If the application is in US units, the display will specify inches and the value and increment will be 72 (1 inch); if the application is instead in metric, the display will specify centimeters and the increment will be 70.866 (2.5 cm). If instead, you choose an ATTR_GEN_VALUE_METRIC_INCREMENT of 52.692 (2 cm), that will be the increment used if the application is metric.</P>
<P CLASS="figTitle">
Code Display 8-7 ATTR_GEN_VALUE_METRIC_INCREMENT</P>
<PRE>/* If the application is US, the initial value will be 1 inch and the increment 
 * will be 1 inch. If the application is metric, the initial value will be 2.54 cm
 * (1 inch or 72 points) but the increment will be 2.0 cm (56.692 points). If
 * ATTR_GEN_VALUE_METRIC_INCREMENT were not included, the system would have chosen
 * an increment of 2.5 cm (70.866 points) which is the closest &quot;nice&quot; value to the
 * original increment of 72 points (1 inch). */</PRE>
<PRE>@object GenValueClass MyValue = {
    GI_visMoniker = &quot;My Value&quot;;
    GVLI_displayFormat = GVDF_INCHES_OR_CENTIMETERS;
    GVLI_value = MakeWWFixed(72.0);
    GVLI_increment = MakeWWFixed(72.0);
    ATTR_GEN_VALUE_METRIC_INCREMENT = MakeWWFixed(56.692);
}</PRE>
<P>
To set a new display format, send <CODE>
MSG_GEN_VALUE_SET_DISPLAY_FORMAT</CODE>
. To retrieve the current display format, send the GenValue <CODE>
MSG_GEN_VALUE_GET_DISPLAY_FORMAT</CODE>
. Note that changing the display format will not change the numerical value of that display. For example, if the display format changes from decimal to integer, the GenValue will round the number down and display only the integer portion of the value.</P>

<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_VALUE_GET_DISPLAY_FORMAT">
 </A>
MSG_GEN_VALUE_GET_DISPLAY_FORMAT</H4>
<PRE CLASS="syntax">GenValueDisplayFormat MSG_GEN_VALUE_GET_DISPLAY_FORMAT();</PRE>
<P>
This message returns the GVLI_<CODE>
displayFormat </CODE>
field of the GenValue.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any GenValue object.</P>
<P CLASS="refField">
Parameters:	None.</P>
<P CLASS="refField">
Return:	<CODE>
GenValueDisplayFormat</CODE>
 of the GenValue.</P>
<P CLASS="refField">
Interception:	Generally not intercepted.</P>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_VALUE_SET_DISPLAY_FORMAT">
 </A>
MSG_GEN_VALUE_SET_DISPLAY_FORMAT</H4>
<PRE CLASS="syntax">void	MSG_GEN_VALUE_SET_DISPLAY_FORMAT(
        GenValueDisplayFormat			format);</PRE>
<P>
This message sets the <CODE>
GVLI_displayFormat</CODE>
 of the GenValue to the given format. The current value in GVLI_<CODE>
value</CODE>
 is unaffected, but the display will be updated to reflect the new display format.</P>
<P CLASS="refField">
Source:	Unrestricted. This message is also used internally when the GenValue is being built. </P>
<P CLASS="refField">
Destination:	Any GenValue object.</P>
<P CLASS="refField">
Parameters:	<EM>
format</EM>
	<CODE>
GenValueDisplayFormat</CODE>
 to set the GenValue to.</P>
<P CLASS="refField">
Return:	Nothing.</P>
<P CLASS="refField">
Interception:	Generally not intercepted.</P>

<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="Values_3.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Values_7.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">3.4 GenValue States</A> 
<!-- to next --> | <A HREF="Values_9.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">3.6 Sending an Action</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
