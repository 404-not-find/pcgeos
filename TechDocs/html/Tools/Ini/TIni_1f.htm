<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: TIni_1f.htm,v 1.1 97/06/27 15:57:40 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> [system]</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="subsectionTitle">
<A HREF="index.htm">The INI File</A>: 2.29 <A HREF="TIni_2.htm">Categories in the INI File</A>: 
[system]</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="TIni_2.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="TIni_1e.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">2.28 [spool]</A> 
<!-- to next --> | <A HREF="TIni_20.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">2.30 [text]</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<P>
The <EM>
system</EM>
 category defines system configuration and setup. Most of the keys in this category are set and maintained by the Preferences manager application. These keys, with their formats and possible values, are shown in the following sections.</P>

<H3 CLASS="HeadingD">
autoCursorCentering</H3>
<PRE>autoCursorCentering = &lt;Boolean&gt;</PRE>
<P>
If this key is set true, the mouse cursor is re-positioned to the center of the current window whenever the pointer cursor changes and no button is down.</P>


<H3 CLASS="HeadingD">
continueSetup</H3>
<PRE>continueSetup = &lt;Boolean&gt;</PRE>
<P>
If this key is set true, GEOS will begin by running the graphical setup program in the proper setup modes. If false, GEOS will bypass the graphical setup. After running, the graphical setup program will reset this field to false. This field overrides the <EM>
execOnStartup</EM>
 key of the <EM>
ui</EM>
 category.</P>
<PRE>continueSetup = true
continueSetup = false</PRE>


<H3 CLASS="HeadingD">
drive</H3>
<PRE>drive &lt;letter&gt; = &lt;number&gt;</PRE>
<P>
This key allows you to override the drive-map initialization done by the primary filesystem driver. You can not make a driver believe a nonexistent drive exists, but you can change the presumed media or make the driver ignore a drive. More than one drive may be remapped.</P>
<P>
The <EM>
letter</EM>
 argument is the drive letter of the drive to be remapped. The number argument defines the new drive definition and is one of the following values:</P>
<PRE>  -1		fixed disk
   0		ignore the drive
 360		360 K 5.25-inch disk
 720		720 K 3.5-inch disk
1200		1.2 meg 5.25-inch disk
1440		1.44 meg 3.5-inch disk
2880		2.88 meg 3.5-inch disk</PRE>
<P>
Some examples of drive remappings are shown below:</P>
<PRE>drive d = 0			; ignore drive D:
drive a = 360			; make GEOS think drive A: is 360K</PRE>


<H3 CLASS="HeadingD">
font</H3>
<PRE>font = &lt;driver file names&gt;</PRE>
<P>
This key causes the named font driver to be loaded. If this key doesn't exist, <STRONG CLASS="fileName">
nimbus.geo</STRONG>
 will automatically be loaded (the default driver). More than one driver may be specified on a single line or in a blob format, as shown in the examples below. (Note, though, that at current only <STRONG CLASS="fileName">
nimbus.geo</STRONG>
 is recognized.)</P>
<PRE>font = nimbus.geo otherdrv.geo
font = { nimbus.geo
	   otherdrv.geo }</PRE>


<H3 CLASS="HeadingD">
fontid</H3>
<PRE>fontid = &lt;font name&gt;</PRE>
<P>
This key specifies the default font used in the event a requested font does not exist. This font will also be used when putting up system alert boxes (such as Abort/Retry boxes). The only available default font currently is Berkeley; typically, this will be a bitmap font rather than an outline font.</P>
<PRE>fontid = berkeley</PRE>


<H3 CLASS="HeadingD">
fontmenu</H3>
<PRE>fontmenu = &lt;string of numbers&gt;</PRE>
<P>
This field specifies the order of fonts which should appear in font menus presented by font control objects. This is encoded as a string of numbers, four hex digits for each font, those four digits containing the font ID of the appropriate font. Thus, if the font ID's for the URW Roman and Berkeley fonts are 0x3000 and 0x0202, respectively, then if they are to be the first fonts in the font menu, the <CODE>
fontmenu</CODE>
 field would read:</P>
<PRE>fontmenu = 30000202</PRE>


<H3 CLASS="HeadingD">
fontsize</H3>
<PRE>fontsize = &lt;number&gt;</PRE>
<P>
This key specifies the point size of the default font. If an application requests a font that can't be found, the default point size specified here is used with the font specified with <EM>
fontid</EM>
. Berkeley supports 9, 10, 12, 14, and 18, though 18 is normally too large for many applications.</P>
<PRE>fontsize = 10</PRE>


<H3 CLASS="HeadingD">
fonttool</H3>
<PRE>fontmenu = &lt;string of numbers&gt;</PRE>
<P>
This field specifies the order of fonts which should appear in font pop-up list presented by font control objects. This is encoded as a string of numbers, four hex digits for each font, those four digits containing the font ID of the appropriate font. Thus, if the font ID's for the URW Roman and Berkeley fonts are 0x3000 and 0x0202, respectively, then if they are to be the first fonts in the font pop-up list, the <CODE>
fontool</CODE>
 field would read:</P>
<PRE>fonttool = 30000202</PRE>


<H3 CLASS="HeadingD">
fs</H3>
<PRE>fs = &lt;driver file names&gt;</PRE>
<P>
This key defines the file system drivers to be loaded. The kernel will by default attempt to load the primary IFS driver for the detected version of DOS; if it can not determine the primary IFS driver, the proper driver must be specified in the INI file under this key. Multiple file system drivers may be specified either on a single line or in blob format. The current secondary IFS drivers available are</P>
<DL>
<DT>
<STRONG>
netware.geo</STRONG>
</DT><DD>
Used for Novell Netware systems.</DD>
<DT>
<STRONG>
msnet.geo</STRONG>
</DT><DD>Used for LANtastic and other networks that support the standard DOS device redirection calls.</DD>
<DT>
<STRONG>
cdrom.geo</STRONG>
</DT><DD>Used for CD-ROM drives accessed through MSCDEX.EXE.</DD>
<PRE>fs = netware.geo
fs = { msnet.geo
	 cdrom.geo }</PRE>


</DL>
<H3 CLASS="HeadingD">
handles</H3>
<PRE>handles = &lt;number&gt;</PRE>
<P>
This key specifies the number of handles GEOS should set as the maximum in the handle table. This should be set to something most likely 2000 or above, and it may be set in the Preferences manager application. If nothing is set in this key, the kernel will assume a default of 1000 handles.</P>
<PRE>handles = 2000</PRE>


<H3 CLASS="HeadingD">
inkTimeout</H3>
<PRE>inkTimeout = &lt;number&gt;</PRE>
<P>
This key sets the number of ticks (60 ticks in a second) the system will wait after the user has stopped drawing before processing ink input. The default is nine tenths of a second, or 54.</P>
<PRE>inkTimeout = 54</PRE>


<H3 CLASS="HeadingD">
maxTotalHeapSpace</H3>
<PRE>maxTotalHeapSpace = &lt;size of heap in paragraphs&gt;</PRE>
<P>
This field causes the <CODE>
GeodeLoad()</CODE>
 routine to operate in transparent launch mode. The value given represents the overall size of the heap, in paragraphs, excepting system libraries that are always in memory. It should be determined on the target machine itself, by starting up, then running the TCL function &quot;heapspace total&quot;. A common value for this field is around 31000.</P>


<H3 CLASS="HeadingD">
memory</H3>
<PRE>memory = &lt;driver file names&gt;</PRE>
<P>
This key defines the swap drivers that should be loaded. Swap drivers allow GEOS to use memory above the conventional 640 K. The kernel attempts to determine what type of memory is available and load the appropriate swap driver. This key is settable by the user with the Preferences manager application. The four driver names recognized are</P>
<DL>
<DT>
<STRONG>
emm.geo</STRONG>
</DT><DD>LIM 4.0 standard expanded memory driver. A DOS-level memory driver must be loaded (e.g. EMM.SYS), typically in CONFIG.SYS.</DD>
<DT>
<STRONG>
extmem.geo</STRONG>
</DT><DD>
80286 extended memory driver.</DD>
<DT>
<STRONG>
xms.geo</STRONG>
</DT><DD>XMS/HIMEM.SYS driver. A DOS-level driver must also be loaded (e.g. HIMEM.SYS), typically in CONFIG.SYS.</DD>
<DT>
<STRONG>
disk.geo</STRONG>
</DT><DD>Disk swap driver. This should be loaded in all cases where a disk swap file is desired.</DD>
<PRE>memory = disk.geo
memory = { disk.geo
	     xms.geo }</PRE>


</DL>
<H3 CLASS="HeadingD">
noFontDriver</H3>
<PRE>noFontDriver = &lt;Boolean&gt;</PRE>
<P>
If true, this key tells GEOS not to load the font driver; this is useful only when it is known beforehand that outline fonts are not available; it will reduce startup time of GEOS. If the key does not exist, it defaults to false. If used improperly, this key can cause bad things to happen in the system.</P>
<PRE>noFontDriver = true
noFontDriver = false</PRE>


<H3 CLASS="HeadingD">
notes</H3>
<PRE>notes = &lt;string&gt;</PRE>
<P>
This field isn't used by GEOS proper. The Debug utility will search for this field when looking for text describing a platform which the .ini file simulates.</P>


<H3 CLASS="HeadingD">
noVidMem</H3>
<PRE>noVidMem = &lt;Boolean&gt;</PRE>
<P>
If true, this key tells GEOS not to load the vidmem driver, which is used for printing; it will reduce startup time of GEOS and should be used only if it is known beforehand that printing will not be attempted. If the key does not exist, it defaults to false. If used improperly, this key can cause bad things to happen in the system.</P>
<PRE>noVidMem = true
noVidMem = false</PRE>


<H3 CLASS="HeadingD">
pda</H3>
<PRE>pda = &lt;Boolean&gt;</PRE>
<P>
This field indicates whether GEOS is running on a PDA device. Currently this field is only used by the UI to provide alternate error strings. </P>


<H3 CLASS="HeadingD">
penBased</H3>
<PRE>penBased = &lt;Boolean&gt;</PRE>
<P>
If true, this key tells GEOS that it is running on a pen-based system and that some objects will want to receive ink or other pen input. If the key is not set, it defaults to false.</P>
<PRE>penBased = true
penBased = false</PRE>


<H3 CLASS="HeadingD">
power</H3>
<PRE>power = &lt;driver file name&gt;</PRE>
<P>
This key defines the power management drivers to be loaded, if any. If no driver is specified, the kernel will try to identify whether one is needed and then load it if necessary.</P>
<PRE>power = casio.geo</PRE>


<H3 CLASS="HeadingD">
serialNumber</H3>
<PRE>serialNumber = &lt;number&gt;</PRE>
<P>
This key holds a predefined serial number for use by developers. This number will be given to you by Geoworks either directly or in the package you receive containing GEOS. Normally, this number is entered by the user when GEOS first finishes its graphical setup program.</P>


<H3 CLASS="HeadingD">
setupMode</H3>
<PRE>setupMode = &lt;number&gt;</PRE>
<P>
This key indicates the mode of the graphical setup program. This should be a number from zero to three; for full graphical setup, set it to zero. Other modes are internal in nature and should not be set.</P>
<PRE>setupMode = 0</PRE>


<H3 CLASS="HeadingD">
splashColor</H3>
<PRE>splashColor = &lt;Color value&gt;</PRE>
<P>
If the <CODE>
splashscreen</CODE>
 option has been turned on, this field will determine the background color of any text splash screens shown.</P>


<H3 CLASS="HeadingD">
splashscreen</H3>
<PRE>splashscreen = &lt;Boolean&gt;</PRE>
<P>
This permits the GEOS loader to display a message on one of the five simple graphics mode screens while GEOS is loading.</P>


<H3 CLASS="HeadingD">
splashText</H3>
<PRE>splashText = &lt;string&gt;</PRE>
<P>
If the splashscreen option has been turned on, this field will determine the text of the message to display.</P>

<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="TIni_2.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="TIni_1e.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">2.28 [spool]</A> 
<!-- to next --> | <A HREF="TIni_20.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">2.30 [text]</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
