<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: SR_25.htm,v 1.1 97/06/27 16:00:27 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>Swat Command Reference: read-reg ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">

<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="SR_24.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">pvismon ...</A> 
<!-- to next --> | <A HREF="SR_26.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">ret ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->


<H1 CLASS="refHeading">
<A NAME="IX_Registers:accessing with Swat">
 </A>
<A NAME="IX_read-reg Swat command">
 </A>
read-reg</H1>

<PRE CLASS="syntax">read-reg &lt;register&gt;</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;read-reg ax&quot;</DT><DD>
return the value of AX</DD>
<DT>
&quot;read-reg CC&quot;</DT><DD>
return the value of the conditional flags</DD>


</DL>
<P>
Return the value of a register in decimal.</P>

<UL>
<LI>
The &lt;register&gt; argument is the two letter name of a register in either upper or lower case.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_f.htm#IX_frame Swat command:command reference">frame</A>,
<A HREF="../../Tools/SwatRef/SR_4.htm#IX_assign Swat command:command reference">assign</A>,
<A HREF="../../Tools/SwatRef/SR_27.htm#IX_setcc Swat command">setcc</A>,
<A HREF="../../Tools/SwatRef/SR_6.htm#IX_clrcc Swat command">clrcc</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Registers:displaying with Swat">
 </A>
<A NAME="IX_regs Swat command">
 </A>
regs</H1>

<PRE CLASS="syntax">regs</PRE>


<P>
Print the current registers, flags, and instruction.</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_4.htm#IX_assign Swat command:command reference">assign</A>,
<A HREF="../../Tools/SwatRef/SR_27.htm#IX_setcc Swat command">setcc</A>,
<A HREF="../../Tools/SwatRef/SR_6.htm#IX_clrcc Swat command">clrcc</A>,
<A HREF="../../Tools/SwatRef/SR_25.htm#IX_read-reg Swat command">read-reg</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Registers:monitoring with Swat">
 </A>
<A NAME="IX_Display windows in Swat:displaying registers">
 </A>
<A NAME="IX_Registers:displaying with Swat">
 </A>
<A NAME="IX_regwin Swat command">
 </A>
regwin</H1>

<PRE CLASS="syntax">regwin [off]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	&quot;regwin&quot;<BR>
&quot;regwin off&quot;</P>


<P>
Turn the continuous display of registers on or off.</P>

<UL>
<LI>
If you give the optional argument &quot;off&quot;, you will turn off any active register display.</LI>
<LI>
If you give no argument, the display will be turned on.</LI>
<LI>
Only one register display may be active at a time.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_a.htm#IX_display Swat command">display</A>.



<H1 CLASS="refHeading">
<A NAME="IX_repeatCommand Swat variable">
 </A>
repeatCommand</H1>

<PRE CLASS="syntax">var repeatCommand &lt;string&gt;</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;var repeatCommand [list foo nil]&quot; </DT><DD>
Execute the command &quot;foo nil&quot; if the user just hits &lt;Enter&gt; at the next command prompt.</DD>


</DL>
<P>
This variable holds the command Swat should execute if the user enters an empty command. It is used by all the memory-referencing commands to display the next chunk of memory, and can be used for other purposes as well.</P>

<UL>
<LI>
<EM>
repeatCommand</EM>
 is emptied just before <CODE>
top-level-read</CODE>
 returns the command the interpreter should execute and must be reset by the repeated command if it wishes to continue to be executed when the user just hits &lt;Enter&gt;. </LI>
<LI>
The text of the current command is stored in <EM>
lastCommand</EM>
, should you wish to use it when setting up <EM>
repeatCommand</EM>
. </LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_2c.htm#IX_target Swat command">target</A>,
<A HREF="../../Tools/SwatRef/SR_e.htm#IX_focus Swat command">focus</A>,
<A HREF="../../Tools/SwatRef/SR_19.htm#IX_mouse Swat command">mouse</A>,
<A HREF="../../Tools/SwatRef/SR_17.htm#IX_keyboard Swat command">keyboard</A>.



<H1 CLASS="refHeading">
<A NAME="IX_require Swat command">
 </A>
require</H1>

<PRE CLASS="syntax">require &lt;name&gt; [&lt;file&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;require fmtval print&quot;</DT><DD>
Ensure the procedure &quot;fmtval&quot; is defined, loading the file &quot;print.tcl&quot; if it is not.</DD>


</DL>
<P>
This ensures that a particular function, not normally invoked by the user but present in some file in the system library, is actually loaded.</P>


<P>
If no &lt;file&gt; is given, a file with the same name (possibly suffixed &quot;.tcl&quot;) as the function is assumed.</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_4.htm#IX_autoload Swat command:command reference">autoload</A>.



<H1 CLASS="refHeading">
resize</H1>

<PRE CLASS="syntax">resize &lt;window&gt; &lt;numLines&gt;</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;resize varwin 5&quot;   </DT><DD>
Resizes the varwin to 5 lines.</DD>
<DT>
&quot;resize va 5&quot; </DT><DD>Resizes the varwin to 5 lines.</DD>


</DL>
<P>
Resizes the source window or a varwin or localwin.</P>

<UL>
<LI>
The <EM>
window</EM>
 argument is the name of the window to be resized, or a unique abbreviation of that name. Possible names are: &quot;varwin&quot;, &quot;localwin&quot;, &quot;view&quot;, &quot;doc&quot;, and &quot;srcwin&quot;; the last three all refer to the source window. </LI>
<LI>
The <EM>
numLines</EM>
 argument is the desired window size. </LI>
<LI>
This command will not resize a flagwin, regwin, or framewin, as the optimal size of those windows does not vary.</LI>
</UL>



<H1 CLASS="refHeading">
<A NAME="IX_restore-state Swat command">
 </A>
restore-state</H1>

<PRE CLASS="syntax">restore-state</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;restore-state&quot;</DT><DD>
Set all registers for the current thread to the values saved by the most recent save-state.</DD>


</DL>
<P>
Pops all the registers for a thread from the internal state stack.</P>

<UL>
<LI>
This is the companion to the &quot;save-state&quot; command.</LI>
<LI>
All the thread's registers are affected by this command.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_26.htm#IX_save-state Swat command">save-state</A>.


<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="SR_24.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">pvismon ...</A> 
<!-- to next --> | <A HREF="SR_26.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">ret ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
