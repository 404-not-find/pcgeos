<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: SR_1.htm,v 1.1 97/06/27 15:59:29 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>Swat Command Reference: _print ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">

<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="index.htm"><IMG SRC="../../docImages/prevUp.gif" BORDER="0" ALT="Prev: ">Swat Command Reference</A> 
<!-- to next --> | <A HREF="SR_2.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">addr-parse ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->


<H1 CLASS="refHeading">
<A NAME="IX__print Swat command">
 </A>
_print</H1>

<PRE CLASS="syntax"><A NAME="IX_Formatting Swat output"> </A>_print &lt;expression&gt;</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;_print ax-10&quot;</DT><DD>
print ax less 10 decimal.</DD>
<P>
Print the value of an expression.</P>


</DL>
<P>
The difference between this command and the &quot;print&quot; command is a subtle one: if one of the arguments contains square-brackets, the Tcl interpreter will attempt to evaluate the text between the brackets as a command before _print is given the argument. If the text between the brackets is intended to be an array index, the interpreter will generate an error before the Swat expression evaluator has a chance to decide whether the text is a nested Tcl command or an array index.</P>
<P>
 For this reason, this function is intended primarily for use by Tcl procedures, not by users.</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_20.htm#IX_print Swat command:command reference">print</A>,
<A HREF="../../Tools/SwatRef/SR_2.htm#IX_addr-parse Swat command">addr-parse</A>.



<H1 CLASS="refHeading">
<A NAME="IX_abort Swat command">
 </A>
abort</H1>

<PRE CLASS="syntax">abort [&lt;frame-number&gt;]
abort [&lt;function&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;abort&quot;</DT><DD> abort executing the current frame.</DD>
<DT>
 &quot;abort 3&quot; </DT><DD>abort executing up through the third frame.</DD>
<DT>
 &quot;abort ObjMessage&quot; </DT><DD>
abort executing up through first ObjMessage.</DD>
<P>
 Abort code execution up through a given frame or routine. By &quot;abort&quot;, we me &quot;do not execute&quot;. This can be quite dangerous, as semaphores may not be ungrabbed, blocks not unlocked, flags not cleared, etc., leaving the state of objects, and if executing system code, possibly the system itself in a bad state. This command should only be used when the only alternative is to to detach (i.e. in a fatal error) as a way to possibly prolong the usefulness of the debugging session.</P>


</DL>
<UL>
<LI>
If no argument is given, code through the current frame is aborted. </LI>
<LI>
&lt;frame num&gt; are the numbers that appear at the left of the backtrace.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_d.htm#IX_finish Swat command">finish</A>,
<A HREF="../../Tools/SwatRef/SR_4.htm#IX_backtrace Swat command:command reference">backtrace</A>.



<H1 CLASS="refHeading">
<A NAME="IX_abortframe Swat command">
 </A>
abortframe</H1>

<PRE CLASS="syntax">abortframe &lt;frame-token&gt;</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;abortframe $cur&quot;</DT><DD>
Abort all code execution through the frame whose token is in $cur.</DD>
<P>
Aborts code execution up through a particular stack frame. As no code is executed, the registers may be in a garbaged state.</P>


</DL>
<UL>
<LI>
The argument is a frame token, as returned by the &quot;frame&quot; command.</LI>
<LI>
No FULLSTOP event is dispatched when the machine actually aborts executing in the given frame. The caller must dispatch it itself, using the &quot;event&quot; command. For information about FULLSTOP events, see the <CODE>
event</CODE>
 Tcl command.</LI>
<LI>
The command returns zero if the machine aborted executing in the given frame; non-zero if it was interrupted before that could happen. </LI>
</UL>


<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="index.htm"><IMG SRC="../../docImages/prevUp.gif" BORDER="0" ALT="Prev: ">Swat Command Reference</A> 
<!-- to next --> | <A HREF="SR_2.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">addr-parse ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
