<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: SR_2d.htm,v 1.1 97/06/27 16:00:47 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>Swat Command Reference: text-fixup ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">

<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="SR_2c.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">symbolCompletion ...</A> 
<!-- to next --> | <A HREF="SR_2e.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">twalk ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->


<H1 CLASS="refHeading">
<A NAME="IX_text-fixup Swat command">
 </A>
text-fixup</H1>

<OL>
<LI>
Run geos under swat, run swat on the development system </LI>
<LI>
Run GeoWrite </LI>
<LI>
Open the GeoWrite file that needs fixing </LI>
<LI>
Set the breakpoint in swat:</LI>
<PRE> patch text::CalculateRegions
 =&gt; text-fixup</PRE>
<P>
	 This will set a breakpoint at the right spot </P>
<LI>
Turn on the error-checking code in swat:</LI>
<PRE> ec +text </PRE>
<LI>
Enter a &lt;space&gt; into the document. This forces recalculation which will cause <CODE>
CalculateRegions()</CODE>
 to be called which will cause text-fixup to be called. </LI>
<P>
If it worked, this code should patch together the file. If it's not, you'll get a FatalError right now.</P>
<LI>
Turn off the ec code and disable the fixup breakpoint.</LI>
<PRE> ec none</PRE>
<PRE> dis &lt;breakpoint number&gt;</PRE>
<PRE> continue </PRE>
<LI>
Delete the space and save the file. </LI>
</OL>
<P>
To do another file, you can just enable the breakpoint once the new file is open and turn on the ec code.</P>


<P>
Helps fix up trashed GeoWrite documents.</P>



<H1 CLASS="refHeading">
<A NAME="IX_Threads:thawing">
 </A>
<A NAME="IX_thaw Swat command">
 </A>
thaw</H1>

<PRE CLASS="syntax">thaw [&lt;patient&gt;]
thaw :&lt;n&gt;
thaw &lt;patient&gt;:&lt;n&gt;
thaw &lt;id&gt;</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;thaw&quot;</DT><DD>Thaw the current thread.</DD>
<DT>
&quot;thaw term&quot; </DT><DD>Allows the application thread for &quot;term&quot; to run normally</DD>
<DT>
 &quot;thaw :1&quot; </DT><DD>Allows thread #1 of the current patient to run normally </DD>
<DT>
&quot;thaw 16c0h&quot; </DT><DD>Allows the thread whose handle is 16c0h to run normally.</DD>


</DL>
<P>
Thawing a thread restores its priority to what it was before the thread was frozen.</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_f.htm#IX_freeze Swat command">freeze</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Threads:displaying name in Swat">
 </A>
<A NAME="IX_threadname Swat command">
 </A>
threadname</H1>

<PRE CLASS="syntax">threadname &lt;id&gt;</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;threadname 21c0h&quot;	</DT><DD>
Returns the name of the thread whose handle id is 21c0h.</DD>


</DL>
<P>
Given a thread handle, produces the name of the thread, in the form &lt;patient&gt;:&lt;n&gt;</P>


<P>
If the handle is not one of those swat knows to be for a thread, this returns the string &quot;unknown.&quot;</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/Tcl/TTCL_f.htm#IX_thread Tcl structure">thread</A>,
<A HREF="../../Tools/Tcl/TTCL_f.htm#IX_patient Tcl structure">patient</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Threads:displaying with Swat">
 </A>
<A NAME="IX_threadstat Swat command">
 </A>
threadstat</H1>

<PRE CLASS="syntax">threadstat</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;threadstat&quot; </DT>


</DL>
<P>
Provides information about all threads and various thread queues and synchronization points in the system.</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_22.htm#IX_ps Swat command">ps</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Timing with Swat">
 </A>
<A NAME="IX_Breakpoints:timing breakpoints">
 </A>
<A NAME="IX_timebrk Swat command">
 </A>
timebrk</H1>

<PRE CLASS="syntax">timebrk &lt;start-addr&gt; &lt;end-addr&gt;+
 timebrk del &lt;timebrk&gt;+
 timebrk list
 timebrk time &lt;timebrk&gt;
 timebrk reset &lt;timebrk&gt;</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;timebrk LoadResourceData -f&quot; </DT><DD>
Calculate the time required to process a call to <CODE>
LoadResourceData()</CODE>
.</DD>
<DT>
 &quot;timebrk time 2&quot; </DT><DD>
Find the amount of time accumulated for timing breakpoint number 2.</DD>
<DT>
 &quot;timebrk reset 2&quot; </DT><DD>
Reset the counter for timebrk number two to zero.</DD>
<DT>
 &quot;timebrk list&quot; </DT><DD>
Print a list of the set timing breakpoints and their current counts and time. </DD>


</DL>
<P>
This command manipulates breakpoints that calculate the amount of time executing between their starting point and a specified ending point. The breakpoints also record the number of times their start is hit, so you can figure the average amount of time per hit.</P>

<UL>
<LI>
You can specify a place at which timing should end either as an address or as &quot;-f&quot;. If you use &quot;-f&quot;, timing will continue until the finish of the routine at whose start you've placed the breakpoint. Such a breakpoint may only be set at the start of a routine, as the stub hasn't the wherewithal to determine what the return address is at an arbitrary point within the function. </LI>
<LI>
You may specify more than one ending point. Timing will stop when execution reaches any of those points. </LI>
<LI>
When you've set a timing breakpoint, you will be returned a token of the form &quot;timebrk&lt;n&gt;&quot;, where &lt;n&gt; is some number. You use this token, or just the &lt;n&gt;, if you're not a program, wherever &lt;timebrk&gt; appears in the Usage description, above. </LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/Tcl/TTCL_f.htm#IX_brk Tcl structure:command reference">brk</A>,
<A HREF="../../Tools/Tcl/TTCL_f.htm#IX_cbrk Tcl structure:command reference">cbrk</A>,
<A HREF="../../Tools/SwatRef/SR_2c.htm#IX_tbrk Swat command">tbrk</A>.



<H1 CLASS="refHeading">
<A NAME="IX_timingProcessor Swat variable">
 </A>
timingProcessor</H1>

<PRE CLASS="syntax">var timingProcessor [i86|i88|i286|V20]</PRE>


<P>
The processor for which to generate cycle counts.</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_7.htm#IX_cycles Swat command">cycles</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Memory:monitoring with Swat">
 </A>
<A NAME="IX_tmem Swat command">
 </A>
tmem</H1>

<PRE CLASS="syntax">tmem</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;tmem&quot;</DT><DD>turn on memory tracing.</DD>


</DL>
<P>
Trace memory usage.</P>


<P>
The tmem command catches calls to DebugMemory, printing out the parameters passed (move, free, realloc, discard, swapout, swapin, modify).</P>



<H1 CLASS="refHeading">
<A NAME="IX_top-level Swat command">
 </A>
top-level</H1>

<PRE CLASS="syntax">top-level</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;top-level&quot;</DT><DD>Begin reading and interpreting Tcl commands in a nested interpreter.</DD>


</DL>
<P>
This is the top-most read-eval-print loop of the Swat Tcl interpreter.</P>


<P>
This command will only return if the user issues the &quot;break&quot; command. Otherwise it loops infinitely, reading and executing and printing the results of Tcl commands. </P>

<H1 CLASS="refHeading">
<A NAME="IX_Text:monitoring undo activity with Swat">
 </A>
<A NAME="IX_tundocalls Swat command">
 </A>
tundocalls</H1>

<PRE CLASS="syntax">tundocalls [-acPCrR]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;tundocalls -a&quot; Print out all text undo calls</DT>
<DT>
&quot;tundocalls -r&quot; Print run undo calls</DT>
<DT>
&quot;tundocalls -R&quot; Print replace undo calls</DT>
<DT>
&quot;tundocalls -c&quot; Print info when undo information is created</DT>
<DT>
&quot;tundocalls -cP&quot; Print info about para attributes only</DT>
<DT>
&quot;tundocalls -cC&quot; Print info about char attributes only</DT>
<DT>
&quot;tundocalls&quot;</DT>


</DL>
<P>
Prints out information about each undo call made to the text object.</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_23.htm#IX_ptext Swat command">ptext</A>,
<A HREF="../../Tools/SwatRef/SR_28.htm#IX_showcalls Swat command">showcalls</A>.


<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="SR_2c.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">symbolCompletion ...</A> 
<!-- to next --> | <A HREF="SR_2e.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">twalk ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
