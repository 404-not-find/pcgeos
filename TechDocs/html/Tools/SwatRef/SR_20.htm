<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: SR_20.htm,v 1.1 97/06/27 16:00:15 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>Swat Command Reference: pobjmon ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">

<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="SR_1f.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">pinst ...</A> 
<!-- to next --> | <A HREF="SR_21.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">print-cell ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->


<H1 CLASS="refHeading">
<A NAME="IX_Monikers:examining with Swat">
 </A>
<A NAME="IX_Objects:examining with Swat">
 </A>
<A NAME="IX_pobjmon Swat command">
 </A>
pobjmon</H1>

<PRE CLASS="syntax">pobjmon [&lt;address&gt;] [&lt;text only&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;pobjmon&quot;</DT><DD>print the VisMoniker from the gentree object at *DS:SI</DD>


</DL>
<UL>
<LI>
The &lt;address&gt; argument is the address of an object with a VisMoniker. If none is specified then *DS:SI is used.</LI>
<LI>
The &lt;text only&gt; argument returns a shortened description of the structure. To set it use something other than `0' for the second argument.</LI>
<LI>
The special object flags may be used to specify &lt;object&gt;.  For a list of these flags, see pobject.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_24.htm#IX_pvismon Swat command">pvismon</A>,
<A HREF="../../Tools/SwatRef/SR_1f.htm#IX_pobject Swat command:command reference">pobject</A>,
<A HREF="../../Tools/SwatRef/SR_2f.htm#IX_vistree Swat command">vistree</A>,
<A HREF="../../Tools/SwatRef/SR_11.htm#IX_gup Swat command:command reference">gup</A>,
<A HREF="../../Tools/SwatRef/SR_10.htm#IX_gentree Swat command:command reference">gentree</A>,
<A HREF="../../Tools/SwatRef/SR_15.htm#IX_impliedgrab Swat command">impliedgrab</A>,
<A HREF="../../Tools/SwatRef/SR_2c.htm#IX_systemobj Swat command">systemobj</A>.



<H1 CLASS="refHeading">
<A NAME="IX_pod Swat command">
 </A>
pod</H1>

<PRE CLASS="syntax">pod &lt;address&gt;</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;pod ds:si&quot;</DT>


</DL>
<P>
Print in output descriptor format (^l&lt;handle&gt;:&lt;chunk&gt;) the address passed.</P>


<P>
The address argument is the address of an object.</P>



<H1 CLASS="refHeading">
<A NAME="IX_Paths (graphics):displaying with Swat">
 </A>
<A NAME="IX_ppath Swat command">
 </A>
ppath</H1>

<PRE CLASS="syntax">ppath (current|docClip|winClip) [&lt;gstate&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;ppath&quot; </DT><DD>print the current path of the GState in ^hdi</DD>
<DT>
 &quot;ppath docClip ^hgstate&quot;</DT><DD>
 print the document clip path of the GState with handle <EM>
gstate</EM>
.</DD>
<DT>
 &quot;ppath winClip ds&quot; </DT><DD>
print the window clip path of the GState in the DS register.</DD>


</DL>
<P>
Print the structure of a path.</P>


<P>
Unique abbreviations for the path to be printed are allowed.</P>


<A NAME="IX_pquick Swat command">
 </A>

<H1 CLASS="refHeading">
pquick</H1>

<PRE CLASS="syntax">pquick [-v]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;pquick -v&quot;</DT><DD>Print out verbose information about the current quick transfer item.</DD>


</DL>
<P>
Prints out information about the current &quot;quick&quot; transfer item on the clipboard.</P>


<P>
If you give the &quot;-v&quot; flag, this will print out the contents of the different transfer formats, rather than just an indication of their types.</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_1f.htm#IX_pnormal Swat command">pnormal</A>,
<A HREF="../../Tools/SwatRef/SR_21.htm#IX_print-clipboard-item Swat command">print-clipboard-item</A>.



<H1 CLASS="refHeading">
<A NAME="IX_ByteFlags:printing flag fields">
 </A>
<A NAME="IX_WordFlags:printing flag fields">
 </A>
<A NAME="IX_Flags:examining flags fields">
 </A>
<A NAME="IX_precord Swat command">
 </A>
precord</H1>

<PRE CLASS="syntax">precord &lt;type&gt; &lt;value&gt; [&lt;silent&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;precord GSControl c0h&quot;</DT><DD>
print the <CODE>
GSControl</CODE>
 record with the top two bits set</DD>


</DL>
<P>
Print a record using a certain value.</P>

<UL>
<LI>
The &lt;type&gt; argument is the type of the record.</LI>
<LI>
The &lt;value&gt; argument is the value of the record.</LI>
<LI>
The &lt;silent&gt; argument will suppress the text indicating the record type and value. This is done by passing a non zero value like `1'. This is useful when precord is used by other functions.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_20.htm#IX_print Swat command:command reference">print</A>,
<A HREF="../../Tools/SwatRef/SR_1d.htm#IX_penum Swat command">penum</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Regions, graphics:examining with Swat">
 </A>
<A NAME="IX_Windows:clipping region">
 </A>
<A NAME="IX_preg Swat command">
 </A>
preg</H1>

<PRE CLASS="syntax">preg [-g] &lt;addr&gt;</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
 &quot;preg *es:W_appReg&quot; </DT><DD>
Prints the application-defined clipping region for the window pointed to by es.</DD>
<DT>
 &quot;preg -g ds:si&quot; </DT><DD>
Prints a &quot;graphical&quot; representation of the region beginning at ds:si</DD>


</DL>
<P>
Decodes a graphics GEOS region and prints it out, either numerically, or as a series of x's and spaces.</P>

<UL>
<LI>
This command can deal with parameterized regions. When printing a parameterized region with the -g flag, the region is printed as if it were unparameterized, with the offsets from the various PARAM constants used as the coordinates.</LI>
<LI>
If no address is given, this will use the last-accessed address (as the &quot;bytes&quot; and &quot;words&quot; commands do). It sets the last-accessed address, for other commands to use, to the first byte after the region definition.</LI>
</UL>



<H1 CLASS="refHeading">
<A NAME="IX_print Swat command:command reference">
 </A>
print</H1>

<PRE CLASS="syntax">print &lt;expression&gt;</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;print 56h&quot;</DT><DD>print the constant 56h in various formats</DD>
<DT>
&quot;print ax - 10&quot;</DT><DD>
print ax less 10 decimal</DD>
<DT>
&quot;print ^l31a0h:001eh&quot;</DT><DD>
print the absolute address of the pointer</DD>


</DL>
<P>
Print the value of an expression.</P>

<UL>
<LI>
The &lt;expression&gt; argument is usually an address that has a type or that is given a type by casting and may span multiple arguments. The contents of memory of the given type at that address is what's printed. If the expression has no type, its offset part is printed in both hex and decimal. This is used for printing registers, for example.</LI>
<LI>
The first argument may contain the following flags (which start with `-'):</LI>
<DL>
<DT>
<STRONG>
x</STRONG>
</DT><DD>integers (bytes, words, dwords if dwordIsPtr false) printed in hex</DD>
<DT>
<STRONG>
d</STRONG>
</DT><DD>integers printed in decimal</DD>
<DT>
<STRONG>
o</STRONG>
</DT><DD>integers printed in octal c bytes printed as characters (byte arrays printed as strings, byte variables/fields printed as character followed by integer equivalent)</DD>
<DT>
<STRONG>
C</STRONG>
</DT><DD>bytes treated as integers </DD>
<DT>
<STRONG>
a</STRONG>
 </DT><DD>align structure fields</DD>
<DT>
<STRONG>
A</STRONG>
</DT><DD>Don't align structure fields</DD>
<DT>
<STRONG>
p</STRONG>
</DT><DD>dwords are far pointers</DD>
<DT>
<STRONG>
P</STRONG>
</DT><DD>dwords aren't far pointers</DD>
<DT>
<STRONG>
r</STRONG>
 </DT><DD>parse regions</DD>
<DT>
<STRONG>
R</STRONG>
 </DT><DD>don't try to parse regions</DD>
</DL>
<LI>
 These flags operate on the following Tcl variables:</LI>
<DL>
<DT>
<STRONG>
intFormat</STRONG>
</DT><DD>A printf format string for integers.</DD>
<DT>
<STRONG>
bytesAsChar</STRONG>
	</DT><DD>
Treat bytes as characters if non-zero.</DD>
<DT>
<STRONG>
alignFields</STRONG>
	</DT><DD>
Align structure fields if non-zero.</DD>
<DT>
<STRONG>
dwordIsPtr</STRONG>
</DT><DD>DWords are far pointers if non-zero.</DD>
<DT>
<STRONG>
noStructEnum</DT><DD>
</STRONG>
If non-zero, doesn't print the &quot;struct&quot;, &quot;enum&quot; or &quot;record&quot; before the name of a structured/enumerated type -- just gives the type name.</DD>
<DT>
<STRONG>
printRegions</DT><DD>
</STRONG>
If non-zero, prints what a Region points to (bounds and so on).</DD>
<DT>
<STRONG>
condenseSpecial</DT><DD>
</STRONG>
If non-zero, condense special structures (Rectangles, OutputDescriptors, ObjectDescriptors, TMatrixes and all fixed-point numbers) to one line.</DD>
</DL>
<LI>
This does not print enumerations. Use penum for that.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_20.htm#IX_precord Swat command">precord</A>,
<A HREF="../../Tools/SwatRef/SR_1d.htm#IX_penum Swat command">penum</A>,
<A HREF="../../Tools/SwatRef/SR_1.htm#IX__print Swat command">_print</A>.


<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="SR_1f.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">pinst ...</A> 
<!-- to next --> | <A HREF="SR_21.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">print-cell ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
