<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: SR_f.htm,v 1.1 97/06/27 16:01:24 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>Swat Command Reference: fpstack ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">

<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="SR_e.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">flagwin ...</A> 
<!-- to next --> | <A HREF="SR_10.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">func ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->


<H1 CLASS="refHeading">
<A NAME="IX_fpstack Swat command">
 </A>
fpstack</H1>

<PRE CLASS="syntax">fpstack</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;fpstack&quot;</DT><DD>Prints out the hardware and software floating point stacks for the patient.</DD>
</DL>
<P>
Prints out the hardware and software floating point stacks for the patient. </P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_f.htm#IX_fpu-state Swat command">fpu-state</A>.



<H1 CLASS="refHeading">
<A NAME="IX_fpu-state Swat command">
 </A>
fpu-state</H1>

<PRE CLASS="syntax">fpustate [&lt;mode&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;fpustate&quot;</DT><DD>Print out the state of the coprocessor.</DD>
<DT>
&quot;fpustate w&quot;</DT><DD>Dumps actual words of the numbers.</DD>
</DL>
<P>
Prints out the current state of the coprocessor, if any.</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_f.htm#IX_fpstack Swat command">fpstack</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Stack:examining">
 </A>
<A NAME="IX_frame Swat command:command reference">
 </A>
frame</H1>

<PRE CLASS="syntax">frame top
frame cur
frame get &lt;ss&gt; &lt;sp&gt; &lt;cs&gt; &lt;ip&gt;
frame next &lt;frame&gt;
frame prev &lt;frame&gt;
frame function [&lt;frame&gt;]
frame funcsym [&lt;frame&gt;]
frame scope [&lt;frame&gt;]
frame info [&lt;frame&gt;]
frame patient [&lt;frame&gt;]
frame register &lt;regName&gt; [&lt;frame&gt;]
frame set [&lt;frame&gt;]
frame setreg &lt;regName&gt; &lt;value&gt; [&lt;frame&gt;]
frame +&lt;number&gt;
frame -&lt;number&gt;
frame &lt;number&gt;</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;var f [frame top]&quot;</DT><DD>
 Fetches the token for the frame at the top of the current thread's stack and stores it in the variable &quot;f&quot;</DD>
<DT>
 &quot;var f [frame next $f]&quot;</DT><DD>
 Fetches the token for the next frame up the stack (away from the top) from that whose token is in $f</DD>
<DT>
<A NAME="IX_Registers:value within a frame">
 </A>
 &quot;frame register ax $f&quot; </DT><DD>
Returns the value of the AX register in the given frame.</DD>
<DT>
 &quot;frame 1&quot; </DT><DD>Sets the current frame for the current thread to be the top-most one.</DD>
</DL>
<P>
This command provides access to the stack-decoding functions of swat. Most of the subcommands deal with frame tokens, but a few also handle frame numbers, for the convenience of the user.</P>

<UL>
<LI>
Subcommands may be abbreviated uniquely.</LI>
<LI>
Stack decoding works by a heuristic method, rather than relying on the presence of a created stack frame pointed to by BP in each function. Because of this, it can occasionally get confused. </LI>
<LI>
Frame tokens are valid only while the target machine is stopped and are invalidated when it is continued.</LI>
<LI>
Each frame records the address on the stack where each register was most-recently pushed (i.e. by the frame closest to it on the way toward the top of the stack). Register pushes are looked for only at the start of a function in what can be considered the function prologue.</LI>
<LI>
&quot;frame register&quot; and &quot;frame setreg&quot; allow you to get or set the value held in a register in the given frame. For &quot;setreg&quot;, &lt;value&gt; is a standard address expression, only the offset of which is used to set the register.</LI>
<LI>
&quot;frame register&quot; returns all registers but &quot;pc&quot; as a decimal number. &quot;pc&quot; is formatted as two hex numbers (each preceded by &quot;0x&quot;) separated by a colon.</LI>
<LI>
&quot;frame info&quot; prints out information on where the register values for &quot;frame register&quot; and &quot;frame setreg&quot; are coming from/going to for the given or currently-selected frame. Because of the speed that can be gained by only pushing registers when you absolutely have to, there are many functions in GEOS that do not push the registers they save at their start, so Swat does not notice that they are actually saved. It is good to make sure a register value is coming from a reliable source before deciding your program has a bug simply because the value returned by &quot;frame register&quot; is invalid.</LI>
<LI>
For any subcommand where the &lt;frame&gt; token is optional, the currently- selected frame will be used if you give no token.</LI>
<LI>
&quot;frame cur&quot; returns the token for the currently-selected stack frame.</LI>
<LI>
&quot;frame set&quot; is what sets the current frame, when set by a Tcl procedure.</LI>
<LI>
&quot;frame +&lt;number&gt;&quot; selects the frame &lt;number&gt; frames up the stack (away from the top) from the current frame. &quot;frame -&lt;number&gt;&quot; goes the other way.</LI>
<LI>
&quot;frame &lt;number&gt;&quot; selects the frame with the given number, where the top-most frame is considered frame number 1 and numbers count up from there.</LI>
<LI>
<A NAME="IX_Routines:current within frame">
 </A>
&quot;frame funcsym&quot; returns the symbol token for the function active in the given (or current) frame. If no known function is active, you get &quot;nil&quot;.</LI>
<LI>
&quot;frame scope&quot; returns the full name of the scope that is active in the given (or current) frame. This will be different from the function if, for example, one is in the middle of an &quot;if&quot; that contains variables that are local to it only.</LI>
<LI>
&quot;frame function&quot; returns the name of the function active in the given (or current) frame. If no known function is active, you get the CS:IP for the frame, formatted as two hex numbers separated by a colon.</LI>
<LI>
&quot;frame patient&quot; returns the token for the patient that owns the function in which the frame is executing.<A NAME="marker=833372">
 </A>
</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_2.htm#IX_addr-parse Swat command">addr-parse</A>,
<A HREF="../../Tools/SwatRef/SR_2b.htm#IX_switch Swat command:command reference">switch</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Display windows in Swat:displaying current Stack frame">
 </A>
<A NAME="IX_framewin Swat command">
 </A>
framewin</H1>

<PRE CLASS="syntax">framewin [del]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;framewin&quot;</DT><DD>
Creates a single-line window to display info about the current stack frame.</DD>
<DT>
&quot;framewin del&quot;</DT><DD>
Deletes the window created by a previous &quot;framewin&quot;.</DD>
</DL>
<P>
Creates a window in which the current stack frame is always displayed.</P>


<UL>
<LI>
Only one frame window can be active at a time.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_a.htm#IX_display Swat command">display</A>,
<A HREF="../../Tools/SwatRef/SR_25.htm#IX_regwin Swat command">regwin</A>,
<A HREF="../../Tools/SwatRef/SR_29.htm#IX_srcwin Swat command">srcwin</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Threads:freezing">
 </A>
<A NAME="IX_freeze Swat command">
 </A>
freeze</H1>

<PRE CLASS="syntax">freeze [&lt;patient&gt;]
freeze :&lt;n&gt;
freeze &lt;patient&gt;:&lt;n&gt;
freeze &lt;id&gt; </PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;freeze&quot;</DT><DD>Freezes the current thread.</DD>
<DT>
&quot;freeze term&quot; </DT><DD>
Freezes the application thread for &quot;term&quot;</DD>
<DT>
&quot;freeze :1&quot; </DT><DD>Freezes thread #1 of the current patient</DD>
<DT>
&quot;freeze 16c0h&quot; </DT><DD>
Freezes the thread whose handle is 16c0h.</DD>
</DL>
<P>
Freezing a thread prevents a thread from running unless it's the only thread that's runnable in the entire system.</P>

<UL>
<LI>
A frozen thread is not dead in the water, as it will still run if nothing else is runnable. </LI>
<LI>
Freezing a thread is most useful when debugging multi-threaded applications where a bug appears to be caused by a timing problem or race condition between the two threads. Freezing one of the threads ensures a consistent timing relationship between the two threads and allows the bug to be reproduced much more easily. </LI>
<LI>
The freezing of a thread is accomplished by setting its base and current priorities to as high a number as possible (255) thereby making the thread the least-favored thread in the system. The previous priority can be restored using the &quot;thaw&quot; command.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_2d.htm#IX_thaw Swat command">thaw</A>.



<H1 CLASS="refHeading">
<A NAME="IX_fullscreen">
 </A>
fullscreen</H1>

<PRE CLASS="syntax">fullscreen</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;fullscreen&quot;</DT>
<P>
Prints the full screen hierarchy from the system object down.</P>


</DL>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="SR_e.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">flagwin ...</A> 
<!-- to next --> | <A HREF="SR_10.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">func ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
