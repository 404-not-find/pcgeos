<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: SR_29.htm,v 1.1 97/06/27 16:00:38 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>Swat Command Reference: smatch ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">

<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="SR_28.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">showcalls ...</A> 
<!-- to next --> | <A HREF="SR_2a.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">stdpaths ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->


<H1 CLASS="refHeading">
<A NAME="IX_smatch Swat command">
 </A>
smatch</H1>

<P>
Look for symbols of a given class by pattern. First argument &lt;pattern&gt; is the pattern for which to search (it's a standard Swat pattern using shell wildcard characters). Optional second argument &lt;class&gt; is the class of symbol for which to search and is given directly to the &quot;symbol match&quot; command. Defaults to &quot;any&quot;.</P>



<H1 CLASS="refHeading">
<A NAME="IX_sort Swat command">
 </A>
sort</H1>

<PRE CLASS="syntax">sort [-r] [-n] [-u] &lt;list&gt;</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;sort -n $ids&quot;</DT><DD>
Sorts the list in $ids into ascending numeric order.</DD>


</DL>
<P>
This sorts a list into ascending or descending order, lexicographically or numerically.</P>

<UL>
<LI>
If &quot;-r&quot; is given, the sort will be in descending order. </LI>
<LI>
If &quot;-u&quot; is given, duplicate elements will be eliminated. </LI>
<LI>
If &quot;-n&quot; is given, the elements are taken to be numbers (with the usual radix specifiers possible) and are sorted accordingly. </LI>
<LI>
The sorted list is returned.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_18.htm#IX_map Swat command">map</A>,
<A HREF="../../Tools/Tcl/TTCL_d.htm#IX_foreach Tcl command">foreach</A>,
<A HREF="../../Tools/SwatRef/SR_18.htm#IX_mapconcat Swat command">mapconcat</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Threads:monitoring with Swat">
 </A>
<A NAME="IX_spawn Swat command">
 </A>
spawn</H1>

<PRE CLASS="syntax">spawn &lt;processName&gt; [&lt;addr&gt;]</PRE>


<P>
Set a temporary breakpoint in a not-yet-existent process/thread, waiting for a new one to be created. First argument is the permanent name of the process to watch for. Second argument is an address expression specifying where to place the breakpoint. If no second argument is present, the machine will be stopped and Swat will return to the command level when the new thread is spawned by GEOS.</P>

<UL>
<LI>
This can also be used to catch the spawning of a new thread.</LI>
<LI>
If the machine stops before the breakpoint can be set, you'll have to do this again.</LI>
</UL>

<H1 CLASS="refHeading">
<A NAME="IX_Display windows in Swat:displaying source code">
 </A>
<A NAME="IX_Source code:displaying with Swat">
 </A>
<A NAME="IX_srcwin Swat command">
 </A>
srcwin</H1>

<PRE CLASS="syntax">srcwin &lt;numLines&gt;</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;srcwin 6&quot;</DT><DD>Show 6 lines of source context around CS:IP</DD>
<DT>
&quot;srcwin 0&quot;</DT><DD>Show no source lines, i.e. turn the display off.</DD>


</DL>
<P>
Set the number of lines of source code to be displayed when the target machine stops.</P>

<UL>
<LI>
Only one source display may be active at a time.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_a.htm#IX_display Swat command">display</A>,
<A HREF="../../Tools/SwatRef/SR_25.htm#IX_regwin Swat command">regwin</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Stepping through code:C code">
 </A>
<A NAME="IX_sstep Swat command">
 </A>
sstep</H1>

<PRE CLASS="syntax">sstep [&lt;default command&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;ss&quot;</DT><DD>enter source step mode</DD>
<DT>
&quot;sstep n&quot;</DT><DD>enter source step mode, &lt;ret&gt; does a next command</DD>


</DL>
<P>
Step through the execution of the current patient by source lines. This is THE command for stepping through high-level (e.g., C) code.</P>
<UL>
<LI>
The &lt;default&gt; command argument determines what pressing the &lt;Return&gt; key does. By default, &lt;Return&gt; executes a step command. Any other command listed below may be substituted by passing the letter of the command.</LI>
<LI>
Sstep steps through the patient line by line, printing where the instruction pointer is and what line is to be executed Sstep waits for the user to type a command which it performs and then prints out again where sstep is executing.</LI>
<LI>
This is a list of sstep commands:</LI>
<DL>
<DT>
<STRONG>
q</STRONG>
, &lt;<STRONG>
Esc</STRONG>
&gt;,` `</DT><DD>Stops sstep and returns to command level.</DD>
<DT>
<STRONG>
b</STRONG>
</DT><DD>Toggles a breakpoint at the current location.</DD>
<DT>
<STRONG>
c</STRONG>
</DT><DD>Stops sstep and continues execution.</DD>
<DT>
<STRONG>
n</STRONG>
</DT><DD>Continues to the next source line, skipping procedure calls, repeated string instructions, and software interrupts. Only stops when the machine returns to the right context (i.e. the stack pointer and current thread are the same as they are when the `n' command was given).</DD>
<DT>
<STRONG>
l</STRONG>
</DT><DD>Goes to the next library routine.</DD>
<DT>
<STRONG>
N</STRONG>
</DT><DD>Like n, but stops whenever the breakpoint is hit, whether you're in the same frame or not.</DD>
<DT>
<STRONG>
M</STRONG>
</DT><DD><A NAME="IX_Methods:stopping in with Swat">
 </A>
Goes to the next message called. Doesn't work when the message is not handled anywhere.</DD>
<DT>
<STRONG>
f</STRONG>
</DT><DD>Finishes out the current stack frame.</DD>
<DT>
<STRONG>
s</STRONG>
, &lt;<STRONG>
Ret</STRONG>
&gt;</DT><DD>Steps one source line</DD>
<DT>
<STRONG>
S</STRONG>
</DT><DD>Skips the current instruction</DD>
<DT>
<STRONG>
J</STRONG>
</DT><DD>Jump on a conditional jump, even when &quot;Will not jump&quot; appears. This does not change the condition codes.</DD>
<DT>
<STRONG>
g</STRONG>
</DT><DD>Executes the `go' command with the rest of the line as arguments.</DD>
<DT>
<STRONG>
e</STRONG>
</DT><DD>Executes a Tcl command and returns to the prompt.</DD>
<DT>
<STRONG>
R</STRONG>
</DT><DD>References either the function to be called or the function currently executing.</DD>
<DT>
<STRONG>
h</STRONG>
, <STRONG>
?</STRONG>
</DT><DD>A help message.</DD>
</DL>
<LI>
Emacs will load in the correct file executing and following the lines where sstep is executing if its server is started and if ewatch is on in swat. If ewatch is off emacs will not be updated.</LI>
<LI>
If the current patient isn't the actual current thread, sstep waits for the patient to wake up before single-stepping it.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_16.htm#IX_istep Swat command:command reference">istep</A>,
<A HREF="../../Tools/SwatRef/SR_17.htm#IX_listi Swat command:command reference">listi</A>.


<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="SR_28.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">showcalls ...</A> 
<!-- to next --> | <A HREF="SR_2a.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">stdpaths ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
