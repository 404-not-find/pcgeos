<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: SR_12.htm,v 1.1 97/06/27 15:59:36 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>Swat Command Reference: handsum ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">

<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="SR_11.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">getenv ...</A> 
<!-- to next --> | <A HREF="SR_13.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">help ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->


<H1 CLASS="refHeading">
<A NAME="IX_Handles:displaying with Swat">
 </A>
<A NAME="IX_handsum Swat command">
 </A>
handsum</H1>

<PRE CLASS="syntax">handsum</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;handsum&quot; </DT><DD>Summarize the use to which the handle table is being put.</DD>
</DL>
<P>
This command analyzes the handle table and prints out a list of the number of handles being used by each geode, and for what purpose.</P>

<UL>
<LI>
The columns of the output are labeled somewhat obscurely, owing to horizontal-space constraints. The headings, and their meanings are:</LI>
<DL>
<DT>
 <STRONG>
Res</STRONG>
 </DT><DD>Resource handles (i.e. handles for data stored in the geode's executable)</DD>
<DT>
 <STRONG>
Mem</STRONG>
 </DT><DD>Non-resource memory handles</DD>
<DT>
 <STRONG>
File</STRONG>
 </DT><DD>Open files</DD>
<DT>
 <STRONG>
Thds</STRONG>
 </DT><DD>Threads</DD>
<DT>
 <STRONG>
Evs</STRONG>
 </DT><DD>Recorded events</DD>
<DT>
 <STRONG>
Qs</STRONG>
 </DT><DD>Event queues</DD>
<DT>
 <STRONG>
Sems</STRONG>
 </DT><DD>Semaphores</DD>
<DT>
 <STRONG>
EDat</STRONG>
 </DT><DD>Data for recorded events</DD>
<DT>
 <STRONG>
Tim</STRONG>
 </DT><DD>Timers</DD>
<DT>
 <STRONG>
SB</STRONG>
 </DT><DD>Saved blocks (handles tracking memory/resource handles whose contents will go to an application's state file)</DD>
<DT>
 <STRONG>
VMF</STRONG>
 </DT><DD>VM files</DD>
</DL>
<LI>
The &quot;handles&quot; command is good at printing out all the handles for a particular geode, but it's generally too verbose to use for the entire handle table. That's why this command exists. </LI>
<LI>
It's a good idea to issue the command &quot;dcache length 4096&quot; before executing this command, as it ensures the entire handle table will end up in Swat's data cache, for quick access if you want to use the &quot;handles&quot; command immediately afterward. </LI>
</UL>

<H1 CLASS="refHeading">
<A NAME="IX_hbrk Swat command">
 </A>
hbrk</H1>

<PRE CLASS="syntax"><A NAME="IX_Memory:monitoring with Swat"> </A><A NAME="IX_Heap:monitoring with Swat"> </A><A NAME="IX_Breakpoints:&quot;hardware breakpoints&quot;"> </A><A NAME="IX_hbrk Swat command"> </A>hbrk &lt;address&gt; (byte|word) (match|mismatch) &lt;value&gt;</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;hbrk scrollTab+10 byte match 0&quot;</DT><DD>
print message handlers until a zero is written at scrollTab+10.</DD>
<DT>
&quot;hbrk OLScrollButton+3 word mismatch 0x654f&quot;</DT><DD>
Break when the word at OLScrollButton+3 is destroyed.</DD>
</DL>
<P>
Break when a memory location changes.</P>

<UL>
<LI>
The &lt;address&gt; argument is the address to watch for a change.</LI>
<LI>
The (byte|word) argument indicates whether to watch a byte or a word for a change.</LI>
<LI>
The (match|mismatch) argument indicates whether to break if the value at the address matches or mismatches the value hbrk is called with.</LI>
<LI>
hbrk emulates a hardware breakpoint by checking at every message call to see if a location in memory has been written to. If so, swat breaks and tells between which two messages the write occurred. The information and the return stack will hopefully guide you to the offending line of code.</LI>
<LI>
The command creates two breakpoints. Remove these to get rid of the hardware breakpoint.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/Tcl/TTCL_f.htm#IX_brk Tcl structure:command reference">brk</A>,
<A HREF="../../Tools/SwatRef/SR_19.htm#IX_mwatch Swat command">mwatch</A>,
<A HREF="../../Tools/SwatRef/SR_28.htm#IX_showcalls Swat command">showcalls</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Heap:heapspace Swat command">
 </A>
<A NAME="IX_heapspace Swat command">
 </A>
heapspace</H1>

<PRE CLASS="syntax">heapspace &lt;geode&gt;
heapspace total 
heapspace syslib </PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;heapspace geomanager&quot; </DT><DD>
print out &quot;heapspace&quot; value for geomanager</DD>
<DT>
&quot;heapspace total&quot; </DT><DD>
print out maxTotalHeapSpace</DD>
<DT>
&quot;heapspace syslib&quot;</DT><DD>
print out space being used by system libraries.</DD>
</DL>
<P>
Prints out how much space the program requires on the heap. This value may then be used in a &quot;heapspace&quot; line of the program's .gp field. This command only determines present usage--to determine the most heapspace your geode will ever use requires that you make it allocate as much space as it ever will. This means pulling down all menus, opening all dialog boxes, and generally building out all UI gadgetry. The value this command prints is roughly the non-discardable heap usage by the app and any transient libraries that it depends on, plus an additional amount for thread activity.</P>
<P>
When using this command, you should run your application on the device it is to run on. One or more system libraries may be XIP (running from ROM) on the device, but run from RAM on your target PC's emulator. Thus, to get a more accurate picture of memory usage, run the application on the planned device.</P>


<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="SR_11.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">getenv ...</A> 
<!-- to next --> | <A HREF="SR_13.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">help ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
