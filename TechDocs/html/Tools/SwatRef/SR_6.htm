<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: SR_6.htm,v 1.1 97/06/27 16:01:05 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>Swat Command Reference: car ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">

<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="SR_5.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">bits ...</A> 
<!-- to next --> | <A HREF="SR_7.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">continue-patient ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->


<H1 CLASS="refHeading">
<A NAME="IX_Lists in Swat:car Swat command">
 </A>
<A NAME="IX_car Swat command">
 </A>
car</H1>

<PRE CLASS="syntax">car &lt;list&gt;</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;car $args&quot;</DT><DD>Returns the first element of $args.</DD>
</DL>
<P>
Returns the first element of a list.</P>


<P>
This is a lisp-ism for those most comfortable with that language. It can be more-efficiently implemented by saying [index &lt;list&gt; 0]</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_6.htm#IX_cdr Swat command">cdr</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Lists in Swat:cdr Swat command">
 </A>
<A NAME="IX_cdr Swat command">
 </A>
cdr</H1>

<PRE CLASS="syntax">cdr &lt;list&gt;</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;cdr $args&quot;</DT><DD>Returns the remaining arguments yet to be processed.</DD>
</DL>
<P>
Returns all but the first element of a list.</P>


<P>
This is a lisp-ism for those most comfortable with that language. It can be more-efficiently implemented by saying [range &lt;list&gt; 1 end]</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_6.htm#IX_car Swat command">car</A>.



<H1 CLASS="refHeading">
<A NAME="IX_classes Swat command">
 </A>
classes</H1>

<PRE CLASS="syntax">classes [&lt;patient&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;classes &quot;</DT><DD>Print list of classes in current patient.</DD>
<DT>
&quot;classes myapp&quot;</DT><DD>
Print list of classes in myapp patient.</DD>
</DL>
<P>
Prints list of classes defined by the given patient.</P>


<P>
Remember that &quot;brk&quot; will take address arguments of the form &lt;class&gt;::&lt;message&gt;, so you can use this function and set a breakpoint using &quot;brk MyTextClass::<CODE>
MSG_MY_TEXT_MESSAGE</CODE>
&quot;. If you need a breakpoint that's limited to one object, use objbrk instead.</P>



<H1 CLASS="refHeading">
<A NAME="IX_Registers:flag register:clearing flags with Swat">
 </A>
<A NAME="IX_Flags register:clearing with Swat">
 </A>
<A NAME="IX_clrcc Swat command">
 </A>
clrcc</H1>

<PRE CLASS="syntax">clrcc &lt;flag&gt; [&lt;value&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;clrcc c&quot;</DT><DD>clear the carry flag</DD>
</DL>
<P>
Clear a flag in the target computer.</P>


<P>
The first argument is the first letter of the flag to clear. The following is a list of the flags:<BR>
<STRONG>
t</STRONG>
		trap<BR>
<STRONG>
i	</STRONG>
	interrupt enable<BR>
<STRONG>
d</STRONG>
		direction<BR>
<STRONG>
o</STRONG>
		overflow<BR>
<STRONG>
s	</STRONG>
	sign<BR>
<STRONG>
z</STRONG>
		zero<BR>
<STRONG>
a	</STRONG>
	auxiliary carry<BR>
<STRONG>
p</STRONG>
		parity<BR>
<STRONG>
c	</STRONG>
	carry</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_27.htm#IX_setcc Swat command">setcc</A>,
<A HREF="../../Tools/SwatRef/SR_6.htm#IX_compcc Swat command">compcc</A>,
<A HREF="../../Tools/SwatRef/SR_10.htm#IX_getcc Swat command">getcc</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Display windows in Swat:columns Swat command">
 </A>
<A NAME="IX_columns Swat command">
 </A>
columns</H1>

<PRE CLASS="syntax">columns</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;columns&quot;</DT><DD>
Return the number of columns on the screen.</DD>
</DL>
<P>
Retrieves the width of the screen, if known, to allow various commands (most notably &quot;print&quot;) to size their output accordingly.</P>



<H1 CLASS="refHeading">
<A NAME="IX_Registers:flags register:complementing flags with Swat">
 </A>
<A NAME="IX_Flags register:complementing flags with Swat">
 </A>
<A NAME="IX_compcc Swat command">
 </A>
compcc</H1>

<PRE CLASS="syntax">compcc &lt;flag&gt;</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;compcc c&quot;</DT><DD>complement the carry flag</DD>
</DL>
<P>
Complement a flag in the target computer.</P>


<P>
The first argument is the first letter of the flag to complement. The following is a list of the flags:<BR>
<STRONG>
t</STRONG>
		trap<BR>
<STRONG>
i	</STRONG>
	interrupt enable<BR>
<STRONG>
d</STRONG>
		direction<BR>
<STRONG>
o	</STRONG>
	overflow<BR>
<STRONG>
s	</STRONG>
	sign<BR>
<STRONG>
z</STRONG>
		zero<BR>
<STRONG>
a</STRONG>
		auxiliary carry<BR>
<STRONG>
p</STRONG>
		parity<BR>
<STRONG>
c	</STRONG>
	carry<BR>
This command is handy to insert in a patch to flip a flag bit.</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_27.htm#IX_setcc Swat command">setcc</A>,
<A HREF="../../Tools/SwatRef/SR_6.htm#IX_clrcc Swat command">clrcc</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Strings in Swat:common prefix">
 </A>
<A NAME="IX_Command completion in Swat:completion Swat command">
 </A>
<A NAME="IX_Swat:command completion">
 </A>
<A NAME="IX_completion Swat command">
 </A>
completion</H1>

<PRE CLASS="syntax">completion &lt;list-of-names&gt;</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;completion {martial marital}&quot;</DT><DD>
Returns &quot;mar,&quot; the common prefix.</DD>
</DL>
<P>
Figures the common prefix from a set of strings. Used for the various forms of completion supported by top-level-read.</P>

<H1 CLASS="refHeading">
<A NAME="IX_Structures:formatting Swat output">
 </A>
<A NAME="IX_condenseSmall Swat variable">
 </A>
condenseSmall</H1>

<PRE CLASS="syntax">var condenseSmall [(0|1)]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;var condenseSpecial 0&quot; </DT><DD>
Force even small structures to be printed one field per line.</DD>
</DL>
<P>
Controls whether &quot;print&quot; attempts to condense the output by printing small (&lt; 4 bytes) structures (which are usually records in assembly language) as a list of &lt;name&gt; = &lt;int&gt;, where &lt;name&gt; is the field name and &lt;int&gt; is a signed integer.</P>


<P>
The default value of this variable is one.</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_20.htm#IX_print Swat command:command reference">print</A>,
<A HREF="../../Tools/SwatRef/SR_6.htm#IX_condenseSpecial Swat variable">condenseSpecial</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Structures:formatting Swat output">
 </A>
<A NAME="IX_condenseSpecial Swat variable">
 </A>
condenseSpecial</H1>

<PRE CLASS="syntax">var condenseSpecial [(0|1)]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;var condenseSpecial 0&quot; </DT><DD>
Turns off the special formatting of various types of structures by &quot;print&quot;.</DD>
</DL>
<P>
Controls the formatting of certain structures in more-intuitive ways than the bare structure fields.</P>

<UL>
<LI>
The default value of this variable is 1. </LI>
<LI>
The current list of structures treated specially are: <CODE>
Semaphore</CODE>, <CODE>
Rectangle</CODE>, Output Descriptor, <CODE>
TMatrix</CODE>, <CODE>
BBFixed</CODE>, <CODE>
WBFixed</CODE>, <CODE>
WWFixed</CODE>, <CODE>
DWFixed</CODE>, <CODE>
WDFixed</CODE>, <CODE>
DDFixed</CODE>, <CODE>
FileDate</CODE>, <CODE>
FileTime</CODE>, <CODE>
FloatNum</CODE>, <CODE>
SpecWinSizeSpec</CODE>.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_20.htm#IX_print Swat command:command reference">print</A>,
<A HREF="../../Tools/SwatRef/SR_6.htm#IX_condenseSmall Swat variable">condenseSmall</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Errors:continuing after in Swat">
 </A>
<A NAME="IX_cont Swat command:command reference">
 </A>
cont</H1>

<PRE CLASS="syntax">cont</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;cont&quot;</DT><DD>continue execution</DD>
<DT>
&quot;c&quot;</DT><DD>continue execution</DD>

</DL>
<P>
Continue GEOS.</P>

<UL>
<LI>
If the global variable <CODE>
waitForPatient</CODE>
 is non-zero, this command waits for the machine to stop again before it returns.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_11.htm#IX_go Swat command">go</A>,
<A HREF="../../Tools/SwatRef/SR_16.htm#IX_istep Swat command:command reference">istep</A>,
<A HREF="../../Tools/SwatRef/SR_2a.htm#IX_step Swat command">step</A>,
<A HREF="../../Tools/SwatRef/SR_19.htm#IX_next Swat command">next</A>,
<A HREF="../../Tools/SwatRef/SR_a.htm#IX_detach Swat command:command reference">detach</A>,
<A HREF="../../Tools/SwatRef/SR_24.htm#IX_quit Swat command:command reference">quit</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Content:finding with Swat">
 </A>
<A NAME="IX_content Swat command">
 </A>
content</H1>

<PRE CLASS="syntax">content</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;vistree [content]&quot;</DT><DD>
 print the visual tree of the content of the view under the mouse.</DD>
</DL>
<P>
Print the address of the content under the view with the current implied grab. </P>

<UL>
<LI>
This command is normally used with vistree to get the visual tree of a content by placing the mouse on the content's view window and issuing the command in the example. </LI>
<LI>
If the pointer is not over a GenView object, this is the same as the &quot;impliedgrab&quot; command.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_2c.htm#IX_systemobj Swat command">systemobj</A>,
<A HREF="../../Tools/SwatRef/SR_10.htm#IX_gentree Swat command:command reference">gentree</A>,
<A HREF="../../Tools/SwatRef/SR_15.htm#IX_impliedgrab Swat command">impliedgrab</A>.


<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="SR_5.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">bits ...</A> 
<!-- to next --> | <A HREF="SR_7.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">continue-patient ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
