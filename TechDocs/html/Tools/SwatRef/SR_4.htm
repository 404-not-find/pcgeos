<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: SR_4.htm,v 1.1 97/06/27 16:00:59 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>Swat Command Reference: assign ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">

<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="SR_3.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">alias ...</A> 
<!-- to next --> | <A HREF="SR_5.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">bits ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->


<H1 CLASS="refHeading">
<A NAME="IX_Variables:assign Swat command">
 </A>
<A NAME="IX_Registers:setting value with Swat">
 </A>
<A NAME="IX_assign Swat command:command reference">
 </A>
assign</H1>

<PRE CLASS="syntax">assign &lt;addr&gt; &lt;value&gt;</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;assign ip ip+2&quot; 	</DT><DD>
Add 2 to the value of IP in the current frame.</DD>
<DT>
 &quot;assign {word ds:si} 63h&quot; </DT><DD>
Store 63h in the word at ds:si</DD>
</DL>
</DL>
<P>
Performs an assignment to a patient variable or register (but not to an element of the value history). The first argument is the variable or register to be assigned and the second argument is the value to assign to it (which may be a regular address expression). If the first expression doesn't indicate a type, &quot;word&quot; is assumed. Only <CODE>
byte</CODE>
, <CODE>
word</CODE>
 or <CODE>
dword</CODE>
 types are supported.</P>


<UL>
<LI>
When assigning to an sptr, the value assigned will be the segment of the block indicated by the &lt;value&gt;, unless &lt;value&gt; is an absolute address (or just a number), in which case the low 16 bits of the offset will be used instead.</LI>
<LI>
Similar behavior occurs when assigning to an fptr, except if the &lt;value&gt; is an absolute address, in which case the linear address in the offset portion of the &lt;value&gt; will be decomposed into a segment and an offset.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_15.htm#IX_imem Swat command:command reference">imem</A>,
<A HREF="../../Tools/SwatRef/SR_2e.htm#IX_value Swat command">value</A>.



<H1 CLASS="refHeading">
<A NAME="IX_att Swat command:command reference">
 </A>
att</H1>

<PRE CLASS="syntax">att [&lt;args&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;att&quot;</DT><DD>attach Swat to GEOS.</DD>
<P>
Attach Swat to GEOS.</P>


</DL>
<P>
The args argument can be one of the following:</P>
<DL>
<DT>
-s</DT><DD>reboot GEOS with error checking, attach, and stop</DD>
<DT>
-sn</DT><DD>reboot GEOS without error checking, attach, and stop</DD>
<DT>
-f</DT><DD>restart GEOS with error checking and attach after a pause</DD>
<DT>
-r</DT><DD>restart GEOS with error checking and attach</DD>
<DT>
-rn</DT><DD>restart GEOS without error checking and attach</DD>
</DL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_a.htm#IX_detach Swat command:command reference">detach</A>,
<A HREF="../../Tools/SwatRef/SR_24.htm#IX_quit Swat command:command reference">quit</A>.



<H1 CLASS="refHeading">
<A NAME="IX_attach Swat command:command reference">
 </A>
attach</H1>

<PRE CLASS="syntax">attach [&lt;boot&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;attach&quot;</DT><DD>attach to the target PC</DD>
</DL>
<P>
Attach swat to the target PC.</P>


<UL>
<LI>
The boot argument is &quot;-b&quot; to bootstrap and &quot;+b&quot; to not. Normally, Swat will try to read symbolic information about all running geodes; bootstrapping specifies that Swat should only read symbolic information for these geodes when it must. </LI>
<LI>
If you give no &lt;boot&gt; argument, swat will use the most-recent one.</LI>
<LI>
By default, swat will locate the symbols for all geodes and threads active on the PC when it attaches.</LI>
<LI>
If any geode has changed since you detached from the PC, its symbols are re-read.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_4.htm#IX_att Swat command:command reference">att</A>,
<A HREF="../../Tools/SwatRef/SR_a.htm#IX_detach Swat command:command reference">detach</A>,
<A HREF="../../Tools/SwatRef/SR_24.htm#IX_quit Swat command:command reference">quit</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Tcl:loading command files">
 </A>
<A NAME="IX_Files:loading Tcl files">
 </A>
<A NAME="IX_autoload Swat command:command reference">
 </A>
autoload</H1>

<PRE CLASS="syntax">autoload &lt;function&gt; &lt;flags&gt; &lt;file&gt; [&lt;class&gt; &lt;docstring&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;autoload cycles 1 timing&quot;</DT><DD>
load the file &quot;timing.tcl&quot; when the cycles command is first executed. The user must type the command completely.</DD>
<DT>
&quot;autoload print 2 print&quot;</DT><DD>
load the file &quot;print.tcl&quot; when the print command is first executed. The user may abbreviate the command and the Tcl interpreter will not evaluate its arguments.</DD>
</DL>
<P>
This command allows the first invocation of a command to automatically force the transparent reading of a file of Tcl commands.</P>


<UL>
<LI>
autoload takes 3 or 5 arguments: the command, an integer with bit flags telling how the interpreter should invoke the command, the file that should be read to define the command (this may be absolute or on load-path) and an optional help class and string for the command.</LI>
<LI>
The help class and string need only be given if the file to be loaded isn't part of the system library (doesn't have its help strings extracted when Swat is built).</LI>
<LI>
The &lt;flags&gt; argument has the following bit-flags:</LI>
</UL>
<DL>
<DT>
0</DT><DD>User must type the command's name exactly. The command will be defined by &quot;defsubr&quot; or &quot;defdsubr&quot; when &lt;file&gt; is loaded.</DD>
<DT>
1</DT><DD>The interpreter will not evaluate arguments passed to the command. All arguments will be merged into a single string and passed to the command as one argument. The command will use the special &quot;noeval&quot; argument when it is defined.</DD>
</DL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/Tcl/TTCL_d.htm#IX_defsubr Tcl command">defsubr</A>,
<A HREF="../../Tools/SwatRef/SR_9.htm#IX_defcommand Swat command">defcommand</A>,
<A HREF="../../Tools/Tcl/TTCL_d.htm#IX_proc Tcl command">proc</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Patients:listing active frames of">
 </A>
<A NAME="IX_Stack:examining backtrace">
 </A>
<A NAME="IX_backtrace Swat command:command reference">
 </A>
backtrace</H1>

<PRE CLASS="syntax">backtrace [-r&lt;reg&gt;* ][&lt;frames to list&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;backtrace&quot;</DT><DD>print all the frames in the patient</DD>
<DT>
&quot;backtrace -rax&quot;</DT><DD>
print all the frames and the contents of AX in each one.</DD>
<DT>
&quot;where 5&quot;</DT><DD>print the last five frames</DD>
<DT>
&quot;w 5&quot;</DT><DD>print the last five frames</DD>
</DL>
<P>
Print all the active stack frames for the patient.</P>


<UL>
<LI>
The &lt;frames to list&gt; argument is the number of frames to print. If not specified, then all are printed.</LI>
<LI>
If a numeric argument is not passed to backtrace then it attempts to display method calls in the form:</LI>
<PRE>        MSG_NAME(cx, dx, bp) =&gt; className (^l####h:####h)</PRE>
<P>
	      Here &lt;cx&gt;, &lt;dx&gt;, and &lt;bp&gt; are the values passed in these registers. &lt;className&gt; is the name of the class which handled the message. ^l####h:####h is the address of the object (block, chunk handle) handling the message.</P>
<LI>
If a numeric argument is passed to backtrace then the attempt to decode the message is not done and the single line above expands into:</LI>
<PRE>	 far ProcCallModuleRoutine(), geodesResource.asm:476
	 near ObjCallMethodTable(), objectClass.asm:1224</PRE>
<P>
	      This is generally less useful, but sometimes it's what you need. </P>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_2e.htm#IX_up Swat command">up</A>,
<A HREF="../../Tools/SwatRef/SR_a.htm#IX_down Swat command">down</A>,
<A HREF="../../Tools/SwatRef/SR_10.htm#IX_func Swat command">func</A>.

<H1 CLASS="refHeading">
bin</H1>

<PRE CLASS="syntax">bin &lt;number&gt; [&lt;field-width&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;bin 5&quot;</DT><DD> returns &quot;0101&quot; (five in binary)</DD>
<DT>
&quot;bin 10h&quot;</DT><DD>returns &quot;0001 0000&quot;</DD>
<DT>
&quot;bin 10h 3&quot; </DT><DD>returns &quot;0000 0001 0000&quot;</DD>
</DL>
<P>
Prints numbers in binary.</P>


<UL>
<LI>
The field width is in nibbles.</LI>
<LI>
The default field width is the minium number of nibbles to display the number.</LI>
</UL>

<H1 CLASS="refHeading">
<A NAME="IX_Key bindings in Swat">
 </A>
<A NAME="IX_bindings Swat command">
 </A>
bindings</H1>

<PRE CLASS="syntax">bindings</PRE>
<P>
Shows all current key bindings</P>



<H1 CLASS="refHeading">
<A NAME="IX_Key bindings in Swat">
 </A>
<A NAME="IX_bind-key Swat command">
 </A>
bind-key</H1>

<PRE CLASS="syntax">bind-key &lt;ascii_value&gt; &lt;function&gt;</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;bind-key \321 scroll_srcwin_down&quot;</DT><DD>
Binds scroll-down key to the scroll_srcwin_down Tcl routine.</DD>
</DL>
<P>
Binds an ASCII value to a function.</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_3.htm#IX_alias Swat command:command reference">alias</A>,
<A HREF="../../Tools/SwatRef/SR_2e.htm#IX_unbind-key Swat command">unbind-key</A>.


<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="SR_3.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">alias ...</A> 
<!-- to next --> | <A HREF="SR_5.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">bits ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
