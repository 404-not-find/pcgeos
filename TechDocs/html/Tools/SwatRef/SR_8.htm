<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: SR_8.htm,v 1.1 97/06/27 16:01:09 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>Swat Command Reference: dbrk ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">

<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="SR_7.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">continue-patient ...</A> 
<!-- to next --> | <A HREF="SR_9.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">debug ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->


<H1 CLASS="refHeading">
<A NAME="IX_dbrk Swat command">
 </A>
<A NAME="IX_Breakpoints:delayed">
 </A>
<A NAME="IX_Delayed breakpoints">
 </A>
dbrk</H1>

<PRE CLASS="syntax">dbrk &lt;addr&gt; &lt;num&gt; [&lt;command&gt;|default]
dbrk set &lt;break&gt; &lt;num&gt; [&lt;command&gt;|default]
dbrk list [&lt;break&gt;]
dbrk {clear,delete} &lt;break&gt;
dbrk cur &lt;break&gt; &lt;num&gt;
dbrk max &lt;break&gt; &lt;num&gt;
dbrk cmd &lt;break&gt; [&lt;command&gt;]
dbrk reset &lt;break&gt;
dbrk enable &lt;break&gt;
dbrk disable &lt;break&gt;</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;dbrk ObjMessage 30&quot;</DT><DD>
Break at the 30th call to ObjMessage</DD>
<DT>
&quot;dbrk set 5 30&quot;</DT><DD>
Break after hitting brk5 30 times.</DD>
<DT>
&quot;dbrk set brk3 10 default&quot;          </DT><DD>
Break after hitting brk3 10 times; Each time brk3 is hit, perform the default command.</DD>
<DT>
&quot;dbrk cmd brk2 {echo foo}&quot;</DT><DD>
Echo a string whenever brk2 is hit.</DD>
<DT>
&quot;dbrk cmd brk2 default&quot;</DT><DD>
Use the default command for brk2.</DD>
<DT>
&quot;dbrk disable 2&quot;</DT><DD>
Stop counting brk2; it will now always be taken.</DD>
</DL>
<P>
This command creates &quot;delayed&quot; breakpoints, creating breakpoints that don't activate until they've been hit a specified nuber of times.</P>


<UL>
<LI>
<EM>
break</EM>
 may be a number, or a full breakpoint token (brk&lt;n&gt;) <EM>
num</EM>
 is a number; and <EM>
command</EM>
 is a string that will be evaluated. If <EM>
command</EM>
 may also be the string &quot;default&quot;, in which case a default command will be used.  The first argument to dbrk may be abbreviated; only the first 3 characters are significant.</LI>
<LI>
Deleting a breakpoint with &quot;brk del&quot; removes the dbrk also.</LI>
<LI>
With the exception of brk, all the commands that take &lt;break&gt; must be given a breakpoint that has been delayed.  The &quot;dbrk list&quot; command will show these.</LI>
<LI>
&quot;dbrk list&quot; will show how many times a breakpoint has been hit, the maximum number of times to skip the breakpoint, and the command to evaluate whenever the breakpoint is hit.  If no breakpoint is passed, the status of all dbrks will be shown.</LI>
<LI>
&quot;dbrk clear&quot; and &quot;dbrk delete&quot; are synonyms.  These commands will cause the delayed breakpoint to become normal again, and clear out the global variables used to store the dbrk's state: brk<EM>
N</EM>
cur, brk<EM>
N</EM>
max, brk<EM>
N</EM>
cmd where <EM>
N</EM>
 is a number.</LI>
<LI>
&quot;dbrk cur&quot;, &quot;dbrk max&quot;, and &quot;dbrk cmd&quot; set the current count, the maximum count, and the command of the specified breakpoint respectively.</LI>
<LI>
&quot;dbrk reset <EM>
break</EM>
&quot; is a quick way of saying &quot;dbrk cur <EM>
break</EM>
 0&quot;</LI>
<LI>
&quot;dbrk enable&quot; and &quot;dbrk disable&quot; are used to enable and disable a dbrk.  Disabled dbrks will always be taken, and their counter will not be incremented.</LI>
<LI>
Since this command is just a front-end to brk cmd, you can use dbrk and brk cond to create more complex breakpoints; for instance, you can &quot;mwatch <CODE>
MSG_VIS_DRAW</CODE>
&quot;, then &quot;dbrk set <EM>
brk</EM>
 30 print-method&quot; to break after <CODE>
MSG_VIS_DRAW</CODE>
 has been received 30 times.</LI>
</UL>

<H1 CLASS="refHeading">
<A NAME="IX_dcache Swat command">
 </A>
dcache</H1>

<PRE CLASS="syntax">dcache bsize &lt;blockSize&gt;
dcache length &lt;numBlocks&gt;
dcache stats
dcache params
dcache (on|off)</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;dcache bsize 16&quot; </DT><DD>
Set the number of bytes fetched at a time to 16.</DD>
<DT>
 &quot;dcache length 1024&quot; </DT><DD>
Allow 1024 blocks of the current block size to be in the cache at a time.</DD>
<DT>
 &quot;dcache off&quot; </DT><DD>Disables the Swat data cache.</DD>
</DL>
<P>
Controls the cache Swat uses to hold data read from the target machine while the machine is stopped.</P>

<UL>
<LI>
Data written while the machine is stopped actually get written to the cache, not the PC, and the modified blocks are written when the machine is continued. </LI>
<LI>
The default cache block size is 32 bytes, with a default cache length of 64 blocks. </LI>
<LI>
It is a very rare thing to have to turn the data cache off. You might need to do this while examining the changing registers of a memory-mapped I/O device. </LI>
<LI>
The &lt;blockSize&gt; must be a power of 2 and no more than 128. </LI>
<LI>
Changing the block size causes all cached blocks to be flushed (any modified cache blocks are written to the PC).</LI>
<LI>
Changing the cache length will only flush blocks if there are more blocks currently in the cache than are allowed by the new length. </LI>
<LI>
The &quot;dcache stats&quot; command prints statistics giving some indication of the efficacy of the data cache. It does not return anything. </LI>
<LI>
The &quot;dcache params&quot; command returns a list {&lt;blockSize&gt; &lt;numBlocks&gt;} giving the current parameters of the data cache. There are some operations where you might want to adjust the size of the cache either up or down, but need to reset the parameters when the operation completes. This is what you need to do this.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/Tcl/TTCL_f.htm#IX_cache Tcl structure">cache</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Routines:monitoring with Swat">
 </A>
<A NAME="IX_dcall Swat command">
 </A>
dcall</H1>

<PRE CLASS="syntax">dcall [&lt;args&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;dcall Dispatch&quot;</DT><DD>
Display when the routine Dispatch is called</DD>
<DT>
&quot;dcall none&quot;</DT><DD>
stop displaying all routines</DD>
</DL>
<P>
Display calls to a routine.</P>

<UL>
<LI>
The &lt;args&gt; argument normally is the name of the routine to monitor. Whenever a call is made to the routine its name is displayed.</LI>
<LI>
If `none' or no argument is passed, then all the routines will stop displaying.</LI>
<LI>
Dcall uses breakpoints to display routine names. By looking at the list of breakpoints you can see which routines display their names and you can stop them individually by disabling or deleting their breakpoints.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_28.htm#IX_showcalls Swat command">showcalls</A>,
<A HREF="../../Tools/SwatRef/SR_19.htm#IX_mwatch Swat command">mwatch</A>.


<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="SR_7.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">continue-patient ...</A> 
<!-- to next --> | <A HREF="SR_9.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">debug ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
