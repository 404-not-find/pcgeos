<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: SR_19.htm,v 1.1 97/06/27 15:59:52 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>Swat Command Reference: memsize ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">

<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="SR_18.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">load ...</A> 
<!-- to next --> | <A HREF="SR_1a.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">noStructEnum ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->


<H1 CLASS="refHeading">
<A NAME="IX_Memory:finding size with Swat">
 </A>
<A NAME="IX_memsize Swat command">
 </A>
memsize</H1>

<PRE CLASS="syntax">memsize [&lt;memory size&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;memsize&quot;</DT>
<DT>
&quot;memsize 512&quot;</DT>


</DL>
<P>
Change the amount of memory that GEOS thinks that it has.</P>

<UL>
<LI>
The &lt;memory size&gt; argument is the size to make the heap. If none is specified then the current memory size is returned.</LI>
<LI>
Memsize can only be run at startup, before the heap has been initialized. Use this right after an `att -s'.</LI>
<LI>
Memsize accounts for the size of the stub.</LI>
</UL>



<H1 CLASS="refHeading">
<A NAME="IX_methods Swat command">
 </A>
methods</H1>

<PRE CLASS="syntax">methods &lt;class&gt;
methods &lt;object&gt;
methods &lt;flags&gt;</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;methods -p&quot; </DT><DD>Print out methods defined for process</DD>
<DT>
&quot;methods ui::GenDocumentClass&quot;</DT><DD>
Print out GenDocumentClass methods</DD>
<DT>
&quot;methods 3ffch:072fh&quot;</DT><DD>
Print out methods for class at addr</DD>
<DT>
&quot;methods -a&quot; </DT><DD>Print methods of top class of app obj</DD>


</DL>
<P>
Prints out the method table for the class specified, or if an object is passed, for the overall class of the object. Useful for getting a list of candidate locations to breakpoint.</P>



<H1 CLASS="refHeading">
<A NAME="IX_Model:finding with Swat">
 </A>
<A NAME="IX_model Swat command">
 </A>
model</H1>

<PRE CLASS="syntax">model [&lt;object&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;model&quot;</DT><DD>print model hierarchy from system object down</DD>
<DT>
 &quot;model -i&quot; </DT><DD>print model hierarchy from implied grab down</DD>
<DT>
 &quot;model ^l4e10h:20h&quot; </DT><DD>
print model hierarchy from ^l4e10h:20h down.</DD>


</DL>
<P>
Prints the model hierarchy below an object.</P>

<UL>
<LI>
If no object is specified, the system object is used. </LI>
<LI>
The special object flags may be used to specify &lt;object&gt;.  For a list of these flags, see pobject.</LI>
<LI>
Remember that the object you start from may have the model exclusive within its part of the hierarchy, but still not have the exclusive because something in a different part of the tree has it. </LI>
<LI>
The variable &quot;printNamesInObjTrees&quot; can be used to print out the actual app-defined labels for the objects, instead of the class, where available. </LI>
<P>
	This variable defaults to false. </P>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_2c.htm#IX_target Swat command">target</A>,
<A HREF="../../Tools/SwatRef/SR_e.htm#IX_focus Swat command">focus</A>,
<A HREF="../../Tools/SwatRef/SR_19.htm#IX_mouse Swat command">mouse</A>,
<A HREF="../../Tools/SwatRef/SR_17.htm#IX_keyboard Swat command">keyboard</A>,
<A HREF="../../Tools/SwatRef/SR_1f.htm#IX_pobject Swat command:command reference">pobject</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Model:finding with Swat">
 </A>
<A NAME="IX_modelobj Swat command">
 </A>
modelobj</H1>

<PRE CLASS="syntax">modelobj</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;modelobj&quot;</DT><DD>print model hierarchy from system object down</DD>
<DT>
&quot;pobj [modelobj]&quot;</DT><DD>
Do a <CODE>
pobject</CODE>
 on the object with the model grab (the equivalent of a &quot;pobj -m&quot;).</DD>


</DL>
<P>
Returns the object with the model grab.</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_2c.htm#IX_target Swat command">target</A>,
<A HREF="../../Tools/SwatRef/SR_e.htm#IX_focus Swat command">focus</A>,
<A HREF="../../Tools/SwatRef/SR_19.htm#IX_model Swat command">model</A>,
<A HREF="../../Tools/SwatRef/SR_e.htm#IX_focusobj Swat command">focusobj</A>,
<A HREF="../../Tools/SwatRef/SR_2c.htm#IX_targetobj Swat command">targetobj</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Mouse:printing mouse hierarchy">
 </A>
<A NAME="IX_mouse Swat command">
 </A>
mouse</H1>

<PRE CLASS="syntax">mouse [&lt;object&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;mouse&quot;</DT><DD>print mouse hierarchy from system object down</DD>
<DT>
&quot;mouse -i&quot; </DT><DD>print mouse hierarchy from implied grab down</DD>
<DT>
&quot;mouse ^l4e10h:20h&quot; </DT><DD>
print mouse hierarchy from ^l4e10h:20h down.</DD>


</DL>
<P>
Prints the mouse hierarchy below an object.</P>

<UL>
<LI>
If no object is specified, the system object is used. </LI>
<LI>
The special object flags may be used to specify &lt;object&gt;.  For a list of these flags, see pobject.</LI>
<LI>
The variable &quot;printNamesInObjTrees&quot; can be used to print out the actual app-defined labels for the objects, instead of the class, where available. </LI>
<P>
	This variable defaults to false. </P>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_2c.htm#IX_target Swat command">target</A>,
<A HREF="../../Tools/SwatRef/SR_e.htm#IX_focus Swat command">focus</A>,
<A HREF="../../Tools/SwatRef/SR_19.htm#IX_model Swat command">model</A>,
<A HREF="../../Tools/SwatRef/SR_17.htm#IX_keyboard Swat command">keyboard</A>,
<A HREF="../../Tools/SwatRef/SR_1f.htm#IX_pobject Swat command:command reference">pobject</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Mouse:finding mouse grab with Swat">
 </A>
<A NAME="IX_mouseobj Swat command">
 </A>
mouseobj</H1>

<PRE CLASS="syntax">mouseobj</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;mouseobj&quot;</DT><DD>return object with mouse grab</DD>
<DT>
 &quot;pobj [mouseobj]&quot; </DT><DD>
do a pobject on the object with the mouse grab (equivalent to &quot;pobj -mg&quot;).</DD>


</DL>
<P>
Returns the object with the mouse grab.</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_2c.htm#IX_target Swat command">target</A>,
<A HREF="../../Tools/SwatRef/SR_e.htm#IX_focus Swat command">focus</A>,
<A HREF="../../Tools/SwatRef/SR_19.htm#IX_mouse Swat command">mouse</A>,
<A HREF="../../Tools/SwatRef/SR_17.htm#IX_keyboard Swat command">keyboard</A>,
<A HREF="../../Tools/SwatRef/SR_17.htm#IX_keyboardobj Swat command">keyboardobj</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Messages:monitoring with Swat">
 </A>
<A NAME="IX_mwatch Swat command">
 </A>
mwatch</H1>

<PRE CLASS="syntax">mwatch &lt;msg&gt;+
mwatch add &lt;msg&gt;+
mwatch list
mwatch clear</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;mwatch <CODE>
MSG_VIS_DRAW</CODE>
 MSG_METAQUIT&quot;</DT><DD>
watch these messages</DD>
<DT>
&quot;mwatch add <CODE>
MSG_META_START_SELECT</CODE>
&quot;</DT><DD>
watch this message also</DD>
<DT>
&quot;mwatch&quot;</DT><DD>clear all message watches</DD>


</DL>
<P>
Display all deliveries of a particular message.</P>

<UL>
<LI>
The <EM>
msg</EM>
 argument is which messages to watch. Those specified replace any messages watched before. If none are specified then any messages watched will be cleared.</LI>
<LI>
You may specify up to eight messages to be watched (fewer if you have other conditional breakpoints active). See cbrk for more information about conditional breakpoints.</LI>
<LI>
&quot;mwatch clear&quot; will clear all message watches. </LI>
<LI>
&quot;mwatch add&quot; will add the specified messages to the watch list. </LI>
<LI>
&quot;mwatch list&quot; will return a list of breakpoints that have been set by previous calls to mwatch.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_1b.htm#IX_objwatch Swat command">objwatch</A>,
<A HREF="../../Tools/SwatRef/SR_1a.htm#IX_objbrk Swat command">objbrk</A>,
<A HREF="../../Tools/SwatRef/SR_1b.htm#IX_objmessagebrk Swat command">objmessagebrk</A>,
<A HREF="../../Tools/SwatRef/SR_22.htm#IX_procmessagebrk Swat command">procmessagebrk</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Stepping through code:Assembly code">
 </A>
<A NAME="IX_next Swat command">
 </A>
next</H1>

<PRE CLASS="syntax">next</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;next&quot;</DT><DD>execute the next assembly instruction without entering it</DD>
<DT>
&quot;n&quot;</DT>


</DL>
<P>
Execute the patient by a single assembly instruction, skipping over any calls, repeated instructions, or software interrupts.</P>

<UL>
<LI>
<CODE>
next</CODE>
 does not protect against recursion, so when the breakpoint for the next instruction is hit, the frame of execution may be one lower.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_2a.htm#IX_step Swat command">step</A>,
<A HREF="../../Tools/SwatRef/SR_16.htm#IX_istep Swat command:command reference">istep</A>.


<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="SR_18.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">load ...</A> 
<!-- to next --> | <A HREF="SR_1a.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">noStructEnum ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
