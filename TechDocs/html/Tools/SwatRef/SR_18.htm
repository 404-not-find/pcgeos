<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: SR_18.htm,v 1.1 97/06/27 15:59:51 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>Swat Command Reference: load ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">

<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="SR_17.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">keyboard ...</A> 
<!-- to next --> | <A HREF="SR_19.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">memsize ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->


<H1 CLASS="refHeading">
<A NAME="IX_Files:Loading Tcl files">
 </A>
<A NAME="IX_load Swat command:command reference">
 </A>
load</H1>

<PRE CLASS="syntax">load &lt;file&gt;</PRE>


<P>
Load a file of Tcl commands.</P>
<UL>
<LI>
If the file cannot be found as given, it is looked for in all the directories mentioned in the &quot;load-path&quot; variable. This variable is initialized from the SWATPATH environment variable, which is in the form &lt;dir1&gt;:&lt;dir2&gt;:...:&lt;dirN&gt;.</LI>
<LI>
The Swat library directory is appended to this path so you need not include it yourself. The file need not end in &quot;.tcl&quot;.</LI>
<LI>
When searching, <EM>
file</EM>
, <EM>
file</EM>
.tcl, and <EM>
file</EM>
.tlc are searched for. If <CODE>
load</CODE>
 finds a <EM>
file</EM>
.tlc file, that file will be used only if it is more recent than any corresponding <EM>
file</EM>
.tcl or <EM>
file</EM>
 file.</LI>
</UL>



<H1 CLASS="refHeading">
<A NAME="IX_Geodes:loading with Swat">
 </A>
<A NAME="IX_loadapp Swat command">
 </A>
loadapp</H1>
<P>
Load an application from swat. Single argument is the file name of the application to launch (application must reside in the appl subdirectory of the GEOS tree). </P>
<P>
The application is opened in normal application mode. Note that the application will not be loaded until you continue the machine, as the loading is accomplished by sending a message to the UI.</P>


<H1 CLASS="refHeading">
<A NAME="IX_Geodes:loading with Swat">
 </A>
<A NAME="IX_loadgeode Swat command">
 </A>
loadgeode</H1>
<P>
Load a geode from swat. Mandatory first argument is the name of the file to load (with path from top-level GEOS directory, using / instead of \ as the path separator). </P>
<P>
Second and third arguments are the data words to pass to the geode. The second argument is passed to the geode in cx, while the third argument is passed in dx.</P>
<P>
Both the second and third arguments are optional and default to 0. They likely are unnecessary.</P>


<H1 CLASS="refHeading">
<A NAME="IX_Routines:local variables">
 </A>
<A NAME="IX_Local variables:displaying with Swat">
 </A>
<A NAME="IX_locals Swat command">
 </A>
locals</H1>

<PRE CLASS="syntax">locals [&lt;func&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;locals&quot;</DT><DD>Print the values of all local variables and arguments for the current frame.</DD>
<DT>
&quot;locals WinOpen&quot;</DT><DD>
Print the names of all local variables for the given function. No values are printed.</DD>


</DL>
<P>
Allows you to quickly find the values or names of all the local variables of a function or stack frame.</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_20.htm#IX_print Swat command:command reference">print</A>,
<A HREF="../../Tools/SwatRef/SR_f.htm#IX_frame Swat command:command reference">frame</A>,
<A HREF="../../Tools/Tcl/TTCL_d.htm#IX_info Tcl command">info</A>.



<H1 CLASS="refHeading">
<A NAME="IX_localwin Swat command">
 </A>
localwin</H1>

<PRE CLASS="syntax">localwin [&lt;numlines&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;localwin&quot; </DT><DD>Display local variables in a 10-line window</DD>
<DT>
 &quot;localwin 15&quot; </DT><DD>
Display local variables in a 15-line window</DD>
<DT>
 &quot;localwin off&quot; </DT><DD>
Turn off the local variable display</DD>


</DL>
<P>
Turn on or off the continuous display of local variables.</P>

<UL>
<LI>
Passing an optional numerical argument turns on display of that size. The default size is 10 lines. </LI>
<LI>
Only one local variable display may be active at a time.</LI>
</UL>



<H1 CLASS="refHeading">
<A NAME="IX_loop Swat command">
 </A>
loop</H1>
<P>
Simple integer loop procedure. Usage is:<BR>
 loop &lt;loop-variable&gt; &lt;start&gt;,&lt;end&gt; [step &lt;step&gt;] &lt;body&gt;</P>
<P>
&lt;start&gt;, &lt;end&gt;, and &lt;step&gt; are integers. &lt;body&gt; is a string for Tcl to evaluate. If no &lt;step&gt; is given, 1 or -1 (depending as &lt;start&gt; is less than or greater than &lt;end&gt;, respectively) is used. &lt;loop-variable&gt; is any legal Tcl variable name.</P>


<H1 CLASS="refHeading">
<A NAME="IX_map Swat command">
 </A>
map</H1>

<PRE CLASS="syntax">map &lt;var-list&gt; &lt;data-list&gt;+ &lt;body&gt;</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;map {i j} {a b} {c d} {list $i $j}&quot;</DT><DD>
Executes the command &quot;list $i $j&quot; with i and j assigned to successive elements of the lists {a b} and {c d}, respectively, merging the results into the list {{a c} {b d}}</DD>


</DL>
<P>
This applies a command string to the successive elements of one or more lists, binding each element in turn to a variable and evaluating the command string. The results of all the evaluations are merged into a result list.</P>

<UL>
<LI>
The number of variables given in &lt;var-list&gt; must match the number of &lt;data-list&gt; arguments you give.</LI>
<LI>
 All the &lt;data-list&gt; arguments must have the same number of elements.</LI>
<LI>
 You do not specify the result of the &lt;body&gt; with the &quot;return&quot; command. Rather, the result of &lt;body&gt; is the result of the last command executed within &lt;body&gt;.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/Tcl/TTCL_d.htm#IX_foreach Tcl command">foreach</A>,
<A HREF="../../Tools/SwatRef/SR_18.htm#IX_mapconcat Swat command">mapconcat</A>.



<H1 CLASS="refHeading">
<A NAME="IX_mapconcat Swat command">
 </A>
mapconcat</H1>

<PRE CLASS="syntax">mapconcat &lt;var-list&gt; &lt;data-list&gt;+ &lt;body&gt;</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;mapconcat {i j} {a b} {c d} {list $i $j}&quot;</DT><DD>
Executes the command &quot;list $i $j&quot; with i and j assigned to successive elements of the lists {a b} and {c d}, respectively, merging the results into a string.</DD>



</DL>
<H1 CLASS="refHeading">
<A NAME="IX_map-method Swat command">
 </A>
<A NAME="IX_Messages:decoding message values">
 </A>
map-method</H1>

<PRE CLASS="syntax">map-method &lt;number&gt; &lt;object&gt;
map-method &lt;number&gt; &lt;class-name&gt; [&lt;object&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;map-method ax ^lbx:si&quot; </DT><DD>
Prints the name of the message in ax, from the object at ^lbx:si's perspective.</DD>
<DT>
&quot;map-method 293 GenClass&quot; </DT><DD>
Prints the name of message number 293 from GenClass's perspective.</DD>


</DL>
<P>
Maps a message number to a human-readable message name, returning that name. This command is useful both for the user and for a Tcl procedure.</P>

<UL>
<LI>
When called from a Tcl procedure, the &lt;class-name&gt; argument should be the fullname of the class symbol (usually obtained with the obj-class function), and &lt;object&gt; should be the address of the object for which the mapping is to take place. If no &lt;object&gt; argument is provided, map-method will be unable to resolve messages defined by one of the object's superclasses that lies beyond a variant superclass. </LI>
<LI>
If no name can be found, the message number, in decimal, is returned. </LI>
<LI>
The result is simply returned, not echoed. You will need to echo the result yourself if you call this function from anywhere but the command line. </LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_1a.htm#IX_obj-class Swat command">obj-class</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Messages:monitoring with Swat">
 </A>
<A NAME="IX_mcount Swat command">
 </A>
mcount</H1>

<PRE CLASS="syntax">mcount [&lt;args&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;mcount&quot;</DT><DD>start the method count or print the count</DD>
<DT>
&quot;mcount reset&quot; </DT><DD>
restart the method count</DD>
<DT>
&quot;mcount stop&quot; </DT><DD>
stop the method count</DD>
<DT>
&quot;mcount MyAppRecalcSize&quot; </DT><DD>
count messages handled by MyAppRecalcSize</DD>


</DL>
<P>
Keep a count of the methods called.</P>


<P>
The args argument may be one of the following:</P>
<DL>
<DT>
 nothing </DT><DD>start the method count or print the current count</DD>
<DT>
'reset' </DT><DD>reset the count to zero</DD>
<DT>
'stop' </DT><DD>stop the method count and remove it's breakpoint</DD>
<DT>
 message handler 	</DT><DD>
start the method count for a particular method</DD>
</DL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_19.htm#IX_mwatch Swat command">mwatch</A>,
<A HREF="../../Tools/SwatRef/SR_28.htm#IX_showcalls Swat command">showcalls</A>.


<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="SR_17.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">keyboard ...</A> 
<!-- to next --> | <A HREF="SR_19.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">memsize ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
