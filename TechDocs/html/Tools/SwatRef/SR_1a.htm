<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: SR_1a.htm,v 1.1 97/06/27 15:59:55 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>Swat Command Reference: noStructEnum ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">

<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="SR_19.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">memsize ...</A> 
<!-- to next --> | <A HREF="SR_1b.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">objmessagebrk ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->


<H1 CLASS="refHeading">
<A NAME="IX_noStructEnum Swat variable">
 </A>
<A NAME="IX_Structures:formatting Swat output">
 </A>
noStructEnum</H1>

<PRE CLASS="syntax">var noStructEnum [(0|1)]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;var noStructEnum 1&quot; </DT><DD>
Don't put &quot;struct&quot; or &quot;enum&quot; before the data type for variables that are structures or enumerated types.</DD>


</DL>
<P>
Structure fields that are structures or enumerated types normally have &quot;struct&quot; or &quot;enum&quot; as part of their type description. This usually just clutters up the display, however, so this variable shuts off this prepending.</P>


<P>
The default value of this variable is one.</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_20.htm#IX_print Swat command:command reference">print</A>.



<H1 CLASS="refHeading">
<A NAME="IX_null Swat command">
 </A>
null</H1>

<PRE CLASS="syntax">null &lt;val&gt;</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;null $sym&quot;</DT><DD>Sees if the symbol token stored in $sym is the empty string or &quot;nil.&quot;</DD>


</DL>
<P>
Checks to see if a string is either empty or &quot;nil,&quot; special values returned by many commands when something isn't found or doesn't apply. Returns non-zero if &lt;val&gt; is either of these special values.</P>


<P>
The notion of &quot;nil&quot; as a value comes from lisp.</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/Tcl/TTCL_d.htm#IX_index Tcl command">index</A>,
<A HREF="../../Tools/Tcl/TTCL_d.htm#IX_range Tcl command">range</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Messages:monitoring with Swat">
 </A>
<A NAME="IX_Objects:monitoring with Swat">
 </A>
<A NAME="IX_objbrk Swat command">
 </A>
objbrk</H1>

<PRE CLASS="syntax">objbrk [&lt;obj address&gt;] [&lt;message&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;objbrk ds:si <CODE>
MSG_VIS_DRAW</CODE>
&quot;</DT><DD>
break when a <CODE>
MSG_VIS_DRAW</CODE>
 reaches the object</DD>
<DT>
&quot;objbrk -p&quot;</DT><DD>Break when any message is sent to the process object.</DD>


</DL>
<P>
Break when a particular message reaches a particular object.</P>

<UL>
<LI>
If you do not give a &lt;message&gt; argument after the &lt;obj&gt; argument, the machine will stop when any message is delivered to the object.</LI>
<LI>
&lt;obj&gt; is the address of the object to watch.</LI>
<LI>
The &lt;objbrk&gt; argument to &quot;objbrk del&quot; is the token/number returned when you set the breakpoint.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_1b.htm#IX_objwatch Swat command">objwatch</A>,
<A HREF="../../Tools/SwatRef/SR_1b.htm#IX_objmessagebrk Swat command">objmessagebrk</A>,
<A HREF="../../Tools/SwatRef/SR_19.htm#IX_mwatch Swat command">mwatch</A>.



<H1 CLASS="refHeading">
<A NAME="IX_obj-class Swat command">
 </A>
obj-class</H1>

<PRE CLASS="syntax">objclass &lt;obj-addr&gt;</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;var cs [obj-class ^lbx:si]&quot; </DT><DD>
Store the symbol token for the class of the object ^lbx:si in the variable $cs.</DD>


</DL>
<P>
Figures out the class of an object, coping with unrelocated object blocks and the like.</P>

<UL>
<LI>
The value return is a symbol token, as one would pass to the &quot;symbol&quot; command. Using &quot;symbol name&quot; or &quot;symbol fullname&quot; you can obtain the actual class name. </LI>
<LI>
We decide whether to relocate the class pointer ourselves based on the LMF_RELOCATED bit in the <CODE>
LMBH_flags</CODE>
 field of the object block's header. There are times, e.g. during the call to <CODE>
MSG_META_RELOCATE</CODE>
 for an object, when this bit doesn't accurately reflect the state of the class pointer and we will return an error when we should not. </LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/Tcl/TTCL_f.htm#IX_symbol Tcl structure">symbol</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Objects:monitoring with Swat">
 </A>
<A NAME="IX_objcount Swat command">
 </A>
objcount</H1>

<PRE CLASS="syntax">objcount [-q] [-X] [-Y] [-b #] [-o #] [-p #]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;objcount&quot; </DT><DD>count all objects</DD>
<DT>
&quot;objcount -p welcome&quot; </DT><DD>
count all objects owned by welcome</DD>
<DT>
&quot;objcount -o *desktop::DiskDrives&quot; </DT><DD>
count this one object</DD>
<DT>
&quot;objcount -b 0x3270&quot; </DT><DD>
count all objects in this block.</DD>


</DL>
<P>
Count up instances of various objects on the heap.</P>

<UL>
<LI>
The first argument specifies the options:</LI>
<DL>
<DT>
            <STRONG>
q</STRONG>
 </DT><DD>quiet operation - no progress output (not applicable with X, Y)</DD>
<DT>
            <STRONG>
o #</STRONG>
 </DT><DD>check only object #</DD>
<DT>
           <STRONG>
 b #</STRONG>
 </DT><DD>check ONLY block #</DD>
<DT>
            <STRONG>
p #</STRONG>
 </DT><DD>check only blocks for patient #</DD>
<DT>
            <STRONG>
c # </STRONG>
</DT><DD>check only objects of class #</DD>
<DT>
           <STRONG>
 C #</STRONG>
 </DT><DD>check only objects of top-level class #</DD>
<DT>
            <STRONG>
X</STRONG>
 </DT><DD>show general verbose info</DD>
<DT>
            <STRONG>
Y</STRONG>
 </DT><DD>show search verbose info</DD>
</DL>
<LI>
Output fields:</LI>
<DL>
<DT>
          <STRONG>
direct</STRONG>
</DT><DD>number of direct instances of this class</DD>
<DT>
          <STRONG>
indirect</DT><DD>
</STRONG>
number if indirect instance of this class (i.e object's superclass is this class)</DD>
<DT>
          <STRONG>
size</STRONG>
</DT><DD>total size of instance data for this class (excludes instance data inherited from superclass)</DD>
</DL>
<LI>
Status output:</LI>
<DL>
<DT>
           <STRONG>
.</STRONG>
</DT><DD>processing heap block</DD>
<DT>
          <STRONG>
 ,</STRONG>
</DT><DD>processing matching object's top-level class</DD>
<DT>
           <STRONG>
;</STRONG>
</DT><DD>processing matching object's non-top-level class</DD>
</DL>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_14.htm#IX_hwalk Swat command:command reference">hwalk</A>,
<A HREF="../../Tools/SwatRef/SR_1b.htm#IX_objwalk Swat command">objwalk</A>,
<A HREF="../../Tools/SwatRef/SR_17.htm#IX_lhwalk Swat command:command reference">lhwalk</A>.



<H1 CLASS="refHeading">
<A NAME="IX_obj-foreach-class Swat command">
 </A>
obj-foreach-class</H1>

<PRE CLASS="syntax">obj-foreach-class &lt;function&gt; &lt;object&gt; [&lt;args&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;obj-foreach-class foo-callback ^lbx:si&quot; </DT><DD>
calls foo-callback with each class in turn to which the object ^lbx:si belongs.</DD>


</DL>
<P>
Processes all the classes to which an object belongs, calling a callback procedure for each class symbol in turn.</P>

<UL>
<LI>
&lt;function&gt; is called with the symbol for the current class as its first argument, &lt;object&gt; as its second, and the arguments that follow &lt;object&gt; as its third and subsequent arguments. </LI>
<LI>
&lt;function&gt; should return an empty string to continue up the class tree. </LI>
<LI>
obj-foreach-class returns whatever &lt;function&gt; returned, if it halted processing before the root of the class tree was reached. It returns the empty string if &lt;function&gt; never returned a non-empty result.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_1a.htm#IX_obj-class Swat command">obj-class</A>.


<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="SR_19.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">memsize ...</A> 
<!-- to next --> | <A HREF="SR_1b.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">objmessagebrk ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
