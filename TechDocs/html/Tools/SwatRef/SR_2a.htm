<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: SR_2a.htm,v 1.1 97/06/27 16:00:40 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>Swat Command Reference: stdpaths ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">

<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="SR_29.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">smatch ...</A> 
<!-- to next --> | <A HREF="SR_2b.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">stream ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->


<H1 CLASS="refHeading">
<A NAME="IX_Standard paths:examining with Swat">
 </A>
<A NAME="IX_Files:examining standard paths with Swat">
 </A>
<A NAME="IX_stdpaths Swat command">
 </A>
stdpaths</H1>

<PRE CLASS="syntax">stdpaths</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	&quot;stdpaths&quot;</P>


<P>
Print out all paths set for standard directories</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_24.htm#IX_pwd Swat command">pwd</A>,
<A HREF="../../Tools/SwatRef/SR_a.htm#IX_dirs Swat command">dirs</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Stepping through code:Assembly code">
 </A>
<A NAME="IX_step Swat command">
 </A>
step</H1>

<PRE CLASS="syntax">step</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;step&quot;</DT><DD>execute the next instruction</DD>
<DT>
&quot;s&quot;</DT>


</DL>
<P>
Execute the patient by a single machine instruction.</P>

<UL>
<LI>
If waitForPatient is non-zero, step waits for the machine to stop again.</LI>
<LI>
This doesn't do any of the checks for special conditions (XchgTopStack, software interrupts, etc.) performed by the `s' command in istep.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_16.htm#IX_istep Swat command:command reference">istep</A>,
<A HREF="../../Tools/SwatRef/SR_19.htm#IX_next Swat command">next</A>.



<H1 CLASS="refHeading">
<A NAME="IX_step-patient Swat command">
 </A>
<A NAME="IX_Stepping through code:assembly code">
 </A>
step-patient</H1>

<PRE CLASS="syntax">step-patient </PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;step-patient&quot;</DT><DD>
Execute a single instruction on the target PC.</DD>


</DL>
<P>
Causes the PC to execute a single instruction, returning only when the instruction has been executed.</P>

<UL>
<LI>
Unlike the continue-patient command, this command will not return until the machine has stopped again.</LI>
<LI>
No other thread will be allowed to run, as timer interrupts will be turned off while the instruction is being executed.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_13.htm#IX_help-fetch Swat command">help-fetch</A>.



<H1 CLASS="refHeading">
<A NAME="IX_step-until Swat command">
 </A>
step-until</H1>

<PRE CLASS="syntax">step-until expression [byte|word]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;step-until ax=0&quot;</DT><DD>
Single-step until ax is zero.</DD>
<DT>
&quot;step-until ds:20h!=0 byte&quot; </DT><DD>
Single-step until byte at ds:20h is non-zero</DD>
<DT>
&quot;step-until ds:20h!=0 word&quot;</DT><DD>
Single-step until word at ds:20h is non-zero</DD>
<DT>
&quot;step-until c=0&quot;</DT><DD>
Single-step until the carry is clear</DD>
<DT>
&quot;step-until ax!=ax&quot;</DT><DD>
Step forever</DD>
</DL>
<P>
This command causes Swat to step until a condition is met.</P>

<P>
Useful for tracking memory or register trashing bugs.</P>

<H1 CLASS="refHeading">
<A NAME="IX_Breakpoints:setting">
 </A>
<A NAME="IX_stop Swat command">
 </A>
stop</H1>

<PRE CLASS="syntax">stop in &lt;class&gt;::&lt;message&gt; [if &lt;expr&gt;]
stop in &lt;procedure&gt; [if &lt;expr&gt;]
stop in &lt;address-history-token&gt; [if &lt;expr&gt;]
stop at [&lt;file&gt;:]&lt;line&gt; [if &lt;expr&gt;]
stop &lt;address&gt; [if &lt;expr&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	&quot;stop in main&quot;<BR>
&quot;stop in @3&quot;<BR>
&quot;stop at /staff/pcgeos/Loader/main.asm:36 if { joe_local ==22}&quot;<BR>
&quot;stop at 25&quot;<BR>
&quot;stop MemAlloc+3 if {ax==3}&quot;</P>


<P>
Specify a place and condition at which the machine should stop executing. This command is intended primarily for setting breakpoints when debugging a geode created in C or another high-level language, but may also be used when debugging assembly-language geodes.</P>

<UL>
<LI>
&quot;stop in&quot; will set a breakpoint at the beginning of a procedure, immediately after the procedure's stack frame has been set up.</LI>
<LI>
&quot;stop at&quot; will set a breakpoint at the first instruction of the given source line. If no &lt;file&gt; is specified, the source file for the current stack frame is used.</LI>
<LI>
If a condition is specified, by means of an &quot;if &lt;expr&gt;&quot; clause, you should enclose the expression in {}'s to prevent any nested commands, such as a &quot;value fetch&quot; command, from being evaluated until the break-point is hit.</LI>
<LI>
For convenience, &quot;stop in&quot; also allows address-history tokens. This is useful when used in conjunction with the &quot;methods&quot; command.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/Tcl/TTCL_f.htm#IX_brk Tcl structure:command reference">brk</A>,
<A HREF="../../Tools/SwatRef/SR_14.htm#IX_ibrk Swat command">ibrk</A>.



<H1 CLASS="refHeading">
<A NAME="IX_stop-catch Swat command">
 </A>
stop-catch</H1>

<PRE CLASS="syntax">stop-catch &lt;body&gt;</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;stop-catch {go ProcCallModuleRoutine}&quot;</DT><DD>
Let machine run until it reaches <CODE>
ProcCallModuleRoutine()</CODE>
, but do not issue a FULLSTOP event when it gets there.</DD>


</DL>
<P>
Allows a string of commands to execute without a FULLSTOP event being generated while they execute.</P>


<P>
A number of things happen when a FULLSTOP event is dispatched, including notifying the user where the machine stopped. This is inappropriate in something like &quot;istep&quot; or &quot;cycles&quot; that is single-stepping the machine, for example.</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/Tcl/TTCL_f.htm#IX_event Tcl structure">event</A>,
<A HREF="../../Tools/SwatRef/SR_7.htm#IX_continue-patient Swat command">continue-patient</A>,
<A HREF="../../Tools/SwatRef/SR_2a.htm#IX_step-patient Swat command">step-patient</A>.



<H1 CLASS="refHeading">
<A NAME="IX_stop-patient Swat command">
 </A>
stop-patient</H1>

<PRE CLASS="syntax">stop-patient</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;stop-patient&quot;</DT><DD>
Stops the target PC.</DD>


</DL>
<P>
Stops the target PC, in case you continued it and didn't wait for it to stop on its own.</P>


<P>
This is different from the &quot;stop&quot; subcommand of the &quot;patient&quot; command.</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_7.htm#IX_continue-patient Swat command">continue-patient</A>.


<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="SR_29.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">smatch ...</A> 
<!-- to next --> | <A HREF="SR_2b.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">stream ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
