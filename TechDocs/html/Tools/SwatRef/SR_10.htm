<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: SR_10.htm,v 1.1 97/06/27 15:59:32 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>Swat Command Reference: func ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">

<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="SR_f.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">fpstack ...</A> 
<!-- to next --> | <A HREF="SR_11.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">getenv ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->


<H1 CLASS="refHeading">
<A NAME="IX_Routines:current routine">
 </A>
<A NAME="IX_func Swat command">
 </A>
func</H1>

<PRE CLASS="syntax">func [&lt;func name&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;func&quot;</DT><DD>return the current function.</DD>
<DT>
&quot;func ObjMessage&quot;</DT><DD>
set the frame to the first frame for ObjMessage.</DD>
</DL>
<P>
Get the current function or set the frame to the given function.</P>

<UL>
<LI>
The &lt;func name&gt; argument is the name of a function in the stack frame of the current patient. The frame is set to the first occurrence of the function from the top of the stack.</LI>
<LI>
 If no &lt;func name&gt; argument is given then `func' returns the current function.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_4.htm#IX_backtrace Swat command:command reference">backtrace</A>,
<A HREF="../../Tools/SwatRef/SR_2e.htm#IX_up Swat command">up</A>,
<A HREF="../../Tools/SwatRef/SR_a.htm#IX_down Swat command">down</A>,
<A HREF="../../Tools/SwatRef/SR_d.htm#IX_finish Swat command">finish</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Objects:finding variable data">
 </A>
<A NAME="IX_fvardata Swat command">
 </A>
fvardata</H1>

<PRE CLASS="syntax">fvardata &lt;token&gt; [&lt;address&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;fvardata ATTR_VIS_TEXT_STYLE_ARRAY *ds:si&quot;</DT>
</DL>
<P>
Locates and returns the value list for the data stored under the given token in the vardata of the given object.</P>

<UL>
<LI>
If the data are found, returns a list {&lt;token&gt; &lt;data&gt;}, where &lt;data&gt; is a standard value list for the type of data associated with the specified token. </LI>
<LI>
Returns an empty list if the object has no vardata entry of the given type. </LI>
<LI>
If no &lt;address&gt; is given, the default is *ds:si.</LI>
</UL>



<H1 CLASS="refHeading">
<A NAME="IX_Files:displaying open files">
 </A>
<A NAME="IX_fwalk Swat command">
 </A>
fwalk</H1>

<PRE CLASS="syntax">fwalk [&lt;patient&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;fwalk&quot;</DT><DD>list all open files.</DD>
<DT>
&quot;fwalk geos&quot;</DT><DD>
list all open files owned by the GEOS patient.</DD>
</DL>
<P>
Print the list of files open anywhere in the system.</P>

<UL>
<LI>
The patient argument may be used to restrict the list to a particular patient. The patient may be specified either as the patient name or as the patient's handle.</LI>
<LI>
fwalk differs from <CODE>
sysfiles</CODE>
 and <CODE>
geosfiles</CODE>
 in that it deals primarily with GEOS data structures.</LI>
<LI>
The `Other' column shows if there is a VM handle bound to the file.</LI>
<LI>
The letters in the `Flags' column mean the following:</LI>
<DL>
<DT>
           <STRONG>
RW</STRONG>
</DT><DD>deny RW</DD>
<DT>
        <STRONG>
R</STRONG>
</DT><DD>deny R</DD>
<DT>
        <STRONG>
W</STRONG>
</DT><DD>deny W</DD>
<DT>
        <STRONG>
N</STRONG>
</DT><DD>deny none</DD>
<DT>
           <STRONG>
rw</STRONG>
</DT><DD>access RW</DD>
<DT>
        <STRONG>
r</STRONG>
</DT><DD>access R</DD>
<DT>
        <STRONG>
w</STRONG>
</DT><DD>access RW</DD>
<DT>
        <STRONG>
O</STRONG>
</DT><DD>override, used to override normal exclusion normally used by <CODE>
FileEnum()</CODE>
 to check out file headers.</DD>
<DT>
        <STRONG>
E</STRONG>
</DT><DD>exclusive, used to prevent override. This is used by <STRONG CLASS="fileName">
swap.geo</STRONG>
</DD>
</DL>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_d.htm#IX_fhandle Swat command">fhandle</A>,
<A HREF="../../Tools/SwatRef/SR_10.htm#IX_geosfiles Swat command">geosfiles</A>,
<A HREF="../../Tools/SwatRef/SR_2c.htm#IX_sysfiles Swat command">sysfiles</A>.



<H1 CLASS="refHeading">
<A NAME="IX_gc Swat command">
 </A>
gc</H1>

<PRE CLASS="syntax">gc [(off|register|&lt;extensive-heap-checking-flag&gt;]</PRE>
<P>
Implements a simple garbage collector to scavenge unreferenced symbols and types. If given an argument other than &quot;off&quot; or &quot;register,&quot; it turns on extensive heap checking, which slows things down enormously but ensures the heap is in good shape. The &quot;gc register&quot; command can be use to register a type created by &quot;type make&quot;as something that is being used for an extended period at the Tcl level, preventing the thing from being garbage-collected. </P>



<H1 CLASS="refHeading">
<A NAME="IX_Trees:generic, displaying with Swat">
 </A>
<A NAME="IX_Generic objects:displaying tree">
 </A>
<A NAME="IX_gentree Swat command:command reference">
 </A>
gentree</H1>

<PRE CLASS="syntax">gentree [&lt;address&gt;] [&lt;instance field&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;gentree&quot;</DT><DD>print the generic tree starting at *DS:SI</DD>
<DT>
&quot;gentree -i&quot;</DT><DD>print the generic tree under the mouse</DD>
<DT>
&quot;gentree [systemobj]&quot;</DT><DD>
print the generic tree starting at the system's root</DD>
<DT>
&quot;gentree @23 GI_states&quot;</DT><DD>
print the generic tree with generic states</DD>
<DT>
&quot;gentree *uiSystemObj&quot;</DT><DD>
start the generic tree at the root of the system</DD>
</DL>
<P>
Print a generic tree.</P>

<UL>
<LI>
The &lt;address&gt; argument is the address to an object in the generic tree. This defaults to *DS:SI. The `-i' flag for an implied grab may be used.</LI>
<LI>
The special object flags may be used to specify &lt;object&gt;.  For a list of these flags, see pobject.</LI>
<LI>
The &lt;instance field&gt; argument is the offset to any instance data within the GenInstance which should be printed out.</LI>
<LI>
The variable &quot;printNamesInObjTrees&quot; can be used to print out the actual app-defined labels for the objects, instead of the class, where available. This variable defaults to false.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_11.htm#IX_gup Swat command:command reference">gup</A>,
<A HREF="../../Tools/SwatRef/SR_2f.htm#IX_vistree Swat command">vistree</A>,
<A HREF="../../Tools/SwatRef/SR_15.htm#IX_impliedgrab Swat command">impliedgrab</A>,
<A HREF="../../Tools/SwatRef/SR_2c.htm#IX_systemobj Swat command">systemobj</A>,
<A HREF="../../Tools/SwatRef/SR_1f.htm#IX_pobject Swat command:command reference">pobject</A>.



<H1 CLASS="refHeading">
<A NAME="IX_geosfiles Swat command">
 </A>
<A NAME="IX_Files:listing with Swat">
 </A>
geosfiles</H1>

<PRE CLASS="syntax">geosfiles</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	&quot;geosfiles&quot;</P>
<P>
Print out all the files for which I/O is currently pending in GEOS.</P>

<UL>
<LI>
This looks at the same dos structure as sysfiles but this prints only those files also listed in GEOS' job file table.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_2c.htm#IX_sysfiles Swat command">sysfiles</A>,
<A HREF="../../Tools/SwatRef/SR_27.htm#IX_sftwalk Swat command">sftwalk</A>,
<A HREF="../../Tools/SwatRef/SR_10.htm#IX_fwalk Swat command">fwalk</A>.



<H1 CLASS="refHeading">
<A NAME="IX_geos-release Swat command">
 </A>
geos-release</H1>
<P>
This variable contains the major number of the version of GEOS running on the target PC.</P>


<H1 CLASS="refHeading">
<A NAME="IX_Objects:monitoring with Swat">
 </A>
<A NAME="IX_geowatch Swat command">
 </A>
geowatch</H1>

<PRE CLASS="syntax">geowatch [&lt;object&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;geowatch *MyObj&quot; </DT><DD>
Display geometry calls that have reached the object MyObj</DD>
<DT>
&quot;geowatch&quot; </DT><DD>Display geometry calls that have reached *ds:si (asm) or oself (goc)</DD>
</DL>
<P>
This displays geometry calls that have reached a particular object. Only one object at a time can be watched in this way.</P>

<UL>
<LI>
Two conditional breakpoints are used by this function (see cbrk). The tokens for these breakpoints are returned. </LI>
<LI>
The special object flags may be used to specify <EM>
object</EM>
.  For a list of these flags, see pobject.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_1b.htm#IX_objwatch Swat command">objwatch</A>,
<A HREF="../../Tools/SwatRef/SR_19.htm#IX_mwatch Swat command">mwatch</A>,
<A HREF="../../Tools/Tcl/TTCL_f.htm#IX_cbrk Tcl structure:command reference">cbrk</A>,
<A HREF="../../Tools/SwatRef/SR_1f.htm#IX_pobject Swat command:command reference">pobject</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Address history in Swat:get-address Swat command">
 </A>
<A NAME="IX_History:most recently accessed address">
 </A>
<A NAME="IX_get-address Swat command">
 </A>
get-address</H1>
<P>
Used by the various memory-access commands. Takes one argument, ADDR, being the address argument for the command. Typically, the command is declared as </P>
<PRE>[defcmd cmd {{addr nil}} ... ]</PRE>
<P>
allowing the address to be unspecified. This function will return the given address if it was, else it will return the last-accessed address (stored in the global <EM>
lastAddr</EM>
 variable as a 3-tuple from addr-parse) in the form of an address expression. If no address is recorded (<EM>
lastAddr</EM>
 is nil), the default-addr argument is used. If it is not specified then CS:IP will be used.</P>


<H1 CLASS="refHeading">
<A NAME="IX_Registers:flags register:getting flags with Swat">
 </A>
<A NAME="IX_Flags register:getting flags with Swat">
 </A>
<A NAME="IX_getcc Swat command">
 </A>
getcc</H1>

<PRE CLASS="syntax">getcc &lt;flag&gt;</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;getcc c&quot;</DT><DD>Get the carry flag.</DD>
</DL>
<P>
Get a flag from the target machine.</P>

<UL>
<LI>
The first argument is the first letter of the flag to get. The following is a list of the flags: </LI>
<DL>
<DT>
<STRONG>
                t</STRONG>
 </DT><DD>trap</DD>
<DT>
<STRONG>
               i</STRONG>
 </DT><DD>interrupt enable</DD>
<DT>
<STRONG>
          d</STRONG>
</DT><DD> direction</DD>
<DT>
<STRONG>
          o</STRONG>
</DT><DD> overflow</DD>
<DT>
<STRONG>
          s</STRONG>
</DT><DD> sign</DD>
<DT>
<STRONG>
          z</STRONG>
</DT><DD> zero</DD>
<DT>
<STRONG>
          a</STRONG>
</DT><DD> auxiliary carry</DD>
<DT>
<STRONG>
          p</STRONG>
</DT><DD> parity</DD>
<DT>
<STRONG>
          c</STRONG>
</DT><DD> carry </DD>
</DL>
<LI>
This command is handy to run with a breakpoint to stop if a flag is set.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_27.htm#IX_setcc Swat command">setcc</A>,
<A HREF="../../Tools/SwatRef/SR_6.htm#IX_clrcc Swat command">clrcc</A>,
<A HREF="../../Tools/SwatRef/SR_6.htm#IX_compcc Swat command">compcc</A>.


<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="SR_f.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">fpstack ...</A> 
<!-- to next --> | <A HREF="SR_11.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">getenv ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
