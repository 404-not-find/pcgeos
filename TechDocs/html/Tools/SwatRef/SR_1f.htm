<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: SR_1f.htm,v 1.1 97/06/27 16:00:10 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>Swat Command Reference: pinst ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">

<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="SR_1e.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">pgs ...</A> 
<!-- to next --> | <A HREF="SR_20.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">pobjmon ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->


<H1 CLASS="refHeading">
<A NAME="IX_Objects:examining with Swat">
 </A>
<A NAME="IX_pinst Swat command">
 </A>
<A NAME="IX_Instance data:examining with Swat">
 </A>
pinst</H1>

<PRE CLASS="syntax">pinst [&lt;address&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;pinst&quot;</DT><DD>print the last master level of instance data of the object at *DS:SI</DD>
<DT>
&quot;pinst *MyObject&quot;	</DT><DD>
print the last master level of instance data of MyObject.</DD>
<DT>
&quot;pinst -i&quot;</DT><DD>print the last master level of the windowed object at the mouse pointer.</DD>


</DL>
<P>
Print out all the instance data to the last level of the object.</P>

<UL>
<LI>
The &lt;address&gt; argument is the address of the object to examine. If not specified then pinst will use a default address. If you are debugging a C method, then the oself value will be used. Otherwise, *DS:SI is assumed to be an object.</LI>
<LI>
This command is useful for classes you've created and you are not interested in the data in the master levels which pobject would display.</LI>
<LI>
The following special values are accepted for &lt;address&gt;:</LI>
<DL>
<DT>
           <STRONG>
-a</STRONG>
</DT><DD>the current patient's application object</DD>
<DT>
           <STRONG>
-i</STRONG>
 </DT><DD>the current &quot;implied grab&quot;: the windowed object over which the mouse is currently located.</DD>
<DT>
           <STRONG>
-f</STRONG>
 </DT><DD>the leaf of the keyboard-focus hierarchy</DD>
<DT>
           <STRONG>
-t </STRONG>
</DT><DD>the leaf of the target hierarchy</DD>
<DT>
           <STRONG>
-m</STRONG>
 </DT><DD>the leaf of the model hierarchy</DD>
<DT>
           <STRONG>
-c</STRONG>
 </DT><DD>the content for the view over which the mouse is currently located</DD>
<DT>
           <STRONG>
-kg</STRONG>
 </DT><DD>the leaf of the keyboard-grab hierarchy</DD>
<DT>
           <STRONG>
-mg</STRONG>
</DT><DD> the leaf of the mouse-grab hierarchy</DD>
</DL>
<LI>
<CODE>
pinst</CODE>
 prints out the same information as &quot;pobj l&quot;.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_1f.htm#IX_pobject Swat command:command reference">pobject</A>,
<A HREF="../../Tools/SwatRef/SR_1f.htm#IX_piv Swat command">piv</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Instance data:examining with Swat">
 </A>
<A NAME="IX_Objects:examining with Swat">
 </A>
<A NAME="IX_piv Swat command">
 </A>
piv</H1>

<PRE CLASS="syntax">piv &lt;master&gt; &lt;iv&gt; [&lt;address&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;piv Vis VCNI_viewHeight&quot;</DT><DD>
print Vis.VCNI_viewHeight at *DS:SI</DD>


</DL>
<P>
This prints out the value of the instance variable specified.</P>

<UL>
<LI>
The &lt;master&gt; argument expects the name of a master level. The name may be found using <CODE>
pobject</CODE>
 to print the levels, and then using the name that appears after &quot;master part:&quot; and before the &quot;_offset&quot;.</LI>
<LI>
The &lt;iv&gt; argument expects the name of the instance variable to print.</LI>
<LI>
The &lt;address&gt; argument is the address of the object to examine. If not specified then *DS:SI assumed to be an object.</LI>
<LI>
This command is useful for when you know what instance variable you want to see but don't want to wade through a whole pobject command.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_1f.htm#IX_pobject Swat command:command reference">pobject</A>,
<A HREF="../../Tools/SwatRef/SR_1f.htm#IX_pinst Swat command">pinst</A>.


<P>
Prints a keyboard map in assembly-language format.</P>



<H1 CLASS="refHeading">
<A NAME="IX_plines Swat command">
 </A>
plines</H1>

<PRE CLASS="syntax">plines &lt;start&gt; [&lt;obj-address&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;plines 12&quot;</DT><DD>Print lines starting at line 12.</DD>
<DT>
&quot;plines 12 ^l6340h:0020h&quot;</DT><DD>
Print lines starting at line 12 of object at given address.</DD>


</DL>
<P>
Print information about the lines in a text object.</P>


<P>
The printed line-starts are <EM>
not</EM>
 correct.</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_23.htm#IX_ptext Swat command">ptext</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Local memory:examining with Swat">
 </A>
<A NAME="IX_plist Swat command">
 </A>
plist</H1>
<P>
Prints out a list of structures stored in an lmem chunk. It takes two arguments, the structure type that makes up the list, and the lmem handle of the chunk. e.g. plist FontsInUseEntry ds:di</P>


<H1 CLASS="refHeading">
<A NAME="IX_Bitmaps:examining with Swat">
 </A>
<A NAME="IX_pncbitmap Swat command">
 </A>
pncbitmap</H1>

<PRE CLASS="syntax">pncbitmap &lt;address&gt; &lt;width&gt; &lt;height&gt; [&lt;no space flag&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;pncbitmap *ds:si 64 64 t&quot;</DT><DD>
print the bitmap without spaces</DD>


</DL>
<P>
Print out a one-bitdeep noncompacted bitmap.</P>

<UL>
<LI>
The &lt;address&gt; argument is the address to the bitmap data.</LI>
<LI>
The &lt;width&gt; argument is the width of the bitmap in pixels.</LI>
<LI>
The &lt;height&gt; argument is the height of the bitmap in pixels.</LI>
<LI>
The &lt;no space flag&gt; argument removes the space normally printed between the pixels. Anything (like `t') will activate the flag.</LI>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_1c.htm#IX_pcbitmap Swat command">pcbitmap</A>.



<H1 CLASS="refHeading">
<A NAME="IX_Clipboard:printing transfer item with Swat">
 </A>
<A NAME="IX_pnormal Swat command">
 </A>
pnormal</H1>

<PRE CLASS="syntax">pnormal [-v]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;pnormal -v&quot;</DT><DD>
Print out verbose information about the current normal transfer item.</DD>


</DL>
<P>
Prints out information about the current &quot;normal&quot; transfer item on the clipboard.</P>


<P>
If you give the &quot;-v&quot; flag, this will print out the contents of the different transfer formats, rather than just an indication of their types. </P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_20.htm#IX_pquick Swat command">pquick</A>,
<A HREF="../../Tools/SwatRef/SR_21.htm#IX_print-clipboard-item Swat command">print-clipboard-item</A>.



<H1 CLASS="refHeading">
<A NAME="IX_pobjarray Swat command">
 </A>
pobjarray</H1>

<PRE CLASS="syntax">pobjarray [&lt;address&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;pobjarray&quot;</DT><DD>Print the array of ODs at *ds:si.</DD>


</DL>
<P>
Print out an array of objects.</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_1c.htm#IX_pbody Swat command">pbody</A>.



<H1 CLASS="refHeading">
<A NAME="IX_pobject Swat command:command reference">
 </A>
<A NAME="IX_Objects:examining with Swat">
 </A>
pobject</H1>

<PRE CLASS="syntax">pobject [&lt;address&gt;] [&lt;detail&gt;]</PRE>
<P CLASS="refField"><STRONG>
Examples:</STRONG>	</P>
<DL>
<DT>
&quot;pobj&quot; </DT><DD>print the object at *ds:si from Gen down if Gen is one of its master levels; else, print all levels</DD>
<DT>
&quot;pobj *MyGenObject&quot; </DT><DD>
print MyGenObject from Gen down</DD>
<DT>
&quot;pobj Gen&quot; </DT><DD>print the Gen level for the object at *ds:si</DD>
<DT>
&quot;pobj last&quot;</DT><DD> print the last master level for the object at *ds:si</DD>
<DT>
&quot;pobj *MyObject&quot;</DT><DD>
 all print all levels of MyObject</DD>
<DT>
&quot;pobj -i sketch&quot; </DT><DD>
print the master level headings of the windowed object at the mouse pointer</DD>
<DT>
&quot;pobj *MyObject FI_foo&quot;</DT><DD>
 print the FI_foo instance variable for MyObject</DD>
<DT>
&quot;pobj HINT_FOO&quot; </DT><DD>
print the HINT_FOO variable data entry for the object at *ds:si</DD>
<DT>
&quot;pobj v&quot; </DT><DD>print the variable data for the object at *ds:si</DD>


</DL>
<P>
Print all or part of an object's instance and variable data.</P>

<UL>
<LI>
The &lt;address&gt; argument is the address of the object to examine. If not specified then oself is used, unless the current function is written in assembly, in which case *DS:SI . </LI>
<LI>
The following flag values are accepted in lieu of an address:</LI>
<DL>
<DT>
           <STRONG>
-a</STRONG>
</DT><DD>the current patient's application object</DD>
<DT>
           <STRONG>
-i</STRONG>
 </DT><DD>the current &quot;implied grab&quot;: the windowed object over which the mouse is currently located.</DD>
<DT>
           <STRONG>
-f</STRONG>
 </DT><DD>the leaf of the keyboard-focus hierarchy</DD>
<DT>
           <STRONG>
-t</STRONG>
 </DT><DD>the leaf of the target hierarchy</DD>
<DT>
           <STRONG>
-m</STRONG>
 </DT><DD>the leaf of the model hierarchy</DD>
<DT>
           <STRONG>
-c</STRONG>
 </DT><DD>the content for the view over which the mouse is currently located</DD>
<DT>
           <STRONG>
-kg</STRONG>
 </DT><DD>the leaf of the keyboard-grab hierarchy</DD>
<DT>
           <STRONG>
-mg</STRONG>
</DT><DD> the leaf of the mouse-grab hierarchy</DD>
</DL>
<LI>
The <EM>
detail</EM>
 argument specifies what information should be printed out about the object. If none is specified, all levels of the object from the Gen level down will be printed if Gen is one of the object's master levels; else, the whole object will be printed.</LI>
<LI>
The following values are accepted for <EM>
detail</EM>
:</LI>
<DL>
<DT>
           <STRONG>
all</STRONG>
 (or <STRONG>
a</STRONG>
) 	</DT><DD>
all master levels</DD>
<DT>
           <STRONG>
last</STRONG>
 (or <STRONG>
l</STRONG>
)	</DT><DD>
last master level only</DD>
<DT>
           <STRONG>
sketch</STRONG>
 (or <STRONG>
s</STRONG>
)</DT><DD>
master level headings only</DD>
<DT>
           <STRONG>
vardata</STRONG>
 (or <STRONG>
v</STRONG>
)</DT><DD>
vardata only</DD>
<DT>
           a master level name</DT>
<DT>
           an instance variable name</DT>
<DT>
           a variable data entry name </DT>
</DL>
</UL>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <A HREF="../../Tools/SwatRef/SR_1f.htm#IX_pinst Swat command">pinst</A>,
<A HREF="../../Tools/SwatRef/SR_1f.htm#IX_piv Swat command">piv</A>,
<A HREF="../../Tools/SwatRef/SR_23.htm#IX_pvardata Swat command">pvardata</A>.


<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="SR_1e.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">pgs ...</A> 
<!-- to next --> | <A HREF="SR_20.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">pobjmon ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
