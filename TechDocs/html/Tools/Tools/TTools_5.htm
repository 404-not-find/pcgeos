<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: TTools_5.htm,v 1.1 97/06/27 16:02:37 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Glue</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="sectionTitle">
<A HREF="index.htm">Using Tools</A>: 5 
<A NAME="18145">
 </A>
Glue</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="TTools_4.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">4 Esp</A> 
<!-- to next --> | <A HREF="TTools_6.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">6 Goc</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<P>
<A NAME="IX_Glue">
 </A>
Glue is the GEOS linker. It creates GEOS or DOS executables from object files. (It can also create GEOS VM and font files, if you have the appropriate tools.) These object files may have been created by a C compiler, or by the Esp assembler. To create the executables, Glue must create a combined file, resolve external declarations, determine how to call libraries, and apportion the code and data into resources. Glue will also create a .sym file--a file containing symbolic debugging information which the Swat debugger will use for viewing the geode's data.</P>
<P>
Most users will never call Glue directly, instead going through <CODE>
pmake</CODE>
, which will make the proper calls to Glue for the most common cases. If you use the default makefiles, the variable LINKFLAGS will determine which arguments Glue receives; thus, by creating a local makefile that modifies this variable's value, you can pass more flags to glue. See <A HREF="TTools_12.htm#65382"> How to Customize pmake</A>
 for help in creating a local makefile.</P>
<P>
The Glue application takes the following arguments:</P>
<PRE>glue @file
glue &lt;flags&gt; &lt;objFile&gt;+ [-l&lt;objFile&gt;]*</PRE>
<DL>
<DT>
<EM>
@file</EM>
</DT><DD>The Glue linker should take its arguments from the file <EM>
file</EM>
 in addition to those on the command line. This may come in handy if you often use the same long string of options. Since you may need to pass Glue more arguments than may be input on the command line, sometimes this option is necessary.</DD>
<P>
Note that if you use this option, then all arguments must be included in the file--there should be no others on the command line itself.</P>
<P>
The <CODE>
pmake</CODE>
 program uses this option to pass arguments to Glue.</P>
<DT>
<STRONG>
-D</STRONG>
<STRONG>
var</STRONG>
<STRONG>
</DT><DD></STRONG>
Defines the variable <EM>
var</EM>
; used with <CODE>
ifdef</CODE>
 statements within the .gp file to allow for conditional linking (see <A HREF="../../LRef/GPKey/index.htm">the GP file keyword reference</A>
 for the syntax of Glue's ifdef statements). </DD>
<DT>
<STRONG>
-L</STRONG>
 <STRONG>
path</STRONG>
</DT><DD>Specifies where Glue looks for .ldf (library definition) files. These files are placed in a standard directory by the system makefiles on a &quot;<CODE>
pmake</CODE>
 lib¨.</DD>
<DT>
<STRONG>
-N</STRONG>
 <STRONG>
string</STRONG>
 </DT><DD>Specify a copyright notice.  This string must be 32 characters or less.</DD>
<DT>
<STRONG>
-Oe</STRONG>
 </DT><DD>Creating DOS executable (&quot;.exe&quot;) file. Of course, this option is not valid if the object files contain GEOS directives which will not work outside GEOS.</DD>
<DT>
<STRONG>
-Oc</STRONG>
</DT><DD>Creating DOS command (&quot;.com&quot;) file. Of course, this option is not valid if the object files contains GEOS directives which will not work outside of GEOS.</DD>
<DT>
<STRONG>
-Og</STRONG>
 <STRONG>
file</STRONG>
</DT><DD>Creating GEOS executable (&quot;.geo&quot;) file. You must provide the name of the geode's Glue parameters file (the .GP file). For information about setting up a parameter file, see <A HREF="../../Intro/HelloWorld/index.htm">the Hello World chapter</A>.</DD>
<P>
When creating a .geo file, you may pass any of the following options:</P>
<DL>
<DT>
<STRONG>
-E</STRONG>
</DT><DD>Link Error checking version of geode.</DD>
<DT>
<STRONG>
-R</STRONG>
 <STRONG>
number</STRONG>
 </DT><DD>Specify release number of geode (e.g. 3.2.1.0).</DD>
<DT>
<STRONG>
-P</STRONG>
 <STRONG>
number</STRONG>
</DT><DD>Specify protocol number of geode (e.g. 1.0).</DD>
<DT>
<STRONG>
-T</STRONG>
 <STRONG>
number</STRONG>
 </DT><DD>File type.</DD>
<DT>
<STRONG>
-l</STRONG>
 </DT><DD>Creating a library; Glue should create .ldf file.</DD>
</DL>
<DT>
<STRONG>
-Ov</STRONG>
</DT><DD>Creating GEOS Virtual Memory (.vm) file. Using this option, you may create .vm storage files as set up by the Esp assembler. You may pass the following options when creating .vm files (if you don't know the meaning of some of these terms, see <A HREF="../../Memory/VM/index.htm">the Virtual Memory chapter</A>):</DD>
<DL>
<DT>
<STRONG>
-A</STRONG>
 <STRONG>
number</STRONG>
 </DT><DD><CODE>
VMAttributes</CODE>
 to use for the file.</DD>
<DT>
<STRONG>
-C</STRONG>
 <STRONG>
number</STRONG>
 </DT><DD>Compaction threshold.</DD>
<DT>
<STRONG>
-M</STRONG>
 <STRONG>
string</STRONG>
 </DT><DD>Map block segment name.</DD>
<DT>
<STRONG>
-P</STRONG>
 <STRONG>
number</STRONG>
 </DT><DD>Protocol number (e.g. 2.5.0.3).</DD>
<DT>
<STRONG>
-R</STRONG>
 <STRONG>
number</STRONG>
 </DT><DD>Release number (e.g. 12.3).</DD>
<DT>
<STRONG>
-i</STRONG>
 <STRONG>
name</STRONG>
 </DT><DD>A .geo file from which to get the table of imported libraries. This allows the VM file to be opened by that geode and objects in the file to be used.</DD>
<DT>
<STRONG>
-t</STRONG>
 <STRONG>
token</STRONG>
 </DT><DD>File token</DD>
<DT>
<STRONG>
-c</STRONG>
 <STRONG>
token</STRONG>
 </DT><DD>Creator's manufacturer token.</DD>
<DT>
<STRONG>
-l</STRONG>
 <STRONG>
string</STRONG>
</DT><DD>File's long name.</DD>
<DT>
<STRONG>
-u</STRONG>
 <STRONG>
notes</STRONG>
</DT><DD>File's user notes.</DD>
</DL>
<DT>
<STRONG>
-N</STRONG>
 <STRONG>
string</STRONG>
</DT><DD>Copyright notice which will be embedded in header of .GEO or .VM files.</DD>
<DT>
<STRONG>
-G</STRONG>
 <STRONG>
number</STRONG>
</DT><DD>You should never have to use this option. This specifies a non-standard GEOS release number (e.g. 1.3); if this release used a different VM header than GEOS 2.0, Glue will still construct the proper header as long as this option is passed. Since the default release number is 2, developers for 2.X do not need this option.</DD>
<DT>
<STRONG>
-Wall</STRONG>
</DT><DD>Requests that Glue output all optional warnings.</DD>
<DT>
<STRONG>
-Wunref</STRONG>
</DT><DD>Requests that Glue output optional unreferenced global symbol warnings.</DD>
<DT>
<STRONG>
-d</STRONG>
 </DT><DD>Dump memory. Normally used only when debugging Glue.</DD>
<DT>
<STRONG>
-m</STRONG>
</DT><DD>Provide memory map in output. This information gives information about the sizes of various parts of the geode. This information proves especially helpful when making geodes work with small devices.</DD>
<DT>
<STRONG>
-nll</STRONG>
</DT><DD>Disables the output of line numbers for local memory segments for any application with 163 resources or more.</DD>
<DT>
<STRONG>
-o </STRONG>
<STRONG>
file</STRONG>
</DT><DD>Specify name of output file (e.g. WOROPRO.GEO).</DD>
<DT>
<STRONG>
-q</STRONG>
</DT><DD>Leave the symbolic information behind even if an error was encountered. Normally, this flag is used only when debugging Glue.</DD>
<DT>
<STRONG>
-r</STRONG>
</DT><DD><A NAME="Multi-launchability">
 </A>
Maps segment relocations to non-shared resources to resource IDs. This is normally used only by multi-launchable C applications. When running more than one instance of a multi-launchable application, the system only uses one copy of the read-only portion of the application. The system makes separate copies of the writable data for each instance of the application. This can lead to conflict when the relocation instructions for the read-only data uses the handle or segment of a writable resource; which copy should be responsible for providing these addresses? If you don't pass this flag and Glue detects the above situation, Glue will simply refuse to make the application multi-launchable. This flag instructs Glue to instead use the resource ID of the writable resource where it would normally use the segment or handle of that resource.</DD>
<DT>
</DT><DD>If you use this option, make sure that if you use the address of a variable in a resource other than dgroup that you use <CODE>
GeodeGetOptrNS()</CODE>
 and lock down or dereference the handle of the returned optr.</DD>
<DT>
<STRONG>
-s</STRONG>
 <STRONG>
file</STRONG>
 </DT><DD>Specify name of symbol file (the .SYM file).</DD>
<DT>
<STRONG>
-z</STRONG>
 </DT><DD>Output localization information.</DD>
</DL>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="TTools_4.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">4 Esp</A> 
<!-- to next --> | <A HREF="TTools_6.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">6 Goc</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
