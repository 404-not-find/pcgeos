<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: Overview_21.htm,v 1.1 97/06/02 15:21:14 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Graphics System</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="subsectionTitle">
<A HREF="index.htm">Overview</A>: 6.5 <A HREF="Overview_1c.htm">System Services</A>: 
Graphics System</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="Overview_1c.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Overview_20.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">6.4 Item Databases</A> 
<!-- to next --> | <A HREF="Overview_22.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">6.6 Text</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<P>
The graphics system provided in the GEOS kernel is extremely powerful and is designed to make creating graphics simple and fast for applications. It includes some advanced concepts and state-of-the-art technology that make GEOS rise well above most other GUIs.</P>

<H2 CLASS="HeadingC">
The Coordinate Space</H2>
<P>
The GEOS graphics system uses a single imaging model like that used by PostScript. Applications and libraries draw their graphics on a generic rectangular grid with a resolution of 72 points per inch. When drawing to the screen or a printer, the graphics system will translate the graphics commands to the highest resolution of the output device, ensuring true WYSIWYG output. This system allows programmers to specify their graphics in real-world coordinates without worrying about the size of various resolution devices.</P>
<P>
Normal graphics coordinates are represented by signed, 16-bit integers. Normal documents can be up to about nine feet on a side. Additionally, the graphics system allows applications to use an extended coordinate system (called the <EM>
large document model</EM>
) of signed, 32-bit integers. Large documents can be up to 900 miles on a side! Large documents, however, can incur a certain amount of additional overhead; if you do not need to use large documents, you probably should not.</P>


<H2 CLASS="HeadingC">
Graphic States</H2>
<P>
To simplify complex drawing, the graphics system maintains a <EM>
graphics state</EM>
, or <EM>
GState</EM>
. GStates can be created or destroyed dynamically to allow several different GStates for a given window (only one may be active at any given moment, however).</P>
<P>
The GState is essentially a data structure that contains all the relevant information about the current state of a window. The GState's information includes current color, drawing position, angle of rotation, scale, translation in the coordinate space, line and fill attributes, clipping paths, text attributes, and other items.</P>
<P>
Graphics commands are issued relative to a particular GState. For example, the command <CODE>
GrDrawEllipse()</CODE>
 must be passed a GState so the kernel knows exactly how to draw the ellipse; if the current GState is rotated 45 degrees and has green as its current line color, a green-outlined ellipse will be drawn rotated 45 degrees.</P>
<P>
Programs may apply transformations to GStates--rotation, translation, or scaling. You can also define custom transformation matrixes to apply to your GStates if complex operations (e.g. shearing) are required.</P>


<H2 CLASS="HeadingC">
Graphic Primitives and Graphic Objects</H2>
<P>
GEOS provides a complete set of graphics drawing primitives including lines, arcs, Bézier curves, splines, outline-defined text, rectangles, ellipses, polylines, polygons, and bitmaps.</P>


<H2 CLASS="HeadingC">
Paths</H2>
<P>
A graphics <EM>
path</EM>
 in GEOS is a continuous trail that defines the outline of an area. A path is an outline description of an arbitrarily shaped area, useful when an application must define a mathematically-precise shape. Paths may also be filled, combined with other paths, and scaled to any size without loss of resolution.</P>
<P>
One example of the powerful application of paths is creation of arbitrary clipping regions. It is possible, for example, to clip drawings to an ellipse, to a bézier curve, or even to text.</P>


<H2 CLASS="HeadingC">
Regions</H2>
<P>
<EM>
Regions</EM>
 perform essentially the same function as paths--definition of an arbitrarily shaped area or clipping region. However, because regions are defined as resolution-dependent, they are typically used only for optimized drawing of UI gadgetry.</P>


<H2 CLASS="HeadingC">
Graphics Strings</H2>
<P>
A <EM>
graphics string</EM>
 (or <EM>
GString</EM>
) is a collection of graphics commands;<CODE>
 </CODE>
GStrings are useful for saving complex graphic operations and playing them back later. GStrings are created by calling a special routine and are then filled by executing graphics commands just as if you were drawing to the screen. GStrings may be pre-defined in source code as data resources to be played during execution.</P>
<P>
GStrings are extremely useful for sharing graphic data between processes. For example, applications use GStrings to define their program icons, which may then be displayed by File Manager applications. The Clipboard supports the GString data format for cut, copy, and paste operations. GStrings are also flexible--they may contain comments and may be set up to be executed with parameters.</P>


<H2 CLASS="HeadingC">
Bitmaps</H2>
<P>
<EM>
Bitmaps</EM>
 are pixel-by-pixel images defined at a specific resolution; they are automatically scaled to match the resolution of the display. Bitmaps are used in general to define complicated pictures, usually with many colors.</P>
<P>
GEOS allows the creation of bitmaps with specified resolutions. Bitmaps can be created off-screen and may be edited with standard graphics system commands. Bitmaps are used mainly as monikers of generic objects and as icons for applications and data files.</P>


<H2 CLASS="HeadingC">
Color</H2>
<P>
GEOS allows applications to specify colors in two ways: with the system <EM>
palette</EM>
 and with RGB values. The palette contains 256 entries, each of which is given a standard RGB value. If an application only uses 256 colors, it can modify the palette so it has the colors it needs. If an application uses more than 256 colors, it can specify any RGB value for any given graphics operation. The palette may also be expanded to support other color models. If the system palette is not sufficient, each application may create its own.</P>

<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="Overview_1c.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Overview_20.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">6.4 Item Databases</A> 
<!-- to next --> | <A HREF="Overview_22.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">6.6 Text</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
