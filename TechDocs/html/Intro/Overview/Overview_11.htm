<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: Overview_11.htm,v 1.2 97/09/05 12:04:09 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Menus and Dialog Boxes</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="subsectionTitle">
<A HREF="index.htm">Overview</A>: 5.5 <A HREF="Overview_c.htm">The GEOS User Interface</A>: 
Menus and Dialog Boxes</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="Overview_c.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Overview_10.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">5.4 Input</A> 
<!-- to next --> | <A HREF="Overview_12.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">5.6 Scrolling Views</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<P>
Among the generic objects of the GEOS UI library is GenInteraction. This object can be used to implement menus, dialog boxes, and error boxes, and it can also be used for grouping and arranging other generic objects (such as triggers, lists, etc.). It provides extreme flexibility and functionality, and experienced programmers can usually get a menu and dialog structure up on the screen quickly just by setting a few attributes.</P>
<P>
Remember that because the Interaction is a generic object, the Generic UI and Specific UI libraries will translate it into its proper implementation at run-time. The Interaction serves the primary purpose of grouping objects; the grouping may be implemented in various ways (e.g. a menu or a dialog box) depending on the attributes and hints applied.</P>
<P>
The sections below outline some of the practical functionality of these objects; for a full description of what these do and how they can be used, see the Object Reference Book.</P>

<H2 CLASS="HeadingC">
Menus</H2>
<P>
Menus in GEOS are subject to the rules and conventions of the specific UI in use by the user. However, several basic concepts are supported. </P>
<UL>
<LI>
Standard menus<BR>
Some specific UIs have differing menu structures. Therefore, several standard generic menus (e.g. the File menu) can be implemented by giving the menu a standard set of attributes. The UI will automatically build and manage this menu according to the UI specification in use at the time.</LI>

<IMG SRC="Overview_11_menus.gif">

</UL>
<UL>
<LI>
Cascading or nested menus<BR>
Because Interactions may be nested, cascading (or nested) menus are easy to implement. Cascading menus are useful if an application has many menu items that may logically be grouped into different areas of functionality.</LI>
<LI>
Keyboard accelerators<BR>
Because the UI manages both input and menus, you can easily specify accelerator keystrokes for each menu item. When the user hits the proper keystrokes, the same action is performed as if the user had clicked on the associated menu item. This happens automatically without additional application code.</LI>
<LI>
Keyboard menu navigation<BR>
Every menu item may have a character that the user may press during keyboard navigation. This is important because it allows users to use your entire application without having a mouse.</LI>
<LI>
Lists and checkboxes within menus<BR>
Menus may contain not only triggers but also lists of items. Lists are implemented with the GenItemGroup, GenItem, GenBooleanGroup, and GenBoolean generic objects. Lists may be exclusive or not, and each entry may have a checkbox indicating its on/off status. Again, all these functions are determined by the attributes set for the interaction and item objects.</LI>
<LI>
Menu items that bring up dialog boxes<BR>
By setting certain attributes in an interaction, you can create menu items that automatically bring up dialog boxes. The UI will put a trigger in the menu representing the dialog box, and when the trigger is activated, the UI will put up the box.</LI>
<LI>
Pin-up menus<BR>
In the OSF/Motif implementation of GEOS, all menus are automatically given the ability to be pinned in place and moved around the screen. Because this is a function of the specific UI, applications are completely unaware of the fact.</LI>
</UL>


<H2 CLASS="HeadingC">
Dialog Boxes</H2>
<P>
Dialog boxes are standard ways of having an application interact with the user. For example, a dialog box may contain a number of controls that determine how the application displays its data.
<IMG SRC="Overview_11_dialogs.gif">

</P>
<P>
Dialog boxes, like menus, are implemented through the use of GenInteraction objects. Applications may also call a kernel routine that will put up standard dialogs in certain situations (e.g. errors or warnings).</P>
<P>
Several features of dialog boxes are implemented automatically with very little additional code in the application:</P>
<UL>
<LI>
Automatic geometry management<BR>
When a dialog box contains generic objects (e.g. triggers, lists, and text fields), all geometry is handled automatically. By using various hints, you can modify the normal organization, but sizing and placement of the generic objects and the dialog box are entirely automatic.</LI>
<LI>
Standard response triggers and reply bars<BR>
Just as there are standard menu types, UI specifications often include rules for dialog box response triggers (e.g., the &quot;OK&quot; button on the left and a &quot;Cancel&quot; button on the right). Standard response triggers normally appear in an area of the dialog box known as the &quot;reply bar.&quot; You can set up a reply bar with standard attributes that will automatically be implemented properly by the UI. As an alternative, you can even use pre-defined dialog box types that have their own reply bars.</LI>
<LI>
Modality<BR>
Sometimes, dialog boxes require a user action before the application or system can continue with other tasks. Dialog boxes can have various modality states: system-modal, which does not allow the user to interact with anything but the dialog box; application-modal, which allows the user to switch to other applications but disallows interaction within the dialog's application (except for the dialog box); and non-modal, which allows the user to switch to any other part of the system.</LI>
<LI>
Standard dialog types<BR>
To increase the amount of standardization across all applications, GEOS includes several standard dialog box types accessible through the use of UI routines. These include errors, warnings, and questions. Also, you can call up custom dialog boxes with special kernel routines.</LI>
</UL>

<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="Overview_c.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Overview_10.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">5.4 Input</A> 
<!-- to next --> | <A HREF="Overview_12.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">5.6 Scrolling Views</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
