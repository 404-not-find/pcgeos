<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: Overview_1f.htm,v 1.1 97/06/02 15:20:57 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Local Memory and Object Blocks</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="subsectionTitle">
<A HREF="index.htm">Overview</A>: 6.3 <A HREF="Overview_1c.htm">System Services</A>: 
Local Memory and Object Blocks</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="Overview_1c.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Overview_1e.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">6.2 Virtual Memory</A> 
<!-- to next --> | <A HREF="Overview_20.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">6.4 Item Databases</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<P>
Often applications will want to store large numbers of very small data items. In these cases, it's cumbersome and inefficient to allocate a global handle and a block on the global heap. For these situations, GEOS offers the concept of <EM>
local memory</EM>
 (LMem).</P>
<P>
Local memory can be thought of as a mini-heap within a memory block. Each individual unit allocated in this mini-heap is known as a <EM>
chunk</EM>
, and each chunk is designated a <EM>
chunk handle</EM>
. Thus, to access any piece of information within an LMem block, you need to have the block's global handle and the item's chunk handle.</P>
<P>
Chunks may be allocated or freed, and any chunk may be moved within an LMem heap at any time (e.g. when the LMem heap is compacted). Locked LMem heaps may have chunks shuffled only when space is allocated within the heap. Access to chunks is gained by locking the LMem block and dereferencing the chunk handle. Chunks may be resized, and bytes may be added to or removed from chunks.</P>
<P>
LMem blocks are used primarily for two purposes: Database files and object blocks. Database files are managed by the Item Database Library (see below). Object blocks are used extensively by the UI and applications; object blocks store objects in memory and often are attached to VM files.</P>
<P>
Each object in an object block occupies one chunk. Thus, the combination of global handle and chunk handle of an object is known as the <EM>
Object Pointer</EM>
 (optr) of the object. The optr is used to identify the object uniquely in the system for all types of access.</P>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="Overview_1c.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Overview_1e.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">6.2 Virtual Memory</A> 
<!-- to next --> | <A HREF="Overview_20.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">6.4 Item Databases</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
