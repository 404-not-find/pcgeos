<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: Libraries_6.htm,v 1.2 97/07/21 11:55:14 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Compiler Directives</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="sectionTitle">
<A HREF="index.htm">Libraries</A>: 6 
Compiler Directives</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Libraries_5.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">5 Header Files</A> 
<!-- to next --> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<P>
Libraries have to be compiled slightly differently from applications. Since library routines are run under application threads, they must treat global variables differently than applications do. You must therefore add pragmas to ensure that the library is compiled correctly.</P>
<P>
There are several steps to take:</P>
<UL>
<LI>
The compiler should not to expect the <CODE>
ss</CODE>
 register to be the same as <CODE>
ds</CODE>
.</LI>
<LI>
The compiler must generate code to load the <CODE>
dgroup</CODE>
 segment address into <CODE>
ds</CODE>
 at the start of exported routines.</LI>
<LI>
The compiler must set up semaphores or other data-synchronization structures for global variables.</LI>
</UL>
<P>
Most compiler manuals have a section on compiling dynamically-linked libraries (DLLs) for Microsoft Windows; this section will describe how to set up these conditions. Note that you need only do this if your library will have its own global or static variables. If the library's routines and methods use only local, automatic variables, you need not perform these actions.</P>
<P>
When you compile a library, you must pass the argument &quot;-L &lt;libname&gt;&quot; to Goc. Edit your <STRONG CLASS="fileName">
local.mk</STRONG>
 file to make it insert this flag. For more information about the <STRONG CLASS="fileName">
local.mk</STRONG>
 file, see <A HREF="../../Tools/Tools/TTools_12.htm">Using Tools chapter</A>.</P>
<P>
Finally, if your library is written in C or Goc (or if its API is in C, even if some internal routines are written in assembly), you must indicate this by putting the flag <CODE>
c-api</CODE>
 on the &quot;type&quot; line of the library's <STRONG CLASS="fileName">
.gp</STRONG>
 file. This instructs the kernel to pass arguments on the stack (instead of in registers) when calling the entry point routine.<STRONG CLASS="fileName">
</STRONG>
</P>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Libraries_5.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">5 Header Files</A> 
<!-- to next --> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
