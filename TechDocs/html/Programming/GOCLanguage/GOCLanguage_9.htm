<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: GOCLanguage_9.htm,v 1.1 97/06/06 14:34:15 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Using Routine Pointers in Goc</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="subsectionTitle">
<A HREF="index.htm">GEOS Programming</A>: 2.4 <A HREF="GOCLanguage_5.htm">Goc and C</A>: 
<A NAME="67927">
 </A>
Using Routine Pointers in Goc</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="GOCLanguage_5.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="GOCLanguage_8.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">2.3 Macros in Goc</A> 
<!-- to next --> | <A HREF="GOCLanguage_a.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">2.5 Esoteric Source-Code Management</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<PRE>ProcCallFixedOrMovable_cdecl(), ProcCallFixedOrMovable_pascal()</PRE>
<P>
Most GEOS code is kept in movable resources. If you call a routine explicitly from source code the Goc preprocessor generates appropriate directives to see to it that the resource is loaded into memory when it is called. However, if you call a routine with a routine-pointer, GEOS cannot take these precautions. Accordingly, when you are calling a routine with a pointer, you must either see to it that the resource is loaded, or use one of the two <CODE>
ProcCallFixedOrMovable</CODE>
 routines to instruct the kernel to lock the appropriate resource.</P>
<P>
If you know the routine is in a resource which is locked or fixed in memory, you can use the routine pointer exactly the way you would in standard C. This is usually because the calling routine is in the same resource as the routine or routines which may be called. </P>
<P>
<A NAME="IX_ProcCallFixedOrMovable_cdecl()">
 </A>
<A NAME="IX_ProcCallFixedOrMovable_pascal()">
 </A>
If you are not sure that the resource is loaded, you should call the routine with either <CODE>
ProcCallFixedOrMovable_cdecl()</CODE>
 or <CODE>
ProcCallFixedOrMovable_pascal()</CODE>
. Each of these routines is passed the following arguments:</P>
<UL>
<LI>
A pointer to the routine to be called</LI>
<LI>
All the arguments passed to the routine, in exactly the order which the routine expects.</LI>
</UL>
<P>
Both routines return whatever the called routine returns.</P>
<P>
If the routine to be called was defined with standard C calling conventions (the default), you should use <CODE>
ProcCallFixedOrMovable_cdecl()</CODE>
. If the routine was declared with the keyword <CODE>
_pascal</CODE>
, it uses Pascal's calling conventions; you must then use the routine <CODE>
ProcCallFixedOrMovable_pascal()</CODE>
. Most kernel and system-library routines are declared with Pascal's calling conventions.</P>
<P CLASS="figTitle">
Code Display 5-3 Using ProcCallFixedOrMovable_cdecl()</P>
<PRE>extern int
SomeRoutineCalledViaAPointer(int anArg, int anotherArg, const char *someText);</PRE>
<PRE>int (*funcPtr) (int, int, const char *);					/* A function pointer */</PRE>
<PRE>funcPtr = SomeRoutineCalledViaAPointer;</PRE>
<PRE>/* We want to do
 *	SomeRoutineCalledViaAPointer(1, 2, &quot;Franklin T. Poomm&quot;);
 * but we want to call it through the pointer, even though it's in another 
 * resource:
 */</PRE>
<PRE>ProcCallFixedOrMovable_cdecl(funcPtr,					/* The pointer to the routine */
				1, 2, &quot;Franklin T. Poomm&quot;);</PRE>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="GOCLanguage_5.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="GOCLanguage_8.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">2.3 Macros in Goc</A> 
<!-- to next --> | <A HREF="GOCLanguage_a.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">2.5 Esoteric Source-Code Management</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
