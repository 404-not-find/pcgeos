<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: GOCLanguage_6.htm,v 1.1 97/06/02 16:00:53 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Goc File Types</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="subsectionTitle">
<A HREF="index.htm">GEOS Programming</A>: 2.1 <A HREF="GOCLanguage_5.htm">Goc and C</A>: 
Goc File Types</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="GOCLanguage_5.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="GOCLanguage_5.htm"><IMG SRC="../../docImages/prevUp.gif" BORDER="0" ALT="Prev: ">2 Goc and C</A> 
<!-- to next --> | <A HREF="GOCLanguage_7.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">2.2 Conditional Code in Goc</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<PRE>@include, @optimize</PRE>
<P>
When programming in Goc, you will use several different types of code files. Files ending in <STRONG CLASS="fileName">
.goh</STRONG>
 are the Goc equivalent of C <STRONG CLASS="fileName">
.h</STRONG>
 files--they contain routine headers, constants, and other included data and structures necessary for the program. Files ending in <STRONG CLASS="fileName">
.goc</STRONG>
 are the Goc equivalent of C <STRONG CLASS="fileName">
.c</STRONG>
 files--they contain code and data for the program. You should keep any Goc-specific code or header information strictly in the Goc files, and standard C code should be kept in C files. C code can also be put in <STRONG CLASS="fileName">
.goc</STRONG>
 and <STRONG CLASS="fileName">
.goh</STRONG>
 files, but for consistency, you should try to keep it separate.</P>
<P>
Not all of your program's header files need be <STRONG CLASS="fileName">
.goh</STRONG>
 files--if the header file contains only C constructions (structures, routine definitions, and so on), then you may leave it as a standard C <STRONG CLASS="fileName">
.h</STRONG>
 file, included by means of the #include directive.</P>
<P>
The rule of thumb is that if a header file contains any Goc code or includes a <STRONG CLASS="fileName">
.goh</STRONG>
 file, then it must be a <STRONG CLASS="fileName">
.goh</STRONG>
 file. Note also that <STRONG CLASS="fileName">
.goh</STRONG>
 files are allowed to contain simple standard C code; if you are not sure, then, you can make all your header files <STRONG CLASS="fileName">
.goh</STRONG>
.</P>
<P>
Standard C programs use the <CODE>
#include</CODE>
 directive to include header (<STRONG CLASS="fileName">
.h</STRONG>
) files. When using Goc, you can use this directive in standard <STRONG CLASS="fileName">
.c</STRONG>
 and <STRONG CLASS="fileName">
.h</STRONG>
 files; when including <STRONG CLASS="fileName">
.goh</STRONG>
 files in <STRONG CLASS="fileName">
.goc</STRONG>
 files, though, you have to use the <CODE>
@include</CODE>
 directive, which is Goc-specific. It has the same syntax as <CODE>
#include</CODE>
.</P>
<P>
<A NAME="IX_@include[;include]">
 </A>
An example of using <CODE>
@include</CODE>
 comes from the Hello World application, which includes the <STRONG CLASS="fileName">
stdapp.goh</STRONG>
 file. (All GEOS applications will need to include this file to compile properly; it must be <CODE>
@include</CODE>
d before any standard C headers are <CODE>
#include</CODE>
d.) The line from Hello World is</P>
<PRE>@include &lt;stdapp.goh&gt;</PRE>
<P>
The syntax of this directive, as stated above, is the same as for the C directive <CODE>
#include</CODE>
. One exception is that the <CODE>
@include</CODE>
 directive will include a file just once, even if it is included by an included file--there is no need to conditionally include a file (checking first to make sure it hasn't already been included).</P>
<P>
If you will be including a Goc file in many different applications, or if it is very long and elaborate, it is a good idea to put the keyword <CODE>
@optimize</CODE>
 at the top of the file. This instructs the Goc preprocessor to generate a special stripped-down version of the file with a <CODE>
.poh</CODE>
 suffix. The compiler will then automatically keep the <CODE>
.poh</CODE>
 file up to date, and use it in compilations instead of the <CODE>
.goh</CODE>
 file. The <CODE>
.poh</CODE>
 file contains all the data of the <CODE>
.goh</CODE>
 file, but is somewhat faster to compile into an application; thus, by using the <CODE>
@optimize</CODE>
 keyword, you incur a longer compilation whenever you make a change to the <CODE>
.goh</CODE>
 file, but a shorter compilation time when the <CODE>
.goh</CODE>
 file is unchanged since the last compilation. You may choose to leave the <CODE>
@optimize</CODE>
 directive out while the header is being developed, then put it in when the header is fairly stable.</P>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="GOCLanguage_5.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="GOCLanguage_5.htm"><IMG SRC="../../docImages/prevUp.gif" BORDER="0" ALT="Prev: ">2 Goc and C</A> 
<!-- to next --> | <A HREF="GOCLanguage_7.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">2.2 Conditional Code in Goc</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
