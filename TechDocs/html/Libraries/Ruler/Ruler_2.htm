<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: Ruler_2.htm,v 1.1 97/06/02 15:43:48 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Ruler Setup</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="sectionTitle">
<A HREF="index.htm">Ruler Object Library</A>: 2 
Ruler Setup</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Ruler_1.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">1 Ruler Features</A> 
<!-- to next --> | <A HREF="Ruler_3.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">3 VisRuler Instance Data</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<P>
<A NAME="IX_RulerViewClass">
 </A>
<A NAME="IX_RulerContentClass">
 </A>
For each ruler a geode displays, it will need to include three objects: an object of <CODE>
RulerViewClass</CODE>
 to display the ruler, a <CODE>
RulerContentClass</CODE>
 object to act as the top of the RulerView's visible tree, and a <CODE>
VisRulerClass</CODE>
 object, the ruler itself. Also, the geode may wish to include some of the available ruler control objects. 

</P>
<P>
The RulerViews should be alerted when the main GenView scrolls or scales, so set the GenView's <CODE>
GVI_horizLink</CODE>
 and <CODE>
GVI_vertLinks</CODE>
 to hold the optrs of the RulerViews. A RulerView to the side of the GenView should be linked by the horizontal link; a RulerView above or below the GenView should be linked vertically. </P>
<P>
Each RulerView should have a RulerContent as its content. Set this up as you would a normal GenView/VisContent linkage. The RulerContent functions as a VisContent for most purposes; there is some subclassed behavior so that the VisRuler will be notified when the RulerView has detected a scroll or scale event.</P>
<P>
A VisRuler should be the child of the RulerContent. If you have more than one VisRuler associated with a view, you should use the <CODE>
VRI_slave</CODE>
 links to connect them. When one VisRuler receives certain messages, it will handle them and pass them on to whatever VisRuler has been designated in its <CODE>
VRI_slave</CODE>
 field. If this slave ruler itself has a slave, then the message will be relayed again, and so on. Thus the application only has to send messages to one ruler, instead of to all of them. The ruler which is not the target of a <CODE>
VRI_slave</CODE>
 link is the view's master ruler, and its VRA_MASTER bit should be set.</P>
<P>
If the view only has one ruler associated with it, that ruler's VRA_MASTER bit should be set.</P>
<P>
If you will use the ruler library's mouse constraint management support, then the VisRulers must be run in the same thread which manages the main content. The VisRuler messages which deal with mouse positions receive the mouse location parameters on the stack, and thus the handlers must be running in the same thread as the callers. This is not a major restriction: since mouse events are so common, sending them across threads to be processed would lead to slow, jerky responses.

</P>
<P>
Your application may also include other objects:</P>
<UL>
<LI>
RulerTypeControl to allow the user to use different measurement units. </LI>
<LI>
RulerGridControl to draw a grid on the main view to which the user may snap the mouse.</LI>
<LI>
RulerGuideControl to allow the user to manage guidelines.</LI>
<LI>
RulerShowControl to show or hide rulers. Because hidden rulers are set not usable, and thus do not work well with GCN, applications including a RulerShowControl need to do some extra work. This is not difficult, but exactly what needs to be done may vary between applications. For details, see <A HREF="Ruler_5.htm#89528"> RulerShowControl</A>
.</LI>
<LI>
If you will be using any of the ruler controllers, you must provide a way to relay classed events to the VisRuler objects. Whichever object will have the target when the controllers send out their classed events must have a special handler for <CODE>
MSG_META_SEND_CLASSED_EVENT</CODE>
 which determines if the message is intended for a member of VisRuler class, and if so passes it to the master VisRuler object. Note that if you are working with the grobj library, a targeted GrObjBody correctly relays classed events to rulers.</LI>
</UL>
<P>
Finally, if you wish the VisRuler to take special action on certain mouse events (perhaps providing a mark on the ruler to track the mouse pointer's position), the GenView's content should intercept those mouse events and send messages to the VisRuler (again, the VisRuler at the top of the <CODE>
VRI_slave</CODE>
 chain) with the requested action.</P>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Ruler_1.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">1 Ruler Features</A> 
<!-- to next --> | <A HREF="Ruler_3.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">3 VisRuler Instance Data</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
