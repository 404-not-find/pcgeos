<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: Printing_a.htm,v 1.1 97/06/02 14:13:45 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Document Size</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="subsectionTitle">
<A HREF="index.htm">The Spool Library</A>: 4.4 <A HREF="Printing_6.htm">Print Control Instance Data</A>: 
<A NAME="65626">
 </A>
Document Size</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="Printing_6.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Printing_9.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">4.3 Page Range Information</A> 
<!-- to next --> | <A HREF="Printing_b.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">4.5 Print Output Object</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<PRE><A NAME="IX_PCI_docSizeInfo"> </A>PCI_docSizeInfo, MSG_PRINT_CONTROL_SET_DOC_SIZE, MSG_PRINT_CONTROL_GET_DOC_SIZE, MSG_PRINT_CONTROL_SET_DOC_MARGINS, MSG_PRINT_CONTROL_GET_DOC_MARGINS, MSG_PRINT_CONTROL_SET_EXTENDED_DOC_SIZE, MSG_PRINT_CONTROL_GET_EXTENDED_DOC_SIZE, MSG_PRINT_CONTROL_SET_DOC_SIZE_INFO, MSG_PRINT_CONTROL_GET_DOC_SIZE_INFO</PRE>
<P>
It is possible to specify the size of the document when creating the Print Control. Note that this is the size of the document, not the size of the piece of paper. Ideally, the document should fit on the paper, though obviously in the case of huge documents like some spreadsheets, this may not be the case. The document size includes the margin size; it is possible to set the margin size as well.</P>
<P>
The document size must be set correctly before the document is finished printing. If all documents the application produces have the same dimensions (or if you want some size to be the default), you may specify dimensions for the document when instantiating the print control. You may also set up document margins at this time.</P>
<P>
The messages listed above get and set the document and margin sizes. You must use <CODE>
MSG_PRINT_CONTROL_GET_EXTENDED_DOC_SIZE</CODE>
 and <CODE>
MSG_PRINT_CONTROL_SET_EXTENDED_DOC_SIZE</CODE>
 when working with the dimensions of 32-bit extended documents.</P>

<H4 CLASS="RefETitle">
<A NAME="IX_MSG_PRINT_CONTROL_SET_DOC_SIZE">
 </A>
MSG_PRINT_CONTROL_SET_DOC_SIZE</H4>
<PRE CLASS="syntax">void	MSG_PRINT_CONTROL_SET_DOC_SIZE(
        int 	width,
        int	height);</PRE>
<P>
This message changes the values of the document size. It takes two integers, representing the new width and height for the document to use. It can only use 16-bit values, so use <CODE>
MSG_PRINT_CONTROL_SET_EXTENDED_DOC_SIZE</CODE>
 when working with 32-bit extended graphics spaces.</P>
<P>
Remember that the document size includes the document margins.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any PrintControl object.</P>
<P CLASS="refField">
Parameters:	<CODE>
width</CODE>
	The document's width, in points.</P>
<DL>
<DT>
<EM>height</EM> </DT><DD>The document's height, in points.</DD>
</DL>
<P CLASS="refField">
Return:	Nothing.</P>
<P CLASS="refField">
Interception:	Unlikely.</P>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_PRINT_CONTROL_GET_DOC_SIZE">
 </A>
MSG_PRINT_CONTROL_GET_DOC_SIZE</H4>
<PRE CLASS="syntax">dword	MSG_PRINT_CONTROL_GET_DOC_SIZE();</PRE>
<P>
Use this message to retrieve the present document size. The size is returned as a width and height, each expressed in points. </P>
<P>
Note that if the size might be a 32-bit value (which might happen if the document uses an extended graphics space), you must use the <CODE>
MSG_PRINT_CONTROL_GET_EXTENDED_DOC_SIZE</CODE>
. If either dimension is a 32-bit number, using a regular <CODE>
MSG_PRINT_CONTROL_GET_DOC_SIZE</CODE>
 will result in an error.</P>
<P>
Remember that the document size includes the document margins.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any PrintControl object.</P>
<P CLASS="refField">
Parameters:	None.</P>
<P CLASS="refField">
Return:	A double word. The high word is the width, the low word is the height.</P>
<P CLASS="refField">
Interception:	Unlikely.</P>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_PRINT_CONTROL_SET_EXTENDED_DOC_SIZE">
 </A>
MSG_PRINT_CONTROL_SET_EXTENDED_DOC_SIZE</H4>
<PRE CLASS="syntax">void	MSG_PRINT_CONTROL_SET_EXTENDED_DOC_SIZE(
        PCDocSizeParams 	*ptr);</PRE>
<P>
This message changes the values of the document size using the two passed double integers as the new width and height to use. When working with normal 16 bit graphics spaces, use <CODE>
MSG_PRINT_CONTROL_SET_DOC_SIZE</CODE>
 instead.</P>
<P>
Remember that the document size includes the document margins.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any PrintControl object.</P>
<P CLASS="refField">
Parameters:	<EM>ptr</EM> 	Pointer to a <CODE>
PCDocSizeParams</CODE>
 structure containing the document size.</P>
<P CLASS="refField">
Return:	Nothing.</P>
<P CLASS="refField">
Interception:	Unlikely.</P>
<P CLASS="refField">
Structures:	<A NAME="IX_PCDSP_&ldots;">
 </A>
<A NAME="IX_PCDocSizeParams">
 </A>
The <CODE>
PCDocSizeParams</CODE>
 structure has the following definition:</P>
<PRE>typedef struct {
	dword		PCDSP_width;
	dword		PCDSP_height;
} PCDocSizeParams;</PRE>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_PRINT_CONTROL_GET_EXTENDED_DOC_SIZE">
 </A>
MSG_PRINT_CONTROL_GET_EXTENDED_DOC_SIZE</H4>
<PRE CLASS="syntax">void	MSG_PRINT_CONTROL_GET_EXTENDED_DOC_SIZE(
        PCDocSizeParams 	*ptr);</PRE>
<P>
Use this message to retrieve the present document size. It returns two double integers representing the width and height, expressed in points. If the size is a 16 bit value, you can use <CODE>
MSG_PRINT_CONTROL_GET_DOC_SIZE</CODE>
 instead.</P>
<P>
Remember that the document size includes the document margins.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any PrintControl object.</P>
<P CLASS="refField">
Parameters:	<EM>ptr</EM> 	Pointer to a <CODE>
PCDocSizeParams</CODE>
 structure to hold document parameters.</P>
<P CLASS="refField">
Return:	Nothing is returned explicitly.</P>
<DL>
<DT>
<EM>ptr</EM> </DT><DD>The structure is filled with document size.</DD>
</DL>
<P CLASS="refField">
Interception:	Unlikely.</P>
<P CLASS="refField">
Structures:	The <CODE>
PCDocSizeParams</CODE>
 structure has the following definition:</P>
<PRE>typedef struct {
	dword		PCDSP_width;
	dword		PCDSP_height;
} PCDocSizeParams;</PRE>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_PRINT_CONTROL_SET_DOC_MARGINS">
 </A>
MSG_PRINT_CONTROL_SET_DOC_MARGINS</H4>
<PRE CLASS="syntax">void	MSG_PRINT_CONTROL_SET_DOC_MARGINS(
        PCMarginParams 	*ptr);</PRE>
<P>
Use this message to set new values for the document margins. It takes four arguments, the point values to use for the left, top, right, and bottom margins.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any PrintControl object.</P>
<P CLASS="refField">
Parameters:	<EM>ptr</EM> 	Pointer to a <CODE>
PCMarginParams </CODE>
structure with new document margins.</P>
<P CLASS="refField">
Return:	Nothing.</P>
<P CLASS="refField">
Interception:	Unlikely.</P>
<P CLASS="refField">
Structures:	The <A NAME="IX_PCMarginParams">
 </A>
<CODE>
PCMarginParams</CODE>
 structure has the following definition:</P>
<PRE>typedef struct {
	word		<A NAME="IX_PCMP_&ldots;"> </A>PCMP_left;
	word		PCMP_top;
	word		PCMP_right;
	word		PCMP_bottom;
} PCMarginParams;</PRE>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_PRINT_CONTROL_GET_DOC_MARGINS">
 </A>
MSG_PRINT_CONTROL_GET_DOC_MARGINS</H4>
<PRE CLASS="syntax">void	MSG_PRINT_CONTROL_GET_DOC_MARGINS(
        PCMarginParams 	*ptr);</PRE>
<P>
Use this message to get the present values for the document margins. It returns four integers. These integers represent the left, top, right, and bottom margins, expressed in typographer's points.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any PrintControl object.</P>
<P CLASS="refField">
Parameters:	<EM>ptr</EM> 	Pointer to a <CODE>
PCMarginParams</CODE>
 structure which will hold return value.</P>
<P CLASS="refField">
Return:	Nothing returned explicitly. </P>
<DL>
<DT>
<EM>ptr</EM> </DT><DD>Structure filled in with document margins.</DD>
</DL>
<P CLASS="refField">
Interception:	Unlikely.</P>
<P CLASS="refField">
Structures:	The <CODE>
PCMarginParams</CODE>
 structure has the following definition:</P>
<PRE>typedef struct {
	word		PCMP_left;
	word		PCMP_top;
	word		PCMP_right;
	word		PCMP_bottom;
} PCMarginParams;</PRE>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_PRINT_CONTROL_SET_DOC_SIZE_INFO">
 </A>
MSG_PRINT_CONTROL_SET_DOC_SIZE_INFO</H4>
<PRE CLASS="syntax">void	MSG_PRINT_CONTROL_SET_DOC_SIZE_INFO(
        PageSizeReport 	*ptr);</PRE>
<P>
Use this message to set all of the information about the document size and orientation.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any PrintControl object.</P>
<P CLASS="refField">
Parameters:	<EM>ptr</EM> 	Pointer to a <CODE>
PageSizeReport </CODE>
structure.</P>
<P CLASS="refField">
Return:	Nothing. </P>
<P CLASS="refField">
Interception:	Unlikely.</P>
<P CLASS="refField">
Structures:	The <CODE>
PageSizeReport</CODE>
 structure has the following definition:</P>
<PRE>typedef struct {
	dword			PSR_width;
	dword			PSR_height;
	PageLayout			PSR_layout;
	PCMarginParams 			PSR_margins;
} PageSizeReport;</PRE>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_PRINT_CONTROL_GET_DOC_SIZE_INFO">
 </A>
MSG_PRINT_CONTROL_GET_DOC_SIZE_INFO</H4>
<PRE CLASS="syntax">void	MSG_PRINT_CONTROL_GET_DOC_SIZE_INFO(
        PageSizeReport 	*ptr);</PRE>
<P>
Use this message to set all of the information about the document size and orientation.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any PrintControl object.</P>
<P CLASS="refField">
Parameters:	<EM>ptr</EM> 	Pointer to an empty <CODE>
PageSizeReport </CODE>
structure which the message handler will fill in.</P>
<P CLASS="refField">
Return:	Nothing. </P>
<P CLASS="refField">
Interception:	Unlikely.</P>
<P CLASS="refField">
Structures:	The <CODE>
PageSizeReport</CODE>
 structure has the following definition:</P>
<PRE>typedef struct {
	dword			PSR_width;
	dword			PSR_height;
	PageLayout			PSR_layout;
	PCMarginParams 			PSR_margins;
} PageSizeReport;</PRE>

<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="Printing_6.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Printing_9.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">4.3 Page Range Information</A> 
<!-- to next --> | <A HREF="Printing_b.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">4.5 Print Output Object</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
