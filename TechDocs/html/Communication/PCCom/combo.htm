<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<!-- This page was automatically generated from a bunch of smaller pages. -->
<META NAME="copyright" CONTENT="Copyright GEOWORKS">
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">
<TITLE>PCCom Library</TITLE>
</HEAD>
<BODY BGCOLOR="#ffffdf">
This document is a single-page version of a <A HREF="index.htm">a multi-page document</A>, suitable for easy printing.
<A NAME="index.htm"></A>



<H1 CLASS="chapterTitle">

<A NAME="index.htm_14136">
 </A>
PCCom Library

</H1>
<P>
The <A NAME="index.htm_IX_File transfer:PCCom library">
 </A>
<A NAME="index.htm_IX_PCCom library">
 </A>
PCCom library provides a simple way to allow a geode to provide and monitor a PCCom connection. If you are familiar with the SDK, you probably think of <CODE>
pccom</CODE>
 as a tool which allows the target machine to receive commands from the host machine. While the target machine runs the <CODE>
pccom</CODE>
 tool, the host machine can upload and download files and otherwise manipulate the target machine.</P>
<P>
The PCCom library allows a geode to start up a PCCom thread monitoring a serial port for purposes other than debugging. For instance, it allows the GEOS machine to receive files sent over a serial line by another machine running pcsend or another program using pccom's file transfer protocol. This allows file transfers and other pccom operations to go on in the background while the user continues to interact with GEOS.</P>
<P>
If you're not familiar with the <CODE>
pccom</CODE>
 tool, you should probably read the pccom section of 
<A HREF="../../Tools/Tools/TTools_9.htm">the Using Tools chapter</A>--perhaps 
not the whole section, but at least enough to understand basic usage.</P>
<P CLASS="sectionlinks">
<STRONG>
&nbsp;&nbsp;<A HREF="#PCCom_1.htm">1 PCCom Library Abilities</A><BR>
&nbsp;&nbsp;<A HREF="#PCCom_2.htm">2 What To Do</A><BR>
&nbsp;&nbsp;<A HREF="#PCCom_3.htm">3 Staying Informed</A><BR>
</STRONG>
</P> <!-- end of sectionlinks blob -->

<HR>
<A NAME="PCCom_1.htm"></A>


<H2 CLASS="sectionTitle">
<A HREF="#index.htm">PCCom Library</A>: 1 
PCCom Library Abilities</H2>
<P>
Your geode needn't do much to support PCCom. The PCCom library acts as a passive pccom machine--it will only accept orders from a remote machine. </P>
<P>
All you need to do to support PCCom is start up a PCCom process, ideally freeing it when done. Geodes using the PCCom library have the option of receiving notification when pccom would display text.</P>
<HR>
<A NAME="PCCom_2.htm"></A>


<H2 CLASS="sectionTitle">
<A HREF="#index.htm">PCCom Library</A>: 2 
What To Do</H2>
<PRE>PCCOMINIT(), PCCOMEXIT(), PCCOMABORT()</PRE>
<P>
When you are ready to start monitoring a serial port for pccom-style communications, call <A NAME="PCCom_2.htm_IX_PCCOMINIT()">
 </A>
PCCOMINIT(). This routine is an entry point for the library, accessible via <CODE>
ProcGetLibraryEntry</CODE>
() as the first entry point in the library, and it may also be called as a normal routine. PCCOMINIT() starts up a new thread which will monitor the passed serial port. If it cannot make the connection, it will return an error.</P>
<P>
When you are done with PCCom, call <A NAME="PCCom_2.htm_IX_PCCOMEXIT()">
 </A>
PCCOMEXIT(), invocable as a library entry point or as a normal routine, which closes down the monitor thread and frees the serial port for other uses. After calling this routine, you must call PCCOMINIT() again if you wish to re-establish the pccom connection.</P>
<P>
You may call the <A NAME="PCCom_2.htm_IX_PCCOMABORT()">
 </A>
PCCOMABORT() routine at any time; this routine aborts any pccom file transfer that may be in progress, but leaves the PCCom connection intact.</P>
<HR>
<A NAME="PCCom_3.htm"></A>


<H2 CLASS="sectionTitle">
<A HREF="#index.htm">PCCom Library</A>: 3 
Staying Informed</H2>
<P>
The sections above tell you everything you need to let your geode interact with pccom. It is possible to do more: your geode can receive notification whenever the <CODE>
pccom</CODE>
 tool would display some text. The <CODE>
pccom</CODE>
 tool displays text to show the user what's going on. Text signals the successful or unsuccessful completion of certain operations; a spinning baton shows that a file transfer is in progress. Your geode can also find out if the machine on the other side of the pccom link has quit pccom.</P>
<P>
When calling PCCOMINIT(), your geode can specify an object which should receive notification when pccom has text to display or senses that the other side of the pccom link has quit. If an object is so specified, it will receive notification messages at these times. You must also set the <CODE>
PCComInitFlags</CODE>
 argument to PCCOMINIT() such that the appropriate kinds of notification will be sent; there is one flag which asks for display text notification and another flag which asks for notification when the other side of the pccom connection exits.</P>
<P>
Notification will come in the form of <CODE>
MSG_META_NOTIFY</CODE>
 or <CODE>
MSG_META_NOTIFY_WITH_DATA_BLOCK</CODE>
. There are three possible forms of notification:</P>
<DL>
<DT>
<CODE>
MSG_META_NOTIFY:</CODE>
<A NAME="PCCom_3.htm_IX_MSG_META_NOTIFY:With PCCom library">
 </A>
<A NAME="PCCom_3.htm_IX_GWNT_PCCOM_DISPLAY_CHAR">
 </A>
GWNT_PCCOM_DISPLAY_CHAR</DT><DD>
If the passed notification type is GWNT_PCCOM_DISPLAY_CHAR, then the notification's data word contains a character that pccom would display.</DD>
<DT>
<CODE>
MSG_META_NOTIFY_WITH_DATA_BLOCK</CODE>
<A NAME="PCCom_3.htm_IX_MSG_META_NOTIFY_WITH_DATA_BLOCK:With PCCom library">
 </A>
:<A NAME="PCCom_3.htm_IX_GWNT_PCCOM_DISPLAY_STRING">
 </A>
GWNT_PCCOM_DISPLAY_STRING</DT><DD>
If the passed notification type is GWNT_PCCOM_DISPLAY_STRING, then the data in the notification's data block is a string of characters.</DD>
<DT>
<CODE>
MSG_META_NOTIFY</CODE>
:<A NAME="PCCom_3.htm_IX_GWNT_PCCOM_EXIT_PCCOM">
 </A>
GWNT_PCCOM_EXIT_PCCOM</DT><DD>
If the passed notification type is GWNT_PCCOM_EXIT_PCCOM, then the pccom process on the other side of the pccom connection has exited; the notification's data word contains a <CODE>
PCComReturnType</CODE>
 indicating the success the other side had in exiting. The other side of the connection signals that it is exiting by sending an EX escape code over the pccom connection. A data value of PCCRT_NO_ERROR is a sign of a successful exit; other return values might signal that the exit was the result of an error.</DD>
<DT>
&nbsp;</DT>
</DL>
<HR>
This document is a single-page version of a <A HREF="index.htm">a multi-page document</A>, suitable for easy printing.
</BODY>
</HTML>
