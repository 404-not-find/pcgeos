<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: Stream_e.htm,v 1.1 97/06/02 14:16:58 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Communicating</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="subsectionTitle">
<A HREF="index.htm">Using Streams</A>: 3.2 <A HREF="Stream_c.htm">Using the Parallel Ports</A>: 
<A NAME="75636">
 </A>
Communicating</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="Stream_c.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Stream_d.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">3.1 Initializing a Parallel Port</A> 
<!-- to next --> | <A HREF="Stream_f.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">3.3 Closing a Parallel Port</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<PRE>ParallelWrite(), ParallelWriteByte()</PRE>
<P>
<A NAME="IX_ParallelWrite()">
 </A>
<A NAME="IX_ParallelWriteByte()">
 </A>
Writing to a parallel port is much like writing to any other stream. To write data, call <CODE>
ParallelWrite()</CODE>
 or <CODE>
ParallelWriteByte()</CODE>
. These routines take the same arguments as their <CODE>
Stream...()</CODE>
 components, except that each one must be passed the handle of the Parallel Driver, not the Stream Driver, and each routine is passed the <CODE>
ParallelUnit</CODE>
 for the appropriate port, instead of being passed a stream token. These routines behave exactly like their <CODE>
Stream...()</CODE>
 counterparts.</P>
<P>
<A NAME="IX_ParallelSetError()">
 </A>
To send an error to the other side of a serial connection, call <CODE>
ParallelSetError()</CODE>
. (This routine is generally not called by applications.) This routine behaves much like <CODE>
StreamSetError()</CODE>
. It is passed four arguments:</P>
<UL>
<LI>
The <CODE>
GeodeHandle</CODE>
 of the parallel-port driver.</LI>
<LI>
The appropriate member of the <CODE>
ParallelUnit</CODE>
 enumerated type.</LI>
<LI>
The appropriate member of the <CODE>
StreamRoles</CODE>
 enumerated type.</LI>
<LI>
A <CODE>
ParallelError</CODE>
 record. This word-sized record has the following flags:</LI>
</UL>
<DL>
<DT>
PE_FATAL</DT><DD>Set if the driver encountered an error that means it can't continue.</DD>
<DT>
PE_TIMEOUT</DT><DD>
Set if there is no response from the printer, but no other (non-masked) error is present.</DD>
<DT>
PE_NOPAPER</DT><DD>
Set if the device is out of paper.</DD>
<DT>
PE_OFFLINE</DT><DD>Set if the device is off-line.</DD>
<DT>
PE_ERROR</DT><DD>Indicates a general error.</DD>
</DL>
<P>
<A NAME="IX_ParallelGetError()">
 </A>
To read an error condition passed by the other side of a serial connection, call <CODE>
ParallelGetError()</CODE>
. This routine behaves much like <CODE>
StreamGetError()</CODE>
. The error code returned will be a member of the <CODE>
ParallelError</CODE>
 enumerated type.</P>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="Stream_c.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Stream_d.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">3.1 Initializing a Parallel Port</A> 
<!-- to next --> | <A HREF="Stream_f.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">3.3 Closing a Parallel Port</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
