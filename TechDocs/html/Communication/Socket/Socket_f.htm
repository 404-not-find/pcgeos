<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: Socket_f.htm,v 1.1 97/06/02 14:15:48 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Checking the Connection</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="sectionTitle">
<A HREF="index.htm">Socket</A>: 9 
<A NAME="59273">
 </A>
Checking the Connection</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Socket_e.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">8 Closing the Connection</A> 
<!-- to next --> | <A HREF="Socket_10.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">10 Domain-Specific Information</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<PRE>SocketCheckListen(), SocketCheckReady()</PRE>
<P>
The Socket library provides utility routines that query the status of a connection. This can be helpful when figuring out why a connection may not be working or confirming that a connection is working.</P>
<P>
<A NAME="IX_SocketCheckListen()">
 </A>
Use <CODE>
SocketCheckListen()</CODE>
 on a port to find out the domain and medium for the first connection request on the port; that is, the first connection request which has not yet been accepted. Think of this as a limited form of &quot;caller ID&quot; -- a chance to find out about the incoming connection before accepting it. If <CODE>
SocketCheckListen()</CODE>
 returns SE_PORT_NOT_LISTENING, it means there is no socket that is bound to the port and listening.</P>
<P>
To &quot;peek&quot; at the next packet of incoming data, call <CODE>
SocketRecv()</CODE>
 and pass the SRF_PEEK flag. This allows you to get the size of the next packet of incoming data and to look at its contents without destroying it.</P>
<P>
<A NAME="IX_SocketCheckReady()">
 </A>
To check one or more sockets to see if they have received data, received connection requests, or are ready to write, call <CODE>
SocketCheckReady()</CODE>
. It can check connections for incoming data or just incoming urgent data. </P>
<P>
For programs which need to poll many sockets, <CODE>
SocketCheckReady()</CODE>
 provides a tidy means to do this without spawning a thread for each socket.</P>
<P>
<A NAME="IX_SocketCheckRequest">
 </A>
The <CODE>
SocketCheckReady()</CODE>
 routine takes an array of <CODE>
SocketCheckRequest</CODE>
 structures. Each one of these structures contains a socket and a condition. <CODE>
SocketCheckReady()</CODE>
 looks at each <CODE>
SocketCheckRequest</CODE>
 structure in the array and returns the index of the first structure whose socket meets the condition.</P>
<P>
Thus, to determine if a given socket is properly set up so that you can send data through it, pass <CODE>
SocketCheckReady()</CODE>
 a one-element array (represented in pseudo-code):</P>
<PRE>{ mySocket, SC_WRITE, 0 }</PRE>
<P>
To check several sockets to see whether any of them had received any connection requests, pass to <CODE>
SocketCheckReady()</CODE>
 an array of the form (represented in pseudo-code):</P>
<PRE>{ socket1, SC_ACCEPT, 0 },
{ socket2, SC_ACCEPT, 0 },
{ socket3, SC_ACCEPT, 0 }</PRE>
<P>
For any socket, you may check for one or more of the following conditions, as represented by <CODE>
SocketCondition</CODE>
<A NAME="IX_SocketCondition">
 </A>
<A NAME="IX_SC_&ldots;">
 </A>
 values:</P>
<DL>
<DT>
<STRONG>
SC_ACCEPT</DT><DD>
</STRONG>
If a socket is listening for a connection, this condition indicates that another socket is trying to connect to the listening socket.</DD>
<DT>
<STRONG>
SC_READ</DT><DD>
</STRONG>
If a socket is connected, this condition indicates that a packet of data has come in and is ready to be read.</DD>
<DT>
<STRONG>
SC_EXCEPTION</DT><DD>
</STRONG>
If a socket is connected, this condition indicates that the socket has discovered something wrong with its connection.</DD>
<DT>
<STRONG>
SC_URGENT</DT><DD>
</STRONG>
If a socket is connected, this condition indicates that it has received a packet of data that was marked urgent.</DD>
<DT>
<STRONG>
SC_WRITE</DT><DD>
</STRONG>
This condition indicates that data may be sent through the socket.</DD>
</DL>
<P>
If you query a socket about a condition that does not apply to its current state (<EM>
e.g.</EM>
, ask a non-listening socket if it is ready to accept connections), then <CODE>
SocketCheckReady()</CODE>
 returns SE_IMPROPER_CONDITION.</P>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Socket_e.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">8 Closing the Connection</A> 
<!-- to next --> | <A HREF="Socket_10.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">10 Domain-Specific Information</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
