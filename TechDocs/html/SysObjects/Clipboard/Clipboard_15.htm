<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: Clipboard_15.htm,v 1.1 97/06/02 16:08:31 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Quick-Transfer Procedure</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="subsectionTitle">
<A HREF="index.htm">The Clipboard</A>: 4.2 <A HREF="Clipboard_13.htm">Using Quick-Transfer</A>: 
Quick-Transfer Procedure</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="Clipboard_13.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Clipboard_14.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">4.1 Supporting Quick-Transfer</A> 
<!-- to next --> | <A HREF="Clipboard_16.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">4.3 Quick-Transfer Data Structures</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<P>
Although applications must handle several situations to support the quick-transfer mechanism, the procedure involved in a quick-transfer is quite simple. The steps of how a quick-transfer operation is performed are outlined below:</P>
<OL>
<LI>
The user initiates a quick-transfer<BR>
By pressing the right mouse button (in OSF/Motif), the user initiates a quick-transfer. The UI recognizes the mouse press and sends <CODE>
MSG_META_START_MOVE_COPY</CODE>
 to the object under the pointer image.</LI>
<LI FIXME_NumListOther>
The source object builds the transfer item<BR>
The object under the pointer image then becomes the &quot;source&quot; of the quick-transfer. It first calls <CODE>
ClipboardStartQuickTransfer()</CODE>
 to initiate the quick-transfer mechanism. It then builds the transfer item just as it would if the user had clicked on the Copy trigger in the Edit menu. It then logs the transfer item with the quick-transfer mechanism.</LI>
<LI FIXME_NumListOther>
The source becomes a potential destination<BR>
Immediately after logging the transfer item, the source object becomes a potential destination of the quick-transfer. It must immediately provide feedback to the UI indicating whether it can accept the transfer item and whether the operation would be a move or a copy. The feedback is provided by calling <CODE>
ClipboardSetQuickTransferFeedback()</CODE>
. If the source object is a visible object in a GenView, it must also send the message <CODE>
MSG_VIS_VUP_ALLOW_GLOBAL_TRANSFER</CODE>
 to itself to allow the pointer events to be sent to other objects in other windows (because the GenView grabs the mouse on the press).</LI>
<LI FIXME_NumListOther>
The user moves the mouse<BR>
When the user moves the mouse (continuing to hold down the move/copy button), the pointer image may cross over several objects. Each of these is a potential destination and as such must provide feedback similar to that described in (3) above until the pointer moves outside of its bounds. Each object that receives a <CODE>
MSG_META_PTR</CODE>
 should check if a quick transfer is in progress by either checking the passed event flags or by calling <CODE>
ClipboardGetQuickTransferStatus()</CODE>
. The object should, in response, provide feedback as to whether it can accept the transfer item or not. It calls <CODE>
ClipboardSetQuickTransferFeedback()</CODE>
 with the proper feedback signal.</LI>
<LI FIXME_NumListOther>
The user finishes the transfer<BR>
When the user lets up the move/copy button, the object under the pointer image (if any) becomes the destination object (it will receive a <CODE>
MSG_META_END_MOVE_COPY</CODE>
 from the UI).</LI>
<LI FIXME_NumListOther>
The destination receives the transfer item<BR>
If the transfer item is in a receivable format, the destination will retrieve the item from the Transfer VM File just as if the user had selected the Paste trigger from the Edit menu (except the quick-transfer transfer item is received, not the Clipboard transfer item). The object first checks if it can take the item by calling <CODE>
ClipboardGetQuickItemInfo()</CODE>
 on the transfer item. If it can handle the item, it calls <CODE>
ClipboardQueryItem()</CODE>
, grabs the transfer item, and finally calls <CODE>
ClipboardEndQuickTransfer()</CODE>
.</LI>
<LI FIXME_NumListOther>
The UI informs the source of the outcome<BR>
After the transfer has been completed by the destination, the UI will send a <CODE>
MSG_META_CLIPBOARD_NOTIFY_QUICK_TRANSFER_CONCLUDED</CODE>
 to the source object, informing it about the final outcome of the operation. Some source objects will change shape, shading, or color during a quick-transfer and must know when the transfer is concluded. If the operation is a quick-move, the source must delete the information or object that was moved.</LI>
</OL>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="Clipboard_13.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Clipboard_14.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">4.1 Supporting Quick-Transfer</A> 
<!-- to next --> | <A HREF="Clipboard_16.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">4.3 Quick-Transfer Data Structures</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
