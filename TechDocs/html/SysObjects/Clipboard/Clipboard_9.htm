<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: Clipboard_9.htm,v 1.1 97/06/02 16:09:27 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Using The Clipboard</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="sectionTitle">
<A HREF="index.htm">The Clipboard</A>: 3 
<A NAME="50504">
 </A>
Using The Clipboard</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> | <A HREF="Clipboard_a.htm"><IMG SRC="../../docImages/down.gif" BORDER="0" ALT="Down"></A> 
<!-- to previous --> | <A HREF="Clipboard_4.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">2 Transfer Data Structures</A> 
<!-- to next --> | <A HREF="Clipboard_13.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">4 Using Quick-Transfer</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<PRE>ClipboardQueryItem(), ClipboardRegisterItem(), ClipboardDoneWithItem()</PRE>
<P>
To use the Clipboard, your application must have an Edit menu (or a GenEditControl object) and an object which can implement the Cut, Copy, and Paste operations. This object is often the application's Process object or some other coordinating object. This object must be able to do each of the things in the following list:</P>
<UL>
<LI>
Register with the Clipboard<BR>
In a multitasking, multithreaded system, another application could change the Clipboard's contents. By registering with the Clipboard on application startup, the object will receive notification whenever the Clipboard's contents are changed (including when your application perpetrates the change). Registration is normally accomplished via the ClipboardAddToNotificationList() routine. The GCN notification list GCNSLT_TRANSFER_NOTIFICATION is used.Objects on this list can intercept <CODE>
MSG_META_CLIPBOARD_NOTIFY_NORMAL_TRANSFER_ITEM_CHANGED</CODE>
 and <CODE>
MSG_META_CLIPBOARD_NOTIFY_TRANSFER_ITEM_FREED</CODE>
.</LI>
<LI>
Maintain the Edit Menu<BR>
In order to provide the user with the <EM>
Cut</EM>
, <EM>
Copy</EM>
, and <EM>
Paste</EM>
 features, your application must have an Edit menu. Most programmers will simply include a GenEditControl object to create and maintain the Edit menu. Your clipboard-management object must update the triggers properly whenever the contents of the Clipboard are changed.</LI>
<LI>
Handle <CODE>
MSG_META_CLIPBOARD_COPY,</CODE>
 <CODE>
MSG_META_CLIPBOARD_CUT<BR>
</CODE>
When the user issues a Cut or Copy order, the object must put the proper data into the Clipboard Transfer VM File.</LI>
<LI>
Handle <CODE>
MSG_META_CLIPBOARD_PASTE<BR>
</CODE>
When the user issues a Paste order, the object must query the Clipboard to ensure a proper format is available and then copy the information from the Clipboard.</LI>
<LI>
Check out when shutting down<BR>
Each object that registers with the Clipboard must unregister when shutting down. Otherwise, the UI might try to send notification to a defunct object or process, resulting in unpredictable behavior.</LI>
</UL>
<P>
Because the Clipboard is constantly in use by many different threads, you must always gain exclusive access to the transfer VM file when you want to use it. After you're done with the transfer file, you should relinquish exclusive access so other threads can continue to use it.</P>
<P>
<A NAME="IX_ClipboardRegisterItem()">
 </A>
For operations that involve changing the transfer item (cut and copy, for example), you must register your new transfer item with <CODE>
ClipboardRegisterItem()</CODE>
, which also allows other threads to use the file. <A NAME="IX_ClipboardQueryItem()">
 </A>
For operations that involve looking at but not changing the transfer item, you should use <CODE>
ClipboardQueryItem()</CODE>
. <A NAME="IX_ClipboardDoneWithItem()">
 </A>
Since you have no changes to register, you must later use <CODE>
ClipboardDoneWithItem()</CODE>
 to give up your exclusive access to the transfer VM file.</P>
<P CLASS="subsectionLink">
<A HREF="Clipboard_a.htm">Registering with the Clipboard</A></P>
<P CLASS="subsectionLink">
<A HREF="Clipboard_b.htm">Managing the Edit Menu</A></P>
<P CLASS="subsectionLink">
<A HREF="Clipboard_c.htm">The GenEditControl</A></P>
<P CLASS="subsectionLink">
<A HREF="Clipboard_d.htm">Handling Cut and Copy</A></P>
<P CLASS="subsectionLink">
<A HREF="Clipboard_e.htm">Handling Paste</A></P>
<P CLASS="subsectionLink">
<A HREF="Clipboard_f.htm">Unregistering with the Clipboard</A></P>
<P CLASS="subsectionLink">
<A HREF="Clipboard_10.htm">Implementing Undo</A></P>
<P CLASS="subsectionLink">
<A HREF="Clipboard_11.htm">Transfer File Information</A></P>
<P CLASS="subsectionLink">
<A HREF="Clipboard_12.htm">Undoing a Clipboard Change</A></P>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> | <A HREF="Clipboard_a.htm"><IMG SRC="../../docImages/down.gif" BORDER="0" ALT="Down"></A> 
<!-- to previous --> | <A HREF="Clipboard_4.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">2 Transfer Data Structures</A> 
<!-- to next --> | <A HREF="Clipboard_13.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">4 Using Quick-Transfer</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
