<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: Windows_6.htm,v 1.1 97/06/02 16:17:19 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> GenDisplayGroup</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="subsectionTitle">
<A HREF="index.htm">Window Objects</A>: 3.1 <A HREF="Windows_5.htm">Using Multiple Displays</A>: 
GenDisplayGroup</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="Windows_5.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Windows_5.htm"><IMG SRC="../../docImages/prevUp.gif" BORDER="0" ALT="Prev: ">3 Using Multiple Displays</A> 
<!-- to next --> | <A HREF="Windows_7.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">3.2 GenDisplayControl</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<P>
<A NAME="IX_GenDisplayGroupClass">
 </A>
If an application uses GenDisplay objects, it must have a GenDisplayGroup object. This object makes sure there is space in the GenPrimary for the displays.</P>
<P>
The GenDisplayGroup must be either a child of the GenPrimary (in which case the specific UI will decide where to put the display area) or a child of a <CODE>
GenInteraction</CODE>
 which is a child of the GenPrimary (if the application wants the display area in a specific part of the GenPrimary). The GenDisplayGroup should be run by the UI thread.</P>
<P>
<CODE>
GenDisplayGroupClass</CODE>
 has no instance data which may be set or examined by the application. However, <CODE>
GenDisplayGroupClass</CODE>
 is a subclass of <CODE>
GenClass</CODE>
, and inherits all of its instance data. When you declare a GenDisplayGroup, you may specify its <CODE>
GenClass</CODE>
 instance data normally; you may also include any of the hints described in the following sections.</P>

<H2 CLASS="HeadingC">
The GenDisplayGroup Instance Data</H2>
<PRE>HINT_DISPLAY_GROUP_SEPARATE_MENUS, HINT_DISPLAY_GROUP_ARRANGE_TILED, HINT_DISPLAY_GROUP_FULL_SIZED_ON_STARTUP, HINT_DISPLAY_GROUP_OVERLAPPING_ON_STARTUP, HINT_DISPLAY_GROUP_FULL_SIZED_IF_TRANSPARENT_DOC_CTRL_MODE, HINT_DISPLAY_GROUP_TILE_HORIZONTALLY, HINT_DISPLAY_GROUP_TILE_VERTICALLY, HINT_DISPLAY_GROUP_SIZE_INDEPENDENTLY_OF_DISPLAYS</PRE>
<P>
GenDisplayGroupClass is a subclass of GenClass. Other than vardata, this class adds no other instance data. There are several hints defined for <CODE>
GenDisplayGroupClass</CODE>
. Most of these hints specify how displays should be arranged on startup.</P>
<P CLASS="figTitle">
Code Display 4-3 GenDisplayGroup Instance Data</P>
<PRE>/* GenDisplayGroupClass adds no instance fields. It does modify the default 
 * GI_attrs settings, however. */
    @default GI_attrs = @default | GA_TARGETABLE;</PRE>
<PRE>/* This hint allows each GenDisplay to contain its own menu bar. */
    @vardata void			HINT_DISPLAY_GROUP_SEPARATE_MENUS;</PRE>
<PRE>/* These hints specify how a GenDisplayGroup will arrange its GenDisplays. */
    @vardata void			HINT_DISPLAY_GROUP_ARRANGE_TILED;
    @vardata void			HINT_DISPLAY_GROUP_FULL_SIZED_ON_STARTUP;
    @vardata void			HINT_DISPLAY_GROUP_OVERLAPPING_ON_STARTUP;
    @vardata void			HINT_DISPLAY_GROUP_FULL_SIZED_IF_TRANSPARENT_DOC_CTRL_MODE;
    @vardata void			HINT_DISPLAY_GROUP_TILE_HORIZONTALLY;
    @vardata void			HINT_DISPLAY_GROUP_TILE_VERTICALLY;
    @vardata void			HINT_DISPLAY_GROUP_SIZE_INDEPENDENTLY_OF_DISPLAYS;</PRE>
<PRE>/* These attributes affect the availability of overlapping and 
 * full-sized states. */
    @vardata void			ATTR_GEN_DISPLAY_GROUP_NO_FULL_SIZED;
    @vardata void			ATTR_GEN_DISPLAY_GROUP_NO_OVERLAPPING;
    @vardata void			ATTR_GEN_DISPLAY_OVERLAPPING_STATE;</PRE>
<P>
In some specific UIs (such as OSF/Motif), menus which are children of a GenDisplay object may appear in two ways: they may be drawn on the Primary's menu bar (the default in OSF/Motif), or they may appear in a menu bar on the display itself. <A NAME="IX_HINT_DISPLAY_GROUP_SEPARATE_MENUS">
 </A>
HINT_DISPLAY_GROUP_SEPARATE_MENUS indicates that each display should be given its own menu bar (if the specific UI permits this).</P>
<P>
There are several hints which specify how the displays should be configured when the GenDisplayGroup is built.</P>
<P>
HINT_DISPLAY_GROUP_FULL_SIZED_ON_STARTUP<A NAME="IX_HINT_DISPLAY_GROUP_FULL_SIZED_ON_STARTUP">
 </A>
 indicates that the GenDisplayGroup should be in full-size mode on startup; that is, all of its children should be maximized.</P>
<P>
HINT_DISPLAY_GROUP_OVERLAPPING_ON_STARTUP<A NAME="IX_HINT_DISPLAY_GROUP_OVERLAPPING_ON_STARTUP">
 </A>
 indicates that the GenDisplayGroup should be in overlapping mode on startup; that is, its children should be non-maximized.</P>
<P>
<CODE>
HINT_DISPLAY_GROUP_FULL_SIZED_IF_TRANSPARENT_DOC_CTRL_MODE</CODE>
 forces a GenDisplayGroup to start full-sized if the application is in &quot;transparent document control&quot; mode, which is set by the user level of the application. This hint overrides <CODE>
HINT_DISPLAY_GROUP_OVERLAPPING_ON_STARTUP</CODE>
, if present.</P>
<P>
HINT_DISPLAY_GROUP_ARRANGE_TILED<A NAME="IX_HINT_DISPLAY_GROUP_ARRANGE_TILED">
 </A>
 indicates that the GenDisplayGroup should be in overlapping mode on startup, and further that the displays should be tiled; that is, they should be non-maximized and arranged in a non-overlapping way to fill the display area.</P>
<P>
You can specify a preference for how the displays should be tiled by setting HINT_DISPLAY_GROUP_TILE_HORIZONTALLY<A NAME="IX_HINT_DISPLAY_GROUP_TILE_HORIZONTALLY">
 </A>
 or HINT_DISPLAY_GROUP_TILE_VERTICALLY<A NAME="IX_HINT_DISPLAY_GROUP_TILE_VERTICALLY">
 </A>
. HINT_DISPLAY_GROUP_TILE_HORIZONTALLY indicates that you want tiled displays to be arranged horizontally, with each display tall enough to fill the display area. Similarly, HINT_DISPLAY_GROUP_TILE_VERTICALLY indicates that you want tiled displays to be arranged vertically, with each display wide enough to fill the display area. If both hints are set, the result varies depending on the specific UI.</P>
<P>
<CODE>
HINT_DISPLAY_GROUP_SIZE_INDEPENDENTLY_OF_DISPLAYS</CODE>
 sizes a GenDisplayGroup by what its parent wants rather than what any of its children GenDisplays want. This may improve geometry performance in a complex GenPrimary/GenDisplay combination.</P>


<H2 CLASS="HeadingC">
Arranging Displays in the Display Group</H2>
<PRE>MSG_GEN_DISPLAY_GROUP_SET_OVERLAPPING, MSG_GEN_DISPLAY_GROUP_SET_FULL_SIZED, MSG_GEN_DISPLAY_GROUP_GET_FULL_SIZED, MSG_GEN_DISPLAY_GROUP_TILE_DISPLAYS, ATTR_GEN_DISPLAY_GROUP_NO_FULL_SIZED, ATTR_GEN_DISPLAY_GROUP_NO_OVERLAPPING, ATTR_GEN_DISPLAY_GROUP_OVERLAPPING_STATE</PRE>
<P>
The GenDisplayGroup can be in &quot;full-sized&quot; or &quot;overlapping&quot; mode. If the GenDisplayGroup is in &quot;full-size&quot; mode, all of its children are maximized (except any displays which are set &quot;non-maximizable&quot;). If it is not in full-sized mode, it is said to be in &quot;overlapping&quot; mode; that is, none of its children are maximized. When a user maximizes any display which belongs to a GenDisplayGroup, the GenDisplayGroup automatically goes into &quot;full-size&quot; mode and maximizes all of its children.</P>
<P>
If you include <A NAME="IX_ATTR_GEN_DISPLAY_GROUP_NO_FULL_SIZED">
 </A>
ATTR_GEN_DISPLAY_GROUP_NO_FULL_SIZED, the GenDisplayControl will not be able to go into full-size mode; it will always be in overlapping mode. Similarly, if set ATTR_GEN_DISPLAY_GROUP_NO_OVERLAPPING<A NAME="IX_ATTR_GEN_DISPLAY_GROUP_NO_OVERLAPPING">
 </A>
, the GenDisplayControl will not be able to go into overlapping mode; it will always be in full-sized mode, and all displays will always be maximized. Naturally, you may not include both of these attributes at once; if you do, results are undefined.</P>
<P>
Messages are provided which switch the GenDisplayGroup into one or another of these modes. You might not need to use any of these messages. If you use a GenDisplayControl object, the user will be able to switch from overlapping to full-size and also to tile the displays by using that object. However, you can also send the following messages directly.</P>
<P>
You can set a GenDisplayGroup to full-sized mode by sending it the message MSG_GEN_DISPLAY_GROUP_SET_FULL_SIZED. This message causes the GenDisplayGroup to maximize every one of its children. Children which cannot be maximized will be unaffected. The window layering and focus/target settings are not changed.</P>
<P>
You can set a GenDisplayGroup to overlapping mode by sending it the message MSG_GEN_DISPLAY_GROUP_SET_OVERLAPPING. This message causes a GenDisplayGroup object to de-maximize all of its children. Children which are not restorable will be unaffected. The window layering and focus/target settings are not changed.</P>
<P>
You can find out whether a GenDisplayGroup object is in full-sized mode by sending it <CODE>
MSG_GEN_DISPLAY_GROUP_GET_FULL_SIZED</CODE>
. If the GenDisplayGroup is in full-sized mode, this message will return <EM>
true</EM>
.</P>
<P>
You can also put a GenDisplayGroup into &quot;tiled&quot; mode. This is a special case of overlapping mode. When a GenDisplayGroup is put in tiled mode, it first puts itself in overlapping mode. It then attempts to arrange and resize its display children so they fill the display area without overlapping. To put a GenDisplayGroup into tiled mode, send it the message <CODE>
MSG_GEN_DISPLAY_GROUP_TILE_DISPLAYS</CODE>
.</P>
<P>
The GenDisplayGroup keeps track of its overlapping state across shutdowns. It does this by setting ATTR_GEN_DISPLAY_GROUP_OVERLAPPING_STATE. Applications may not set or change this attribute directly.</P>

<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_DISPLAY_GROUP_SET_FULL_SIZED">
 </A>
MSG_GEN_DISPLAY_GROUP_SET_FULL_SIZED</H4>
<PRE CLASS="syntax">void	MSG_GEN_DISPLAY_GROUP_SET_FULL_SIZED();</PRE>
<P>
This message instructs a GenDisplayGroup to put itself in &quot;full-sized&quot; mode; that is, all of its maximizable children will be maximized. This message is ignored if the GenDisplayGroup has the vardata attribute ATTR_GEN_DISPLAY_GROUP_NO_FULL_SIZED.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	GenDisplayGroup.</P>
<P CLASS="refField">
Interception:	Not generally intercepted.</P>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_DISPLAY_GROUP_SET_OVERLAPPING">
 </A>
MSG_GEN_DISPLAY_GROUP_SET_OVERLAPPING</H4>
<PRE CLASS="syntax">void	MSG_GEN_DISPLAY_GROUP_SET_OVERLAPPING();</PRE>
<P>
This message instructs a GenDisplayGroup to put itself in &quot;overlapping&quot; mode. This message is ignored if the GenDisplayGroup has the vardata attribute ATTR_GEN_DISPLAY_GROUP_NO_OVERLAPPING.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	GenDisplayGroup.</P>
<P CLASS="refField">
Interception:	Not generally intercepted.</P>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_DISPLAY_GROUP_GET_FULL_SIZED">
 </A>
MSG_GEN_DISPLAY_GROUP_GET_FULL_SIZED</H4>
<PRE CLASS="syntax">Boolean	MSG_GEN_DISPLAY_GROUP_GET_FULL_SIZED();</PRE>
<P>
This message finds out whether a GenDisplayGroup is in &quot;full-sized&quot; mode.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	GenDisplayGroup.</P>
<P CLASS="refField">
Return:	Returns <EM>
true</EM>
 (i.e. non-zero) if the GenDisplayGroup is in full-sized mode; otherwise, it returns <EM>
false</EM>
 (i.e. zero).</P>
<P CLASS="refField">
Interception:	Not generally intercepted.</P>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_DISPLAY_GROUP_TILE_DISPLAYS">
 </A>
MSG_GEN_DISPLAY_GROUP_TILE_DISPLAYS</H4>
<PRE CLASS="syntax">void	MSG_GEN_DISPLAY_GROUP_TILE_DISPLAYS;</PRE>
<P>
This message instructs a GenDisplayGroup to put itself in &quot;tiled&quot; mode. That is, it should first put itself in &quot;overlapping&quot; mode; it should then arrange and resize the displays so they fill the display area without overlapping. The message is ignored if the GenDisplayGroup has the vardata attribute ATTR_GEN_DISPLAY_GROUP_NO_OVERLAPPING.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	GenDisplayGroup.</P>
<P CLASS="refField">
Interception:	Not generally intercepted.</P>



<H2 CLASS="HeadingC">
Selecting a Display</H2>
<PRE>MSG_GEN_DISPLAY_GROUP_SELECT_DISPLAY</PRE>
<P>
Ordinarily, the user switches from one display to another in one of two ways. The user may use the specific UI's way of switching displays (e.g. clicking on the display); or he may use the GenDisplayControl (described below) to switch displays. The application can also force the Display Group to bring a certain display to the top by sending it <CODE>
MSG_GEN_DISPLAY_GROUP_SELECT_DISPLAY</CODE>
. However, this is not usually done; applications should generally let the user switch displays with the GenDisplayControl.</P>

<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_DISPLAY_GROUP_SELECT_DISPLAY">
 </A>
MSG_GEN_DISPLAY_GROUP_SELECT_DISPLAY</H4>
<PRE CLASS="syntax">void	MSG_GEN_DISPLAY_GROUP_SELECT_DISPLAY(
        word	displayNum);</PRE>
<P>
This message instructs a display group to select a certain display, bringing it to the top and making it the focus. Applications should not ordinarily need to send this.</P>
<P CLASS="refField">
Source:	Usually GenDisplayControl or its associated objects; however, any object can send this.</P>
<P CLASS="refField">
Destination:	GenDisplayGroup.</P>
<P CLASS="refField">
Parameters:	<EM>
displayNum</EM>
	The display to select. This is an integer specifying the position of the desired display among the GenDisplayGroup's children; that is, its first child is number zero, its next child is number one, and so on.</P>
<P CLASS="refField">
Interception:	This message is not ordinarily intercepted.</P>
<P CLASS="refField">
Tips:	You can find a display's position number by sending <CODE>
MSG_GEN_FIND_CHILD</CODE>
 to the GenDisplayGroup, passing the optr of the desired display. See <A HREF="../../SysObjects/Gen/GenClass_10.htm#40962">the GenClass chapter</A>.</P>

<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="Windows_5.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Windows_5.htm"><IMG SRC="../../docImages/prevUp.gif" BORDER="0" ALT="Prev: ">3 Using Multiple Displays</A> 
<!-- to next --> | <A HREF="Windows_7.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">3.2 GenDisplayControl</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
