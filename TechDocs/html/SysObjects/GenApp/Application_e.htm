<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: Application_e.htm,v 1.1 97/06/02 16:16:46 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Interaction with the UI</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="subsectionTitle">
<A HREF="index.htm">The Application Object</A>: 2.5 <A HREF="Application_9.htm">Advanced GenApplication Usage</A>: 
Interaction with the UI</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="Application_9.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Application_d.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">2.4 Measurement Type</A> 
<!-- to next --> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<P>
<A NAME="IX_Display scheme:accessing">
 </A>
The GenApplication is an application's main point of contact with the UI. As such, it has several messages that are sent by the UI or by other objects to initiate certain UI-related functions. These messages will rarely, if ever, be used by application programmers, but they are documented here in case you find them useful.</P>

<H2 CLASS="HeadingC">
Attaching and Detaching</H2>
<PRE>MSG_GEN_APPLICATION_INITIATE_UI_QUIT, MSG_GEN_APPLICATION_INSTALL_TOKEN, MSG_GEN_APPLICATION_DETACH_PENDING, MSG_GEN_APPLICATION_OPEN_COMPLETE, MSG_GEN_APPLICATION_QUIT_AFTER_UI</PRE>

<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_APPLICATION_INITIATE_UI_QUIT">
 </A>
MSG_GEN_APPLICATION_INITIATE_UI_QUIT</H4>
<PRE CLASS="syntax">void	MSG_GEN_APPLICATION_INITIATE_UI_QUIT();</PRE>
<P>
This message causes the GenApplication to begin quitting. The application will automatically go through the entire quit sequence.</P>
<P CLASS="refField">
Source:	Infrequently used.</P>
<P CLASS="refField">
Destination:	The GenApplication of the application to be shut down.</P>
<P CLASS="refField">
Interception:	Do not intercept.</P>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_APPLICATION_INSTALL_TOKEN">
 </A>
MSG_GEN_APPLICATION_INSTALL_TOKEN</H4>
<PRE CLASS="syntax">void	MSG_GEN_APPLICATION_INSTALL_TOKEN();</PRE>
<P>
This message instructs the GenApplication object to set its token into the token database file.</P>
<P CLASS="refField">
Source:	Infrequently used.</P>
<P CLASS="refField">
Destination:	The GenApplication to have its token installed.</P>
<P CLASS="refField">
Interception:	Do not intercept.</P>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_APPLICATION_DETACH_PENDING">
 </A>
MSG_GEN_APPLICATION_DETACH_PENDING</H4>
<PRE CLASS="syntax">void	MSG_GEN_APPLICATION_DETACH_PENDING();</PRE>
<P>
This message is sent to the specific UI library through the GenApplication to notify it that the application is about to be shut down. It is used to abort any application-modal dialog boxes so the application's Process object will be able to detach.</P>
<P CLASS="refField">
Source:	The GenApplication object before it detaches.</P>
<P CLASS="refField">
Destination:	The GenApplication of the application about to be detached.</P>
<P CLASS="refField">
Interception:	Do not intercept.</P>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_APPLICATION_OPEN_COMPLETE">
 </A>
MSG_GEN_APPLICATION_OPEN_COMPLETE</H4>
<PRE CLASS="syntax">void	MSG_GEN_APPLICATION_OPEN_COMPLETE();</PRE>
<P>
This message is sent by the GenApplication object to itself when it has finished opening (after it has set itself usable). It is sent via the queue and indicates that the application's UI is fully usable.</P>
<P CLASS="refField">
Source:	A GenApplication after it has set itself GS_USABLE.</P>
<P CLASS="refField">
Destination:	Sent to itself.</P>
<P CLASS="refField">
Interception:	Do not intercept.</P>


<H4 CLASS="RefETitle">
MSG_GEN_APPLICATION_QUIT_AFTER_UI</H4>
<PRE CLASS="syntax">void	MSG_GEN_APPLICATION_QUIT_AFTER_UI();</PRE>
<P>
This message is called from the MSG_META_QUIT handler in GenProcessClass, after the UI has finished its MSG_GEN_APPLICATION_INITIATE_UI_QUIT sequence. This message is the application's last chance to abort a quit before the DETACH sequence begins. The default behavior is to abort the QUIT if the application is still open for the user (i.e. not ALF_OPEN_FOR_IACP_CONNECTION_ONLY) or if an IACP connection remains that requires the application to remain open.</P>
<P CLASS="refField">
Source:	<CODE>
GenProcessClass</CODE>
.</P>
<P CLASS="refField">
Destination:	GenApplication object of the application.</P>
<P CLASS="refField">
Interception:	May be intercepted and not sent to the superclass to abort the QUIT. </P>



<H2 CLASS="HeadingC">
Queries of the UI</H2>
<PRE>MSG_GEN_APPLICATION_GET_DISPLAY_SCHEME, MSG_GEN_APPLICATION_QUERY_UI, MSG_GEN_APPLICATION_NOTIFY_MODAL_WIN_CHANGE, MSG_GEN_APPLICATION_INK_QUERY_REPLY, MSG_GEN_APPLICATION_GET_GCN_LIST_OF_LISTS, MSG_GEN_APPLICATION_TEST_WIN_INTERACTABILITY, MSG_GEN_APPLICATION_VISIBILITY_NOTIFICATION, MSG_GEN_APPLICATION_GET_MODAL_WIN, MSG_GEN_APPLICATION_CHECK_IF_ALWAYS_INTERACTABLE_OBJECT</PRE>

<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_APPLICATION_GET_DISPLAY_SCHEME">
 </A>
MSG_GEN_APPLICATION_GET_DISPLAY_SCHEME</H4>
<PRE CLASS="syntax">void	MSG_GEN_APPLICATION_GET_DISPLAY_SCHEME(
        DisplayScheme * displayScheme);</PRE>
<P>
This message gets the current display scheme used by the application.</P>
<P CLASS="refField">
Source:	Infrequently used.</P>
<P CLASS="refField">
Destination:	Any GenApplication.</P>
<P CLASS="refField">
Parameters:	<CODE>
displayScheme</CODE>
	<A NAME="IX_font:application display scheme">
 </A>
<A NAME="IX_Color:display scheme of specific ui">
 </A>
A pointer to a structure of type <CODE>
DisplayScheme</CODE>
. This structure will be filled by the method and contains information about the color scheme, display type, font ID, and point size used by the application.</P>
<P CLASS="refField">
Return:	The <CODE>
DisplayScheme</CODE>
 structure pointed to by <CODE>
displayScheme</CODE>
 will be filled upon return.</P>
<P CLASS="refField">
Interception:	Do not intercept.</P>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_APPLICATION_QUERY_UI">
 </A>
MSG_GEN_APPLICATION_QUERY_UI</H4>
<PRE CLASS="syntax">Handle	MSG_GEN_APPLICATION_QUERY_UI();</PRE>
<P>
This message is used to determine which UI should be used at a given point in the generic tree for a certain type of object.</P>
<P CLASS="refField">
Source:	Infrequently used.</P>
<P CLASS="refField">
Destination:	Any GenApplication object.</P>
<P CLASS="refField">
Parameters:	None.</P>
<P CLASS="refField">
Return:	The handle of the specific UI library geode.</P>
<P CLASS="refField">
Interception:	Do not intercept.</P>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_APPLICATION_NOTIFY_MODAL_WIN_CHANGE">
 </A>
MSG_GEN_APPLICATION_NOTIFY_MODAL_WIN_CHANGE</H4>
<PRE CLASS="syntax">void	MSG_GEN_APPLICATION_NOTIFY_MODAL_WIN_CHANGE();</PRE>
<P>
This message is called on a GenApplication object by the UI whenever the application should check to see if there is a change in modal status. The behavior is to look for the top system-modal window owned by the application and then the top application-modal window within the application's layer.</P>
<P>
This message sets the AS_ATTACHED_TO_STATE_FILE in the GenApplication's <CODE>
GAI_states</CODE>
 field.</P>
<P CLASS="refField">
Source:	Sent by the UI.</P>
<P CLASS="refField">
Destination:	Any GenApplication object.</P>
<P CLASS="refField">
Interception:	Do not intercept.</P>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_APPLICATION_INK_QUERY_REPLY">
 </A>
MSG_GEN_APPLICATION_INK_QUERY_REPLY</H4>
<PRE CLASS="syntax">void	MSG_GEN_APPLICATION_INK_QUERY_REPLY(
        InkReturnValue		inkReturnValue,
        word		inkGstate);</PRE>
<P>
<A NAME="IX_Ink:MSG_GEN_APPLICATION_INK_QUERY_REPLY">
 </A>
This message is sent to an Application object in reply to a <CODE>
MSG_META_QUERY_IF_PRESS_IS_INK</CODE>
. It indicates whether the object that was queried can or can not handle Ink presses. The GenApplication object responds by sending a message to the UI.</P>
<P CLASS="refField">
Source:	Sent by an object in response to <CODE>
MSG_META_QUERY_IF_PRESS_IS_INK</CODE>
.</P>
<P CLASS="refField">
Destination:	The GenApplication object associated with the sender.</P>
<P CLASS="refField">
Parameters:	<CODE>
inkReturnValue</CODE>
	A value indicating whether the object queried can handle Ink input or not. Will be one of IRV_NO_INK, IRV_INK_WITH_STANDARD_OVERRIDE, IRV_DESIRES_INK, or IRV_WAIT.</P>
<DL>
<DT>
<CODE>
inkGstate</CODE>
</DT><DD>The GState, if any, to be used when drawing Ink.</DD>
</DL>
<P CLASS="refField">
Return:	Nothing.</P>
<P CLASS="refField">
Interception:	Do not intercept.</P>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_APPLICATION_GET_GCN_LIST_OF_LISTS">
 </A>
MSG_GEN_APPLICATION_GET_GCN_LIST_OF_LISTS</H4>
<PRE CLASS="syntax">ChunkHandle MSG_GEN_APPLICATION_GET_GCN_LIST_OF_LISTS();</PRE>
<P>
<A NAME="IX_General change notification:accessing list of lists">
 </A>
This message retrieves the GenApplication's GCN list of lists chunk handle. This chunk handle may then be used with a number of kernel routines for GCN list management or to perform operations on individual GCN lists.</P>
<P CLASS="refField">
Source:	Any object in the GenApplication's thread.</P>
<P CLASS="refField">
Destination:	Any GenApplication object.</P>
<P CLASS="refField">
Parameters:	None.</P>
<P CLASS="refField">
Return:	The chunk handle of the GCN list of lists chunk; a null chunk handle will be returned if the chunk does not exist.</P>
<P CLASS="refField">
Interception:	Do not intercept.</P>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_APPLICATION_TEST_WIN_INTERACTABILITY">
 </A>
MSG_GEN_APPLICATION_TEST_WIN_INTERACTABILITY</H4>
<PRE CLASS="syntax">Boolean	MSG_GEN_APPLICATION_TEST_WIN_INTERACTABILITY(
        optr	inputOD,
        Handle	window);</PRE>
<P>
This message tests whether the passed window object is interactable.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any GenApplication object.</P>
<P CLASS="refField">
Parameters:	<CODE>
inputOD</CODE>
	The optr of the windowed object to be tested.</P>
<DL>
<DT>
<CODE>
window</CODE>
</DT><DD>The window handle of the window to be tested.</DD>
</DL>
<P CLASS="refField">
Return:	The return value will be <CODE>
false</CODE>
 if there are no modal windows in the system or if the window object passed is the topmost active modal window. The return value will be <CODE>
true</CODE>
 if an active modal window exists and is not the passed window object (in this case, if the passed object has any window grabs, it should release them). <CODE>
True</CODE>
 is also returned if there is no modal window but the GenApplication is ignoring input.</P>
<P CLASS="refField">
Interception:	Do not intercept.</P>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_APPLICATION_VISIBILITY_NOTIFICATION">
 </A>
MSG_GEN_APPLICATION_VISIBILITY_NOTIFICATION</H4>
<PRE CLASS="syntax">void	MSG_GEN_APPLICATION_VISIBILITY_NOTIFICATION(
        optr		obj,
        Boolean 		opening);</PRE>
<P>
Notifies the GenApplication object that it has become visible or not visible.</P>
<P CLASS="refField">
Source:	The specific UI.</P>
<P CLASS="refField">
Destination:	The GenApplication that has become visible or not visible.</P>
<P CLASS="refField">
Parameters:	<CODE>
obj</CODE>
	The optr of the object sending the notification message.</P>
<DL>
<DT>
<CODE>
opening</CODE>
</DT><DD>A Boolean indicating the state of the object: <CODE>
true</CODE>
 if open, <CODE>
false</CODE>
 if closed.</DD>
</DL>
<P CLASS="refField">
Return:	Nothing.</P>
<P CLASS="refField">
Interception:	Do not intercept.</P>


<H4 CLASS="RefETitle">
MSG_GEN_APPLICATION_GET_MODAL_WIN</H4>
<PRE CLASS="syntax">optr	MSG_GEN_APPLICATION_GET_MODAL_WIN();</PRE>
<P>
This message returns the current top modal window for the application, if any is present.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	GenApplication object.</P>
<P CLASS="refField">
Return:	optr of top modal windowed object.</P>


<H4 CLASS="RefETitle">
MSG_GEN_APPLICATION_CHECK_IF_ALWAYS_INTERACTABLE_OBJECT</H4>
<PRE CLASS="syntax">Boolean	MSG_GEN_APPLICATION_CHECK_IF_ALWAYS_INTERACTABLE_OBJECT(
        optr		objToCheck);</PRE>
<P>
This message checks if the passed object should always remain interactable. </P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	GenApplication object.</P>
<P CLASS="refField">
Parameters:	<EM>
objToCheck</EM>
	optr of object to check the interactable state.</P>
<P CLASS="refField">
Return:	<EM>
true</EM>
 if the object is always interactable, <EM>
false</EM>
 if not.</P>



<H2 CLASS="HeadingC">
Alterations of Functionality</H2>
<PRE>MSG_GEN_APPLICATION_BRING_WINDOW_TO_TOP, MSG_GEN_APPLICATION_LOWER_WINDOW_TO_BOTTOM, MSG_GEN_APPLICATION_BUILD_STANDARD_DIALOG, MSG_GEN_APPLICATION_DO_STANDARD_DIALOG, MSG_GEN_APPLICATION_TOGGLE_CURSOR, MSG_GEN_APPLICATION_BRING_UP_HELP, MSG_GEN_APPLICATION_TOGGLE_CURRENT_MENU_BAR, MSG_GEN_APPLICATION_TOGGLE_FLOATING_KEYBOARD, MSG_GEN_APPLICATION_TOGGLE_EXPRESS_MENU</PRE>

<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_APPLICATION_BRING_WINDOW_TO_TOP">
 </A>
MSG_GEN_APPLICATION_BRING_WINDOW_TO_TOP</H4>
<PRE CLASS="syntax">void	MSG_GEN_APPLICATION_BRING_WINDOW_TO_TOP(
        optr	window);</PRE>
<P>
This message brings the passed window to the front of the screen.</P>
<P CLASS="refField">
Source:	Unrestricted</P>
<P CLASS="refField">
Destination:	Any GenApplication object.</P>
<P CLASS="refField">
Parameters:	<CODE>
window</CODE>
	The optr of the window object to be brought to the front of the screen.</P>
<P CLASS="refField">
Return:	Nothing.</P>
<P CLASS="refField">
Interception:	Do not intercept.</P>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_APPLICATION_LOWER_WINDOW_TO_BOTTOM">
 </A>
MSG_GEN_APPLICATION_LOWER_WINDOW_TO_BOTTOM</H4>
<PRE CLASS="syntax">void	MSG_GEN_APPLICATION_LOWER_WINDOW_TO_BOTTOM(
        optr	window);</PRE>
<P>
This message sends the specified window to the back of the screen, behind other window objects.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any GenApplication object.</P>
<P CLASS="refField">
Parameters:	<CODE>
window</CODE>
	The optr of the window object to be sent to the back of the screen.</P>
<P CLASS="refField">
Return:	Nothing.</P>
<P CLASS="refField">
Interception:	Do not intercept.</P>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_APPLICATION_BUILD_STANDARD_DIALOG">
 </A>
MSG_GEN_APPLICATION_BUILD_STANDARD_DIALOG</H4>
<PRE CLASS="syntax">optr	MSG_GEN_APPLICATION_BUILD_STANDARD_DIALOG(
        char	* customTriggers,
        char	* arg2,
        char	* arg1,
        char	* string,
        CustomDialogBoxFlags dialogFlags);</PRE>
<P>
This message builds a standard dialog box for the application.</P>
<P CLASS="refField">
Source:	Infrequently used.</P>
<P CLASS="refField">
Destination:	The GenApplication to use the dialog box.</P>
<P CLASS="refField">
Parameters:	<CODE>
customTriggers</CODE>
	A pointer to a table of custom GenTrigger information. Each trigger given in the table will appear in the dialog box in the order declared. The table is made up of structures of type <CODE>
StandardDialogResponseTriggerTable</CODE>
.</P>
<DL>
<DT>
<CODE>
arg</CODE>
1</DT><DD>A pointer to a character string to be displayed in the dialog box.</DD>
<DT>
<CODE>
arg</CODE>
2</DT><DD>A pointer to a second string to be displayed in the dialog box.</DD>
<DT>
<CODE>
string</CODE>
</DT><DD>A pointer to a custom character string to be displayed in the dialog box.</DD>
<DT>
<CODE>
dialogFlags</CODE>
</DT><DD>A record of <CODE>
CustomDialogBoxFlags</CODE>
 indicating what type of dialog box is to be created.</DD>
</DL>
<P CLASS="refField">
Return:	The optr of the dialog box object.</P>
<P CLASS="refField">
Interception:	Do not intercept.</P>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_APPLICATION_DO_STANDARD_DIALOG">
 </A>
MSG_GEN_APPLICATION_DO_STANDARD_DIALOG</H4>
<PRE CLASS="syntax">void	MSG_GEN_APPLICATION_DO_STANDARD_DIALOG(@stack
        word	dialogMethod,
        optr	dialogOD,
        char	*helpContext,
        char	* customTriggers,
        char	* arg2,
        char	* arg1,
        char	* string,
        CustomDialogBoxFlags dialogFlags);</PRE>
<P>
This message executes a standard dialog box and returns immediately. When the dialog box is shut down, the message passed in the <CODE>
dialogMethod</CODE>
 parameter is sent to the object specified in <CODE>
dialogOD</CODE>
. Only one dialog box at a time may be displayed with this message.</P>
<P CLASS="refField">
Source:	Infrequently used.</P>
<P CLASS="refField">
Destination:	The GenApplication to use the created dialog box.</P>
<P CLASS="refField">
Parameters:	<CODE>
dialogMethod</CODE>
	The message to be sent out when the user is finished with the dialog. This message should be defined based on the prototype <CODE>
GEN_APP_DO_STANDARD_DIALOG_MSG</CODE>
.</P>
<DL>
<DT>
<CODE>
dialogOD</CODE>
</DT><DD>The recipient of the message specified in <CODE>
dialogMethod</CODE>
 above.</DD>
<DT>
<EM>
helpContext</EM>
</DT><DD>The help context for this dialog box.</DD>
<DT>
<CODE>
customTriggers</CODE>
</DT><DD>A pointer to a table of custom GenTrigger information. Each trigger given in the table will appear in the dialog box in the order declared. The table is made up of structures of type <CODE>
StandardDialogResponseTriggerTable</CODE>
.</DD>
<DT>
<CODE>
arg2</CODE>
</DT><DD>A pointer to a second string to be displayed in the dialog box.</DD>
<DT>
<CODE>
arg1</CODE>
</DT><DD>A pointer to a character string to be displayed in the dialog box.</DD>
<DT>
<CODE>
string</CODE>
</DT><DD>A pointer to a custom character string to be displayed in the dialog box.</DD>
<DT>
<CODE>
dialogFlags</CODE>
</DT><DD>A record of <CODE>
CustomDialogBoxFlags</CODE>
 indicating what type of dialog box is to be created.</DD>
</DL>
<P CLASS="refField">
Return:	Nothing.</P>
<P CLASS="refField">
Interception:	Do not intercept.</P>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_APPLICATION_TOGGLE_CURSOR">
 </A>
MSG_GEN_APPLICATION_TOGGLE_CURSOR</H4>
<PRE CLASS="syntax">void	MSG_GEN_APPLICATION_TOGGLE_CURSOR();</PRE>
<P>
This message toggles the cursor for a text object.</P>
<P CLASS="refField">
Source:	Infrequently used.</P>
<P CLASS="refField">
Destination:	The GenApplication of the text object.</P>
<P CLASS="refField">
Interception:	Do not intercept.</P>


<H4 CLASS="RefETitle">
MSG_GEN_APPLICATION_BRING_UP_HELP</H4>
<PRE CLASS="syntax">void	MSG_GEN_APPLICATION_BRING_UP_HELP();</PRE>
<P>
This message brings up help for an application. Normally, this is accomplished by sending a message to the focus object telling it to bring up a help window with the focus' help context.</P>
<P CLASS="refField">
Source:	Unrestricted, though generally from an application Help icon or &lt;F1&gt;.</P>
<P CLASS="refField">
Destination:	GenApplication object.</P>
<P CLASS="refField">
Interception:	Generally not intercepted, though it may be useful if for some reason you do not wish to bring up help (such as it doesn't exist for this application).</P>


<H4 CLASS="RefETitle">
MSG_GEN_APPLICATION_TOGGLE_CURRENT_MENU_BAR</H4>
<PRE CLASS="syntax">void	MSG_GEN_APPLICATION_TOGGLE_CURRENT_MENU_BAR();</PRE>
<P>
This message toggles the GIV_POPOUT state of the current GenPrimary's menu bar. This message only takes effect if the menu bar is toggleable (i.e. if UIWO_POPOUT_MENU_BAR is set).</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	GenApplication object.</P>


<H4 CLASS="RefETitle">
MSG_GEN_APPLICATION_TOGGLE_FLOATING_KEYBOARD</H4>
<PRE CLASS="syntax">void	MSG_GEN_APPLICATION_TOGGLE_FLOATING_KEYBOARD();</PRE>
<P>
This message toggles the state of the floating keyboard within the current application. Applications may subclass this to bring up their own PenInputControl (or equivalent) object. Otherwise the application object will create its own.</P>
<P CLASS="refField">
Source:	Unrestricted, though generally only supported on pen-based systems. </P>
<P CLASS="refField">
Destination:	GenApplication object.</P>
<P CLASS="refField">
Interception:	May be intercepted if the application has its own PenInputControl object.</P>


<H4 CLASS="RefETitle">
MSG_GEN_APPLICATION_TOGGLE_EXPRESS_MENU</H4>
<PRE CLASS="syntax">void	MSG_GEN_APPLICATION_TOGGLE_EXPRESS_MENU();</PRE>
<P>
This message toggles (opens or closes) the parent field's express menu.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	GenApplication object.</P>


<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="Application_9.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Application_d.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">2.4 Measurement Type</A> 
<!-- to next --> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
