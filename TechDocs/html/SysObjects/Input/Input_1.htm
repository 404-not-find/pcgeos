<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: Input_1.htm,v 1.2 97/09/05 14:05:37 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Input Flow</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="sectionTitle">
<A HREF="index.htm">Input</A>: 1 
Input Flow</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> | <A HREF="Input_2.htm"><IMG SRC="../../docImages/down.gif" BORDER="0" ALT="Down"></A> 
<!-- to previous --> | <A HREF="index.htm"><IMG SRC="../../docImages/prevUp.gif" BORDER="0" ALT="Prev: ">Input</A> 
<!-- to next --> | <A HREF="Input_6.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">2 Mouse Input</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<P>
User input must flow in an orderly way from the user's device to the proper GEOS object. In a multithreaded environment, just determining the appropriate input recipient can be a monumental task.</P>
<P>
GEOS uses several layers of indirection to process user input and to distribute it to its proper destination so applications don't have to. The scheme used not only isolates applications from dealing with devices directly, but it provides convenient and easy ways to control input flow, both within an application and throughout the entire system.</P>
<P>
The figure below shows the flow of input from the user's device to its destination. User input is managed primarily by device drivers acting in concert with the UI, and several threads are involved in the input flow. For example, the kernel provides a thread solely for input management that has a high priority; this insures that the pointer image always moves immediately with the mouse.</P>
<P>
Input is registered by a device such as a keyboard, stylus, or mouse. The device sends signals to GEOS device drivers, which take the signals and translate them into raw input messages the UI understands. These raw messages are translated by the UI's Input Manager, which refines the events even further. The Input Manager then sends the events on to the topmost UI object in the system, the GenSystem object.
<IMG SRC="Input_1_flow.gif">

</P>
<P>
The GenSystem examines the events and their contexts and determines which window or application should receive them. Typically, events you will be interested in will flow from the GenSystem through your GenApplication object, its GenPrimary window, and finally through the appropriate GenView or GenDisplay. These window objects will pass the event on to a visible tree (through a VisContent), which will handle the events.</P>
<P>
It is highly unlikely you will ever need to know anything about an input event before it gets to your GenApplication object. Typically, you will only handle mouse, pen, or Keyboard events in custom visible objects and can ignore them in all other cases.</P>
<P>
Input events take the form of standard GEOS messages. These messages are defined by the UI but are actually part of <CODE>
MetaClass</CODE>
 (they are allocated in <CODE>
MetaClass</CODE>
 and exported to the UI). The reference entries for these events can therefore be found under <CODE>
MetaClass</CODE>

</P>
<P>
Input events give information about the type of event (e.g., a mouse event), the action taking place (e.g., the right mouse button was pressed), and additional information (e.g., the location of the mouse at the time). Each device has its own set of events--for example, keyboard presses induce <CODE>
MSG_META_KBD_CHAR</CODE>
, and mouse moves induce <CODE>
MSG_META_MOUSE_PTR</CODE>
.</P>
<P CLASS="subsectionLink">
<A HREF="Input_2.htm">Devices and Drivers</A></P>
<P CLASS="subsectionLink">
<A HREF="Input_3.htm">Input Manager and GenSystem</A></P>
<P CLASS="subsectionLink">
<A HREF="Input_4.htm">Input Events</A></P>
<P CLASS="subsectionLink">
<A HREF="Input_5.htm">Input Hierarchies</A></P>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> | <A HREF="Input_2.htm"><IMG SRC="../../docImages/down.gif" BORDER="0" ALT="Down"></A> 
<!-- to previous --> | <A HREF="index.htm"><IMG SRC="../../docImages/prevUp.gif" BORDER="0" ALT="Prev: ">Input</A> 
<!-- to next --> | <A HREF="Input_6.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">2 Mouse Input</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
