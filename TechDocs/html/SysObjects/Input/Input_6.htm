<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: Input_6.htm,v 1.1 97/06/02 16:19:04 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Mouse Input</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="sectionTitle">
<A HREF="index.htm">Input</A>: 2 
Mouse Input</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> | <A HREF="Input_7.htm"><IMG SRC="../../docImages/down.gif" BORDER="0" ALT="Down"></A> 
<!-- to previous --> | <A HREF="Input_1.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">1 Input Flow</A> 
<!-- to next --> | <A HREF="Input_b.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">3 Keyboard Input</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<P>
GEOS<A NAME="IX_Mouse">
 </A>
 is built around the user's use of a mouse for most input. Although the system has extensive keyboard navigation capabilities, the mouse is still the preferred input tool for a GUI. Therefore, most applications will in some way accept and handle mouse input directly.</P>
<P>
Typically, you will handle mouse input if you are using visible objects (<CODE>
VisClass</CODE>
, etc.) that will react to the mouse. If you are using only generic objects in your application, you will not need to handle mouse events.</P>
<P>
Mouse input comes in the form of pointer and Button events. Each event describes the mouse's location, the type of event (move, button press, etc.), whether any buttons on the mouse are pressed, and whether any modifier keys on the keyboard are pressed.</P>
<P>
Objects can &quot;grab&quot; the mouse exclusive, taking all mouse events for themselves. This is useful when one object needs to get all mouse input for a period of time; when it no longer needs all mouse input, it releases the exclusive. Mouse events are dispatched directly to whichever object has the &quot;active grab&quot; (the exclusive).</P>
<P>
If no object has the active grab, the event will be passed to the application under the pointer. The application will pass the event to the window or GenView under the pointer, and the window or view will pass it to its content. If the view displays a visible tree, the event will eventually reach the visible object under the mouse pointer, where it should be handled. Thus, the object under the mouse pointer is said to have the &quot;implied grab.&quot;</P>
<P>
The default behavior of the VisContent (passing the event to its first child with the appropriate bounds) is adequate for most input needs. If you are using large documents or visible layers, you will have to subclass the VisContent to handle these special cases.</P>
<P CLASS="subsectionLink">
<A HREF="Input_7.htm">Mouse Events</A></P>
<P CLASS="subsectionLink">
<A HREF="Input_8.htm">Gaining the Mouse Grab</A></P>
<P CLASS="subsectionLink">
<A HREF="Input_9.htm">Large Mouse Events</A></P>
<P CLASS="subsectionLink">
<A HREF="Input_a.htm">Setting the Pointer Image</A></P>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> | <A HREF="Input_7.htm"><IMG SRC="../../docImages/down.gif" BORDER="0" ALT="Down"></A> 
<!-- to previous --> | <A HREF="Input_1.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">1 Input Flow</A> 
<!-- to next --> | <A HREF="Input_b.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">3 Keyboard Input</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
