<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: Input_8.htm,v 1.1 97/06/02 16:19:13 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Gaining the Mouse Grab</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="subsectionTitle">
<A HREF="index.htm">Input</A>: 2.2 <A HREF="Input_6.htm">Mouse Input</A>: 
Gaining the Mouse Grab</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="Input_6.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Input_7.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">2.1 Mouse Events</A> 
<!-- to next --> | <A HREF="Input_9.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">2.3 Large Mouse Events</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<P>
<A NAME="IX_Mouse:grabbing">
 </A>
When no object has the active mouse grab, mouse events are passed to whichever object is directly under the pointer's image. If any object has the grab, however, mouse events will be passed only to the object with the grab, no matter where the pointer is on the screen.</P>
<P>
When the user clicks inside a view, the GenView automatically grabs the mouse while the user holds the mouse button down. This allows the view to know when drag scrolling takes place (the user drags the pointer outside the view's bounds, but the mouse event is still passed to the GenView). Process objects acting as a GenView's content therefore do not have to worry about grabbing the mouse. If you are displaying visible objects within the GenView, however, your objects will likely want to grab the mouse for themselves.</P>
<P>
Typically, a visible object will grab the mouse on a <CODE>
MSG_META_START_...</CODE>
 event and release it on a <CODE>
MSG_META_END_...</CODE>
 event.<A NAME="IX_MSG_VIS_GRAB_MOUSE">
 </A>
 To grab the mouse, a visible object has to send itself the message <CODE>
MSG_VIS_GRAB_MOUSE</CODE>
;<A NAME="IX_MSG_VIS_RELEASE_MOUSE">
 </A>
 to release the grab, it must send itself <CODE>
MSG_VIS_RELEASE_MOUSE</CODE>
.</P>
<P>
The TicTac sample application shows an example of visible objects grabbing the mouse and handling several mouse events. This sample application is described in detail in <A HREF="../../UI/UIOverview/index.htm">the UI Overview</A>.</P><P>
<A NAME="IX_Postpassive grab">
 </A>
<A NAME="IX_Prepassive grab">
 </A>
<A NAME="IX_Passive grab:mouse events">
 </A>
There are two other types of mouse grabs besides the active grab. With very rare exceptions, application programmers can ignore these. They are the pre-passive and post-passive grabs.

</P>
<P>
If an object has a pre-passive grab, it will receive copies of all Button events before the events are passed on to their true destinations. Pre-passive grabs are used by window objects to bring themselves to the front when the user clicks in them. Any number of objects may have pre-passive grabs. To gain a pre-passive grab, a visible object must send itself <CODE>
MSG_VIS_ADD_BUTTON_PRE_PASSIVE</CODE>
; to release it, the object must send itself <CODE>
MSG_VIS_REMOVE_BUTTON_PRE_PASSIVE</CODE>
.</P>
<P>
If an object has a post-passive grab, it will receive copies of all Button events after the events have been handled. Any number of objects may have post-passive grabs. To gain a post-passive grab, a visible object must send itself <CODE>
MSG_VIS_ADD_BUTTON_POST_PASSIVE</CODE>
; to release the grab, the object must send itself <CODE>
MSG_VIS_REMOVE_BUTTON_POST_PASSIVE</CODE>
.</P>
<P>
GEOS<A NAME="IX_MSG_META_POST_PASSIVE_&ldots;  (mouse events)">
 </A>
<A NAME="IX_MSG_META_PRE_PASSIVE_&ldots;  (mouse events)">
 </A>
 uses different messages to indicate that the event is a pre-passive or a post-passive event. All the normal Button events have pre-passive and post-passive counterparts which take the form <CODE>
MSG_META_PRE_PASSIVE_...</CODE>
 and <CODE>
MSG_META_POST_PASSIVE_...</CODE>
. For example, the pre-passive version of <CODE>
MSG_META_START_SELECT</CODE>
 is <CODE>
MSG_META_PRE_PASSIVE_START_SELECT</CODE>
.</P>
<P>
Below are listed the pre-passive equivalents of the above messages. Note that the drag events and large events do not have pre-passive equivalents.</P>
<DL>
<DT>
<CODE>
	MSG_META_PRE_PASSIVE_START_SELECT</DT><DD>
MSG_META_PRE_PASSIVE_END_SELECT<BR>
MSG_META_PRE_PASSIVE_START_MOVE_COPY<BR>
MSG_META_PRE_PASSIVE_END_MOVE_COPY<BR>
MSG_META_PRE_PASSIVE_START_FEATURES<BR>
MSG_META_PRE_PASSIVE_END_FEATURES<BR>
MSG_META_PRE_PASSIVE_START_OTHER<BR>
MSG_META_PRE_PASSIVE_END_OTHER</CODE>
 </DD>
</DL>
<P>
Listed below are the post-passive equivalents of the above messages. Note that the drag events and large events do not have post-passive equivalents.</P>
<DL>
<DT>
<CODE>
	MSG_META_POST_PASSIVE_START_SELECT</DT><DD>
MSG_META_POST_PASSIVE_END_SELECT<BR>
MSG_META_POST_PASSIVE_START_ADJUST<BR>
MSG_META_POST_PASSIVE_END_MOVE_COPY<BR>
MSG_META_POST_PASSIVE_START_FEATURES<BR>
MSG_META_POST_PASSIVE_END_FEATURES<BR>
MSG_META_POST_PASSIVE_START_OTHER<BR>
MSG_META_POST_PASSIVE_END_OTHER</CODE>
 </DD>
</DL>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="Input_6.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Input_7.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">2.1 Mouse Events</A> 
<!-- to next --> | <A HREF="Input_9.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">2.3 Large Mouse Events</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
