<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: GenClass_18.htm,v 1.1 97/06/02 16:12:46 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Parent and Child Message Passing</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="subsectionTitle">
<A HREF="index.htm">GenClass</A>: 7.1 <A HREF="GenClass_17.htm">Special Message Passing</A>: 
Parent and Child Message Passing</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="GenClass_17.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="GenClass_17.htm"><IMG SRC="../../docImages/prevUp.gif" BORDER="0" ALT="Prev: ">7 Special Message Passing</A> 
<!-- to next --> | <A HREF="GenClass_19.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">7.2 Generic Upward Queries</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<PRE>MSG_GEN_CALL_PARENT, MSG_GEN_SEND_TO_PARENT, MSG_GEN_SEND_TO_CHILDREN</PRE>
<P>
Three messages enable you to pass other messages to a generic object's parents and children without having to know the proper optrs. Using these messages, you can perform operations on any generic object's parents and children. If you need return values from an operation being performed by the parent object, use <CODE>
MSG_GEN_CALL_PARENT</CODE>
. If no return values are needed, you may use <CODE>
MSG_GEN_SEND_TO_PARENT</CODE>
. </P>
<P>
To pass a message to all of your generic children, use <CODE>
MSG_GEN_SEND_TO_CHILDREN</CODE>
. Note that no comparable <CODE>
MSG_GEN_CALL_CHILDREN</CODE>
 exists because it is meaningless to expect return values from multiple objects for a single event.</P>
<P>
You may also use the Goc macros <CODE>
genParent</CODE>
 and <CODE>
genChildren</CODE>
 to send a message to a parent or the generic children of an object.</P>

<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_CALL_PARENT">
 </A>
MSG_GEN_CALL_PARENT</H4>
<PRE CLASS="syntax">void	MSG_GEN_CALL_PARENT(
        EventHandle		event);</PRE>
<P>
This message delivers an event to the generic parent of the recipient. This message must pass a classed event that the parent object will handle. You should use this message if return values are expected. Always make sure to cast the return (following the call) into the proper type. The most effective way to do this is by enclosing the actual message sent within parentheses. The event will be freed after it is sent.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any generic object.</P>
<P CLASS="refField">
Parameters:	<EM>
event</EM>
	The classed event to deliver to parent of this object.</P>
<P CLASS="refField">
Return:	The return value of the classed event (cast to the proper type).</P>
<P CLASS="refField">
Interception:	Generally not intercepted. Custom gadgets may handle to supplement or supersede default functionality.</P>
<P CLASS="figTitle">
Code Display 2-28 MSG_GEN_CALL_PARENT</P>
<PRE>/* The following method retrieves the visual moniker
 * of an object's parent. */</PRE>
<PRE>@method MyProcessClass, MSG_GET_MY_PARENTS_MONIKER {
    ChunkHandle parentMoniker;
    EventHandle myEvent;</PRE>
<PRE>	/* Encapsulate the message to be handled
	 * by any generic (GenClass) object. */</PRE>
<PRE>    myEvent = @record GenClass::MSG_GEN_GET_MONIKER();</PRE>
<PRE>/* Calls the parent of EntryNumberTwo with the classed event specified above. Note
 * that the return value is cast to type (MSG_GEN_GET_MONIKER) because
 * MSG_GEN_CALL_PARENT itself returns void. */</PRE>
<PRE>    parentMoniker = @call (MSG_GEN_GET_MONIKER) 
			@EntryNumberTwo::MSG_GEN_CALL_PARENT(myEvent);
    return(parentMoniker); /* return the parentMoniker. */
}</PRE>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_SEND_TO_PARENT">
 </A>
MSG_GEN_SEND_TO_PARENT</H4>
<PRE CLASS="syntax">void	MSG_GEN_SEND_TO_PARENT(
        EventHandle event);</PRE>
<P>
This message sends an encapsulated event to the parent but expects no return values. The event will be freed after it is sent.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any generic object.</P>
<P CLASS="refField">
Parameters:	<EM>
event</EM>
	The classed event to deliver to parent of this object.</P>
<P CLASS="refField">
Interception:	Generally not intercepted. Custom gadgets may handle to supplement or supersede default functionality. </P>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_SEND_TO_CHILDREN">
 </A>
MSG_GEN_SEND_TO_CHILDREN</H4>
<PRE CLASS="syntax">void	MSG_GEN_SEND_TO_CHILDREN(
        EventHandle event);</PRE>
<P>
This message sends an encapsulated event to all children of the generic object receiving it. This message cannot return values. The event will be freed after it is sent.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any generic object.</P>
<P CLASS="refField">
Parameters:	<EM>
event</EM>
	The classed event to deliver to all children.</P>
<P CLASS="refField">
Interception:	Generally not intercepted. Custom gadgets may handle to supplement or supersede default functionality.</P>

<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="GenClass_17.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="GenClass_17.htm"><IMG SRC="../../docImages/prevUp.gif" BORDER="0" ALT="Prev: ">7 Special Message Passing</A> 
<!-- to next --> | <A HREF="GenClass_19.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">7.2 Generic Upward Queries</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
