<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: GenClass_7.htm,v 1.2 97/09/05 14:01:07 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Composite Links</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="subsectionTitle">
<A HREF="index.htm">GenClass</A>: 3.2 <A HREF="GenClass_5.htm">GenClass Basics</A>: 
<A NAME="38463">
 </A>
Composite Links</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="GenClass_5.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="GenClass_6.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">3.1 Visual Monikers</A> 
<!-- to next --> | <A HREF="GenClass_8.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">3.3 Keyboard Accelerators</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<P>
<A NAME="IX_GI_comp">
 </A>
Composite links form the connections between parent objects and child objects within a generic tree (see <A HREF="../../UI/UIOverview/index.htm">the UI Overview</A>). These links are set up using the <CODE>GI_comp</EM>
 and <CODE>
GI_link</CODE>
 instance fields. The <CODE>
GI_comp</CODE>
 field points to an object's first child. The <CODE>
GI_link</CODE>
 field points to an object's next sibling or to its parent if no next sibling exists. In Goc, however, this usage is greatly simplified. The developer only needs to set the <CODE>
GI_comp</CODE>
 field equal to its complete list of children for the parent object. The Goc preprocessor will then create and reassign all necessary links.</P>
<P CLASS="figTitle">
Code Display 2-13 Using GI_comp to Add Children</P>
<PRE>/* The GenInteraction (MyInteraction) acts as the parent object for the three
 * child GenTriggers. All three GenTrigger children will be placed within the
 * GenInteraction object. */</PRE>
<PRE>@object GenInteractionClass MyInteraction = {
    GI_visMoniker = &quot;Menu&quot;;						 /* Text Moniker */
    GII_visibility = GIV_POPUP;						 /* Creates a Menu */
    GI_comp = @MyFirstChild, @MySecondChild, @MyThirdChild;
						/* list of children */
}</PRE>
<PRE>@object GenTriggerClass MyFirstChild= {
    GI_visMoniker = &quot;Child 1&quot;;					/* Text Moniker */
}</PRE>
<PRE>@object GenTriggerClass MySecondChild = {
    GI_visMoniker = &quot;Child 2&quot;;					/* Text Moniker */
}</PRE>
<PRE>@object GenTriggerClass MyThirdChild = {
    GI_visMoniker = &quot;Child 3&quot;;					/* Text Moniker */
}</PRE>
<P>
This simple functionality is all you need to know to add children to your generic objects (and thus to create generic trees). However, it is somewhat helpful in certain cases (as in debugging) to understand what takes place underneath the surface. When an object in GEOS is assigned children, the preprocessor actually only assigns one composite link (<CODE>
GI_comp</CODE>
) to the first child. Each additional child acquires a link from its previous sibling using the internal instance field <CODE>
GI_link</CODE>
. Therefore, the parent will have a <CODE>
GI_comp</CODE>
 to its first child, the first child will have a <CODE>
GI_link</CODE>
 to the next sibling (the parent's second child) and so forth. The last sibling (the parent's last child) will have a <CODE>
GI_link</CODE>
 back to the parent. This <CODE>
GI_link</CODE>
 will have the LF_IS_PARENT bit set to indicate that the child points to a parent and not to a sibling. This forms what amounts to a circular linked list rather than a branching tree structure. (See the figure below.)</P>
<P>
This structure provides a simple and convenient usage. Any object will always have at most two links to other children or parent objects. Therefore the two instance fields <CODE>
GI_comp</CODE>
 and <CODE>
GI_link</CODE>
 provide the entire means of constructing a generic tree.
<IMG SRC="GenClass_7_genTreeDump.gif">

</P>
<P>
You can travel anywhere in the generic tree through these two links. For example, for MyInteraction to communicate with MyThirdChild, it follows the path of the <CODE>
GI_comp</CODE>
 to the first child, MyFirstChild, and then continues through the two <CODE>
GI_link</CODE>
s to the third child. Conversely, a child can reach a parent by travelling along the <CODE>
GI_link</CODE>
s of siblings until it reaches the last sibling, whose <CODE>
GI_link</CODE>
 points to its parent object.
<IMG SRC="GenClass_7_genTree.gif">

</P>
<P>
<CODE>
GenClass </CODE>
message handlers provide several means of pointing to the proper parent/child object without needing to explicitly state the proper <CODE>
GI_comp</CODE>
 and <CODE>
GI_link </CODE>
paths. In practice, you will never need to, and in fact should not, manipulate the <CODE>
GI_link</CODE>
 field at all. This information is provided merely for your use in debugging your applications. In fact, you can usually assume that a conventional branching tree structure exists rather than the linked-list tree structure shown here.</P>
<P>
For information on manipulating these links dynamically using <CODE>
GenClass</CODE>
 messages, see <A HREF="GenClass_f.htm#15521"> Generic Trees</A>
.</P>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="GenClass_5.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="GenClass_6.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">3.1 Visual Monikers</A> 
<!-- to next --> | <A HREF="GenClass_8.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">3.3 Keyboard Accelerators</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
