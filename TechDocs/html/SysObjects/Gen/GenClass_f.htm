<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: GenClass_f.htm,v 1.1 97/06/02 16:14:45 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Generic Trees</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="sectionTitle">
<A HREF="index.htm">GenClass</A>: 5 
<A NAME="15521">
 </A>
Generic Trees</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> | <A HREF="GenClass_10.htm"><IMG SRC="../../docImages/down.gif" BORDER="0" ALT="Down"></A> 
<!-- to previous --> | <A HREF="GenClass_b.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">4 Modifying GenClass Instance Data</A> 
<!-- to next --> | <A HREF="GenClass_13.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">6 Vardata</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<P>
Generic trees are constructed in several ways. The most common is to add, remove, and move individual children. These children may be the top of a generic branch and will therefore add, remove, or move the entire branch below them. <CODE>
GenClass</CODE>
 also provides other means of manipulating entire branches of generic trees. Each manner of generic tree construction and destruction has certain advantages and disadvantages. The various methods are detailed below:</P>
<UL>
<LI>
The object may be declared in the <CODE>
.goc</CODE>
 file, attached to the generic tree. In this case, there is no need to add the child as this is taken care of by the compiler. You can remove the object and any of its children with <CODE>
MSG_GEN_REMOVE</CODE>
 (or <CODE>
MSG_GEN_REMOVE_CHILD</CODE>
). After removal, any single object may be destroyed with <CODE>
MSG_META_OBJ_FREE</CODE>
. You may also destroy a tree of generic objects with <CODE>
MSG_GEN_DESTROY</CODE>
. You may add the removed object (and its children) to a different location in the generic tree with <CODE>
MSG_GEN_ADD_CHILD</CODE>
.</LI>
<LI>
The object may exist in your <CODE>
.goc</CODE>
 file but remain unattached to the generic tree. You may attach the object with <CODE>
MSG_GEN_ADD_CHILD</CODE>
. You can remove the object, and any children of this object, with <CODE>
MSG_GEN_REMOVE</CODE>
 (or <CODE>
MSG_GEN_REMOVE_CHILD</CODE>
). After removal, destroy any single object with <CODE>
MSG_META_OBJ_FREE</CODE>
. You can destroy a tree of generic objects with <CODE>
MSG_GEN_DESTROY</CODE>
.</LI>
<LI>
<CODE>
ObjInstantiate(), ObjInstantiateForThread()<BR>
</CODE>
These routines create a new instance of a single object. You can then add the object to your generic tree with <CODE>
MSG_GEN_ADD_CHILD</CODE>
. After a child is removed using <CODE>
MSG_GEN_REMOVE</CODE>
 (or <CODE>
MSG_GEN_REMOVE_CHILD</CODE>
), it can be destroyed using <CODE>
MSG_META_OBJ_FREE</CODE>
. The object destroyed in such a manner must not have any children attached to it at the time of destruction.</LI>
<LI>
<CODE>
ObjDuplicateResource()<BR>
</CODE>
This routine duplicates an instance of a previously defined object resource. That object block may contain one or more objects. In your <STRONG CLASS="fileName">
.gp</STRONG>
 file, make sure the resource is marked <EM>
discard-only</EM>
. Only use this routine if you want to duplicate an instance of a predefined resource block. After a block duplicated in this manner is removed using <CODE>
MSG_GEN_REMOVE</CODE>
 (or <CODE>
MSG_GEN_REMOVE_CHILD</CODE>
), it can be destroyed using <CODE>
ObjFreeDuplicate()</CODE>
.</LI>
<LI>
<CODE>
MSG_GEN_COPY_TREE</CODE>
 <BR>
This message copies an entire generic branch headed by the recipient. The branch will be set usable and added automatically without need for a <CODE>
MSG_GEN_ADD_CHILD</CODE>
. A generic branch created in this manner can be removed with <CODE>
MSG_GEN_DESTROY</CODE>
. These messages are useful because they can duplicate and destroy generic trees across object blocks. (The copied branch will reside in one block, however.) </LI>
</UL>
<P>
Objects created in these ways must be added using <CODE>
MSG_GEN_ADD_CHILD</CODE>
 (except for those created with <CODE>
MSG_GEN_COPY_TREE</CODE>
).</P>
<UL>
<LI>
<CODE>
MSG_GEN_ADD_CHILD</CODE>
 <BR>
This message adds a generic object that was previously created but not attached to the generic tree. The object may have been created in your <CODE>
.goc</CODE>
 file but not attached as a child of any other object. The object may also have been created through <CODE>
ObjInstantiate()</CODE>
 or <CODE>
ObjInstantiateForThread()</CODE>
 or with <CODE>
ObjDuplicateResource()</CODE>
 (see above). Use <CODE>
MSG_GEN_REMOVE</CODE>
 (or <CODE>
MSG_GEN_REMOVE_CHILD</CODE>
) to remove a child added in this manner.</LI>
</UL>
<P CLASS="subsectionLink">
<A HREF="GenClass_10.htm">Child/Parent Searches</A></P>
<P CLASS="subsectionLink">
<A HREF="GenClass_11.htm">Manipulating Children Directly</A></P>
<P CLASS="subsectionLink">
<A HREF="GenClass_12.htm">Branch Construction/Destruction</A></P>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> | <A HREF="GenClass_10.htm"><IMG SRC="../../docImages/down.gif" BORDER="0" ALT="Down"></A> 
<!-- to previous --> | <A HREF="GenClass_b.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">4 Modifying GenClass Instance Data</A> 
<!-- to next --> | <A HREF="GenClass_13.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">6 Vardata</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
