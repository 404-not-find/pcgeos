<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: GenClass_1c.htm,v 1.1 97/06/02 16:13:06 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Setting Sizes</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="sectionTitle">
<A HREF="index.htm">GenClass</A>: 9 
Setting Sizes</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="GenClass_1b.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">8 Visual Refreshing</A> 
<!-- to next --> | <A HREF="GenClass_1d.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">10 Activation Messages</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<PRE>MSG_GEN_SET_INITIAL_SIZE, MSG_GEN_SET_MINIMUM_SIZE, MSG_GEN_SET_MAXIMUM_SIZE, MSG_GEN_SET_FIXED_SIZE, MSG_GEN_GET_INITIAL_SIZE, MSG_GEN_GET_MINIMUM_SIZE, MSG_GEN_GET_MAXIMUM_SIZE, MSG_GEN_GET_FIZED_SIZE, MSG_GEN_RESET_TO_INITIAL_SIZE, CompSizeHintArgs</PRE>
<P>
<A NAME="IX_Geometry:generic geometry messages">
 </A>
These messages all perform resizing operations on generic objects. In some cases, the geometry is not redone by sending these messages; the object will need to be set not usable and then set usable to force the new sizing scheme. In most cases, however, sending these messages will affect the current geometry of an object. These messages manipulate their associated hints, either by creating new hints or by altering old ones. As such, these messages will only affect an object if the associated hint does also.</P>
<P>
These messages alter four size restrictions associated with an object: initial, maximum, minimum, and fixed. These restrictions are set up using the <CODE>
GenClass</CODE>
 hints <CODE>
HINT_INITIAL_SIZE</CODE>
, <CODE>
HINT_MAXIMUM_SIZE</CODE>
, <CODE>
HINT_MINIMUM_SIZE</CODE>
, and <CODE>
HINT_FIXED_SIZE</CODE>
, all of which are described in <A HREF="../../UI/Geometry/index.htm">the Managing UI Geometry chapter</A>.</P><P>
The size parameter required by each of these hints is a structure of type <CODE>
CompSizeHintArgs</CODE>
. This structure is shown below:</P>
<PRE><A NAME="IX_CSHA_&ldots;"> </A><A NAME="IX_CompSizeHintArgs"> </A>typedef struct {
    SpecWidth			CSHA_width;
    SpecHeight			CSHA_height;
    sword			CSHA_count;
} CompSizeHintArgs;</PRE>
<P>
Many of the messages pass a structure of <CODE>
GetSizeArgs</CODE>
 to place size information retrieved from the message. This size information is used by the specific UI to visually construct the object, bypassing default sizes in the process. The structure is shown below:</P>
<PRE>typedef struct {
    word		GSA_width;
    word		GSA_height;
    word		GSA_unused;
    word		GSA_count;
} GetSizeArgs;</PRE>

<H5 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_GET_INITIAL_SIZE">
 </A>
MSG_GEN_GET_INITIAL_SIZE</H5>
<PRE CLASS="syntax">void	MSG_GEN_GET_INITIAL_SIZE(
        GetSizeArgs *initSize);</PRE>
<P>
<A NAME="IX_HINT_INITIAL_SIZE">
 </A>
This message retrieves the initial size specifications of a generic object stored in the hint <CODE>
HINT_INITIAL_SIZE. </CODE>
The object must be passed a pointer to a structure of type <CODE>
GetSizeArgs</CODE>
 to store the retrieved data. If the hint <CODE>
HINT_INITIAL_SIZE</CODE>
 does not exist for this object<CODE>
, </CODE>
the structure passed to the object of size <CODE>
GetSizeArgs</CODE>
 will remain empty.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any generic object.</P>
<P CLASS="refField">
Parameters:	<EM>
initSize</EM>
	A pointer to an empty <CODE>
GetSizeArgs</CODE>
 structure.</P>
<P CLASS="refField">
Return:	The <CODE>
GetSizeArgs</CODE>
 structure will contain the object's initial size.</P>
<P CLASS="refField">
Interception:	Generally not intercepted.</P>


<H5 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_SET_INITIAL_SIZE">
 </A>
MSG_GEN_SET_INITIAL_SIZE</H5>
<PRE CLASS="syntax">void	MSG_GEN_SET_INITIAL_SIZE(@stack
        byte		updateMode,
        word		count,
        word		height,				/* SpecHeight */
        word		width);				/* SpecWidth */</PRE>
<P>
This message sets the initial size of a generic object (its size on being first built). This is only done by creating or modifying the hint <CODE>
HINT_INITIAL_SIZE</CODE>
; there is no guarantee that the specific UI will implement this message in the expected fashion. </P>
<P>
The message must pass a <CODE>
VisUpdateMode</CODE>
. This message will only affect the size of an object when it first opens; it will not modify the geometry of a currently built object. For the defined geometry to take effect on an already built object, the object must be set not usable and then set usable again.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any generic object.</P>
<P CLASS="refField">
Parameters:	<EM>
count</EM>
	The number of children (or zero, if not applicable).</P>
<DL>
<DT>
<EM>
height</EM>
</DT><DD>The height of each child.</DD>
<DT>
<EM>
width</EM>
</DT><DD>The width of the composite.</DD>
</DL>
<P CLASS="refField">
Interception:	Generally not intercepted.</P>


<H5 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_RESET_TO_INITIAL_SIZE">
 </A>
MSG_GEN_RESET_TO_INITIAL_SIZE</H5>
<PRE CLASS="syntax">void	MSG_GEN_RESET_TO_INITIAL_SIZE(
        VisUpdateMode		updateMode);</PRE>
<P>
This message forces the recipient and all of its children to be resized according to their initial size specifications. If the objects contain <CODE>
HINT_INITIAL_SIZE</CODE>
, they will be resized according to the hint; otherwise they will be resized according to their default geometry. This message is useful for activating sizes set with <CODE>
MSG_GEN_SET_INITIAL_SIZE</CODE>
.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any GS_USABLE generic object.</P>
<P CLASS="refField">
Parameters:	<EM>
updateMode</EM>
	<CODE>
VisUpdateMode</CODE>
 to determine when the object will be redrawn.</P>
<P CLASS="refField">
Interception:	Generally not intercepted.</P>


<H5 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_GET_MINIMUM_SIZE">
 </A>
MSG_GEN_GET_MINIMUM_SIZE</H5>
<PRE CLASS="syntax">void	MSG_GEN_GET_MINIMUM_SIZE(
        GetSizeArgs  *minSize);</PRE>
<P>
<A NAME="IX_HINT_MINIMUM_SIZE">
 </A>
This message retrieves the recipient's minimum size specifications stored in the hint <CODE>
HINT_MINIMUM_SIZE</CODE>
. If <CODE>
HINT_MINIMUM_SIZE</CODE>
 is not set<CODE>
, </CODE>
the structure passed to the object will remain empty.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any generic object.</P>
<P CLASS="refField">
Parameters:	<EM>
minSize</EM>
	A pointer to an empty <CODE>
GetSizeArgs</CODE>
 structure.</P>
<P CLASS="refField">
Return:	The <CODE>
GetSizeArgs</CODE>
 structure will contain the object's minimum size.</P>
<P CLASS="refField">
Interception:	Generally not intercepted.</P>


<H5 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_SET_MINIMUM_SIZE">
 </A>
MSG_GEN_SET_MINIMUM_SIZE</H5>
<PRE CLASS="syntax">void	MSG_GEN_SET_MINIMUM_SIZE(@stack
        byte	updateMode,
        word	count,
        word	height,				/* SpecHeight */
        word	width);				/* SpecWidth */</PRE>
<P>
This message sets the minimum allowable size of an object. An object with a minimum size is not allowed to shrink smaller than the bounds set in <CODE>
HINT_MINIMUM_SIZE</CODE>
. This message alters the minimum size by creating or modifying the hint <CODE>
HINT_MINIMUM_SIZE</CODE>
. Due to the nature of hints, there is no guarantee that the specific UI will implement this message in the expected fashion. </P>
<P>
This message will modify the geometry of a currently built object, forcing that object to be unbuilt and then built again. Note that the minimum size of an object has nothing to do with the minimized state of an object (for GenDisplays, the iconification of an object) but merely the minimum allowable size of an object in its normal usable state.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any generic object.</P>
<P CLASS="refField">
Parameters:	<EM>
count</EM>
	The number of children (or zero, if not applicable).</P>
<DL>
<DT>
<EM>
height</EM>
</DT><DD>The height of each child.</DD>
<DT>
<EM>
width</EM>
</DT><DD>The width of the composite.</DD>
</DL>
<P CLASS="refField">
Interception:	Generally not intercepted.</P>


<H5 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_GET_MAXIMUM_SIZE">
 </A>
MSG_GEN_GET_MAXIMUM_SIZE</H5>
<PRE CLASS="syntax">void	MSG_GEN_GET_MAXIMUM_SIZE(
        GetSizeArgs  *maxSize);</PRE>
<P>
<A NAME="IX_HINT_MAXIMUM_SIZE">
 </A>
This message retrieves the recipient's maximum size stored in the hint <CODE>
HINT_MAXIMUM_SIZE</CODE>
. If <CODE>
HINT_MAXIMUM_SIZE</CODE>
 is not set<CODE>
, </CODE>
the structure passed will remain empty.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any generic object.</P>
<P CLASS="refField">
Parameters:	<EM>
maxSize</EM>
	A pointer to an empty <CODE>
GetSizeArgs</CODE>
 structure.</P>
<P CLASS="refField">
Return:	The <CODE>
GetSizeArgs</CODE>
 structure will contain the object's maximum size.</P>
<P CLASS="refField">
Interception:	Generally not intercepted.</P>


<H5 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_SET_MAXIMUM_SIZE">
 </A>
MSG_GEN_SET_MAXIMUM_SIZE</H5>
<PRE CLASS="syntax">void	MSG_GEN_SET_MAXIMUM_SIZE(
        word	count,
        word	height,				/* SpecHeight */
        word	width);				/* SpecWidth */</PRE>
<P>
This message sets the maximum allowable size of an object. An object with a maximum size is not allowed to grow larger than the bounds set with <CODE>
HINT_MAXIMUM_SIZE</CODE>
. This message alters the maximum size by creating or modifying the hint <CODE>
HINT_MAXIMUM_SIZE</CODE>
. Due to the nature of hints, there is no guarantee that the specific UI will implement this message in the expected fashion.</P>
<P>
This message will modify the geometry of a currently built object, forcing that object to be unbuilt and then built again. Note that the maximum size of an object has nothing to do with the maximized state of an object but merely the maximum allowable size of an object in its normal usable state.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any generic object.</P>
<P CLASS="refField">
Parameters:	<EM>
count</EM>
	The number of children (or zero, if not applicable).</P>
<DL>
<DT>
<EM>
height</EM>
</DT><DD>The height of each child.</DD>
<DT>
<EM>
width</EM>
</DT><DD>The width of the composite.</DD>
</DL>
<P CLASS="refField">
Interception:	Generally not intercepted.</P>


<H5 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_GET_FIXED_SIZE">
 </A>
MSG_GEN_GET_FIXED_SIZE</H5>
<PRE CLASS="syntax">void	MSG_GEN_GET_FIXED_SIZE(
        GetSizeArgs *fixedSize);</PRE>
<P>
<A NAME="IX_HINT_FIXED_SIZE">
 </A>
This message retrieves the size stored in <CODE>
HINT_FIXED_SIZE</CODE>
. If <CODE>
HINT_FIXED_SIZE</CODE>
 is not set, the structure passed will remain empty.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any generic object.</P>
<P CLASS="refField">
Parameters:	<EM>
fixedSize</EM>
	A pointer to an empty <CODE>
GetSizeArgs</CODE>
 structure.</P>
<P CLASS="refField">
Return:	The <CODE>
GetSizeArgs</CODE>
 structure will contain the object's fixed size.</P>
<P CLASS="refField">
Interception:	Generally not intercepted.</P>


<H5 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_SET_FIXED_SIZE">
 </A>
MSG_GEN_SET_FIXED_SIZE</H5>
<PRE CLASS="syntax">void	MSG_GEN_SET_FIXED_SIZE(
        word	count,
        word	height,				/* SpecHeight */
        word	width);				/* SpecWidth */</PRE>
<P>
This message sets the fixed size of an object. An object with a fixed size is forced to remain at the size set with <CODE>
HINT_FIXED_SIZE</CODE>
. This message alters this fixed size by creating or modifying <CODE>
HINT_FIXED_SIZE</CODE>
. Due to the nature of hints, there is no guarantee that the specific UI will implement this message in the expected fashion. </P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any generic object.</P>
<P CLASS="refField">
Parameters:	<EM>
count</EM>
	The number of children (or zero, if not applicable).</P>
<DL>
<DT>
<EM>
height</EM>
</DT><DD>The height of each child.</DD>
<DT>
<EM>
width</EM>
</DT><DD>The width of the composite.</DD>
</DL>
<P CLASS="refField">
Interception:	Generally not intercepted.</P>

<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="GenClass_1b.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">8 Visual Refreshing</A> 
<!-- to next --> | <A HREF="GenClass_1d.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">10 Activation Messages</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
