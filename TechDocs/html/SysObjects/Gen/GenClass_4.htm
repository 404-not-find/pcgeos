<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: GenClass_4.htm,v 1.1 97/06/02 16:13:39 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Vardata</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="subsectionTitle">
<A HREF="index.htm">GenClass</A>: 2.2 <A HREF="GenClass_2.htm">GenClass Instance Data</A>: 
Vardata</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="GenClass_2.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="GenClass_3.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">2.1 Instance Fields</A> 
<!-- to next --> | <A HREF="GenClass_5.htm"><IMG SRC="../../docImages/nextUp.gif" BORDER="0" ALT="Next: ">3 GenClass Basics</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<P>
<CODE>
GenClass</CODE>
 provides a multitude of pre-defined vardata instance fields. You may add these vardata entries to a generic object directly within its object declaration. Vardata instance fields perform several key roles for a generic object. Specifically, they provide two distinct uses:</P>
<UL>
<LI>
hints to the specific UI on its implementation of an object. Hints always appear in the form HINT_<EM>hintname</EM>. </LI>
<LI>
an attribute data storage area considered part of an object's state data (which may therefore be saved to state). Vardata storage areas act as attributes attached to an object if they are explicitly declared within the object declaration. These data appear in the form ATTR_<EM>attributename</EM>. These data act in much the same way as fixed instance fields.</LI>
</UL>
<P>
Any of these data may be accessed and altered using object system routines. For more information, see <A HREF="../../Programming/GOCLanguage/index.htm">the GEOS Programming chapter</A>.</P>
<H2 CLASS="HeadingC">
Vardata Attributes</H2>
<P>
Vardata attributes may contain the same functionality as other instance fields. Variable attributes, however, will only be allocated space within an object declaration if they are actually declared; instance data fields always take up space within an object, whether used or not. Therefore, vardata attributes are ideal for data that should only take up space if actually used. Vardata attributes are prefaced with <CODE>
ATTR_</CODE>
. Several ATTRs are included in <CODE>
GenClass</CODE>
. See <A HREF="GenClass_4.htm#35342"> ATTR vardata fields</A>
 for a complete list of these vardata attributes.</P>
<P CLASS="figTitle">
Code Display 2-2 <A NAME="35342">
 </A>
ATTR vardata fields</P>
<PRE>@vardata void 			ATTR_GEN_PROPERTY;
@vardata void 			ATTR_GEN_NOT_PROPERTY;</PRE>
<PRE>@vardata DestinationClassArgs				ATTR_GEN_DESTINATION_CLASS;
    @reloc ATTR_GEN_DESTINATION_CLASS, 0, optr;</PRE>
<PRE>@vardata char[]			ATTR_GEN_INIT_FILE_KEY;
@vardata char[]			ATTR_GEN_INIT_FILE_CATEGORY;
@vardata void			ATTR_GEN_INIT_FILE_PROPAGATE_TO_CHILDREN;
@vardata void			ATTR_GEN_USES_HIERARCHICAL_INIT_FILE_CATEGORY;</PRE>
<PRE>@vardata Point			ATTR_GEN_POSITION;
@vardata sword			ATTR_GEN_POSITION_X;
@vardata sword			ATTR_GEN_POSITION_Y;</PRE>
<PRE>@vardata void			ATTR_GEN_SEND_APPLY_MSG_ON_APPLY_EVEN_IF_NOT_MODIFIED;
@vardata void			ATTR_GEN_SEND_APPLY_MSG_ON_APPLY_EVEN_IF_NOT_ENABLED;</PRE>
<PRE>@vardata dword			ATTR_GEN_VISIBILITY_DATA;
@vardata word			ATTR_GEN_VISIBILITY_MESSAGE;
@vardata optr			ATTR_GEN_VISIBILITY_DESTINATION;
    @reloc ATTR_GEN_VISIBILITY_DESTINATION, 0, optr;</PRE>
<PRE>@vardata GenFilePath			ATTR_GEN_PATH_DATA;</PRE>
<PRE>@vardata ChunkHandle			ATTR_GEN_FEATURE_LINK;</PRE>
<PRE>@vardata GenDefaultMonikerType ATTR_GEN_DEFAULT_MONIKER;</PRE>
<PRE>@vardata optr 			ATTR_GEN_OUTPUT_TRAVEL_START;
    @reloc ATTR_GEN_OUTPUT_TRAVEL_START, 0, optr;</PRE>
<PRE>/* Generic Help attributes */</PRE>
<PRE>@vardata char[]			ATTR_GEN_HELP_FILE;
@vardata byte			ATTR_GEN_HELP_TYPE;
@vardata void			ATTR_GEN_HELP_FILE_FROM_INIT_FILE;
@vardata optr			ATTR_GEN_FOCUS_HELP;
@vardata optr			ATTR_GEN_FOCUS_HELP_LIB;
    @reloc ATTR_GEN_FOCUS_HELP_LIB, 0, optr;
@vardata char[]			ATTR_GEN_HELP_CONTEXT;</PRE>
<PRE>/* Generic Window attributes */</PRE>
<PRE>@vardata MemHandle			ATTR_GEN_WINDOW_CUSTOM_LAYER_ID;
    @reloc ATTR_GEN_WINDOW_CUSTOM_LAYER_ID, 0, optr;
@vardata WinPriority			ATTR_GEN_WINDOW_CUSTOM_WINDOW_PRIORITY;
@vardata LayerPriority			ATTR_GEN_WINDOW_CUSTOM_LAYER_PRIORITY;
@vardata MemHandle			ATTR_GEN_WINDOW_CUSTOM_PARENT;
@vardata void			ATTR_GEN_CUSTOM_WINDOW;
@vardata void			ATTR_GEN_WINDOW_ACCEPT_INK_EVEN_IF_NOT_FOCUSED;
@vardata KeyboardOverride ATTR_GEN_WINDOW_KBD_OVERRIDE;
@vardata Point			ATTR_GEN_WINDOW_KDB_POSITION;</PRE>
<P>
ATTR_GEN_PROPERTY<A NAME="IX_ATTR_GEN_NOT_PROPERTY">
 </A>
<A NAME="IX_ATTR_GEN_PROPERTY">
 </A>
<CODE>
 and </CODE>
ATTR_GEN_NOT_PROPERTY<CODE>
 affect a generic object's ability to behave as a properties group. These attributes override the property group's default behavior. For more information, see <A HREF="GenClass_14.htm#42380"> Generic Properties</A>
.</CODE>
</P>
<P>
<CODE>
ATTR_GEN_DESTINATION_CLASS</CODE>
<A NAME="IX_Destination class">
 </A>
 specifies an object class that should handle all messages sent out along a destination path. The type <CODE>
DestinationClassArgs</CODE>
 contains a pointer to a <CODE>
ClassStruct</CODE>
. Typically, this attribute is used with a <CODE>
TravelOption</CODE>
 destination to form a search path. The message for that generic object travels down a path specified in the <CODE>
TravelOption</CODE>
 until it encounters an object class of type <CODE>
ATTR_GEN_DESTINATION_CLASS</CODE>
; at that point, the message will be handled. For more information, see <A HREF="GenClass_14.htm#95328"> Destination Classes</A>
.</P>
<P>
<CODE>
ATTR_GEN_INIT_FILE_KEY</CODE>
<A NAME="IX_ATTR_GEN_USES_HIERARCHICAL_INIT_FILE_CATEGORY">
 </A>
<A NAME="IX_ATTR_GEN_INIT_FILE_PROPAGATE_TO_CHILDREN">
 </A>
<A NAME="IX_ATTR_GEN_INIT_FILE_CATEGORY">
 </A>
<A NAME="IX_ATTR_GEN_INIT_FILE_KEY">
 </A>
, <CODE>
ATTR_GEN_INIT_FILE_CATEGORY</CODE>
, <CODE>
ATTR_GEN_INIT_FILE_PROPAGATE_TO_CHILDREN</CODE>
, and ATTR_GEN_USES_HIERARCHICAL_INIT_FILE_CATEGORY allow a generic object to load options from the .INI file upon startup (after receiving a <CODE>
MSG_META_ATTACH</CODE>
). Generic objects with these attributes will receive a <CODE>
MSG_GEN_LOAD_OPTIONS</CODE>
 (with the category and key of the proper entry in the .INI file) and may intercept that message to provide additional behavior. For more information, see <A HREF="GenClass_14.htm#11206"> Initialization File Management</A>
.</P>
<P>
<CODE>
ATTR_GEN_POSITION</CODE>
<A NAME="IX_ATTR_GEN_POSITION_Y">
 </A>
<A NAME="IX_ATTR_GEN_POSITION_X">
 </A>
<A NAME="IX_ATTR_GEN_POSITION">
 </A>
, <CODE>
ATTR_GEN_POSITION_X</CODE>
, and <CODE>
ATTR_GEN_POSITION_Y</CODE>
 override default geometry management of an object and set a precise position for the object to appear within the UI, offset from the parent object. ATTR_GEN_POSITION specifies both a horizontal and a vertical position to place the object. ATTR_GEN_POSITION_X and ATTR_GEN_POSITION_Y specify either a horizontal or vertical position to align the object along. You should avoid using these attributes because they override default behavior and may result in different (and potentially unsightly) appearances under different specific UIs. For more information, see <A HREF="GenClass_14.htm#95545"> Altering Default Geometry Management</A>
.</P>
<P>
<CODE>
ATTR_GEN_SEND_APPLY_MSG_ON_APPLY_EVEN_IF_NOT_MODIFIED</CODE>
<A NAME="IX_ATTR_GEN_SEND_APPLY_MSG_ON_APPLY_EVEN_IF_NOT_ENABLED">
 </A>
<A NAME="IX_ATTR_GEN_SEND_APPLY_MSG_ON_APPLY_EVEN_IF_NOT_MODIFIED">
 </A>
 and <CODE>
ATTR_GEN_SEND_APPLY_MSG_ON_APPLY_EVEN_IF_NOT_ENABLED</CODE>
 affect generic objects that contain an apply message--a message that an object sends out when it wishes to apply changes made within that object. By default, an apply message will not be sent out if the object's state has not changed since the last apply or if the object is not enabled; these attributes tell the object to send out its apply message regardless of these conditions. For more information, see <A HREF="GenClass_14.htm#52019"> Altering Delayed Mode Activity</A>
.</P>
<P>
<CODE>
ATTR_GEN_VISIBILITY_DATA</CODE>
<A NAME="IX_ATTR_GEN_VISIBILITY_DESTINATION">
 </A>
<A NAME="IX_ATTR_GEN_VISIBILITY_MESSAGE">
 </A>
<A NAME="IX_ATTR_GEN_VISIBILITY_DATA">
 </A>
, <CODE>
ATTR_GEN_VISIBILITY_MESSAGE</CODE>
, and <CODE>
ATTR_GEN_VISIBILITY_DESTINATION</CODE>
 set the data, message or destination to use with the visibility notification mechanism in <CODE>
GenClass</CODE>
. The visibility mechanism allows an application to know when an object becomes visible and not visible. An object provides this notification if its GA_NOTIFY_VISIBILITY bit is set. For more information, see <A HREF="GenClass_14.htm#18848"> Notification of Visibility</A>
.</P>
<P>
<CODE>
ATTR_GEN_PATH_DATA</CODE>
<A NAME="IX_ATTR_GEN_PATH_DATA">
 </A>
 stores an object's generic path information in the form of a <CODE>
GenFilePath</CODE>
 structure. This structure contains disk and path information including path name and file name; generic objects can use this attribute to store current or default paths and files. For more information, see <A HREF="GenClass_14.htm#64105"> Generic Paths</A>
.</P>
<P>
<CODE>
ATTR_GEN_FEATURE_LINK</CODE>
<A NAME="IX_ATTR_GEN_FEATURE_LINK">
 </A>
 contains a link to the next feature used by the GenControl mechanism when a controller's features map to multiple objects. It is unlikely you will use this attribute. For more information, see <A HREF="GenClass_14.htm#65875"> Feature Links</A>
.</P>
<P>
ATTR_GEN_DEFAULT_MONIKER<A NAME="IX_ATTR_GEN_DEFAULT_MONIKER">
 </A>
 specifies a default moniker for a generic object. This is generally used for graphic monikers that occur several places within the system. For more information, see <A HREF="GenClass_14.htm#20719"> Default Monikers</A>
.</P>
<P>
ATTR_GEN_OUTPUT_TRAVEL_START<A NAME="IX_MSG_GEN_OUTPUT_ACTION">
 </A>
<A NAME="IX_ATTR_GEN_OUTPUT_TRAVEL_START">
 </A>
 allows you to set a specific object to begin the <CODE>
TravelOption</CODE>
. Normally, objects that contain a <CODE>
TravelOption</CODE>
 in their destination field use their own object as the point of reference for sending messages along travel paths. (I.e sending a message TO_FOCUS would send a message along the focus path, starting at the sending object.) This can be used for optimization purposes, enabling you to skip several layers of hierarchies.</P>
<P>
ATTR_GEN_HELP_FILE<A NAME="IX_ATTR_GEN_HELP_CONTEXT">
 </A>
<A NAME="IX_ATTR_GEN_FOCUS_HELP_LIB">
 </A>
<A NAME="IX_ATTR_GEN_FOCUS_HELP">
 </A>
<A NAME="IX_ATTR_GEN_HELP_FILE_FROM_INIT_FILE">
 </A>
<A NAME="IX_ATTR_GEN_HELP_TYPE">
 </A>
<A NAME="IX_ATTR_GEN_HELP_FILE">
 </A>
, ATTR_GEN_HELP_TYPE, ATTR_GEN_HELP_FILE_FROM_INIT_FILE, ATTR_GEN_FOCUS_HELP, ATTR_GEN_FOCUS_HELP_LIB, and ATTR_GEN_HELP_CONTEXT specify the configuration of the help files for a generic object. Focus help starts help notification when the generic object gains the focus. For more information on Help files, see <A HREF="GenClass_14.htm#81506"> Help Management</A>
.</P>
<P>
ATTR_GEN_WINDOW_CUSTOM_LAYER_ID<A NAME="IX_ATTR_GEN_WINDOW_KBD_POSITION">
 </A>
<A NAME="IX_ATTR_GEN_WINDOW_KBD_OVERRIDE">
 </A>
<A NAME="IX_ATTR_GEN_WINDOW_ACCEPT_INK_EVEN_IF_NOT_FOCUSED">
 </A>
<A NAME="IX_ATTR_GEN_CUSTOM_WINDOW">
 </A>
<A NAME="IX_ATTR_GEN_WINDOW_CUSTOM_PARENT">
 </A>
<A NAME="IX_ATTR_GEN_WINDOW_CUSTOM_LAYER_PRIORITY">
 </A>
<A NAME="IX_ATTR_GEN_WINDOW_CUSTOM_WINDOW_PRIORITY">
 </A>
<A NAME="IX_ATTR_GEN_WINDOW_CUSTOM_LAYER_ID">
 </A>
, ATTR_GEN_WINDOW_CUSTOM_WINDOW_PRIORITY, ATTR_GEN_WINDOW_CUSTOM_LAYER_PRIORITY, ATTR_GEN_WINDOW_CUSTOM_PARENT, and ATTR_GEN_CUSTOM_WINDOW specify a window's interaction and place within the window system. ATTR_GEN_WINDOW_ACCEPT_INK_EVEN_IF_NOT_FOCUSED, ATTR_GEN_WINDOW_KBD_OVERRIDE, and ATTR_GEN_WINDOW_KBD_POSITION affect how input flows within a generic window. For more information, see <A HREF="GenClass_14.htm#59456"> Window Management</A>
.</P>


<H2 CLASS="HeadingC">
Hints</H2>
<P>
Hints to the specific UI suggest added functionality to your application, and are prefaced with <CODE>
HINT_</CODE>
 (such as <CODE>
HINT_SEEK_REPLY_BAR</CODE>
). Hints may also have data structures attached to them. There are a large number of pre-defined hints with <CODE>
GenClass</CODE>
. See <A HREF="GenClass_15.htm#68134"> Hints to the Specific UI</A>
 for details on the operation of hints.</P>
<P>
Many of the hints provided in <CODE>
GenClass</CODE>
 manage the geometry of generic objects. For complete information on these hints, see <A HREF="../../UI/Geometry/index.htm">the Managing UI Geometry chapter</A>.</P><P CLASS="figTitle">
Code Display 2-3 Geometry Hints</P>
<PRE><A NAME="IX_Geometry:list of generic hints"> </A>/* These hints are explained within the Geometry Management chapter. */</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_DONT_ALLOW_CHILDREN_TO_WRAP"> </A>HINT_DONT_ALLOW_CHILDREN_TO_WRAP;
@vardata void			<A NAME="IX_HINT_ALLOW_CHILDREN_TO_WRAP"> </A>HINT_ALLOW_CHILDREN_TO_WRAP;
@vardata word			<A NAME="IX_HINT_WRAP_AFTER_CHILD_COUNT"> </A>HINT_WRAP_AFTER_CHILD_COUNT;
@vardata word			<A NAME="IX_HINT_WRAP_AFTER_CHILD_COUNT_IF_VERTICAL_SCREEN"> </A>HINT_WRAP_AFTER_CHILD_COUNT_IF_VERTICAL_SCREEN;</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_BOTTOM_JUSTIFY_CHILDREN"> </A>HINT_BOTTOM_JUSTIFY_CHILDREN;
@vardata void			<A NAME="IX_HINT_LEFT_JUSTIFY_CHILDREN"> </A>HINT_LEFT_JUSTIFY_CHILDREN;
@vardata void			<A NAME="IX_HINT_RIGHT_JUSTIFY_CHILDREN"> </A>HINT_RIGHT_JUSTIFY_CHILDREN;
@vardata void			<A NAME="IX_HINT_TOP_JUSTIFY_CHILDREN"> </A>HINT_TOP_JUSTIFY_CHILDREN;</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_FULL_JUSTIFY_CHILDREN_HORIZONTALLY"> </A>HINT_FULL_JUSTIFY_CHILDREN_HORIZONTALLY;
@vardata void			<A NAME="IX_HINT_FULL_JUSTIFY_CHILDREN_VERTICALLY"> </A>HINT_FULL_JUSTIFY_CHILDREN_VERTICALLY;
@vardata void			<A NAME="IX_HINT_DONT_FULL_JUSTIFY_CHILDREN"> </A>HINT_DONT_FULL_JUSTIFY_CHILDREN;</PRE>
<PRE>@vardata SpecSizeSpec			<A NAME="IX_HINT_CUSTOM_CHILD_SPACING"> </A>HINT_CUSTOM_CHILD_SPACING;
@vardata SpecSizeSpec			<A NAME="IX_HINT_CUSTOM_CHILD_SPACING_IF_LIMITED_SPACE"> </A>HINT_CUSTOM_CHILD_SPACING_IF_LIMITED_SPACE;
@vardata void			<A NAME="IX_HINT_DONT_INCLUDE_ENDS_IN_CHILD_SPACING"> </A>HINT_DONT_INCLUDE_ENDS_IN_CHILD_SPACING;
@vardata void			<A NAME="IX_HINT_INCLUDE_ENDS_IN_CHILD_SPACING"> </A>HINT_INCLUDE_ENDS_IN_CHILD_SPACING;
@vardata void 			<A NAME="IX_HINT_MINIMIZE_CHILD_SPACING"> </A>HINT_MINIMIZE_CHILD_SPACING;</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_LEFT_JUSTIFY_MONIKERS"> </A>HINT_LEFT_JUSTIFY_MONIKERS;
@vardata void			<A NAME="IX_HINT_CENTER_MONIKER"> </A>HINT_CENTER_MONIKER;
@vardata void			<A NAME="IX_HINT_DO_NOT_USE_MONIKER"> </A>HINT_DO_NOT_USE_MONIKER;
@vardata void			<A NAME="IX_HINT_ALIGN_LEFT_MONIKER_EDGE_WITH_CHILD"> </A>HINT_ALIGN_LEFT_MONIKER_EDGE_WITH_CHILD;</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_CENTER_CHILDREN_HORIZONTALLY"> </A>HINT_CENTER_CHILDREN_HORIZONTALLY;
@vardata void			<A NAME="IX_HINT_CENTER_CHILDREN_ON_MONIKERS"> </A>HINT_CENTER_CHILDREN_ON_MONIKERS;
@vardata void			<A NAME="IX_HINT_CENTER_CHILDREN_VERTICALLY"> </A>HINT_CENTER_CHILDREN_VERTICALLY;</PRE>
<PRE>@vardata optr			<A NAME="IX_HINT_ALIGN_LEFT_EDGE_WITH_OBJECT"> </A>HINT_ALIGN_LEFT_EDGE_WITH_OBJECT;
    @reloc HINT_ALIGN_LEFT_EDGE_WITH_OBJECT, 0, optr;
@vardata optr			<A NAME="IX_HINT_ALIGN_TOP_EDGE_WITH_OBJECT"> </A>HINT_ALIGN_TOP_EDGE_WITH_OBJECT;
    @reloc HINT_ALIGN_TOP_EDGE_WITH_OBJECT, 0, optr;
@vardata optr			<A NAME="IX_HINT_ALIGN_RIGHT_EDGE_WITH_OBJECT"> </A>HINT_ALIGN_RIGHT_EDGE_WITH_OBJECT;
    @reloc HINT_ALIGN_RIGHT_EDGE_WITH_OBJECT, 0, optr;
@vardata optr			<A NAME="IX_HINT_ALIGN_BOTTOM_EDGE_WITH_OBJECT"> </A>HINT_ALIGN_BOTTOM_EDGE_WITH_OBJECT;
    @reloc HINT_ALIGN_BOTTOM_EDGE_WITH_OBJECT, 0, optr;</PRE>
<PRE>@vardata CompSizeHintArgs			<A NAME="IX_HINT_FIXED_SIZE"> </A>HINT_FIXED_SIZE;
@vardata CompSizeHintArgs	<A NAME="IX_HINT_INITIAL_SIZE"> </A>		HINT_INITIAL_SIZE;
@vardata CompSizeHintArgs	<A NAME="IX_HINT_MAXIMUM_SIZE"> </A>		HINT_MAXIMUM_SIZE;
@vardata CompSizeHintArgs	<A NAME="IX_HINT_MINIMUM_SIZE"> </A>		HINT_MINIMUM_SIZE;
@vardata void			<A NAME="IX_HINT_SIZE_WINDOW_AS_DESIRED"> </A>HINT_SIZE_WINDOW_AS_DESIRED;</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_DRAW_IN_BOX"> </A>HINT_DRAW_IN_BOX;</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_EXPAND_HEIGHT_TO_FIT_PARENT"> </A>HINT_EXPAND_HEIGHT_TO_FIT_PARENT;
@vardata void			<A NAME="IX_HINT_EXPAND_WIDTH_TO_FIT_PARENT"> </A>HINT_EXPAND_WIDTH_TO_FIT_PARENT;</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_MAKE_REPLY_BAR"> </A>HINT_MAKE_REPLY_BAR;</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_NO_TALLER_THAN_CHILDREN_REQUIRE"> </A>HINT_NO_TALLER_THAN_CHILDREN_REQUIRE;
@vardata void			<A NAME="IX_HINT_NO_WIDER_THAN_CHILDREN_REQUIRE"> </A>HINT_NO_WIDER_THAN_CHILDREN_REQUIRE;</PRE>
<PRE>@vardata void			HINT_ORIENT_CHILDREN_HORIZONTALLY;
@vardata void			<A NAME="IX_HINT_ORIENT_CHILDREN_VERTICALLY"> </A>HINT_ORIENT_CHILDREN_VERTICALLY;
@vardata void			<A NAME="IX_HINT_ORIENT_CHILDREN_ALONG_LARGER_DIMENSION"> </A>HINT_ORIENT_CHILDREN_ALONG_LARGER_DIMENSION;
@vardata void			<A NAME="IX_HINT_SAME_ORIENTATION_AS_PARENT"> </A>HINT_SAME_ORIENTATION_AS_PARENT;</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_PLACE_MONIKER_ABOVE"> </A>HINT_PLACE_MONIKER_ABOVE;
@vardata void			<A NAME="IX_HINT_PLACE_MONIKER_BELOW"> </A>HINT_PLACE_MONIKER_BELOW;
@vardata void			<A NAME="IX_HINT_PLACE_MONIKER_TO_LEFT"> </A>HINT_PLACE_MONIKER_TO_LEFT;
@vardata void			<A NAME="IX_HINT_PLACE_MONIKER_TO_RIGHT"> </A>HINT_PLACE_MONIKER_TO_RIGHT;
@vardata void			<A NAME="IX_HINT_PLACE_MONIKER_ALONG_LARGER_DIMENSION"> </A>HINT_PLACE_MONIKER_ALONG_LARGER_DIMENSION;
@vardata void			HINT_NO_BORDER_ON_MONIKERS</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_SEEK_MENU_BAR"> </A>HINT_SEEK_MENU_BAR;
@vardata void			<A NAME="IX_HINT_AVOID_MENU_BAR"> </A>HINT_AVOID_MENU_BAR;</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_SEEK_REPLY_BAR"> </A>HINT_SEEK_REPLY_BAR;</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_SEEK_X_SCROLLER_AREA"> </A>HINT_SEEK_X_SCROLLER_AREA;
@vardata void			<A NAME="IX_HINT_SEEK_Y_SCROLLER_AREA"> </A>HINT_SEEK_Y_SCROLLER_AREA;</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_SEEK_LEFT_OF_VIEW"> </A>HINT_SEEK_LEFT_OF_VIEW;
@vardata void			<A NAME="IX_HINT_SEEK_TOP_OF_VIEW"> </A>HINT_SEEK_TOP_OF_VIEW;
@vardata void			<A NAME="IX_HINT_SEEK_RIGHT_OF_VIEW"> </A>HINT_SEEK_RIGHT_OF_VIEW;
@vardata void			<A NAME="IX_HINT_SEEK_BOTTOM_OF_VIEW"> </A>HINT_SEEK_BOTTOM_OF_VIEW;</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_SEEK_TITLE_BAR_LEFT"> </A>HINT_SEEK_TITLE_BAR_LEFT;
@vardata void			<A NAME="IX_HINT_SEEK_TITLE_BAR_RIGHT"> </A>HINT_SEEK_TITLE_BAR_RIGHT;</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_USE_INITIAL_BOUNDS_WHEN_RESTORED"> </A>HINT_USE_INITIAL_BOUNDS_WHEN_RESTORED;</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_DIVIDE_WIDTH_EQUALLY"> </A>HINT_DIVIDE_WIDTH_EQUALLY;
@vardata void			<A NAME="IX_HINT_DIVIDE_HEIGHT_EQUALLY"> </A>HINT_DIVIDE_HEIGHT_EQUALLY;</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_KEEP_INITIALLY_ONSCREEN"> </A>HINT_KEEP_INITIALLY_ONSCREEN;
@vardata void			<A NAME="IX_HINT_DONT_KEEP_INITIALLY_ONSCREEN"> </A>HINT_DONT_KEEP_INITIALLY_ONSCREEN;
@vardata void			<A NAME="IX_HINT_KEEP_PARTIALLY_ONSCREEN"> </A>HINT_KEEP_PARTIALLY_ONSCREEN;
@vardata void			<A NAME="IX_HINT_DONT_KEEP_PARTIALLY_ONSCREEN"> </A>HINT_DONT_KEEP_PARTIALLY_ONSCREEN;
@vardata void			<A NAME="IX_HINT_KEEP_ENTIRELY_ONSCREEN"> </A>HINT_KEEP_ENTIRELY_ONSCREEN;
@vardata void			<A NAME="IX_HINT_KEEP_ENTIRELY_ONSCREEN_WITH_MARGIN"> </A>HINT_KEEP_ENTIRELY_ONSCREEN_WITH_MARGIN;</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_POPS_UP_TO_RIGHT"> </A>HINT_POPS_UP_TO_RIGHT;
@vardata void			<A NAME="IX_HINT_POPS_UP_BELOW"> </A>HINT_POPS_UP_BELOW;</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_NOT_MOVABLE"> </A>HINT_NOT_MOVABLE;</PRE>
<PRE>@vardata SpecWinSizePair			<A NAME="IX_HINT_POSITION_WINDOW_AT_RATIO_OF_PARENT"> </A>HINT_POSITION_WINDOW_AT_RATIO_OF_PARENT;
@vardata void			<A NAME="IX_HINT_POSITION_WINDOW_AT_MOUSE"> </A>HINT_POSITION_WINDOW_AT_MOUSE;</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_WINDOW_NO_TITLE_BAR"> </A>HINT_WINDOW_NO_TITLE_BAR;
@vardata void			<A NAME="IX_HINT_WINDOW_NO_SYS_MENU"> </A>HINT_WINDOW_NO_SYS_MENU;
@vardata void			HINT_WINDOW_MINIMIZE_TITLE_BAR;
@vardata void			HINT_WINDOW_ALWAYS_DRAW_WITH_FOCUS;</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_STAGGER_WINDOW"> </A>HINT_STAGGER_WINDOW;
@vardata void			<A NAME="IX_HINT_CENTER_WINDOW"> </A>HINT_CENTER_WINDOW;
@vardata void			<A NAME="IX_HINT_TILE_WINDOW"> </A>HINT_TILE_WINDOW;</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_EXTEND_WINDOW_TO_BOTTOM_RIGHT"> </A>HINT_EXTEND_WINDOW_TO_BOTTOM_RIGHT;
@vardata void			<A NAME="IX_HINT_EXTEND_WINDOW_NEAR_BOTTOM_RIGHT"> </A>HINT_EXTEND_WINDOW_NEAR_BOTTOM_RIGHT;</PRE>
<PRE>@vardata SpecWinSizePair			<A NAME="IX_HINT_SIZE_WINDOW_AS_RATIO_OF_PARENT"> </A>HINT_SIZE_WINDOW_AS_RATIO_OF_PARENT;
@vardata SpecWinSizePair			<A NAME="IX_HINT_SIZE_WINDOW_AS_RATIO_OF_FIELD"> </A>HINT_SIZE_WINDOW_AS_RATIO_OF_FIELD;
@vardata void			<A NAME="IX_HINT_WINDOW_NO_CONSTRAINTS"> </A>HINT_WINDOW_NO_CONSTRAINTS;</PRE>
<PRE>@vardata SpecWinSizePair			<A NAME="IX_HINT_POSITION_ICON_AS_RATIO_OF_FIELD"> </A>HINT_POSITION_ICON_AS_RATIO_OF_FIELD;</PRE>
<P>
Other hints in <CODE>
GenClass</CODE>
 do not affect geometry. These hints are listed below and are explained within this chapter. Within <CODE>
GenClass</CODE>
, some hints are internal and are not listed in this code display.</P>
<P CLASS="figTitle">
Code Display 2-4 Hints Explained Within This Chapter</P>
<PRE>/* These hints are explained within this chapter (or they are self-explanatory). */</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_FREQUENTLY_USED"> </A>HINT_FREQUENTLY_USED;
@vardata void			<A NAME="IX_HINT_INFREQUENTLY_USED"> </A>HINT_INFREQUENTLY_USED;
@vardata void			<A NAME="IX_HINT_AN_ADVANCED_FEATURE"> </A>HINT_AN_ADVANCED_FEATURE;</PRE>
<PRE>@vardata void			HINT_DEFAULT_DEFAULT_ACTION;
@vardata void			<A NAME="IX_HINT_ENSURE_TEMPORARY_DEFAULT"> </A>HINT_ENSURE_TEMPORARY_DEFAULT;
@vardata void			<A NAME="IX_HINT_PREVENT_DEFAULT_OVERRIDES"> </A>HINT_PREVENT_DEFAULT_OVERRIDES;</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_SAME_CATEGORY_AS_PARENT"> </A>HINT_SAME_CATEGORY_AS_PARENT;</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_USE_TEXT_MONIKER"> </A>HINT_USE_TEXT_MONIKER;
@vardata void			<A NAME="IX_HINT_USE_ICONIC_MONIKER"> </A>HINT_USE_ICONIC_MONIKER;</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_DEFAULT_FOCUS"> </A>HINT_DEFAULT_FOCUS;
@vardata void			<A NAME="IX_HINT_DEFAULT_TARGET"> </A>HINT_DEFAULT_TARGET;
@vardata void			<A NAME="IX_HINT_DEFAULT_MODEL"> </A>HINT_DEFAULT_MODEL;</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_PRESERVE_FOCUS"> </A>HINT_PRESERVE_FOCUS;
@vardata void			<A NAME="IX_HINT_DO_NOT_PRESERVE_FOCUS"> </A>HINT_DO_NOT_PRESERVE_FOCUS;</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_GENERAL_CONSUMER_MODE"> </A>HINT_GENERAL_CONSUMER_MODE;</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_NEVER_ADOPT_MENUS"> </A>HINT_NEVER_ADOPT_MENUS;
@vardata void			<A NAME="IX_HINT_ALWAYS_ADOPT_MENUS"> </A>HINT_ALWAYS_ADOPT_MENUS;</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_NAVIGATION_ID"> </A>HINT_NAVIGATION_ID;
@vardata void			<A NAME="IX_HINT_NAVIGATION_NEXT_ID"> </A>HINT_NAVIGATION_NEXT_ID</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_DISMISS_WHEN_DISABLED"> </A>HINT_DISMISS_WHEN_DISABLED;</PRE>
<PRE>@vardata void			HINT_TOOLBOX;</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_SHOW_SHORTCUT"> </A>HINT_SHOW_SHORTCUT;
@vardata void			<A NAME="IX_HINT_DONT_SHOW_SHORTCUT"> </A>HINT_DONT_SHOW_SHORTCUT;
@vardata void			HINT_DRAW_SHORTCUT_BELOW;</PRE>
<PRE>@vardata void			<A NAME="IX_HINT_CAN_CLIP_MONIKER_WIDTH"> </A>HINT_CAN_CLIP_MONIKER_WIDTH;
@vardata void			<A NAME="IX_HINT_CAN_CLIP_MONIKER_HEIGHT"> </A>HINT_CAN_CLIP_MONIKER_HEIGHT;
@vardata void			<A NAME="IX_HINT_SHOW_ENTIRE_MONIKER"> </A>HINT_SHOW_ENTIRE_MONIKER;</PRE>
<PRE>@vardata BackgroundColors				<A NAME="IX_HINT_GADGET_BACKGROUND_COLORS"> </A>HINT_GADGET_BACKGROUND_COLORS;
@vardata word			<A NAME="IX_HINT_GADGET_TEXT_COLOR"> </A>HINT_GADGET_TEXT_COLOR;</PRE>
<PRE>@vardata SystemAttrs			<A NAME="IX_HINT_IF_SYSTEM_ATTRS"> </A>HINT_IF_SYSTEM_ATTRS;
@vardata void			<A NAME="IX_HINT_ENDIF"> </A>HINT_ENDIF;
@vardata void			<A NAME="IX_HINT_ELSE"> </A>HINT_ELSE;</PRE>
<P>
HINT_FREQUENTLY_USED, HINT_INFREQUENTLY_USED, and HINT_AN_ADVANCED_FEATURE are descriptive hints that describe the generic object's role within the UI. It is, of course, left up to the specific UI to implement any special behavior based on these hints.<A NAME="IX_HINT_AN_ADVANCED_FEATURE">
 </A>
<A NAME="IX_HINT_INFREQUENTLY_USED">
 </A>
<A NAME="IX_HINT_FREQUENTLY_USED">
 </A>
</P>
<P>
HINT_DEFAULT_DEFAULT_ACTION<A NAME="IX_HINT_PREVENT_DEFAULT_OVERRIDES">
 </A>
<A NAME="IX_HINT_ENSURE_TEMPORARY_DEFAULT">
 </A>
<A NAME="IX_HINT_DEFAULT_DEFAULT_ACTION">
 </A>
, HINT_ENSURE_TEMPORARY_DEFAULT, and HINT_PREVENT_DEFAULT_OVERRIDES affect the default activation of objects within the UI. Objects with default activation can be activated indirectly (e.g., pressing the ENTER key within a dialog box activates a default trigger). For more information, see <A HREF="GenClass_15.htm#16416"> Default Actions</A>
.</P>
<P>
HINT_SAME_CATEGORY_AS_PARENT<A NAME="IX_HINT_SAME_CATEGORY_AS_PARENT">
 </A>
 indicates to the specific UI that this object should be treated in the same manner as its parent. Currently, this hint only affects GenInteractions. By default, GIV_SUB_GROUP GenInteractions within a GIV_POPUP menu have separator lines drawn around them to set them apart from other children. This hint removes those lines.</P>
<P>
HINT_USE_TEXT_MONIKER<A NAME="IX_HINT_USE_ICONIC_MONIKER">
 </A>
<A NAME="IX_HINT_USE_TEXT_MONIKER">
 </A>
 and HINT_USE_ICONIC_MONIKER indicates that the generic object should choose either a text moniker or an iconic moniker if there exists a choice within the object's moniker list. Currently, these hints are not implemented.</P>
<P>
HINT_DEFAULT_FOCUS<A NAME="IX_HINT_DEFAULT_MODEL">
 </A>
<A NAME="IX_HINT_DEFAULT_TARGET">
 </A>
<A NAME="IX_HINT_DEFAULT_FOCUS">
 </A>
, HINT_DEFAULT_TARGET, and HINT_DEFAULT_MODEL specify that the generic object is the default focus, target, or model node at this level in the application. HINT_PRESERVE_FOCUS<A NAME="IX_HINT_DO_NOT_PRESERVE_FOCUS">
 </A>
<A NAME="IX_HINT_PRESERVE_FOCUS">
 </A>
 and HINT_DO_NOT_PRESERVE_FOCUS affect how the focus node changes after an object's activation. For a complete discussion of the focus and target hierarchies, see <A HREF="../../SysObjects/Input/index.htm">the Input chapter</A>.</P><P>
HINT_GENERAL_CONSUMER_MODE<A NAME="IX_HINT_GENERAL_CONSUMER_MODE">
 </A>
 instructs the specific UI to show the object in GCM mode. This hint takes an argument of type <CODE>
GeneralConsumerModeFlags</CODE>
; this record contains two three-bit flags: GCMF_LEFT_ICON and GCMF_RIGHT_ICON, which specify which icon to use on both the left and right sides of the title bar. Each icon must be of type <CODE>
GCMIcon</CODE>
; current types are GCMI_NONE, GCMI_EXIT, and GCMI_HELP.</P>
<P>
HINT_NEVER_ADOPT_MENUS<A NAME="IX_HINT_ALWAYS_ADOPT_MENUS">
 </A>
<A NAME="IX_HINT_NEVER_ADOPT_MENUS">
 </A>
 and HINT_ALWAYS_ADOPT_MENUS affect the behavior of menus placed within a GenDisplay. Menus can either sit within the GenDisplay or appear in the associated GenPrimary when that GenDisplay is the target. Menus within GenDisplays are discouraged, however, as they are a fairly advanced UI metaphor.</P>
<P>
HINT_NAVIGATION_ID<A NAME="IX_HINT_NAVIGATION_NEXT_ID">
 </A>
<A NAME="IX_HINT_NAVIGATION_ID">
 </A>
 and HINT_NAVIGATION_NEXT_ID allow the field navigation path within a windowed object. HINT_NAVIGATION_NEXT_ID sets the object to navigate to from the current object. An object with a matching HINT_NAVIGATION_ID must exist. For more information, see <A HREF="GenClass_15.htm#42812"> Keyboard Navigation Hints</A>
.</P>
<P>
HINT_DISMISS_WHEN_DISABLED<A NAME="IX_HINT_DISMISS_WHEN_DISABLED">
 </A>
 instructs the specific UI to dismiss the object when it is no longer fully enabled. This is typically useful for independently-displayable windows that should be dismissed in such cases.</P>
<P>
HINT_TOOLBOX<A NAME="IX_HINT_TOOLBOX">
 </A>
 indicates that the generic object and all objects below it in the visual hierarchy are part of a &quot;toolbox&quot; and should draw themselves appropriately. Objects in toolboxes are typically much smaller than other components. For more information on toolboxes, see <A HREF="../../UI/GenInteraction/index.htm">the Menus and Dialogs chapter</A>.</P><P>
HINT_SHOW_SHORTCUT<A NAME="IX_HINT_DRAW_SHORTCUT_BELOW">
 </A>
<A NAME="IX_HINT_DONT_SHOW_SHORTCUT">
 </A>
<A NAME="IX_HINT_SHOW_SHORTCUT">
 </A>
, HINT_DONT_SHOW_SHORTCUT, and HINT_DRAW_SHORTCUT_BELOW affect the display of keyboard accelerators for generic objects. For more information, see <A HREF="GenClass_8.htm#77927"> Keyboard Accelerators</A>
.</P>
<P>
HINT_CAN_CLIP_MONIKER_WIDTH<A NAME="IX_HINT_CAN_CLIP_MONIKER_HEIGHT">
 </A>
<A NAME="IX_HINT_CAN_CLIP_MONIKER_WIDTH">
 </A>
 and HINT_CAN_CLIP_MONIKER_HEIGHT instruct the specific UI to clip the object's moniker height or width if not enough space is provided for them. Objects with HINT_SHOW_ENTIRE_MONIKER will force the object to leave enough space to show its entire moniker, if possible.</P>
<P>
HINT_GADGET_BACKGROUND_COLORS<A NAME="IX_HINT_GADGET_BACKGROUND_COLORS">
 </A>
 causes grouping objects in toolboxes to draw custom background colors. The hint takes an argument of type <CODE>
BackgroundColors</CODE>
. Two colors can each be chosen for both the unselected state and the selected state; they will be blended together depending on the state of the object. If both colors are set to the same value, a solid color results. HINT_GADGET_TEXT_COLOR<A NAME="IX_HINT_GADGET_TEXT_COLOR">
 </A>
 selects the text color of a visual moniker, typically within a toolbox. This hint takes an argument of type <CODE>
TextColors</CODE>
.</P>
<P>
HINT_IF_SYSTEM_ATTRS<A NAME="IX_HINT_ELSE">
 </A>
<A NAME="IX_HINT_ENDIF">
 </A>
<A NAME="IX_HINT_IF_SYSTEM_ATTRS">
 </A>
, HINT_ENDIF, and HINT_ELSE may be used together to conditionally add hints to an object based on certain system criteria. If the <CODE>
SystemAttrs</CODE>
 set in the HINT_IF_SYSTEM_ATTRS field are true for the current system, then the hints that follow (until a HINT_ENDIF is encountered) are included. If no HINT_ENDIF is encountered, then only the next hint is included. If the <CODE>
SystemAttrs</CODE>
 do not match the current system, the following group of hints is deleted. For more information, see <A HREF="GenClass_15.htm#11736"> System Attributes</A>
.</P>
<P>
Remember that these vardata entries are hints; they can be ignored by the specific UI and their implementation varies from object to object. Some hints, for example, are only relevant for certain object classes. Your mileage may vary.</P>

<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="GenClass_2.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="GenClass_3.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">2.1 Instance Fields</A> 
<!-- to next --> | <A HREF="GenClass_5.htm"><IMG SRC="../../docImages/nextUp.gif" BORDER="0" ALT="Next: ">3 GenClass Basics</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
