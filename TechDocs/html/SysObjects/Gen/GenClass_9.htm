<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: GenClass_9.htm,v 1.1 97/06/02 16:14:11 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Attributes</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="subsectionTitle">
<A HREF="index.htm">GenClass</A>: 3.4 <A HREF="GenClass_5.htm">GenClass Basics</A>: 
<A NAME="90005">
 </A>
Attributes</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="GenClass_5.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="GenClass_8.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">3.3 Keyboard Accelerators</A> 
<!-- to next --> | <A HREF="GenClass_a.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">3.5 States</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<PRE>GI_attrs, MSG_GEN_GET_ATTRIBUTES, MSG_GEN_SET_ATTRS</PRE>
<P>
<A NAME="IX_GA_&ldots;  (GenAttrs)">
 </A>
<A NAME="IX_GI_attrs">
 </A>
The <CODE>
GI_attrs</CODE>
 attribute is a record specifying how an object will behave under various circumstances. In some cases, the <CODE>
GI_attrs</CODE>
 instance field indicates that an object may initiate a busy state within the application. Several attributes only affect how an object will behave during activation. Prior to an object's activation, some of these attributes will not affect the object's behavior.</P>
<DL>
<DT>
GA_SIGNAL_INTERACTION_COMPLETE</DT><DD>
<A NAME="IX_GenInteractionClass:GA_SIGNAL_INTERACTION_COMPLETE">
 </A>
This flag instructs the UI that an Interaction has been completed. The specific UI may then decide whether to dismiss the Interaction or not. Most often, this attribute is attached to a GenTrigger within an independently displayable GenInteraction (dialog box). This attribute is useful for dismissing temporary dialogs that request information from the user. This attribute will cause the generic object to send a <CODE>
MSG_GEN_GUP_INTERACTION_COMMAND </CODE>
to its generic parent with the <CODE>
InteractionCommand</CODE>
 IC_INTERACTION_COMPLETE. This message is then passed up the generic tree until it reaches an appropriate Interaction. See <A HREF="../../UI/GenInteraction/index.htm">the Menus and Dialog Boxes chapter</A> for more information.</DT><P CLASS="WorList">
GA_INITIATES_BUSY_STATE<BR>
<A NAME="IX_Busy state:mouse pointer">
 </A>
This flag instructs the UI to mark the application as busy whenever the generic object is activated. You should only set this attribute for objects that may initiate long operations. This attribute requests that the UI visually change the cursor to show that the application is busy. (In OSF/Motif this is represented by an hourglass.) When the application finishes its operation, the cursor will revert to its former state. This attribute causes the object to send <CODE>
MSG_GEN_APPLICATION_MARK_BUSY</CODE>
 to the object's application object along with <CODE>
MSG_GEN_APPLICATION_MARK_NOT_BUSY</CODE>
 sent via the process' event queue. This allows the system to process the first message (showing the busy cursor) and only process the second message (removing the busy cursor) after the application finishes its current operation. (If the action is processed quickly, the cursor will often not appear.) The busy state cursor is only reflected in the current application; if the cursor roams outside the application bounds, the default behavior will occur.</P>
<DT>
GA_INITIATES_INPUT_HOLD_UP<BR>
<A NAME="IX_Input:holding up">
 </A>
This flag instructs the UI to mark the application as busy and to delay processing input messages until the UI and Application queues have been flushed. The application will then complete its current operation before beginning to process its input events. You should set this attribute when an object's activation may modify the UI, thereby preventing the user from clicking on objects that may become invalid after the operation. This attribute immediately sends a <CODE>
MSG_GEN_APPLICATION_HOLD_UP_INPUT</CODE>
 to the application object along with a <CODE>
MSG_GEN_APPLICATION_RESUME_INPUT</CODE>
 delayed via the process' event queue. This functionality is only reflected in the current application; if the cursor roams outside the application bounds, the default behavior will occur.</DD>
<DT>
GA_INITIATES_INPUT_IGNORE</DT><DD>
<A NAME="IX_Input:ignoring">
 </A>
This flag instructs the UI to mark the application as busy and to completely ignore all subsequent input events to the application. The application will enter a <EM>
modal</EM>
 state, meaning that all other application events will be ignored until the UI and Application queues are flushed. Usually, this state is conveyed to the user by broadcasting an audible beep whenever an input event is attempted. The generic object will immediately send a <CODE>
MSG_GEN_APPLICATION_IGNORE_INPUT</CODE>
 to the application object along with a <CODE>
MSG_GEN_APPLICATION_ACCEPT_INPUT</CODE>
 delayed via the application queue. This functionality is only reflected in the current application; if the cursor roams outside the application bounds, the default behavior will occur.</DD>
<DT>
GA_READ_ONLY</DT><DD>
This flag indicates that this object's only function is to display information to the user; the user will not be able to interact with this object. This attribute is set most often in lists or text objects.</DD>
<DT>
GA_KBD_SEARCH_PATH</DT><DD>
This flag indicates that this generic branch contains objects with keyboard accelerators and should therefore be searched when evaluating such events. This attribute bit is set internally by the system. There should be no need for your application to deal with this attribute directly.</DD>
<DT>
GA_TARGETABLE</DT><DD>
<A NAME="IX_Target:GA_TARGETABLE">
 </A>
This flag indicates that this object is targetable and is eligible to receive the target exclusive within its target level. Most specific UIs will automatically grab the target for this object whenever the user interacts with it. This attribute is set by default within the following classes:</DD>
<DT>
	GenField</DT><DD>
GenApplication<BR>
GenPrimary<BR>
GenDisplayControl<BR>
GenDisplay<BR>
GenView </DD>
<DT>
GA_NOTIFY_VISIBILITY</DT><DD>
This flag indicates that this object should send notification when it becomes visible and not visible. Objects thus will send <CODE>
MSG_GEN_APPLICATION_VISIBILITY_NOTIFICATION</CODE>
</DL>
 to the GenApplication object whenever the state of their visibility changes (see <A HREF="../../SysObjects/GenApp/index.htm">the GenApplication chapter</A>). You may alter this behavior by including one of the visibility vardata attributes. </DT><P CLASS="CodeTitle C">
Code Display 2-15 Using GI_attrs in a Dialog Box</P>
<PRE>@object GenInteractionClass MyDialogBox = {
    GI_comp = @MyButton, @MyOtherButton;
    GII_visibility = GIV_DIALOG;				/* build this Interaction as a dialog box.*/
}</PRE>
<PRE>@object GenTriggerClass MyButton = {
    GTI_actionMsg = MSG_MY_SPECIAL_MESSAGE;
    GTI_destination = process;
	/* MyButton, when activated, will send the message above to the
	 * process object. Only when that happens will it activate the
	 * behavior within the GI_attrs instance data below. */
    GI_attrs = @default |<EM> 
	</EM>/* This flag will close the MyDialogBox object */
	GA_SIGNAL_INTERACTION<EM>_</EM>COMPLETE |
	/* This flag will set the application to ignore all input events while the
	 * message above is processed. */
<EM>	</EM>GA_INITIATES_INPUT_IGNORE;
}</PRE>

<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_GET_ATTRIBUTES">
 </A>
MSG_GEN_GET_ATTRIBUTES</H4>
<PRE CLASS="syntax">byte	MSG_GEN_GET_ATTRIBUTES();</PRE>
<P>
This message retrieves the <CODE>
GI_attrs</CODE>
 instance data for the object the message is sent to. This message returns a byte length bitfield.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any generic object.</P>
<P CLASS="refField">
Return:	Byte length GI_<CODE>
attrs</CODE>
 bitfield.</P>
<P CLASS="refField">
Interception:	Generally not intercepted.</P>


<H4 CLASS="RefETitle">
<A NAME="IX_MSG_GEN_SET_ATTRS">
 </A>
MSG_GEN_SET_ATTRS</H4>
<PRE CLASS="syntax">void	MSG_GEN_SET_ATTRS(
        byte attrsToSet,
        byte attrsToClear);</PRE>
<P>
This message sets the recipient's <CODE>
GI_attrs</CODE>
 field. This message takes two arguments: the attributes to set and the attributes to clear. There is no need to repeat attributes that have been previously set. Note that these attributes will not take effect until the object is activated in the normal manner. (Sending this message does not in itself initiate the activity described).</P>
<P>
You should only send this message while an object is not GS_USABLE, because these attributes are only checked when an object is specifically built. Setting the attributes of a GS_USABLE object may cause an error.</P>
<P CLASS="refField">
Source:	Unrestricted.</P>
<P CLASS="refField">
Destination:	Any non-usable generic object.</P>
<P CLASS="refField">
Parameters:	<EM>
attrsToSet</EM>
	<CODE>
GenAttributes</CODE>
 to set in GI_<CODE>
attrs</CODE>
.</P>
<DL>
<DT>
<EM>
attrsToClear</EM>
	<CODE>
GenAttributes</CODE>
 to clear in GI_<CODE>
attrs</CODE>
.</DD>
</DL>
<P CLASS="refField">
Interception:	Generally not intercepted.</P>
<P CLASS="figTitle">
Code Display 2-16 Conditionally Altering the GI_attrs Field</P>
<PRE>@method MyProcessClass, MSG_DO_CUSTOM_ATTRS {
    byte MyAttrs;</PRE>
<PRE>	/* retrieve the GI_attrs field */
    MyAttrs = @call @MyObject::MSG_GEN_GET_ATTRIBUTES();</PRE>
<PRE>	/* If the GA_COMPLETES_INTERACTION bit is set, then set it 
	 * GA_INITIATES_BUSY_STATE also. Otherwise set it
	 * GA_INITIATES_INPUT_IGNORE. */</PRE>
<PRE>    if (MyAttrs &amp; GA_COMPLETES_INTERACTION){
	@call @MyObject::MSG_GEN_SET_NOT_USABLE();
	@call @MyObject::MSG_GEN_SET_ATTRS(GA_INITIATES_BUSY_STATE, 0);</PRE>
<PRE>	/* Note that setting an object's GA_INITIATES_BUSY_STATE attribute will
	 * not in itself initiate a busy state. That object will only issue a busy
	 * state when it is activated in the normal fashion. */</PRE>
<PRE>    @call @MyObject::MSG_GEN_SET_USABLE();
    } else {
	@call @MyObject::MSG_GEN_SET_NOT_USABLE();
	@call @MyObject::MSG_GEN_SET_ATTRS(GA_INITITATES_INPUT_IGNORE, 0);
	@call @MyObject::MSG_GEN_SET_USABLE();
    }
}</PRE>

<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="GenClass_5.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="GenClass_8.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">3.3 Keyboard Accelerators</A> 
<!-- to next --> | <A HREF="GenClass_a.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">3.5 States</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
