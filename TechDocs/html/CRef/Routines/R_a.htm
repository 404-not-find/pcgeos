<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: R_a.htm,v 1.2 97/06/25 18:46:38 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Routines: ClipboardClearQuickTransferNotification() ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_9.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">ChunkArraySort() ...</A> 
<!-- to next --> | <A HREF="R_b.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">ClipboardQueryItem() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_ClipboardClearQuickTransferNotification()">
 </A>
<H1 CLASS="refHeading">
ClipboardClearQuickTransferNotification()</H1>
<PRE CLASS="syntax">void	ClipboardClearQuickTransferNotification(
        optr	notificationOD);</PRE>
<P>
This routine removes an object or process from quick-transfer notification. It is typically used in the object's <CODE>
MSG_META_DETACH</CODE>
 handler or in the Process object's <CODE>
MSG_GEN_PROCESS_CLOSE_APPLICATION</CODE>
 to ensure that it is not notified after it has already detached.</P>
<P>
Pass the optr of the object specified to receive notification in <CODE>
<A HREF="../../CRef/Routines/R_c.htm#IX_ClipboardStartQuickTransfer()">ClipboardStartQuickTransfer()</A></CODE>
 (or the geode handle if a process).</P>
<P>
Note that an object may also want to check if a quick-transfer is in progress when detaching and possibly abort it if there is one.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
clipbrd.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_ClipboardDoneWithItem()">
 </A>
<H1 CLASS="refHeading">
ClipboardDoneWithItem()</H1>
<PRE CLASS="syntax">void	ClipboardDoneWithItem(
        TransferBlockID header);</PRE>
<P>
This routine is called when an object or Process is done using a transfer item. It relinquishes exclusive access to the item's transfer VM file after the caller had previously called <CODE>
<A HREF="../../CRef/Routines/R_b.htm#IX_ClipboardQueryItem()">ClipboardQueryItem()</A></CODE>
.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
clipbrd.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_ClipboardEndQuickTransfer()">
 </A>
<H1 CLASS="refHeading">
ClipboardEndQuickTransfer()</H1>
<PRE CLASS="syntax">void	ClipboardEndQuickTransfer(
        ClipboardQuickNotifyFlags 				flags);</PRE>
<P>
This routine ends a quick-transfer operation by resetting the pointer image, clearing any quick-transfer region, clearing the quick-transfer item, and sending out any needed notification of the completed transfer.</P>
<P>
Pass this routine a record of <CODE>
ClipboardQuickNotifyFlags</CODE>
. Pass the value CQNF_MOVE if the operation was completed and was a move; pass CQNF_COPY if the operation was completed and was a copy. If the operation could not be completed (e.g. incompatible data types), pass CQNF_NO_OPERATION or CQNF_ERROR.</P>
<P>
The notification sent out by the UI will be in the form of the message <CODE>
MSG_META_CLIPBOARD_NOTIFY_QUICK_TRANSFER_CONCLUDED</CODE>
. This message notifies the originator of the transfer item of the type of operation; the originator can then respond if necessary.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
clipbrd.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_ClipboardEnumItemFormats()">
 </A>
<H1 CLASS="refHeading">
ClipboardEnumItemFormats()</H1>
<PRE CLASS="syntax">word	ClipboardEnumItemFormats(
        TransferBlockID 		header,
        word 		maxNumFormats,
        ClipboardFormatID *		buffer);</PRE>
<P>
This routine returns a list of all the formats supported by the current transfer item. To see whether a particular format is supported, you can use <CODE>
<A HREF="../../CRef/Routines/R_c.htm#IX_ClipboardTestItemFormat()">ClipboardTestItemFormat()</A></CODE>
 instead.</P>
<P>
Pass this routine the following:</P>
<DL>
<DT>
<CODE>
header</CODE>
</DT><DD>The transfer item header as returned by <CODE>
<A HREF="../../CRef/Routines/R_b.htm#IX_ClipboardQueryItem()">ClipboardQueryItem()</A></CODE>
.</DD>
<DT>
<CODE>
maxNumFormats</DT><DD>
</CODE>
The maximum number of formats that should be returned. You should set your return buffer (see below) large enough to support this size.</DD>
<DT>
<CODE>
buffer</CODE>
</DT><DD>A pointer to a locked or fixed buffer into which the formats will be copied. Upon return, the buffer will contain the proper number of <CODE>
ClipboardFormatID</CODE>
 structures, one for each format available. This buffer should be at least large enough to support the number of formats requested in <CODE>
maxNumFormats</CODE>
.</DD>
</DL>
<P>
The word return value is the total number of formats returned. This number will be equal to or less than the number passed in <CODE>
maxNumFormats</CODE>
. The routine will also return the passed buffer filled with that number of <CODE>
ClipboardFormatID</CODE>
 structures.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
clipbrd.goh</STRONG>
 </P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_c.htm#IX_ClipboardTestItemFormat()">ClipboardTestItemFormat()</A></CODE>.</P>
</DIV>
<DIV>
<A NAME="IX_ClipboardGetClipboardFile()">
 </A>
<H1 CLASS="refHeading">
ClipboardGetClipboardFile()</H1>
<PRE CLASS="syntax">VMFileHandle ClipboardGetClipboardFile(void);</PRE>
<P>
This routine returns the VM file handle of the current default transfer VM file.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
clipbrd.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_ClipboardGetItemInfo()">
 </A>
<H1 CLASS="refHeading">
ClipboardGetItemInfo()</H1>
<PRE CLASS="syntax">optr	ClipboardGetItemInfo(
        TransferBlockID header);</PRE>
<P>
This routine returns the source identifier (CIH<CODE>
_sourceID</CODE>
) of the current transfer item. Pass the transfer item's header returned by <CODE>
<A HREF="../../CRef/Routines/R_b.htm#IX_ClipboardQueryItem()">ClipboardQueryItem()</A></CODE>
. </P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
clipbrd.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_ClipboardGetNormalItemInfo()">
 </A>
<H1 CLASS="refHeading">
ClipboardGetNormalItemInfo()</H1>
<PRE CLASS="syntax">TransferBlockID ClipboardGetNormalItemInfo(void);</PRE>
<P>
This routine returns information about the normal transfer item. It returns a <CODE>
TransferBlockID</CODE>
 dword which contains the VM file handle of the transfer file and the VM block handle of the transfer item's header block.</P>
<P>
To extract the file handle from the return value, use the macro <CODE>
<A HREF="../../CRef/Routines/R_28.htm#IX_FileFromTransferBlockID() macro">FileFromTransferBlockID()</A></CODE>
. To extract the block handle, use the macro <CODE>
<A HREF="../../CRef/Routines/R_3.htm#IX_BlockFromTransferBlockID() macro">BlockFromTransferBlockID()</A></CODE>
.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
clipbrd.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_ClipboardGetQuickItemInfo()">
 </A>
<H1 CLASS="refHeading">
ClipboardGetQuickItemInfo()</H1>
<PRE CLASS="syntax">TransferBlockID ClipboardGetQuickItemInfo(void);</PRE>
<P>
This routine returns information about the quick-transfer transfer item. It returns a <CODE>
TransferBlockID</CODE>
 dword which contains the VM file handle of the transfer file and the VM block handle of the transfer item's header block.</P>
<P>
To extract the file handle from the return value, use the macro <CODE>
<A HREF="../../CRef/Routines/R_28.htm#IX_FileFromTransferBlockID() macro">FileFromTransferBlockID()</A></CODE>
. To extract the block handle, use the macro <CODE>
<A HREF="../../CRef/Routines/R_3.htm#IX_BlockFromTransferBlockID() macro">BlockFromTransferBlockID()</A></CODE>
.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
clipbrd.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_ClipboardGetQuickTransferStatus()">
 </A>
<H1 CLASS="refHeading">
ClipboardGetQuickTransferStatus()</H1>
<PRE CLASS="syntax">Boolean	ClipboardGetQuickTransferStatus(void);</PRE>
<P>
This routine returns <CODE>
true</CODE>
 if a quick-transfer operation is in progress, <CODE>
false</CODE>
 otherwise. It is often called when objects or Processes are shutting down in order to abort any quick-transfers originated by the caller.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
clipbrd.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_ClipboardGetUndoItemInfo()">
 </A>
<H1 CLASS="refHeading">
ClipboardGetUndoItemInfo()</H1>
<PRE CLASS="syntax">TransferBlockID ClipboardGetUndoItemInfo(void);</PRE>
<P>
This routine returns information about the undo transfer item. It returns a <CODE>
TransferBlockID</CODE>
 dword which contains the VM file handle of the transfer file and the VM block handle of the transfer item's header block.</P>
<P>
To extract the file handle from the return value, use the macro <CODE>
<A HREF="../../CRef/Routines/R_28.htm#IX_FileFromTransferBlockID() macro">FileFromTransferBlockID()</A></CODE>
. To extract the block handle, use the macro <CODE>
<A HREF="../../CRef/Routines/R_3.htm#IX_BlockFromTransferBlockID() macro">BlockFromTransferBlockID()</A></CODE>
.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
clipbrd.goh</STRONG>
 </P>
</DIV>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_9.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">ChunkArraySort() ...</A> 
<!-- to next --> | <A HREF="R_b.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">ClipboardQueryItem() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
