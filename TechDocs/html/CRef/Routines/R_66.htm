<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: R_66.htm,v 1.2 97/06/25 18:35:05 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Routines: LocalAsciiToFixed() ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_65.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">LMemReAlloc() ...</A> 
<!-- to next --> | <A HREF="R_67.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">LocalCustomParseDateTime() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_LocalAsciiToFixed()">
 </A>
<H1 CLASS="refHeading">
LocalAsciiToFixed()</H1>
<PRE CLASS="syntax">WWFixedAsDWord LocalAsciiToFixed(
        const char *		buffer,
        char **		parseEnd);</PRE>
<P>
This routines converts a string like &quot;12.345&quot; to a fixed point number. The pointer pointed to by <EM>
parseEnd</EM>
 will be returned pointing into the buffer after the last character parsed.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
localize.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_LocalCalcDaysInMonth()">
 </A>
<H1 CLASS="refHeading">
LocalCalcDaysInMonth()</H1>
<PRE CLASS="syntax">word 	LocalCalcDaysInMonth(
        word 	year, 
        word 	month);</PRE>
<P>
This routine computes the number of days in a given month.</P>
</DIV>
<DIV>
<A NAME="IX_LocalCmpStrings()">
 </A>
<H1 CLASS="refHeading">
LocalCmpStrings()</H1>
<PRE CLASS="syntax">sword	LocalCmpStrings(
        const char *		str1,
        const char *		<EM>str2</EM>,
        word		strSize);</PRE>
<P>
This routine compares two strings to determine which comes first in a lexical (i.e. alphabetic) ordering. If the return value is negative, then <EM>
str1</EM>
 is earlier than <EM>
str2</EM>
. If the return value is positive, then <EM>
str1</EM>
 is later than <EM>
str2</EM>
. If the return value is zero, then the strings appear at the same place in alphabetical order.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
localize.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_LocalCmpStringsDosToGeos()">
 </A>
<A NAME="IX_LocalCmpStringsDosToGeosFlags">
 </A>
<A NAME="IX_LCSDTG_NO_CONVERT_STRING_&ldots;">
 </A>
<H1 CLASS="refHeading">
LocalCmpStringsDosToGeos()</H1>
<PRE CLASS="syntax">sword	LocalCmpStringsDosToGeos(
        const char *					str1,
        const char *					str2,
        word					strSize,
        word					defaultChar,
        LocalCmpStringsDosToGeosFlags 					flags);</PRE>
<P>
This routine compares two strings to determine which comes first in lexical ordering. Either or both of these strings may be a DOS string.  If the return value is negative, then <EM>
str1</EM>
 is earlier than <EM>
str2</EM>
. If the return value is positive, then <EM>
str1</EM>
 is later than <EM>
str2</EM>
. If the return value is zero, then the strings appear at the same place in alphabetical order.</P>
<P CLASS="refField"><STRONG>
Structures:</STRONG>	</P>
<PRE CLASS="syntax">        typedef ByteFlags LocalCmpStringsDosToGeosFlags;
/* The following flags may be combined using | and &amp;:
 * 		LCSDTG_NO_CONVERT_STRING_2,
 * 		LCSDTG_NO_CONVERT_STRING_1 */</PRE>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
localize.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_LocalCmpStringsNoCase()">
 </A>
<H1 CLASS="refHeading">
LocalCmpStringsNoCase()</H1>
<PRE CLASS="syntax">sword	LocalCmpStringsNoCase(
        const char *		str1,
        const char *		str2,
        word		strSize);</PRE>
<P>
This routine compares two strings to determine which comes first in a lexical (i.e. alphabetic) ordering. The comparison used is not case-sensitive.  If the return value is negative, then <EM>
str1</EM>
 is earlier than <EM>
str2</EM>
. If the return value is positive, then <EM>
str1</EM>
 is later than <EM>
str2</EM>
. If the return value is zero, then the strings appear at the same place in alphabetical order.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
localize.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_LocalCmpStringsNoSpace()">
 </A>
<H1 CLASS="refHeading">
LocalCmpStringsNoSpace()</H1>
<PRE CLASS="syntax">sword 	LocalCmpStringsNoSpace(
        const char 		*str1, 
        const char 		*str2, 
        word 		strSize);</PRE>
<P>
This routine compares two strings to determine which comes first in a lexical (i.e. alphabetic) ordering. The comparison ignores spaces.  If the return value is negative, then <EM>
str1</EM>
 is earlier than <EM>
str2</EM>
. If the return value is positive, then <EM>
str1</EM>
 is later than <EM>
str2</EM>
. If the return value is zero, then the strings appear at the same place in alphabetical order.</P>
</DIV>
<DIV>
<A NAME="IX_LocalCmpStringsNoSpaceCase()">
 </A>
<H1 CLASS="refHeading">
LocalCmpStringsNoSpaceCase()</H1>
<PRE CLASS="syntax">sword 	LocalCmpStringsNoSpaceCase(
        const char 		*str1, 
        const char 		*str2, 
        word 		strSize);</PRE>
<P>
This routine compares two strings to determine which comes first in a lexical (i.e. alphabetic) ordering. The comparison ignores spaces and is case-insensitive.  If the return value is negative, then <EM>
str1</EM>
 is earlier than <EM>
str2</EM>
. If the return value is positive, then <EM>
str1</EM>
 is later than <EM>
str2</EM>
. If the return value is zero, then the strings appear at the same place in alphabetical order.</P>
</DIV>
<DIV>
<A NAME="IX_LocalCodePageToGeos()">
 </A>
<H1 CLASS="refHeading">
LocalCodePageToGeos()</H1>
<PRE CLASS="syntax">Boolean	LocalCodePageToGeos(
        char *		str,
        word		strSize,			/* Size of the string, in bytes */
        DosCodePage 		codePage,
        word		defaultChar);</PRE>
<P>
This routine converts a DOS string to standard GEOS text using a specified code page. Any characters for which there is no GEOS equivalent will be replaced by the passed default character.  </P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
localize.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_LocalCodePageToGeosChar()">
 </A>
<H1 CLASS="refHeading">
LocalCodePageToGeosChar()</H1>
<PRE CLASS="syntax">word	LocalCodePageToGeosChar(
        word	ch,
        DosCodePage codePage,
        word	defaultChar);</PRE>
<P>
This routine converts a DOS character to standard GEOS text using a specified code page. Any character for which there is no GEOS equivalent will be replaced by the passed default character.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
localize.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_LocalCustomFormatDateTime()">
 </A>
<H1 CLASS="refHeading">
LocalCustomFormatDateTime()</H1>
<PRE CLASS="syntax">word	LocalCustomFormatDateTime(
        char *	str,			/* Buffer to save formatted text in */
        const char *	format,			/* Format string */
        const	TimerDateAndTime *dateTime);</PRE>
<P>
This routine takes a date or time and constructs a string using a custom format. </P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
localize.h</STRONG>
 </P>
</DIV>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_65.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">LMemReAlloc() ...</A> 
<!-- to next --> | <A HREF="R_67.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">LocalCustomParseDateTime() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
