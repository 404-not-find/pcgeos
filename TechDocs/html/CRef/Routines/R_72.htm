<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: R_72.htm,v 1.2 97/06/25 18:37:33 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Routines: ModemSetMessageDataNotify() ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_71.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">ModemAnswerCall() ...</A> 
<!-- to next --> | <A HREF="R_73.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">NameArrayAdd() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_ModemSetMessageDataNotify()">
 </A>
<H1 CLASS="refHeading">
ModemSetMessageDataNotify()</H1>
<PRE CLASS="syntax">void	ModemSetMessageDataNotify(
        SerialPortNum		port,		/* serial port number */
        Message		msg,		/* msg to be sent upon notification */
        optr		destination);	/* object to receive msg */</PRE>
<P>
Registers a message to be sent when when data is received from the modem during an active call. As with the serial driver's data notification, further notification will not be sent until the serial port has been read. [MEANING UNTIL THE STREAM HAS BEEN READ???]</P>
<P CLASS="refField"><STRONG>
Be Sure To:</STRONG>	Use the prototype for the message you are registering.</P>
<P>
@prototype void MODEM_DATA_NOTIFICATION();</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	modemC.goh</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_72.htm#IX_ModemSetRoutineDataNotify()">ModemSetRoutineDataNotify()</A></CODE>.</P>
</DIV>
<DIV>
<A NAME="IX_ModemSetMessageEndCallNotify()">
 </A>
<H1 CLASS="refHeading">
ModemSetMessageEndCallNotify()</H1>
<PRE CLASS="syntax">void	ModemSetMessageEndCallNotify(
        SerialPortNum		port,		/* serial port number */
        Message		msg,		/* msg to be sent upon notification */
        optr		destination);	/* object to receive msg */</PRE>
<P>
Registers a message to be sent when a call has ended for any reason. To &quot;un-register,&quot; pass NullOptr in <EM>destination</EM>. </P>
<P CLASS="refField"><STRONG>
Be Sure To:</STRONG>	Use the prototype for the message you are registering.</P>
<P>
@prototype void MODEM_END_CALL_NOTIFICATION();</P>
<P CLASS="refField"><STRONG>
Warnings:</STRONG>	All platforms may not support this feature.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	modemC.goh</P>
</DIV>
<DIV>
<A NAME="IX_ModemSetMessageResponseNotify()">
 </A>
<H1 CLASS="refHeading">
ModemSetMessageResponseNotify()</H1>
<PRE CLASS="syntax">void	ModemSetMessageResponseNotify(
        SerialPortNum		port,		/* serial port number */
        Message		msg,		/* msg to be sent upon notification */
        optr		destination);	/* object to receive msg */</PRE>
<P>
Registers a message to be sent when when a response is received from the modem (while the modem is in command mode). Response is passed in a memory block which the handler should free.</P>
<P CLASS="refField"><STRONG>
Be Sure To:</STRONG>	Use the prototype for the message you are registering.</P>
<P>
@prototype void MODEM_RESPONSE_NOTIFICATION();</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	modemC.goh</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_72.htm#IX_ModemSetRoutineResponseNotify()">ModemSetRoutineResponseNotify()</A></CODE>.</P>
</DIV>
<DIV>
<A NAME="IX_ModemSetRoutineDataNotify()">
 </A>
<H1 CLASS="refHeading">
ModemSetRoutineDataNotify()</H1>
<PRE CLASS="syntax">void	ModemSetRoutineDataNotify(
        SerialPortNum		port,		/* serial port number */
        word		data,		/* data passed to callback */
        void _pascal (*NotifyRoutine) (word data));</PRE>
<P>
Registers a routine to be called when data is received from the modem during an active call. As with the serial driver's data notification, further notification will not be sent until the serial port has been read. [MEANING UNTIL THE STREAM HAS BEEN READ???]</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	modemC.goh</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_72.htm#IX_ModemSetMessageDataNotify()">ModemSetMessageDataNotify()</A></CODE>.</P>
</DIV>
<DIV>
<A NAME="IX_ModemSetRoutineResponseNotify()">
 </A>
<H1 CLASS="refHeading">
ModemSetRoutineResponseNotify()</H1>
<PRE CLASS="syntax">void	ModemSetRoutineResponseNotify(
        SerialPortNum		port,		/* serial port number */
        word		data,		/* data passed to callback */
        void _pascal (*NotifyRoutine) (
        		word		data,
        		word		responseSize,
        		char		*response));</PRE>
<P>
Registers a routine to be called when a response is received from the modem (while modem is in command mode).</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	modemC.goh</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_72.htm#IX_ModemSetMessageResponseNotify()">ModemSetMessageResponseNotify()</A></CODE>.</P>
</DIV>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_71.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">ModemAnswerCall() ...</A> 
<!-- to next --> | <A HREF="R_73.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">NameArrayAdd() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
