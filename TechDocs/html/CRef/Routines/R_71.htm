<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: R_71.htm,v 1.2 97/06/25 18:37:23 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Routines: ModemAnswerCall() ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_70.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">MemUnlock() ...</A> 
<!-- to next --> | <A HREF="R_72.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">ModemSetMessageDataNotify() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_ModemAnswerCall()">
 </A>
<H1 CLASS="refHeading">
ModemAnswerCall()</H1>
<PRE CLASS="syntax">Boolean	ModemAnswerCall(
        SerialPortNum		port,			/* serial port number */
        ModemResultCode		*result);</PRE>
<P>
Answers an incoming data call. Returns [???] if a connection has been established (and writes MRC_OK to <EM>result</EM>) or non-zero if an error has occurred (and [???]).</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	modemC.goh</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_71.htm#IX_ModemAutoAnswer()">ModemAutoAnswer()</A></CODE>.</P>
</DIV>
<DIV>
<A NAME="IX_ModemAutoAnswer()">
 </A>
<H1 CLASS="refHeading">
ModemAutoAnswer()</H1>
<PRE CLASS="syntax">Boolean	ModemAutoAnswer(
        SerialPortNum		port,		/* serial port number */
        word		number_of_rings,
        ModemResultCode		*result);</PRE>
<P>
Sets modem to answer calls automatically. Does not wait for a call but returns [???] after successfully setting modem to auto-answer (and writes MRC_OK to <EM>result</EM>) or non-zero if an error has occurred (and [???]).</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	modemC.goh</P>
<P CLASS="refField"><STRONG>
Warnings:</STRONG>	Modem must be in command mode when calling this routine.</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_71.htm#IX_ModemAnswerCall()">ModemAnswerCall()</A></CODE>.</P>
</DIV>
<DIV>
<A NAME="IX_ModemClose()">
 </A>
<H1 CLASS="refHeading">
ModemClose()</H1>
<PRE CLASS="syntax">void	ModemClose(
        SerialPortNum		port,			/* serial port number */
        StreamLingerMode		close_mode); /* manner in which to close stream */</PRE>
<P>
Closes the serial port being used for a modem connection. Possible values for <EM>close_mode</EM> include STREAM_DISCARD or STREAM_LINGER.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	modemC.goh</P>
<P CLASS="refField"><STRONG>
Warnings:</STRONG>	Use <CODE>
<A HREF="../../CRef/Routines/R_71.htm#IX_ModemHangup()">ModemHangup()</A></CODE>
 to hang up an existing call.</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_71.htm#IX_ModemHangup()">ModemHangup()</A></CODE>.</P>
</DIV>
<DIV>
<A NAME="IX_ModemDial()">
 </A>
<H1 CLASS="refHeading">
ModemDial()</H1>
<PRE CLASS="syntax">Boolean	ModemDial(
        SerialPortNum		port,			/* serial port number */
        word		dial_string_length,
        const char		*dial_string,	/* phone number to dial */
        ModemResultCode		*result);</PRE>
<P>
Sends the modem's dial command to dial the specified number. Returns [???] if a connection has been established (and writes MRC_OK to <EM>result</EM>) or non-zero if an error has occurred (and [???]).</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	modemC.goh</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_71.htm#IX_ModemOpen()">ModemOpen()</A></CODE>.</P>
</DIV>
<DIV>
<A NAME="IX_ModemFactoryReset()">
 </A>
<H1 CLASS="refHeading">
ModemFactoryReset()</H1>
<PRE CLASS="syntax">Boolean	ModemFactoryReset(
        SerialPortNum		port,			/* serial port number */
        ModemResultCode		*result);</PRE>
<P>
Restores factory settings of modem. Returns [???] after successfully resetting (and writes MRC_OK to <EM>result</EM>) or non-zero if an error has occurred (and [???]).</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	modemC.goh</P>
<P CLASS="refField"><STRONG>
Warnings:</STRONG>	Modem must be in command mode when calling this routine.</P>
</DIV>
<DIV>
<A NAME="IX_ModemHangup()">
 </A>
<H1 CLASS="refHeading">
ModemHangup()</H1>
<PRE CLASS="syntax">Boolean	ModemHangup(
        SerialPortNum		port,			/* serial port number */
        ModemResultCode		*result);</PRE>
<P>
Hangs up an existing data call. Returns [???] after successfully hanging up (and writes MRC_OK to <EM>result</EM>) or non-zero if an error has occurred (and [???]).</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	modemC.goh</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_71.htm#IX_ModemClose()">ModemClose()</A></CODE>.</P>
</DIV>
<DIV>
<A NAME="IX_ModemInitModem()">
 </A>
<H1 CLASS="refHeading">
ModemInitModem()</H1>
<PRE CLASS="syntax">Boolean	ModemInitModem(
        SerialPortNum		port,			/* serial port number */
        word		init_string_length,
        const char		*init_string,	/* initialization string */
        ModemResultCode		*result);</PRE>
<P>
Initializes modem with modem command string. A lead &quot;AT&quot; need not be supplied. Returns [???] after successfully initializing (and writes MRC_OK to <EM>result</EM>) or non-zero if an error has occurred (and [???]).</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	modemC.goh</P>
<P CLASS="refField"><STRONG>
Warnings:</STRONG>	Modem must be in command mode when calling this routine.</P>
</DIV>
<DIV>
<A NAME="IX_ModemOpen()">
 </A>
<H1 CLASS="refHeading">
ModemOpen()</H1>
<PRE CLASS="syntax">Boolean	ModemOpen(
        GeodeHandle		drHandle,			/* handle of serial driver */
        SerialPortNum		port,			/* serial port number */
        StreamOpenFlags		flags,			/* manner in which to open stream */
        word		input_buffer_size,
        word		output_buffer_size,
        word		timeout);			/* timeout if SOF_TIMEOUT */</PRE>
<P>
Opens the serial port to be used for a modem connection and places modem in command mode. Possible values for <EM>flags</EM> are SOF_TIMEOUT and SOF_NOBLOCK.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	modemC.goh</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_71.htm#IX_ModemDial()">ModemDial()</A></CODE>.</P>
</DIV>
<DIV>
<A NAME="IX_ModemReset()">
 </A>
<H1 CLASS="refHeading">
ModemReset()</H1>
<PRE CLASS="syntax">Boolean	ModemReset(
        SerialPortNum		port,			/* serial port number */
        ModemResultCode		*result);</PRE>
<P>
Switches to command mode and resets the modem. Returns [???] after successfully resetting (and writes MRC_OK to <EM>result</EM>) or non-zero if an error has occurred (and [???]).</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	modemC.goh</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_71.htm#IX_ModemFactoryReset()">ModemFactoryReset()</A></CODE>.</P>
</DIV>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_70.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">MemUnlock() ...</A> 
<!-- to next --> | <A HREF="R_72.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">ModemSetMessageDataNotify() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
