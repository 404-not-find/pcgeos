<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: R_84.htm,v 1.2 97/06/25 18:41:26 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Routines: SerialGetFormat() ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_83.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">realloc() ...</A> 
<!-- to next --> | <A HREF="R_85.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">SGC_MACHINE ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_SerialGetFormat()">
 </A>
<H1 CLASS="refHeading">
SerialGetFormat()</H1>
<PRE CLASS="syntax">StreamError SerialGetFormat(
        GeodeHandle 		driver,
        SerialUnit 		unit,
        SerialFormat *		format,
        SerialMode *		mode,
        SerialBaud *		baud);</PRE>
<P>
Get the format of a stream to a specified serial port.</P>
</DIV>
<DIV>
<A NAME="IX_SerialGetModem()">
 </A>
<H1 CLASS="refHeading">
SerialGetModem()</H1>
<PRE CLASS="syntax">StreamError SerialGetModem(
        GeodeHandle 		driver,
        SerialUnit		unit,
        SerialModem *		modem);</PRE>
<P>
Read a modem's hardware flow control bits.</P>
</DIV>
<DIV>
<A NAME="IX_SerialOpen()">
 </A>
<H1 CLASS="refHeading">
SerialOpen()</H1>
<PRE CLASS="syntax">StreamError SerialOpen(
        GeodeHandle 		driver,
        SerialUnit 		unit,
        StreamOpenFlags 		flags,
        word 		inBuffSize,
        word		outBuffSize,
        word 		timeout);</PRE>
<P>
This routine opens a stream to the specified serial port. It is passed the following arguments:</P>
<DL>
<DT>
<CODE>
driver</CODE>
</DT><DD>The <CODE>
GeodeToken</CODE>
 of the serial driver.</DD>
<DT>
<CODE>
unit</CODE>
</DT><DD>The serial port to open.</DD>
<DT>
<CODE>
flags</CODE>
</DT><DD>This specifies whether the call should fail if the port is busy, or wait for a time to see if it will become free.</DD>
<DT>
<CODE>
inBuffSize</CODE>
</DT><DD>The size of the stream buffer used for input from the serial port.</DD>
<DT>
<CODE>
outBuffSize</CODE>
</DT><DD>The size of the stream buffer used for output to the serial port.</DD>
<DT>
<CODE>
timeout</CODE>
</DT><DD>The number of clock ticks to wait for the port to become free. (This argument is ignored if <CODE>
flags</CODE>
 is not STREAM_OPEN_TIMEOUT.)</DD>
</DL>
<P>
If the routine is successful, it returns zero. If it is unsuccessful, it returns a member of the <CODE>
StreamError</CODE>
 enumerated type.</P>
</DIV>
<DIV>
<A NAME="IX_SerialQuery()">
 </A>
<H1 CLASS="refHeading">
SerialQuery()</H1>
<PRE CLASS="syntax">StreamError SerialQuery(
        GeodeHandle 		driver,
        SerialUnit 		unit,
        StreamRoles role,
        word *		bytesAvailable);</PRE>
<P>
Find out how much space is available in a serial buffer, or how much data is waiting to be read.</P>
</DIV>
<DIV>
<A NAME="IX_SerialRead()">
 </A>
<H1 CLASS="refHeading">
SerialRead()</H1>
<PRE CLASS="syntax">StreamError SerialRead (
        Handle		driver,
        SerialUnit 		unit,
        StreamBlocker 		blocker,
        word 		buffSize,
        byte *		buffer,
        word *		numBytesRead);</PRE>
<P>
Read data from a serial port and write it to a passed buffer.</P>
</DIV>
<DIV>
<A NAME="IX_SerialReadByte()">
 </A>
<H1 CLASS="refHeading">
SerialReadByte()</H1>
<PRE CLASS="syntax">StreamError SerialReadByte (
        Handle		driver,
        SerialUnit 		unit,
        StreamBlocker 		blocker,
        byte		*dataByte);</PRE>
<P>
Read a byte of data from a serial port and write it to a passed variable.</P>
</DIV>
<DIV>
<A NAME="IX_SerialSetError()">
 </A>
<H1 CLASS="refHeading">
SerialSetError()</H1>
<PRE CLASS="syntax">StreamError SerialSetError (
        Handle 		driver,
        SerialUnit 		unit,
        StreamRoles 		roles,
        SerialError 		errorCode);</PRE>
<P>
This routine sets the serial-driver-specific error code for recovery with <CODE>
<A HREF="../../CRef/Routines/R_83.htm#IX_SerialGetError()">SerialGetError()</A></CODE>
.<CODE>
</CODE>
</P>
</DIV>
<DIV>
<A NAME="IX_SerialSetFlowControl()">
 </A>
<H1 CLASS="refHeading">
SerialSetFlowControl()</H1>
<PRE CLASS="syntax">StreamError 	SerialSetFlowControl (
        Handle 		driver,
        SerialUnit 		unit,
        SerialFlowControl 		flow,
        SerialModem 		modem,
        SerialModemStatus 		status);</PRE>
<P>
This routine enables or disables software flow control. The flow argument has two flags, SFC_HARDWARE and SFC_SOFTWARE.</P>
</DIV>
<DIV>
<A NAME="IX_SerialSetFormat()">
 </A>
<H1 CLASS="refHeading">
SerialSetFormat()</H1>
<PRE CLASS="syntax">StreamError SerialSetFormat(
        GeodeHandle 		driver,
        SerialUnit 		unit,
        SerialFormat 		format,
        SerialMode		mode,
        SerialBaud 		baud);</PRE>
<P>
Set the format for a stream to a specified serial port.</P>
</DIV>
<DIV>
<A NAME="IX_SerialSetModem()">
 </A>
<H1 CLASS="refHeading">
SerialSetModem()</H1>
<PRE CLASS="syntax">StreamError SerialSetModem(
        GeodeHandle 		driver,
        SerialUnit		unit,
        SerialModem 		modem);</PRE>
<P>
Set a modem's hardware flow control bits.</P>
</DIV>
<DIV>
<A NAME="IX_SerialWrite()">
 </A>
<H1 CLASS="refHeading">
SerialWrite()</H1>
<PRE CLASS="syntax">StreamError SerialWrite(
        GeodeHandle 		driver,
        SerialUnit 		unit,
        StreamBlocker 		blocker,
        word 		buffSize,
        const byte *		buffer,
        word *		numBytesWritten);</PRE>
<P>
Write data to a serial port.</P>
</DIV>
<DIV>
<A NAME="IX_SerialWriteByte()">
 </A>
<H1 CLASS="refHeading">
SerialWriteByte()</H1>
<PRE CLASS="syntax">StreamError SerialWrite(
        GeodeHandle 		driver,
        SerialUnit 		unit,
        StreamBlocker 		blocker,
        word 		buffSize,
        byte		dataByte);</PRE>
<P>
Write one byte of data to a serial port.</P>
</DIV>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_83.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">realloc() ...</A> 
<!-- to next --> | <A HREF="R_85.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">SGC_MACHINE ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
