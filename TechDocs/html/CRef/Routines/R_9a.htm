<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: R_9a.htm,v 1.2 97/06/25 18:45:25 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Routines: TocNameArrayFind() ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_99.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">TimerSleep() ...</A> 
<!-- to next --> | <A HREF="R_9b.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">TokenDefineToken() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_TocNameArrayFind()">
 </A>
<H1 CLASS="refHeading">
TocNameArrayFind()</H1>
<PRE CLASS="syntax">word TocNameArrayGetElement(
        DBGroupAndItem 		array, 
        word 		element,
        void 		*buffer);</PRE>
<P>
Use this routine to find a name in the name list maintained by a PrefTocList object.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
config.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_TocNameArrayGetElement()">
 </A>
<H1 CLASS="refHeading">
TocNameArrayGetElement()</H1>
<PRE CLASS="syntax">word TocNameArrayGetElement(
        DBGroupAndItem 		array, 
        word 		element,
        void 		*buffer);</PRE>
<P>
Use this routine to retrieve a given element from a name array maintained by a PrefTocList object. </P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
config.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_TocSortedNameArrayAdd()">
 </A>
<H1 CLASS="refHeading">
TocSortedNameArrayAdd()</H1>
<PRE CLASS="syntax">word TocSortedNameArrayAdd(
        word 		arr, 
        const char 		*nameToAdd,
        NameArrayAddFlags 		flags,
        const void 		*data);</PRE>
<P>
This routine adds a name to a sorted name array associated with a PrefTocList object. </P>
<P CLASS="refField"><STRONG>
Structures:</STRONG>	</P>
<PRE CLASS="syntax">        typedef WordFlags NameArrayAddFlags;
        #define NAAF_SET_DATA_ON_REPLACE 0x8000</PRE>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
config.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_TocSortedNameArrayFind()">
 </A>
<A NAME="IX_SortedNameArrayAddFlags">
 </A>
<A NAME="IX_SNAAF_&ldots;">
 </A>
<H1 CLASS="refHeading">
TocSortedNameArrayFind()</H1>
<PRE CLASS="syntax">Boolean TocSortedNameArrayFind(
        word 				arr, 
        const char 				*nameToFind,
        SortedNameArrayFindFlags 				flags,
        void 				*buffer, 
        word 				*elementNum);</PRE>
<P>
This routine looks up a name in a sorted name array associated with a PrefTocList object.</P>
<P CLASS="refField"><STRONG>
Structures:</STRONG>	</P>
<PRE CLASS="syntax">        typedef WordFlags SortedNameArrayFindFlags;
        #define SNAFF_IGNORE_CASE 0x0080</PRE>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
config.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_TocUpdateCategory()">
 </A>
<A NAME="IX_TocUpdateCategoryParams()">
 </A>
<A NAME="IX_TUCP_&ldots;">
 </A>
<A NAME="IX_TocUpdateAddCallback() prototype">
 </A>
<H1 CLASS="refHeading">
TocUpdateCategory()</H1>
<PRE CLASS="syntax">void TocUpdateCategory(
        TocUpdateCategoryParams *params);</PRE>
<P>
Use this routine to update a PrefTocList object based upon the files in a given directory with a given token.</P>
<P CLASS="refField"><STRONG>
Structures:</STRONG>	</P>
<PRE CLASS="syntax">        typedef struct {
        	TocUpdateCategoryFlags 				TUCP_flags;
        	TokenChars 				TUCP_tokenChars;
        	byte 				TUCP_fileArrayElementSize;
        &nbsp;
        	TocUpdateAddCallback 				*TUCP_addCallback;
        	byte 				TUCP_pad; /* Wants to be word-aligned */
        } TocUpdateCategoryParams;
        &nbsp;
        typedef word _pascal TocUpdateAddCallback(
        	const char *filename,
        	optr chunkArray);
        /* Return 0 if add aborted, else return offset of new element within
         * block */
        &nbsp;</PRE>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
config.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_TOKEN_CHARS() macro">
 </A>
<H1 CLASS="refHeading">
TOKEN_CHARS()</H1>
<PRE CLASS="syntax">dword	TOKEN_CHARS(<EM>a</EM>, <EM>b</EM>, <EM>c</EM>, <EM>d</EM>)</PRE>
<P>
This macro creates a single dword value from four given characters. This is useful when creating a token characters value for a specific token. The first two characters passed may be chars, the second two should be cast to dwords. A simple example:</P>
<PRE>TOKEN_CHARS(`S', `A', (dword) `M', (dword) `P');</PRE>
</DIV>
<DIV>
<A NAME="IX_TokenCloseLocalTokenDB()">
 </A>
<H1 CLASS="refHeading">
TokenCloseLocalTokenDB()</H1>
<PRE CLASS="syntax">void	TokenCloseLocalTokenDB()</PRE>
<P>
This routine closes the local token database.</P>
</DIV>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_99.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">TimerSleep() ...</A> 
<!-- to next --> | <A HREF="R_9b.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">TokenDefineToken() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
