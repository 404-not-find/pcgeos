<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: R_11.htm,v 1.2 97/06/25 18:07:44 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Routines: DataStoreDiscardRecord() ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_10.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">DataStoreCreate() ...</A> 
<!-- to next --> | <A HREF="R_12.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">DataStoreGetFieldChunk() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_DataStoreDiscardRecord()">
 </A>
<H1 CLASS="refHeading">
DataStoreDiscardRecord()</H1>
<PRE CLASS="syntax">DataStoreDataError	DataStoreDiscardRecord(
        word		dsToken);	/* session token to opened datastore */</PRE>
<P>
Flushes the current record from the record buffer (without saving any changes). Returns a <CODE>
DataStoreDataError</CODE>
 value (DSDE_NO_ERROR if successful).</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
datastor.h</STRONG>
</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_14.htm#IX_DataStoreSaveRecord()">DataStoreSaveRecord()</A></CODE>.</P>
</DIV>
<DIV>
<A NAME="IX_DataStoreFieldEnum()">
 </A>
<H1 CLASS="refHeading">
DataStoreFieldEnum()</H1>
<PRE CLASS="syntax">DataStoreError	DataStoreFieldEnum(
        word		dsToken,
        RecordHeader		*recordPtr,
        void		*enumDataPtr,
        Boolean _pascal (*CallbackRoutine) (
        	void		*fieldDataPtr,
        	word		fieldDataSize,
        	FieldType		fieldType,
        	FieldCategory		fieldCat,
        	FieldID		fieldID,
        	FieldFlags		flags,
        	void		*enumDataPtr));</PRE>
<P>
Enumerates through the fields in the passed record. When the callback returns TRUE, stops enumeration and returns DSE_NO_ERROR. Takes the following arguments:recordPtr</P>
<DL>
<DT>
<EM>dsToken</EM>	</DT><DD>
Session token to the opened datastore.</DD>
<DT>
<EM>recordPtr	</DT><DD>
</EM>Pointer to a <CODE>
RecordHeader</CODE>
 structure.</DD>
<PRE>		typedef struct {
			RecordID		RH_id;
			word		RH_size;
			byte		RH_fieldCount;
		} RecordHeader;</PRE>
<DT>
<EM>enumDataPtr</DT><DD>
</EM>Pointer to data that caller passes to the callback.</DD>
<DT>
<EM>CallbackRoutine</DT><DD>
</EM>Boolean subroutine to determine when enumeration should end.</DD>
</DL>
<P CLASS="refField"><STRONG>
Be Sure To:</STRONG>	Lock the record first with <CODE>
<A HREF="../../CRef/Routines/R_13.htm#IX_DataStoreLockRecord()">DataStoreLockRecord()</A></CODE>
 before calling this routine.</P>
<P CLASS="refField"><STRONG>
Warnings:</STRONG>	Callback can modify data passed in <EM>enumDataPtr</EM> but cannot modify any actual field data.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
datastor.h</STRONG>
</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_14.htm#IX_DataStoreRecordEnum()">DataStoreRecordEnum()</A></CODE>.</P>
</DIV>
<DIV>
<A NAME="IX_DataStoreFieldIDToName()">
 </A>
<H1 CLASS="refHeading">
DataStoreFieldIDToName()</H1>
<PRE CLASS="syntax">DataStoreStructureError	DataStoreFieldIDToName(
        word		dsToken,	/* session token to opened datastore */
        FieldID		fieldID,
        TCHAR		*fieldNamePtr,
        word		*nameSizePtr);</PRE>
<P>
Writes the field name corresponding to the passed <CODE>
FieldID</CODE>
 (<EM>
fieldID</EM>
) to <EM>
fieldNamePtr</EM>
. Copies no more than <EM>nameSizePtr</EM> bytes and overwrites this same parameter with the number of bytes actually copied. Returns a <CODE>
DataStoreStructureError</CODE>
 value (DSSE_NO_ERROR if successful).</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
datastor.h</STRONG>
</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_11.htm#IX_DataStoreFieldNameToID()">DataStoreFieldNameToID()</A></CODE>.</P>
</DIV>
<DIV>
<A NAME="IX_DataStoreFieldNameToID()">
 </A>
<H1 CLASS="refHeading">
DataStoreFieldNameToID()</H1>
<PRE CLASS="syntax">DataStoreStructureError	DataStoreFieldNameToID(
        word		dsToken,	/* session token to opened datastore */
        TCHAR		*fieldNamePtr,
        FieldID		*fieldIDPtr);</PRE>
<P>
Writes the <CODE>
FieldID</CODE>
 corresponding to the passed field name<EM>
 (fieldNamePtr</EM>
) to <EM>
fieldIDPtr</EM>
. Returns a <CODE>
DataStoreStructureError</CODE>
 value (DSSE_NO_ERROR if successful).</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
datastor.h</STRONG>
</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_11.htm#IX_DataStoreFieldIDToName()">DataStoreFieldIDToName()</A></CODE>.</P>
</DIV>
<DIV>
<A NAME="IX_DataStoreGetExtraData()">
 </A>
<H1 CLASS="refHeading">
DataStoreGetExtraData()</H1>
<PRE CLASS="syntax">DataStoreError	DataStoreGetExtraData(
        word		dsToken,	/* session token to opened datastore */
        void		*dataPtr, /* data read from file header */
        word		*dataSizePtr);</PRE>
<P>
Writes any extra data for this datastore to <EM>
dataPtr</EM>
. Writes the number of bytes copied to <EM>
dataSizePtr</EM>
. Returns a <CODE>
DataStoreError</CODE>
 value (DSE_NO_ERROR if successful).</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
datastor.h</STRONG>
</P>
</DIV>
<DIV>
<A NAME="IX_DataStoreGetField()">
 </A>
<H1 CLASS="refHeading">
DataStoreGetField()</H1>
<PRE CLASS="syntax">DataStoreDataError	DataStoreGetField(
        word		dsToken,	/* session token to opened datastore */
        TCHAR		*fieldNamePtr,
        FieldID		fieldID,
        void		**blockPtrPtr,
        word		*blockSizePtr,
        MemHandle		*blockHanPtr);</PRE>
<P>
Writes contents of the passed field to a block. If <EM>
blockPtrPtr</EM>
 is NULL, allocates a block and writes its handle to <EM>
blockHanPtr</EM>
 and its size to <EM>
blockSizePtr</EM>
. If <EM>
blockPtrPtr</EM>
 is not NULL and field data exceeds block size, copies <EM>
blockSizePtr</EM>
 bytes to the block and returns DSDE_EXCEEDS_BUFFER_SIZE. Returns a <CODE>
DataStoreDataError</CODE>
 value (DSDE_NO_ERROR if successful).</P>
<P>
If referencing field by name, pass &quot;0&quot; in <EM>
fieldID</EM>
; if referencing field by <CODE>
FieldID</CODE>
, pass NULL in <EM>
fieldNamePtr</EM>
.</P>
<P CLASS="refField"><STRONG>
Warnings:</STRONG>	If the passed field is not present, writes &quot;0&quot; to <EM>
blockSizePtr</EM>
 and returns DSDE_NO_ERROR.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
datastor.h</STRONG>
</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_12.htm#IX_DataStoreGetFieldChunk()">DataStoreGetFieldChunk()</A></CODE>.</P>
</DIV>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_10.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">DataStoreCreate() ...</A> 
<!-- to next --> | <A HREF="R_12.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">DataStoreGetFieldChunk() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
