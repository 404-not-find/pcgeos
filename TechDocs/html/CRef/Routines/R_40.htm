<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: R_40.htm,v 1.2 97/06/25 18:25:04 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Routines: GrGetAreaColor() ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_3f.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">GrFillEllipse() ...</A> 
<!-- to next --> | <A HREF="R_41.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">GrGetDefFontID() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_GrGetAreaColor()">
 </A>
<H1 CLASS="refHeading">
GrGetAreaColor()</H1>
<PRE CLASS="syntax">RGBColorAsDWord 	GrGetAreaColor(
        GStateHandle gstate);			/* GState of which to get color */</PRE>
<P>
Get the color which is being used to fill areas.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
graphics.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GrGetAreaColorMap()">
 </A>
<H1 CLASS="refHeading">
GrGetAreaColorMap()</H1>
<PRE CLASS="syntax">ColorMapMode GrGetAreaColorMap(
        GStateHandle gstate);				/* GState of which to get area color map */</PRE>
<P>
Get the mapping mode used for filling areas with unavailable colors.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
graphics.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GrGetAreaMask()">
 </A>
<H1 CLASS="refHeading">
GrGetAreaMask()</H1>
<PRE CLASS="syntax">SysDrawMask GrGetAreaMask(
        GStateHandle		gstate,			/* GState of which to get mask */
        DrawMask		* dm);			/* buffer for returned mask */</PRE>
<P>
Get the draw mask used when filling areas. The <EM>
dm</EM>
 argument should point to a buffer capable of holding at least eight bytes to get the bit-pattern of the mask; otherwise <EM>
dm</EM>
 should be NULL. The returned buffer is the 8x8 bit pattern: each byte represents a row of the pattern, and the bytes are ordered from top row to bottom.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
graphics.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GrGetAreaPattern()">
 </A>
<H1 CLASS="refHeading">
GrGetAreaPattern()</H1>
<PRE CLASS="syntax">GraphicPattern 	GrGetAreaPattern(
        GStateHandle 		gstate,					/* GState of area pattern */
        const MemHandle		* customPattern,					/* pointer to handle of block for
						 	 * returned custom pattern */</PRE>
<PRE CLASS="syntax">        word 		* customSize);					/* pointer to size of returned
							 * buffer */</PRE>
<P>
Get the area pattern used when filling areas.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
graphics.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_Video drivers:screen dumps">
 </A>
<A NAME="IX_GrGetBitmap()">
 </A>
<H1 CLASS="refHeading">
GrGetBitmap()</H1>
<PRE CLASS="syntax">MemHandle GrGetBitmap(
        GStateHandle		gstate,					/* GState containing bitmap */
        sword		x,					/* bitmap origin */
        sword		y,
        word		width,					/* bitmap width and height */
        word		height,
        XYSize	 	* sizeCopied);					/* buffer for returned size */</PRE>
<P>
Dump an area of the display to a bitmap. The handle of a block containing the bitmap is returned; the <CODE>
sizeCopied</CODE>
 pointer points to the actual size of the bitmap successfully copied.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
graphics.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GrGetBitmapMode()">
 </A>
<H1 CLASS="refHeading">
GrGetBitmapMode()</H1>
<PRE CLASS="syntax">BitmapMode 	GrGetBitmapMode(
        GStateHandle gstate);				/* GState containing bitmap */</PRE>
<P>
Get mode bits for an editable bitmap.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
graphics.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GrGetBitmapRes()">
 </A>
<H1 CLASS="refHeading">
GrGetBitmapRes()</H1>
<PRE CLASS="syntax">XYValueAsDWord GrGetBitmapRes(
        const Bitmap		* bm);				/* pointer to the bitmap */</PRE>
<P>
Get the resolution of a bitmap. </P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
graphics.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GrGetBitmapSize()">
 </A>
<H1 CLASS="refHeading">
GrGetBitmapSize()</H1>
<PRE CLASS="syntax">XYValueAsDWord GrGetBitmapSize(
        const	Bitmap	* bm);				/* pointer to the bitmap */</PRE>
<P>
Get the dimensions, in points, of a bitmap.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
graphics.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GrGetClipRegion()">
 </A>
<H1 CLASS="refHeading">
GrGetClipRegion()</H1>
<PRE CLASS="syntax">MemHandle GrGetClipRegion(
        GStateHandle		gstate,			/* subject GState */
        RegionFillRule		rule);			/* ODD_EVEN or WINDING */</PRE>
<P>
Get the current clip region. A null handle (zero) will be returned if no clip paths are se for the GState.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
graphics.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_Current position (graphics):GrGetCurPos()">
 </A>
<A NAME="IX_GrGetCurPos()">
 </A>
<H1 CLASS="refHeading">
GrGetCurPos()</H1>
<PRE CLASS="syntax">XYValueAsDWord GrGetCurPos(
        GStateHandle gstate);				/* subject GState */</PRE>
<P>
Get the current pen position.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
graphics.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GrGetCurPosWWFixed()">
 </A>
<H1 CLASS="refHeading">
GrGetCurPosWWFixed()</H1>
<PRE CLASS="syntax">void GrGetCurPosWWFixed(
        GStateHandle gstate,				/* subject GState */
        PointWWFixed 	*cp);			/* buffer in which to return cur. pos. */</PRE>
<P>
Get the current pen position.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
graphics.h</STRONG>
 </P>
</DIV>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_3f.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">GrFillEllipse() ...</A> 
<!-- to next --> | <A HREF="R_41.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">GrGetDefFontID() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
