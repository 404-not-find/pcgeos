<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: R_c.htm,v 1.2 97/06/25 18:48:14 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Routines: ClipboardSetQuickTransferFeedback() ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_b.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">ClipboardQueryItem() ...</A> 
<!-- to next --> | <A HREF="R_d.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">ConstructOptr() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_ClipboardSetQuickTransferFeedback()">
 </A>
<H1 CLASS="refHeading">
ClipboardSetQuickTransferFeedback()</H1>
<PRE CLASS="syntax">void	ClipboardSetQuickTransferFeedback(
        ClipboardQuickTransferFeedback 						cursor,
        UIFunctionsActive 						buttonFlags);</PRE>
<P>
This routine sets the image of the mouse pointer during a quick-transfer operation. Use this routine to provide visual feedback to the user during the quick-transfer. For example, an object that could not accept the quick-transfer item would set the &quot;no operation&quot; cursor while the mouse pointer was over its bounds.</P>
<P>
Pass the two following values:</P>
<DL>
<DT>
<CODE>
cursor</CODE>
</DT><DD>A value of <CODE>
ClipboardQuickTransferFeedback</CODE>
 type indicating the type of cursor to set. The possible values are listed below.</DD>
<DT>
<CODE>
buttonFlags</CODE>
</DT><DD>A record of <CODE>
UIFunctionsActive</CODE>
 flags. These flags are defined in the Input Manager section and deal with user override of the move/copy behavior.</DD>
</DL>
<P>
The cursor parameter contains a value of <CODE>
ClipboardQuickTransferFeedback</CODE>
. This is an enumerated type that defines the cursor to be set, and it has the following values:</P>
<DL>
<DT>
CQTF_MOVE</DT><DD>This sets the cursor to the specific UI's move cursor.</DD>
<DT>
CQTF_COPY</DT><DD>This sets the cursor to the specific UI's copy cursor.</DD>
<DT>
CQTF_CLEAR </DT><DD>This clears the cursor and sets it to the specific UI's modal &quot;no operation&quot; cursor.</DD>
</DL>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
clipbrd.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_ClipboardStartQuickTransfer()">
 </A>
<A NAME="IX_ClipboardQuickTransferFlags">
 </A>
<A NAME="IX_CQTF_&ldots;">
 </A>
<A NAME="IX_CQTRI_&ldots;">
 </A>
<A NAME="IX_ClipboardQuickTransferRegionInfo">
 </A>
<H1 CLASS="refHeading">
ClipboardStartQuickTransfer()</H1>
<PRE CLASS="syntax">Boolean	ClipboardStartQuickTransfer(
        ClipboardQuickTransferFlags 							flags,
        ClipboardQuickTransferFeedback							initialCursor,
        word							mouseXPos,
        word							mouseYPos,
        ClipboardQuickTransferRegionInfo *							regionParams,
        optr							notificationOD);</PRE>
<P>
This routine signals the beginning of a quick-transfer operation. Typically, an object or process will call this routine in its <CODE>
MSG_META_START_MOVE_COPY</CODE>
 handler.</P>
<P>
Pass it the following parameters:</P>
<DL>
<DT>
<CODE>
flags</CODE>
</DT><DD>A record of <CODE>
ClipboardQuickTransferFlags</CODE>
 indicating whether an addition graphic region will be attached to the cursor and whether the caller wants notification of transfer completion. The flags allowed are listed below, after the parameter list.</DD>
<DT>
<CODE>
initialCursor</DT><DD>
</CODE>
The initial cursor to use for visual feedback to the user. It is a value of <CODE>
ClipboardQuickTransferFeedback</CODE>
, either CQTF_MOVE or CQTF_COPY. If -1 is passed in this parameter, the initial cursor will be the default no-operation cursor (i.e. the transfer source may not also act as the transfer destination).</DD>
<DT>
<CODE>
mouseXPos</CODE>
</DT><DD>This field is used only if CQTF_USE_REGION is passed in <CODE>
flags</CODE>
. It is the horizontal position of the mouse in screen coordinates.</DD>
<DT>
<CODE>
mouseYPos</CODE>
</DT><DD>This field is used only if CQTF_USE_REGION is passed in <CODE>
flags</CODE>
. It is the vertical position of the mouse in screen coordinates.</DD>
<DT>
<CODE>
regionParams</DT><DD>
</CODE>
A pointer to a <CODE>
ClipboardQuickTransferRegionInfo</CODE>
 structure defining the graphical region to be attached to the cursor during the transfer operation. This structure is only required if CQTF_USE_REGION is passed in <CODE>
flags</CODE>
. It is defined below.</DD>
<DT>
<CODE>
notificationOD</DT><DD>
</CODE>
The optr of the object to be notified upon transfer completion. The object specified will receive the notification messages <CODE>
MSG_META_CLIPBOARD_NOTIFY_QUICK_TRANSFER_CONCLUDED</CODE>
 and <CODE>
MSG_..._FEEDBACK</CODE>
.</DD>
</DL>
<P>
The allowed <CODE>
ClipboardQuickTransferFlags</CODE>
 are listed below:</P>
<DL>
<DT>
CQTF_COPY_ONLY</DT><DD>
Source supports copying only (not cutting).</DD>
<DT>
CQTF_USE_REGION</DT><DD>
Source has passed the definition of a graphical region which will be attached to the tail of the quick-transfer cursor.</DD>
<DT>
CQTF_NOTIFICATION</DT><DD>
Source requires notification of completion of the transfer in order to cut original data or provide other feedback.</DD>
</DL>
<P>
If a graphical region is to be attached to the quick-transfer cursor, you must pass a pointer to a <CODE>
ClipboardQuickTransferRegionInfo</CODE>
 in the <CODE>
regionParams</CODE>
 parameter. This structure is defined below.</P>
<PRE>typedef struct {
	word	CQTRI_paramAX;
	word	CQTRI_paramBX;
	word	CQTRI_paramCX;
	word	CQTRI_paramDX;
	Point	CQTRI_regionPos;
	dword	CQTRI_strategy;
	dword	CQTRI_region;
} ClipboardQuickTransferRegionInfo;</PRE>
<P>
This structure is passed on the stack to the routine. The first four fields represent the region's definition parameters. <CODE>
CQTRI_regionPos</CODE>
 is a <CODE>
Point</CODE>
 structure indicating where (in screen coordinates) the region is to be located. <CODE>
CQTRI_strategy</CODE>
 is a pointer to the region strategy routine. <CODE>
CQTRI_strategy</CODE>
 should be a video driver strategy. To find out the strategy of the video driver associated with your window, send your object a MSG_VIS_VUP_QUERY with VUQ_VIDEO_DRIVER. Pass the handle thus gained to <CODE>
<A HREF="../../CRef/Routines/R_34.htm#IX_GeodeInfoDriver()">GeodeInfoDriver()</A></CODE>
, which will return the strategy.</P>
<P>
This routine returns an error flag: If a quick-transfer is already in progress, the return will be <CODE>
true</CODE>
. If the quick-transfer is successfully begun, the error flag will be <CODE>
false</CODE>
.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
clipbrd.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_ClipboardTestItemFormat()">
 </A>
<H1 CLASS="refHeading">
ClipboardTestItemFormat()</H1>
<PRE CLASS="syntax">Boolean	ClipboardTestItemFormat(
        TransferBlockID		header,
        ClipboardFormatID 		format);</PRE>
<P>
This routine tests whether the given format is supported by the specified transfer item. It returns <CODE>
true</CODE>
 if the format is supported, <CODE>
false</CODE>
 if the format is not supported. Pass the following values:</P>
<DL>
<DT>
<CODE>
header</CODE>
</DT><DD>A <CODE>
TransferBlockID</CODE>
 specifying the VM file handle and VM block handle of the transfer item to be checked. This is returned by the routines <CODE>
<A HREF="../../CRef/Routines/R_a.htm#IX_ClipboardGetNormalItemInfo()">ClipboardGetNormalItemInfo()</A></CODE>
, <CODE>
<A HREF="../../CRef/Routines/R_a.htm#IX_ClipboardGetQuickItemInfo()">ClipboardGetQuickItemInfo()</A></CODE>
, <CODE>
<A HREF="../../CRef/Routines/R_a.htm#IX_ClipboardGetUndoItemInfo()">ClipboardGetUndoItemInfo()</A></CODE>
, and <CODE>
<A HREF="../../CRef/Routines/R_b.htm#IX_ClipboardQueryItem()">ClipboardQueryItem()</A></CODE>
. Most often the proper routine to use is <CODE>
<A HREF="../../CRef/Routines/R_b.htm#IX_ClipboardQueryItem()">ClipboardQueryItem()</A></CODE>
.</DD>
<DT>
<CODE>
format</CODE>
</DT><DD>A <CODE>
ClipboardFormatID</CODE>
 specifying the type and manufacturer ID of the format to be checked. It is most appropriate to create this parameter from its individual parts using the macro <CODE>
<A HREF="../../CRef/Routines/R_2f.htm#IX_FormatIDFromManufacturerAndType()">FormatIDFromManufacturerAndType()</A></CODE>
.</DD>
</DL>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
clipbrd.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_ClipboardUnregisterItem()">
 </A>
<H1 CLASS="refHeading">
ClipboardUnregisterItem()</H1>
<PRE CLASS="syntax">void	ClipboardUnregisterItem(
        optr	owner);</PRE>
<P>
This routine restores the transfer item to what it was before the last <CODE>
<A HREF="../../CRef/Routines/R_b.htm#IX_ClipboardRegisterItem()">ClipboardRegisterItem()</A></CODE>
. Pass it the optr of the caller.</P>
<P>
Only the object that last registered a transfer item is allowed to unregister it. If the transfer item is owned by a different object, or if there is no transfer item, nothing will be done. If the transfer item is owned by the caller, the transfer item will be unregistered and the clipboard will be restored to its previous state.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
clipbrd.goh</STRONG>
 </P>
</DIV>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_b.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">ClipboardQueryItem() ...</A> 
<!-- to next --> | <A HREF="R_d.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">ConstructOptr() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
