<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: R_5f.htm,v 1.2 97/06/25 18:32:36 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Routines: InkFolderGetNumChildren() ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_5e.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">InkDBGetDisplayInfo() ...</A> 
<!-- to next --> | <A HREF="R_60.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">InkNoteGetCreationDate() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_InkFolderGetNumChildren()">
 </A>
<H1 CLASS="refHeading">
InkFolderGetNumChildren()</H1>
<PRE CLASS="syntax">dword 	InkFolderGetNumChildren( /* Subfolders:Notes */
        dword 		fldr, 		/* ID# of folder */
        VMFileHandle 		fh);		/* Handle of Ink DB file */</PRE>
<P>
This message returns the number of children the Ink Database folder has. The high word of the return value holds the number of sub folders; the low word holds the number of notes.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
pen.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_InkFolderMove()">
 </A>
<H1 CLASS="refHeading">
InkFolderMove()</H1>
<PRE CLASS="syntax">void 	InkFolderMove(
        dword 		fldr, 		/* ID# of folder to move */
        dword 		pfldr);/* ID# of new parent folder */</PRE>
<P>
This routine moves an Ink Database folder to a new location in the folder tree.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
pen.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_InkFolderSetTitle()">
 </A>
<H1 CLASS="refHeading">
InkFolderSetTitle()</H1>
<PRE CLASS="syntax">void 	InkFolderSetTitle(
        dword 		tag, 		/* ID# of folder */
        VMFileHandle 		fh,		/* Handle of Ink DB file */
        const char *		name); 		/* Text object */);</PRE>
<P>
This routine renames an Ink Database folder. The passed name should be null-terminated.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
pen.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_InkFolderSetTitleFromTextObject()">
 </A>
<H1 CLASS="refHeading">
InkFolderSetTitleFromTextObject()</H1>
<PRE CLASS="syntax">void 	InkFolderSetTitleFromTextObject(
        dword 		tag, 		/* ID# of folder */
        FileHandle 		fh,		/* Handle of Ink DB file */
        optr		text); 		/* Text object */);</PRE>
<P>
This routine sets the name of the passed Ink Database folder from the contents of the passed VisText object.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
pen.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_InkGetDocPageInfo()">
 </A>
<H1 CLASS="refHeading">
InkGetDocPageInfo()</H1>
<PRE CLASS="syntax">void 	InkGetDocPageInfo(
        PageSizeReport *		psr, 		/* Structure to fill with return value */
        VMFileHandle 		fh);</PRE>
<P>
This routine returns the dword ID of the head folder of an Ink Database file.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
pen.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_InkGetDocCustomGString()">
 </A>
<H1 CLASS="refHeading">
InkGetDocCustomGString()</H1>
<PRE CLASS="syntax">GStateHandle 	InkGetDocCustomGString(
        VMFileHandle 		dbfh);</PRE>
<P>
This routine returns the custom GString associated with the passed Ink Database file. Note that this custom background will only be used if the document's basic <CODE>
InkBackgroundType</CODE>
 is IBT_CUSTOM. (This may be determined using the <CODE>
<A HREF="../../CRef/Routines/R_61.htm#IX_InkSetDocGString()">InkSetDocGString()</A></CODE>
 routine.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
pen.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_InkGetDocGString()">
 </A>
<H1 CLASS="refHeading">
InkGetDocGString()</H1>
<PRE CLASS="syntax">InkBackgroundType 	InkGetDocGString(
        VMFileHandle 		dbfh);</PRE>
<P>
This routine returns the standard GString to use as a background picture with the passed Ink Database file. If the returned background type is custom, be sure to also call <CODE>
<A HREF="../../CRef/Routines/R_5f.htm#IX_InkGetDocCustomGString()">InkGetDocCustomGString()</A></CODE>
.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
pen.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_InkGetParentFolder()">
 </A>
<H1 CLASS="refHeading">
InkGetParentFolder()</H1>
<PRE CLASS="syntax">dword 	InkGetParentFolder(
        dword 		tag, 		/* ID# of folder or note */
        VMFileHandle 		fh);		/* Handle of Ink DB file */</PRE>
<P>
This message returns the dword ID of the passed Ink Database note or folder.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
pen.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_InkGetTitle()">
 </A>
<H1 CLASS="refHeading">
InkGetTitle()</H1>
<PRE CLASS="syntax">word 	InkGetTitle(
        dword 		tag, 		/* ID# of folder or note */
        VMFileHandle 		fh,		/* Handle of Ink DB file */
        char *		dest); 		/* should be INK_DB_MAX_TITLE_SIZE +1 */);</PRE>
<P>
This message fills the passed text buffer with the folder's or note's title, a null-terminated string. The routine's explicit return value is the length of the string (including the terminator).</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
pen.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_InkNoteCopyMoniker()">
 </A>
<H1 CLASS="refHeading">
InkNoteCopyMoniker()</H1>
<PRE CLASS="syntax">dword 	InkNoteCopyMoniker(
        dword 	title,	/* ID# of parent folder */
        optr 	list, 	/* Output list */
        word 	type, 	/* 1: text note
			 * 0: ink note
			 * -1: folder */</PRE>
<PRE CLASS="syntax">        word	entry);	/* Handle of Ink DB file */</PRE>
<P>
This routine copies the icon nd title into the VisMoniker.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
pen.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_InkNoteCreate()">
 </A>
<H1 CLASS="refHeading">
InkNoteCreate()</H1>
<PRE CLASS="syntax">dword 	InkNoteCreate(
        dword 		tag,		/* ID# of parent folder */
        VMFileHandle		fh);		/* Handle of Ink DB file */</PRE>
<P>
This routine creates a note and adds it to the passed folder's child list. The new note's dword ID is returned.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
pen.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_InkNoteCreatePage()">
 </A>
<H1 CLASS="refHeading">
InkNoteCreatePage()</H1>
<PRE CLASS="syntax">word 	InkNoteCreatePage(
        dword 		tag,		/* ID# of note */
        VMFileHandle		fh,		/* Handle of Ink DB file */
        word 		page); /* Page number to insert before, 
				 * CA_NULL_ELEMENT to append */</PRE>
<P>
This routine creates a new page within a note. It returns the new page number.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
pen.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_InkNoteDelete()">
 </A>
<H1 CLASS="refHeading">
InkNoteDelete()</H1>
<PRE CLASS="syntax">void 	InkNoteDelete(
        dword 		tag, 		/* ID# of note */
        VMFileHandle 		fh);		/* Handle of Ink DB file */</PRE>
<P>
This message deletes the passed note. All references to the note are deleted.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
pen.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_InkNoteFindByKeywords()">
 </A>
<H1 CLASS="refHeading">
InkNoteFindByKeywords()</H1>
<PRE CLASS="syntax">ChunkHandle 	InkNoteFindByKeywords( 
/* Return value is chunk array with elements:
 *  FindNoteHeader
 *  -dword tag-
 *  -dword tag-
 *   etc... */</PRE>
<PRE CLASS="syntax">        VMFileHandle 		fh,
        char *		strings,		/* strings to match (separated by 
					* whitespace or commas), can contain
					* C_WILDCARD or C_SINGLE_WILDCARD */</PRE>
<PRE CLASS="syntax">        word 		opt,		/* true to match all keywords; 
				 * false to match at least one keyword */</PRE>
<P>
This routine returns a chunk array containing the dword ID numbers of all notes whose keywords match the passed search string, preceded by the number of matching notes. If no such notes are found, then the returned handle will be NULL.</P>
<P>
Note that this routine will only return about 20K notes; if there are more that match, only the first 20K will be returned.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
pen.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_InkNoteFindByTitle()">
 </A>
<H1 CLASS="refHeading">
InkNoteFindByTitle()</H1>
<PRE CLASS="syntax">ChunkHandle 	InkNoteFindByTitle( 
/* Return value is chunk array with elements:
 *  FindNoteHeader
 *  -dword tag-
 *  -dword tag-
 *   etc... */</PRE>
<PRE CLASS="syntax">        const char *		string,		/* string to match (can contain C_WILDCARD
				  * or C_SINGLE_WILDCARD */</PRE>
<PRE CLASS="syntax">        SearchOptions 		opt,		/* Search options */
        Boolean 		Body, 		/* true if you want to look in the body
				 * of text notes */</PRE>
<PRE CLASS="syntax">        VMFileHandle		fh);		/* Handle of Ink DB file */</PRE>
<P>
This routine returns a chunk array containing the dword ID numbers of all notes whose titles match the passed search string, preceded by the number of matching notes. If no such notes are found, then the returned handle will be NULL.</P>
<P>
Note that this routine will only return about 20K notes; if there are more that match, only the first 20K will be returned.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
pen.goh</STRONG>
 </P>
</DIV>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_5e.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">InkDBGetDisplayInfo() ...</A> 
<!-- to next --> | <A HREF="R_60.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">InkNoteGetCreationDate() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
