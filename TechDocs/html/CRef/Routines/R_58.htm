<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: R_58.htm,v 1.3 97/08/08 16:44:54 nfiedler Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Routines: HugeArrayPrev() ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_57.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">HugeArrayDestroy() ...</A> 
<!-- to next --> | <A HREF="R_59.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">IACPProcessMessage() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_HugeArrayPrev()">
 </A>
<H1 CLASS="refHeading">
HugeArrayPrev()</H1>
<PRE CLASS="syntax">word	HugeArrayPrev(
        void **		elemPtr1,				/* indicates current element */
        void **		elemPtr2,
        word * 		size);</PRE>
<P>
This routine decrements a pointer to an element in a HugeArray to point to
the previous element. If the element was the first element in its block,
<CODE>HugeArrayPrev()</CODE> will unlock its block and lock the previous
one. The routine writes the pointer to <EM>*elemPtr1</EM>, and writes a
pointer to the first element in the block in <CODE>*elemPtr2</CODE>. It
returns the number of elements which come before the newly-locked one in
its block, counting the newly-locked element. If this routine is passed a
pointer to the first element in a HugeArray, it returns zero and
<EM>*elemPtr1</EM> will point to the first element.</P>
<P>
If the elements are variable-sized, then the word pointed to by <EM>size</EM>
will be updated to reflect the size of the newly-locked element; otherwise,
the value will be undefined.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
hugearr.h</STRONG>
 </P>
<P CLASS="refField"><STRONG>
Warnings:</STRONG>	This routine may unlock the block containing the passed element. Therefore, if you need to mark the block as dirty, do so before making this call.</P>
</DIV>
<DIV>
<A NAME="IX_HugeArrayReplace()">
 </A>
<H1 CLASS="refHeading">
HugeArrayReplace()</H1>
<PRE CLASS="syntax">void	HugeArrayReplace(
        VMFileHandle		file,
        VMBlockHandle		vmblock,				/* Handle of directory block */
        word		numElem,				/* # of elements to replace */
        dword		elemNum,				/* First element to replace */
        const void *		initData);				/* Copy this into each element</PRE>
<P>
This routine replaces one or more elements with copies of the passed data. If <EM>
initData</EM>
 is null, the elements will be filled with null bytes.</P>
<P>
If the elements are of variable size, a single element will be resized; its new size will be <CODE>
numElem </CODE>
bytes long.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
hugearr.h</STRONG>
 </P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_58.htm#IX_HugeArrayResize()">HugeArrayResize()</A></CODE>.</P>
</DIV>
<DIV>
<A NAME="IX_HugeArrayResize()">
 </A>
<H1 CLASS="refHeading">
HugeArrayResize()</H1>
<PRE CLASS="syntax">void	HugeArrayResize(
        VMFileHandle		vmFile,
        VMBlockHandle		vmBlock,			/* Handle of directory block */
        dword		elemNum,			/* Resize this element */
        word		newSize);			/* New size in bytes */</PRE>
<P>
This routine resizes an element in a Huge Array. The array must contain variable-sized elements. If the new size is larger than the old, the extra space will be zero-initialized. If it is smaller, the element will be truncated.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
hugearr.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_HugeArrayUnlock()">
 </A>
<H1 CLASS="refHeading">
HugeArrayUnlock()</H1>
<PRE CLASS="syntax">void	HugeArrayUnlock(
        void *		elemPtr);</PRE>
<P>
This routine unlocks the block of a HugeArray which contains the passed element.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
hugearr.h</STRONG>
 </P>
<P CLASS="refField"><STRONG>
Warnings:</STRONG>	If you have changed any of the elements in the block, be sure to call <CODE>
<A HREF="../../CRef/Routines/R_56.htm#IX_HugeArrayDirty()">HugeArrayDirty()</A></CODE>
 <EM>
before</EM>
 you unlock the block; otherwise the block might be discarded.</P>
</DIV>
<DIV>
<A NAME="IX_IACPConnect()">
 </A>
<H1 CLASS="refHeading">
IACPConnect()</H1>
<PRE CLASS="syntax">IACPConnection IACPConnect(
        GeodeToken 		*list, 
        IACPConnectFlags 		flags, 
        MemHandle 		appLaunchBlock, 
        optr 		client, 
        word 		*numServers);</PRE>
<P>
This routine establishes a connection between a client object (by default the calling thread's application object) and one or more servers registered with the indicated list.</P>
<P>
The <EM>
client</EM>
 argument should be <CODE>
NullOptr</CODE>
 unless the IACPCF_CLIENT_OD_SPECIFIED flag is set in the flags parameter.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
iacp.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_IACPCreateDefaultLaunchBlock()">
 </A>
<H1 CLASS="refHeading">
IACPCreateDefaultLaunchBlock()</H1>
<PRE CLASS="syntax">MemHandle IACPCreateDefaultLaunchBlock(
        word 		appMode);</PRE>
<P>
This routine creates a memory block holding an <CODE>
AppLaunchBlock</CODE>
 structure suitable for passing to <CODE>
<A HREF="../../CRef/Routines/R_58.htm#IX_IACPConnect()">IACPConnect()</A></CODE>
. The two valid values to pass in <EM>
appMode</EM>
 are <CODE>
MSG_GEN_PROCESS_OPEN_APPLICATION</CODE>
 and <CODE>
MSG_GEN_PROCESS_OPEN_ENGINE</CODE>
.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
iacp.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_IACPFinishConnect()">
 </A>
<H1 CLASS="refHeading">
IACPFinishConnect()</H1>
<PRE CLASS="syntax">void	IACPFinishConnect(
        IACPConnection		connection,
        optr		server);</PRE>
<P>
Finishes a connection made to a server which had to change from non-interactible to interactible.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
iacp.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_IACPGetServerNumber()">
 </A>
<H1 CLASS="refHeading">
IACPGetServerNumber()</H1>
<PRE CLASS="syntax">word	IACPGetServerNumber(
        IACPConnection		connection,
        optr		server);</PRE>
<P>
This routine retrieves the server number for a particular server in a particular connection. It returns the server number.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
iacp.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_IACPLostConnection()">
 </A>
<H1 CLASS="refHeading">
IACPLostConnection()</H1>
<PRE CLASS="syntax">void IACPLostConnection(
        optr 		oself, 
        IACPConnection 		connection);</PRE>
<P>
This routine is called by IACP server objects to handle when a client closes a connection.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
iacp.goh</STRONG>
 </P>
</DIV>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_57.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">HugeArrayDestroy() ...</A> 
<!-- to next --> | <A HREF="R_59.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">IACPProcessMessage() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
