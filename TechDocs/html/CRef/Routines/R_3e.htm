<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: R_3e.htm,v 1.2 97/06/25 18:24:29 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Routines: GrEndGString() ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_3d.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">GrDrawRoundRect() ...</A> 
<!-- to next --> | <A HREF="R_3f.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">GrFillEllipse() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_GrEndGString()">
 </A>
<H1 CLASS="refHeading">
GrEndGString()</H1>
<PRE CLASS="syntax">GStringErrorType GrEndGString( 
        GStateHandle gstate);			/* GState to draw to */</PRE>
<P>
Finish the definition of a graphics string.</P>
<P CLASS="refField"><STRONG>
Structures:</STRONG>	</P>
<PRE CLASS="syntax">        	typedef enum { 
		GSET_NO_ERROR, 				
		GSET_DISK_FULL 
} GStringErrorType;</PRE>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
graphics.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GrEndPath()">
 </A>
<H1 CLASS="refHeading">
GrEndPath()</H1>
<PRE CLASS="syntax">void	GrEndPath(
        GStateHandle gstate);			/* GState to draw to */</PRE>
<P>
Finish definition of a path. Further graphics commands will draw to the display, as normal.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
graphics.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GrEndUpdate()">
 </A>
<H1 CLASS="refHeading">
GrEndUpdate()</H1>
<PRE CLASS="syntax">void	GrEndUpdate(
        GStateHandle gstate);			/* GState to draw to */</PRE>
<P>
Unlocks window from an update.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
win.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GrEnumFonts()">
 </A>
<A NAME="IX_Fonts:finding available">
 </A>
<H1 CLASS="refHeading">
GrEnumFonts()</H1>
<PRE CLASS="syntax">word	GrEnumFonts( /* Return value = number of fonts found */
        FontEnumStruct		* buffer,			/* buffer for returned values */
        word		size,			/* number of structures to return */
        FontEnumFlags		flags,			/* FontEnumFlags */
        word		family);			/* FontFamily */</PRE>
<P>
Generate a list of available fonts. The font information includes both the font's ID and a string name.</P>
<P CLASS="refField"><STRONG>
Structures:</STRONG>	</P>
<PRE CLASS="syntax">        	typedef struct {
		FontID FES_ID; 
		char FES_name[FID_NAME_LEN];
} FontEnumStruct; </PRE>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
font.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GrEscape()">
 </A>
<A NAME="IX_Printing:escape codes">
 </A>
<H1 CLASS="refHeading">
GrEscape()</H1>
<PRE CLASS="syntax">void	GrEscape(
        GStateHandle		gstate,			/* GState to draw to */
        word		code,			/* escape code */
        const	void	* data,			/* pointer to the data */
        word		size);			/* Size of data, in bytes */</PRE>
<P>
Write an escape code to a graphics string.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
graphics.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GrFillArc()">
 </A>
<H1 CLASS="refHeading">
GrFillArc()</H1>
<PRE CLASS="syntax">void	GrFillArc(
        GStateHandle		gstate,				/* GState to draw to */
        sword		left,				/* bounding rectangle */
        sword		top,
        sword		right,
        sword		bottom,
        word		startAngle,				/* angles in degrees
        word		endAngle				 * counter-clockwise */
        ArcCloseType 		closeType);				/* OPEN, CHORD, or PIE */</PRE>
<P>
Fill an elliptical arc. The arc is defined by the bounding rectangle of the base ellipse and two angles. Depending on how the arc is closed, this will result in either a wedge or a chord fill.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
graphics.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GrFillArc3Point()">
 </A>
<H1 CLASS="refHeading">
GrFillArc3Point()</H1>
<PRE CLASS="syntax">void	GrFillArc3Point(
        GStateHandle		gstate,				/* GState to draw to */
        const ThreePointParams *params);</PRE>
<P>
Fill an arc. Depending on how the arc is closed, this will result in either a wedge or a chord fill. The arc is defined in terms of its endpoints and one other point, all of which must lie on the arc.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
graphics.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GrFillArc3PointTo()">
 </A>
<H1 CLASS="refHeading">
GrFillArc3PointTo()</H1>
<PRE CLASS="syntax">void	GrFillArc3PointTo(
        GStateHandle		gstate,				/* GState to draw to */
        const ThreePointArcParams 	*params);			</PRE>
<P>
As <CODE>
GrFillArc3Point()</CODE>
, above, except that one endpoint of the arc is defined by the current position.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
graphics.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GrFillBitmap()">
 </A>
<H1 CLASS="refHeading">
GrFillBitmap()</H1>
<PRE CLASS="syntax">void 	GrFillBitmap (
        GStateHandle 		gstate,				/* GState to draw to */
        sword 		x,				/* point at which to draw */
        sword 		y,
        const Bitmap 		* bm,				/* pointer to bitmap */
        Bitmap * _pascal (*callback) (Bitmap *bm));</PRE>
<P>
Fill a monochrome bitmap with the current area attributes. The arguments to this routine are the same as those for <CODE>
<A HREF="../../CRef/Routines/R_39.htm#IX_GrDrawBitmap()">GrDrawBitmap()</A></CODE>
.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
graphics.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GrFillBitmapAtCP()">
 </A>
<H1 CLASS="refHeading">
GrFillBitmapAtCP()</H1>
<PRE CLASS="syntax">void 	GrFillBitmapAtCP (
        GStateHandle 		gstate,					/* GState to draw to */
        const Bitmap 		* bm,					/* pointer to bitmap */
        Bitmap * _pascal (*callback) (Bitmap *bm));</PRE>
<P>
Fill a monochrome bitmap with the current area attributes. The bitmap will be drawn at the current position. The arguments to this routine are the same as those for <CODE>
<A HREF="../../CRef/Routines/R_39.htm#IX_GrDrawBitmapAtCP()">GrDrawBitmapAtCP()</A></CODE>
.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
graphics.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GrFillHugeBitmap()">
 </A>
<H1 CLASS="refHeading">
GrFillHugeBitmap()</H1>
<PRE CLASS="syntax">void 	GrFillHugeBitmap(
        GStateHandle 		gstate, 
        sword 		x, 
        sword 		y,
        VMFileHandle 		vmFile, 
        VMBlockHandle 		vmBlk);</PRE>
<P>
This routine fills a monochrom bitmap where said bitmap is stored in a huge array data structure. The bitmap is specified by means of the <EM>
vmFile</EM>
 and <EM>
vmBlk</EM>
 arguments which should reference the huge array.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
graphics.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GrFillHugeBitmapAtCP()">
 </A>
<H1 CLASS="refHeading">
GrFillHugeBitmapAtCP()</H1>
<PRE CLASS="syntax">void 	GrFillHugeBitmapAtCP(
        GStateHandle 		gstate, 
        VMFileHandle 		vmFile, 
        VMBlockHandle 		vmBlk);</PRE>
<P>
This routine fills a monochrom bitmap where said bitmap is stored in a huge array data structure. It will draw at the GState's current position. The bitmap is specified by means of the <EM>
vmFile</EM>
 and <EM>
vmBlk</EM>
 arguments which should reference the huge array.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
graphics.h</STRONG>
 </P>
</DIV>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_3d.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">GrDrawRoundRect() ...</A> 
<!-- to next --> | <A HREF="R_3f.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">GrFillEllipse() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
