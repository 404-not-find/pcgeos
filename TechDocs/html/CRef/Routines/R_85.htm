<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: R_85.htm,v 1.2 97/06/25 18:41:36 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Routines: SGC_MACHINE ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_84.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">SerialGetFormat() ...</A> 
<!-- to next --> | <A HREF="R_86.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">SocketBind() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_SGC_MACHINE() macro">
 </A>
<H1 CLASS="refHeading">
SGC_MACHINE</H1>
<PRE CLASS="syntax">byte	SGC_MACHINE(<EM>val</EM>);
        dword	<EM>val</EM>;</PRE>
<P>
This macro is used to extract the machine type from a <CODE>
<A HREF="../../CRef/Routines/R_92.htm#IX_SysGetConfig()">SysGetConfig()</A></CODE>
 return value.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
system.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_SGC_PROCESSOR() macro">
 </A>
<H1 CLASS="refHeading">
SGC_PROCESSOR</H1>
<PRE CLASS="syntax">byte	SGC_PROCESSOR(<EM>val</EM>);
        dword	<EM>val</EM>;</PRE>
<P>
This macro is used to extract the processor type from a <CODE>
<A HREF="../../CRef/Routines/R_92.htm#IX_SysGetConfig()">SysGetConfig()</A></CODE>
 return value.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
system.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_SocketAccept()">
 </A>
<H1 CLASS="refHeading">
SocketAccept()</H1>
<PRE CLASS="syntax">Socket SocketAccept(
        Socket 		s,
        int 		timeout);</PRE>
<P>
To make a socket wait for and accept a connection, call <CODE>
SocketAccept()</CODE>
. The socket must be a listening socket (processed by <CODE>
<A HREF="../../CRef/Routines/R_89.htm#IX_SocketListen()">SocketListen()</A></CODE>
). Because the thread will block until a connection is made or <CODE>
SocketAccept()</CODE>
 times out, programs will normally not call this routine in their main execution thread. Instead, a separate thread handles accepting a connection and receiving data from the connection. </P>
<P>
If there are no connections to accept, <CODE>
SocketAccept()</CODE>
 will set the SE_LISTEN_QUEUE_EMPTY error. </P>
<P>
This routine takes the following arguments:</P>
<DL>
<DT>
<EM>
s</EM>
</DT><DD>A listening socket (processed by <CODE>
<A HREF="../../CRef/Routines/R_89.htm#IX_SocketListen()">SocketListen()</A></CODE>
).</DD>
<DT>
<EM>
timeout</EM>
</DT><DD>Time to wait for success, in 1/60 second ticks, or SOCKET_NO_TIMEOUT to try as long as possible.</DD>
</DL>
<P>
It returns a socket which should be used to send and receive data over the connection. If the return value is zero, an error occured. Call <CODE>
<A HREF="../../CRef/Routines/R_97.htm#IX_ThreadGetError()">ThreadGetError()</A></CODE>
 to find out what the error value was.</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_89.htm#IX_SocketListen()">SocketListen()</A></CODE>,
<CODE><A HREF="../../CRef/Routines/R_87.htm#IX_SocketConnect()">SocketConnect()</A></CODE>,
<CODE><A HREF="../../CRef/Routines/R_97.htm#IX_ThreadGetError()">ThreadGetError()</A></CODE>.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
socket.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_SocketAddLoadOnMsg()">
 </A>
<H1 CLASS="refHeading">
SocketAddLoadOnMsg()</H1>
<PRE CLASS="syntax">SocketError SocketAddLoadOnMsg(
        SocketPort 		p,
        SocketLoadType 		slt,
        word 		disk,
        TCHAR 		*path);</PRE>
<P>
To make the Socket library load a program when receiving packets on a particular port, call <CODE>
SocketAddLoadOnMsg()</CODE>
. The Socket library will write out an entry to the GEOS.INI file in the [socket] category and with key &quot;LoadOnMsg&quot;. The Socket library consults these GEOS.INI file entries when it starts up and will act accordingly when it receives packets.</P>
<P>
This routine takes the following arguments:</P>
<DL>
<DT>
<EM>
p</EM>
</DT><DD>The port to monitor.</DD>
<DT>
<EM>
slt</EM>
</DT><DD>How to load the application--either by <CODE>
<A HREF="../../CRef/Routines/R_9e.htm#IX_UserLoadApplication()">UserLoadApplication()</A></CODE>
 or <CODE>
<A HREF="../../CRef/Routines/R_34.htm#IX_GeodeLoad()">GeodeLoad()</A></CODE>
.</DD>
<DT>
<EM>
disk</EM>
</DT><DD><CODE>
DiskHandle</CODE>
 of application to load. This may be a <CODE>
StandardPath</CODE>
 value.</DD>
<DT>
<EM>
path</EM>
</DT><DD>Buffer holding path of application to load.</DD>
</DL>
<P>
If successful, the routine will return SE_NORMAL (i.e., zero). Otherwise, it will return some other <CODE>
SocketError</CODE>
 value.</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_85.htm#IX_SocketAddLoadOnMsgInDomain()">SocketAddLoadOnMsgInDomain()</A></CODE>,
<CODE><A HREF="../../CRef/Routines/R_8a.htm#IX_SocketRemoveLoadOnMsg()">SocketRemoveLoadOnMsg()</A></CODE>,
<CODE><A HREF="../../CRef/Routines/R_9e.htm#IX_UserLoadApplication()">UserLoadApplication()</A></CODE>,
<CODE><A HREF="../../CRef/Routines/R_34.htm#IX_GeodeLoad()">GeodeLoad()</A></CODE>.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
socket.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_SocketAddLoadOnMsgInDomain()">
 </A>
<H1 CLASS="refHeading">
SocketAddLoadOnMsgInDomain()</H1>
<PRE CLASS="syntax">SocketError SocketAddLoadOnMsgInDomain(
        SocketPort 		p,
        SocketLoadType 		slt,
        word 		disk,
        TCHAR 		*path,
        TCHAR 		*domain);</PRE>
<P>
To make the Socket library load a program when receiving packets on a particular port within a particular domain, call <CODE>
SocketAddLoadOnMsgInDomain()</CODE>
. The Socket library will write out an entry to the GEOS.INI file in the [socket] category and with key &quot;LoadOnMsg&quot;. The Socket library consults these GEOS.INI file entries when it starts up and will act accordingly when it receives packets.</P>
<P>
This routine takes the following arguments:</P>
<DL>
<DT>
<EM>
p</EM>
</DT><DD>The port to monitor.</DD>
<DT>
<EM>
slt</EM>
</DT><DD>How to load the application--either by <CODE>
<A HREF="../../CRef/Routines/R_9e.htm#IX_UserLoadApplication()">UserLoadApplication()</A></CODE>
 or <CODE>
<A HREF="../../CRef/Routines/R_34.htm#IX_GeodeLoad()">GeodeLoad()</A></CODE>
.</DD>
<DT>
<EM>
disk</EM>
</DT><DD><CODE>
DiskHandle</CODE>
 of application to load. This may be a <CODE>
StandardPath</CODE>
 value.</DD>
<DT>
<EM>
path</EM>
</DT><DD>Buffer holding path of application to load.</DD>
<DT>
<EM>
domain</EM>
</DT><DD>Buffer holding name of the domain to monitor.</DD>
</DL>
<P>
If successful, the routine will return SE_NORMAL (i.e., zero). Otherwise, it will return some other <CODE>
SocketError</CODE>
 value.</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_85.htm#IX_SocketAddLoadOnMsg()">SocketAddLoadOnMsg()</A></CODE>,
<CODE><A HREF="../../CRef/Routines/R_8a.htm#IX_SocketRemoveLoadOnMsgInDomain()">SocketRemoveLoadOnMsgInDomain()</A></CODE>,
<CODE><A HREF="../../CRef/Routines/R_9e.htm#IX_UserLoadApplication()">UserLoadApplication()</A></CODE>,
<CODE><A HREF="../../CRef/Routines/R_34.htm#IX_GeodeLoad()">GeodeLoad()</A></CODE>.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
socket.goh</STRONG>
 </P>
</DIV>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_84.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">SerialGetFormat() ...</A> 
<!-- to next --> | <A HREF="R_86.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">SocketBind() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
