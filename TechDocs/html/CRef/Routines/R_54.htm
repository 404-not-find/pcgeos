<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: R_54.htm,v 1.3 97/07/21 11:06:25 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Routines: GSSetSubscriptAttr() ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_53.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">GSSetLineEnd() ...</A> 
<!-- to next --> | <A HREF="R_55.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">HAL_COUNT() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_GSSetSubscriptAttr() macro">
 </A>
<H1 CLASS="refHeading">
GSSetSubscriptAttr()</H1>
<PRE CLASS="syntax">#define GSSetSubscriptAttr(pos,size) \
        GR_SET_SUBSCRIPT_ATTR,(pos),(size)</PRE>
<P>
This <CODE>
GString</CODE>
 creation macro sets the vertical offset and size to use when rendering subscript text.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
gstring.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GSSetSuperScriptAttr() macro">
 </A>
<H1 CLASS="refHeading">
GSSetSuperscriptAttr()</H1>
<PRE CLASS="syntax">#define GSSetSuperscriptAttr(pos,size) \
        GR_SET_SUPERSCRIPT_ATTR,(pos),(size)</PRE>
<P>
This <CODE>
GString</CODE>
 creation macro sets the vertical offset and size to use when rendering superscript text.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
gstring.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GSSetTextAttr() macro">
 </A>
<H1 CLASS="refHeading">
GSSetTextAttr()</H1>
<PRE CLASS="syntax">#define GSSetTextAttr(cflag,r,g,b,mask,sSet,sReset,mSet,mReset,
sPad,id,pSize,trk Krn,fWeight,fWidth) \</PRE>
<PRE CLASS="syntax">        GR_SET_TEXT_ATTR,(cflag),(r),(g),(b),(mask),(sSet), \
(sReset),(mSet),(mReset),GOC_WWF(sPad), \
GOC_WORD(id), GOC_WWF(pSize),GOC_SW(trkKrn),(fWeight),(fWidth)</PRE>
<P>
This <CODE>
GString</CODE>
 creation macro sets the <CODE>
TextAttr</CODE>
 structure to use when rendering text. It takes several arguments: the four components of a <CODE>
ColorQuad</CODE>
, a drawing mask, <CODE>
TextStyle</CODE>
 flags to set and clear, <CODE>
TextMode</CODE>
 flags to set and clear, a spacing pad, a <CODE>
FontID</CODE>
, a pointsize expressed as a <CODE>
WWFixed</CODE>
 number, a track kerning value, a <CODE>
FontWeight</CODE>
, and a <CODE>
FontWidth</CODE>
.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
gstring.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GSSetTextColor() macro">
 </A>
<H1 CLASS="refHeading">
GSSetTextColor()</H1>
<PRE CLASS="syntax">#define GSSetTextColor(r,g,b) GR_SET_TEXT_COLOR,(r),(g),(b)</PRE>
<P>
This <CODE>
GString</CODE>
 creation macro sets the text-rendering color by means of red, green, and blue component values.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
gstring.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GSSetTextColorIndex() macro">
 </A>
<H1 CLASS="refHeading">
GSSetTextColorIndex()</H1>
<PRE CLASS="syntax">#define GSSetTextColorIndex(index) GR_SET_TEXT_COLOR_INDEX,(index)</PRE>
<P>
This <CODE>
GString</CODE>
 creation macro specifies the text-rendering color as an index of the palette.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
gstring.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GSSetTextColorMap() macro">
 </A>
<H1 CLASS="refHeading">
GSSetTextColorMap()</H1>
<PRE CLASS="syntax">#define GSSetTextColorMap(mode) GR_SET_TEXT_COLOR_MAP,(mode)</PRE>
<P>
This <CODE>
GString</CODE>
 creation macro sets the <CODE>
ColorMapMode</CODE>
 to use when trying to render text in an unavailable color.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
gstring.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GSSetTextMask() macro">
 </A>
<H1 CLASS="refHeading">
GSSetTextMask()</H1>
<PRE CLASS="syntax">#define GSSetTextMask(index) GR_SET_TEXT_MASK, (index)</PRE>
<P>
This <CODE>
GString</CODE>
 creation macro specifies the mask to use when rendering text.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
gstring.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GSSetTextMode() macro">
 </A>
<H1 CLASS="refHeading">
GSSetTextMode()</H1>
<PRE CLASS="syntax">#define GSSetTextMode(set,reset) \
                GR_SET_TEXT_MODE,(set),(reset) </PRE>
<P>
This <CODE>
GString</CODE>
 creation macro sets and clears <CODE>
TextMode</CODE>
 flags. It takes two arguments: the flags to set and the flags to clear.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
gstring.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GSSetTextPattern() macro">
 </A>
<H1 CLASS="refHeading">
GSSetTextPattern()</H1>
<PRE CLASS="syntax">#define GSSetTextPattern(pattern) \
        GR_SET_TEXT_PATTERN,GOC_PATTERN(pattern)</PRE>
<P>
This <CODE>
GString</CODE>
 creation macro sets the <CODE>
GraphicPattern</CODE>
 to use when rendering text.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
gstring.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GSSetTextSpacePad() macro">
 </A>
<H1 CLASS="refHeading">
GSSetTextSpacePad()</H1>
<PRE CLASS="syntax">#define GSSetTextSpacePad(pad_wbf) \
                GR_SET_TEXT_SPACE_PAD, GOC_WBF(pad_wbf)</PRE>
<P>
This <CODE>
GString</CODE>
 creation macro specifies the space pad to use when rendering text. It takes one argument: the space padding value, expressed as a <CODE>
WBFixed</CODE>
 number.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
gstring.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GSSetTextStyle() macro">
 </A>
<H1 CLASS="refHeading">
GSSetTextStyle()</H1>
<PRE CLASS="syntax">#define GSSetTextStyle(set,reset) \
                GR_SET_TEXT_STYLE,(set),(reset)</PRE>
<P>
This <CODE>
GString</CODE>
 creation macro changes the <CODE>
TextStyle</CODE>
 flags to use when drawing text. It takes two arguments, the flags to set and the flags to clear.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
gstring.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GSSetTrackKern() macro">
 </A>
<H1 CLASS="refHeading">
GSSetTrackKern()</H1>
<PRE CLASS="syntax">#define GSSetTrackKern(degree) GR_SET_TRACK_KERN, GOC_SW(degree)</PRE>
<P>
This <CODE>
GString</CODE>
 creation macro sets the track kerning value to use when rendering text strings.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
gstring.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GSSetTransform() macro">
 </A>
<H1 CLASS="refHeading">
GSSetTransform()</H1>
<PRE CLASS="syntax">#define GSSetTransform(e11_f,e12_f,e21_f,e22_f,e31_df,e32_df) \
        GR_SET_TRANSFORM,GOC_WWF(e11_f), \
GOC_WWF(e12_f),GOC_WWF(e21_f), \
GOC_WWF(e22_f),GOC_DWF(e31_df),GOC_DWF(e32_df)</PRE>
<P>
This <CODE>
GString</CODE>
 creation macro sets the coordinate transformation. The new transformation is defined in terms of the elements of a transformation matrix, four <CODE>
WWFixed</CODE>
 values and two <CODE>
DWFixed</CODE>
 values.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
gstring.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GSSetWinClipPath() macro">
 </A>
<H1 CLASS="refHeading">
GSSetWinClipPath()</H1>
<PRE CLASS="syntax">#define GSSetWinClipPath(flags) GR_SET_WIN_CLIP_PATH,(flags)</PRE>
<P>
This <CODE>
GString</CODE>
 creation macro combines the current path with the window clipping path, using the passed <CODE>
PathCombineType</CODE>
.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
gstring.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GSSetWinClipRect() macro">
 </A>
<H1 CLASS="refHeading">
GSSetWinClipRect()</H1>
<PRE CLASS="syntax">#define GSSetWinClipRect(path,rl_sw,rt_sw,rr_sw,rb_sw) \
        GR_SET_WIN_CLIP_RECT,GOC_SW(rl_sw), \
GOC_SW(rt_sw),GOC_SW(rr_sw),GOC_SW(rb_sw)</PRE>
<P>
This <CODE>
GString</CODE>
 creation macro combines a rectangle with the existing window clipping path. It takes five arguments: a <CODE>
PathCombineType</CODE>
 and the bounding coordinates of the rectangle.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
gstring.h</STRONG>
 </P>
<P>
&nbsp;</P>
</DIV>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_53.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">GSSetLineEnd() ...</A> 
<!-- to next --> | <A HREF="R_55.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">HAL_COUNT() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
