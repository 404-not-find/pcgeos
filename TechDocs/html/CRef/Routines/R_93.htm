<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: R_93.htm,v 1.2 97/06/25 18:44:11 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Routines: SysGetPenMode() ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_92.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">StreamWrite() ...</A> 
<!-- to next --> | <A HREF="R_94.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">SysShutdown() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_SysGetPenMode()">
 </A>
<A NAME="IX_Pen input:SysGetPenMode()">
 </A>
<A NAME="IX_Ink:SysGetPenMode()">
 </A>
<H1 CLASS="refHeading">
SysGetPenMode()</H1>
<PRE CLASS="syntax">Boolean	SysGetPenMode();</PRE>
<P>
This routine returns true if GEOS is running on a pen-based system, false if it is not.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
system.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_SysLocateFileInDosPath()">
 </A>
<H1 CLASS="refHeading">
SysLocateFileInDosPath()</H1>
<PRE CLASS="syntax">DiskHandle SysLocateFileInDosPath( /* sets thread's error value */
        const char		* fname,				/* file name */
        char		* buffer);				/* returned path of file */</PRE>
<P>
This routine searches for a specified file along the search path specified in the DOS environment variable PATH. The parameters are</P>
<DL>
<DT>
<CODE>
fname</CODE>
</DT><DD>A pointer to the null-terminated file name to search for.</DD>
<DT>
<CODE>
buffer</CODE>
</DT><DD>A pointer to a locked or fixed buffer into which the full path of the file will be placed.</DD>
</DL>
<P>
This routine returns the disk handle of the disk on which the file resides as well as the file's full path (with drive name) in the buffer pointed to by <CODE>
buffer</CODE>
. The path returned is a null-terminated character string. If the file could not be found, a null disk handle will be returned. The error value can be retrieved with <CODE>
<A HREF="../../CRef/Routines/R_97.htm#IX_ThreadGetError()">ThreadGetError()</A></CODE>
.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
system.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_SysNotify()">
 </A>
<A NAME="IX_SysNotifyFlags">
 </A>
<A NAME="IX_SNF_&ldots;">
 </A>
<H1 CLASS="refHeading">
SysNotify()</H1>
<PRE CLASS="syntax">word	SysNotify(
        SysNotifyFlags		flags,				/* options to offer user */
        const char 		* string1,				/* first string to display */
        const char 		* string2);				/* second string to display */</PRE>
<P>
This routine causes the kernel to put up a standard notification dialog box on the screen. This dialog box is white with a black border and is used nearly exclusively for error notification by the kernel. Pass this routine the following parameters:</P>
<DL>
<DT>
<CODE>
flags</CODE>
</DT><DD>A record of <CODE>
SysNotifyFlags</CODE>
 indicating the options the dialog presents to the user. These flags are shown below.</DD>
<DT>
<CODE>
string1</CODE>
</DT><DD>A pointer to a null-terminated character string put up in the dialog box (may be a null pointer).</DD>
<DT>
<CODE>
string2</CODE>
</DT><DD>A pointer to a second null-terminated string presented in the dialog box (may be a null pointer).</DD>
</DL>
<P>
The returned word is the user's response, based on the <CODE>
SysNotifyFlags</CODE>
 passed (see below).</P>
<P CLASS="refField"><STRONG>
Structures:</STRONG>	<CODE>
SysNotifyFlags</CODE>
 is a record of several flags; none, any, or all of the flags may be set at a time. The five flags are</P>
<DL>
<DT>
SNF_RETRY</DT><DD>Allow the user to retry the operation that brought up the notification box. If the user selects this option, it will be returned by the routine.</DD>
<DT>
SNF_EXIT</DT><DD>Allow the user to exit GEOS entirely. If the user selects this option, it will be returned by the routine after an SST_CLEAN_FORCED shutdown has been initiated.</DD>
<DT>
SNF_ABORT</DT><DD>Allow the user to abort the operation that brought up the notification box. If the user selects this option, it will be returned by the routine.</DD>
<DT>
SNF_CONTINUE</DT><DD>
Allow the user to continue the operation. If the user selects this option, it will be returned by the routine.</DD>
<DT>
SNF_REBOOT</DT><DD>
Allow the user to shut down and reboot GEOS directly. If the user selects this option, the routine will not return.</DD>
</DL>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
system.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_SysRegisterScreen()">
 </A>
<H1 CLASS="refHeading">
SysRegisterScreen()</H1>
<PRE CLASS="syntax">void	SysRegisterScreen(
        GeodeHandle		driver,
        WindowHandle		root);</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_SysSetECLevel()">
 </A>
<A NAME="IX_ErrorCheckingFlags:SysSetECLevel()">
 </A>
<H1 CLASS="refHeading">
SysSetECLevel()</H1>
<PRE CLASS="syntax">void	SysSetECLevel(
        ErrorCheckingFlags		flags,					/* level of error checking */
        MemHandle		checksumBlock);					/* block to check, if any */	</PRE>
<P>
This routine sets the error-checking level of the software. Pass it a record of <CODE>
ErrorCheckingFlags</CODE>
 indicating which levels of error checking should be employed. If checksum checking (ECF_BLOCK_CHECKSUM) is turned on, also pass the handle of a block on which the checksum will be performed.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
ec.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_SysSetExitFlags()">
 </A>
<H1 CLASS="refHeading">
SysSetExitFlags()</H1>
<PRE CLASS="syntax">word	SysGetExitFlags(
        ExitFlags		bitsToSet,
        ExitFlags		bitsToClear);</PRE>
<P>
&nbsp;</P>
</DIV>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_92.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">StreamWrite() ...</A> 
<!-- to next --> | <A HREF="R_94.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">SysShutdown() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
