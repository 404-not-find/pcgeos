<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: R_1.htm,v 1.3 97/08/14 14:40:38 cgroom Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Routines: AccessPointCommit() ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="index.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">GEOS C Routines:  ...</A> 
<!-- to next --> | <A HREF="R_2.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">AccessPointGetStringPropertyBlock() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_AccessPointCommit()">
 </A>
<H1 CLASS="refHeading">
AccessPointCommit()</H1>
<PRE CLASS="syntax">void AccessPointCommit();</PRE>
<P>
This routine commits any access point data changes to permanent storage. The AccPnt library normally calls this routine when the device shuts down; applications thus need not call it. If you're trying to track down a bug which is likely to cause the system to crash before the changes can be committed, you may find this routine useful.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	accpnt.goh</P>
</DIV>
<DIV>
<A NAME="IX_AccessPointCompareStandardProperty()">
 </A>
<H1 CLASS="refHeading">
AccessPointCompareStandardProperty()</H1>
<PRE CLASS="syntax">void AccessPointCompareStandardProperty(
        AccessPointStandardProperty 					prop,
        char 					*str);</PRE>
<P>
This routine compares the passed string to the name of the passed property.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	accpnt.goh</P>
</DIV>
<DIV>
<A NAME="IX_AccessPointCreateEntry()">
 </A>
<H1 CLASS="refHeading">
AccessPointCreateEntry()</H1>
<PRE CLASS="syntax">word AccessPointCreateEntry(
        word 		loc,
        AccessPointType 		apt);</PRE>
<P>
This routine creates a new access point. </P>
<P>
After calling this routine, you will probably want to use the <CODE>
AccessPointSet...Property()</CODE>
 routines to provide some information about the new access point. </P>
<P CLASS="refField"><STRONG>
<STRONG>
Pass:</STRONG>	</STRONG>
</P>
<DL>
<DT>
<STRONG>
loc</STRONG>
</DT><DD>The access point before which to insert the new access point. Pass zero to append the new access point to the end of the list.</DD>
<DT>
<STRONG>
apt</STRONG>
</DT><DD>The <CODE>
AccessPointType</CODE>
 of the new access point. APT_INTERNET for an ISP, APT_TERMINAL for a dialup, etc.</DD>
</DL>
<P CLASS="refField"><STRONG>
<STRONG>
Return:</STRONG></STRONG>
	ID number of the new access point.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	accpnt.goh</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_2.htm#IX_AccessPointSetStringProperty()">AccessPointSetStringProperty()</A></CODE>,
<CODE><A HREF="../../CRef/Routines/R_2.htm#IX_AccessPointSetIntegerProperty()">AccessPointSetIntegerProperty()</A></CODE>.</P>
</DIV>
<DIV>
<A NAME="IX_AccessPointDestroyEntry()">
 </A>
<H1 CLASS="refHeading">
AccessPointDestroyEntry()</H1>
<PRE CLASS="syntax">Boolean AccessPointDestroyEntry(
        word id);</PRE>
<P>
This routine deletes an access point's information. If it returns non-zero, there was an error. (Perhaps the access point was locked or did not exist.)</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	accpnt.goh</P>
</DIV>
<DIV>
<A NAME="IX_AccessPointDestroyProperty()">
 </A>
<H1 CLASS="refHeading">
AccessPointDestroyProperty()</H1>
<PRE CLASS="syntax">Boolean AccessPointDestroyProperty(
        word id, 
        char *prop);</PRE>
<P>
This routine destroys one of an access point's properties.</P>
<P CLASS="refField"><STRONG>
<STRONG>
Pass:</STRONG>	</STRONG>
</P>
<DL>
<DT>
<STRONG>
id</STRONG>
</DT><DD>The access point's ID number.</DD>
<DT>
<STRONG>
prop</STRONG>
</DT><DD>Either an <CODE>
AccessPointStandardProperty</CODE>
 value or a pointer to a buffer containing the property's name.</DD>
</DL>
<P CLASS="refField"><STRONG>
<STRONG>
Return:</STRONG></STRONG>
	Zero if there was no error, true if there was (no such access point, no such property, access point locked).</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	accpnt.goh</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_2.htm#IX_AccessPointSetStringProperty()">AccessPointSetStringProperty()</A></CODE>,
<CODE><A HREF="../../CRef/Routines/R_2.htm#IX_AccessPointSetIntegerProperty()">AccessPointSetIntegerProperty()</A></CODE>.</P>
</DIV>
<DIV>
<A NAME="IX_AccessPointGetEntries()">
 </A>
<H1 CLASS="refHeading">
AccessPointGetEntries()</H1>
<PRE CLASS="syntax">ChunkHandle AccessPointGetEntries(
        MemHandle 		mh,
        ChunkHandle 		chunk,
        AccessPointType 		apt);</PRE>
<P>
This routine gets a chunk array of all the access point IDs corresponding to access points of a given <CODE>
AccessPointType</CODE>
. Each element of the arraay is word-sized.</P>
<P CLASS="refField"><STRONG>
<STRONG>
Pass:</STRONG>	</STRONG>
</P>
<DL>
<DT>
<STRONG>
mh</STRONG>
</DT><DD>The memory block in which the chunk array shall reside.</DD>
<DT>
<STRONG>
chunk</STRONG>
</DT><DD>Either the ChunkHandle of a chunk array, or zero to request that the library allocate a chunk array.</DD>
<DT>
<STRONG>
apt</STRONG>
</DT><DD>The <CODE>
AccessPointType</CODE>
 we're interested in: APT_INTERNET, APT_TERMINAL, etc.</DD>
</DL>
<P CLASS="refField"><STRONG>
<STRONG>
Return:</STRONG></STRONG>
	The <CODE>
ChunkHandle</CODE>
 of the chunk array.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	accpnt.goh</P>
</DIV>
<DIV>
<A NAME="IX_AccessPointGetIntegerProperty()">
 </A>
<H1 CLASS="refHeading">
AccessPointGetIntegerProperty()</H1>
<PRE CLASS="syntax">Boolean AccessPointGetIntegerProperty(
        word 	id,
        char 	*prop,
        int 	*val);</PRE>
<P>
This routine retrieves the value of one of an access point's property, representing the value as an integer.</P>
<P CLASS="refField"><STRONG>
<STRONG>
Pass:</STRONG>	</STRONG>
</P>
<DL>
<DT>
<STRONG>
id</STRONG>
</DT><DD>The access point's ID number.</DD>
<DT>
<STRONG>
prop</STRONG>
</DT><DD>Either an <CODE>
AccessPointStandardProperty</CODE>
 value or a pointer to a buffer containing the property's name.</DD>
<DT>
<STRONG>
val</STRONG>
 </DT><DD>Pointer to an integer; the routine will fill in this integer with the value of the property.</DD>
</DL>
<P CLASS="refField"><STRONG>
<STRONG>
Return:</STRONG></STRONG>
	Zero if there was no error, true if there was (no such access point, no such property).</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	accpnt.goh</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_2.htm#IX_AccessPointGetStringPropertyBuffer()">AccessPointGetStringPropertyBuffer()</A></CODE>,
<CODE><A HREF="../../CRef/Routines/R_2.htm#IX_AccessPointGetStringPropertyBlock()">AccessPointGetStringPropertyBlock()</A></CODE>.</P>
</DIV>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="index.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">GEOS C Routines:  ...</A> 
<!-- to next --> | <A HREF="R_2.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">AccessPointGetStringPropertyBlock() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
