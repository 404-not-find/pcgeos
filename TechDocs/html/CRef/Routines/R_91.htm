<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: R_91.htm,v 1.2 97/06/25 18:43:51 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Routines: StreamOpen() ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_90.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">SpoolModifyPriority() ...</A> 
<!-- to next --> | <A HREF="R_92.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">StreamWrite() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_StreamOpen()">
 </A>
<H1 CLASS="refHeading">
StreamOpen()</H1>
<PRE CLASS="syntax">StreamError	 StreamOpen (
        GeodeHandle 		driver,
        word 		buffSize,
        GeodeHandle		owner,
        HeapFlags 		heapFlags,
        StreamToken *		stream);</PRE>
<P>
This routine opens a stream. It is passed the following:</P>
<DL>
<DT>
<CODE>
driver</CODE>
</DT><DD>The <CODE>
GeodeToken</CODE>
 of the stream driver.</DD>
<DT>
<CODE>
buffSize</CODE>
</DT><DD>The size of the stream buffer, in bytes.</DD>
<DT>
<CODE>
owner</CODE>
</DT><DD>The geode which will own the stream.</DD>
<DT>
<CODE>
heapFlags</CODE>
</DT><DD>The flags for the creation of the buffer block.</DD>
<DT>
<CODE>
*stream</CODE>
</DT><DD>The stream token will be written here.</DD>
</DL>
<P>
If <CODE>
StreamOpen()</CODE>
 is successful, it returns zero and writes the stream's token to <CODE>
*stream</CODE>
. If it is unsuccessful, it returns a member of the <CODE>
StreamError</CODE>
 enumerated type.</P>
</DIV>
<DIV>
<A NAME="IX_StreamQuery()">
 </A>
<H1 CLASS="refHeading">
StreamQuery()</H1>
<PRE CLASS="syntax">StreamError StreamQuery (
        GeodeHandle 		driver,
        StreamToken 		stream,
        StreamRoles 		role,
        word *		bytesAvailable);</PRE>
<P>
This routine finds out either how much free space is available in a stream's buffer, or how much data is waiting to be read. It is passed the following arguments:</P>
<DL>
<DT>
<CODE>
driver</CODE>
</DT><DD>The <CODE>
GeodeToken</CODE>
 of the stream driver.</DD>
<DT>
<CODE>
stream</CODE>
</DT><DD>The <CODE>
StreamToken</CODE>
 of the stream.</DD>
<DT>
<CODE>
role</CODE>
</DT><DD>If this is STREAM_ROLES_WRITER, the routine will return the amount of free space available in the stream buffer. If it is STREAM_ROLES_READER, it will return the amount of data waiting to be read.</DD>
<DT>
<CODE>
*bytesAvailable</DT><DD>
</CODE>
The routine will write the number of bytes available (for writing or reading) to this variable.</DD>
</DL>
<P>
If the routine is successful, it returns zero. If it is unsuccessful, it returns a member of the <CODE>
StreamError</CODE>
 enumerated type.</P>
</DIV>
<DIV>
<A NAME="IX_StreamRead()">
 </A>
<H1 CLASS="refHeading">
StreamRead()</H1>
<PRE CLASS="syntax">StreamError StreamRead (
        GeodeHandle 		driver,
        StreamToken 		stream,
        StreamBlocker 		blocker,
        word 		buffSize,
        byte *		buffer,
        word *		numBytesRead);</PRE>
<P>
This routine reads data from a stream. The routine takes the following arguments:</P>
<DL>
<DT>
<CODE>
driver</CODE>
</DT><DD>The <CODE>
GeodeToken</CODE>
 of the stream driver.</DD>
<DT>
<CODE>
stream</CODE>
</DT><DD>The <CODE>
StreamToken</CODE>
 of the stream.</DD>
<DT>
<CODE>
blocker</CODE>
</DT><DD>Specify whether to block if there is not enough data waiting to be read.</DD>
<DT>
<CODE>
buffsize</CODE>
</DT><DD>Size of passed buffer (i.e. amount of data to read from stream).</DD>
<DT>
<CODE>
buffer</CODE>
</DT><DD>Pointer to buffer where data from stream will be written.</DD>
<DT>
<CODE>
*numBytesReadRead</DT><DD>
</CODE>
<CODE>
StreamRead()</CODE>
 will write to this variable the number of bytes actually read from the stream.</DD>
</DL>
<P>
If <CODE>
StreamRead()</CODE>
 is successful, it returns zero. If it is unsuccessful, or could not read all the data requested from the stream, it returns a member of the <CODE>
StreamError</CODE>
 enumerated type.</P>
</DIV>
<DIV>
<A NAME="IX_StreamReadByte()">
 </A>
<H1 CLASS="refHeading">
StreamReadByte()</H1>
<PRE CLASS="syntax">StreamError StreamWriteByte (
        GeodeHandle 		driver,
        StreamToken 		stream,
        StreamBlocker 		blocker,
        byte *		dataByte);</PRE>
<P>
This routine reads a single byte from a stream. It takes the following arguments:</P>
<DL>
<DT>
<CODE>
driver</CODE>
</DT><DD>The <CODE>
GeodeToken</CODE>
 of the stream driver.</DD>
<DT>
<CODE>
stream</CODE>
</DT><DD>The <CODE>
StreamToken</CODE>
 of the stream.</DD>
<DT>
<CODE>
blocker</CODE>
</DT><DD>Specify whether to block if there is not enough room to write the data.</DD>
<DT>
<CODE>
*dataByte</CODE>
</DT><DD>Read a byte from the stream, and write it to this variable.</DD>
</DL>
<P>
If the routine is successful, it returns zero. If it is unsuccessful, it returns a member of the <CODE>
StreamError</CODE>
 enumerated type.</P>
</DIV>
<DIV>
<A NAME="IX_StreamSetError()">
 </A>
<H1 CLASS="refHeading">
StreamSetError()</H1>
<PRE CLASS="syntax">StreamError StreamSetError(
        Handle 		driver,
        StreamToken 		stream,
        StreamRoles 		roles,
        word 		errorCode);</PRE>
<P>
This routine sets the device-specific error code for a stream; this code can later be recovered by <CODE>
<A HREF="../../CRef/Routines/R_90.htm#IX_StreamGetError()">StreamGetError()</A></CODE>
. It takes the following arguments:</P>
<DL>
<DT>
<CODE>
driver</CODE>
</DT><DD>The <CODE>
GeodeToken</CODE>
 of the stream driver.</DD>
<DT>
<CODE>
stream</CODE>
</DT><DD>The <CODE>
StreamToken</CODE>
 of the stream.</DD>
<DT>
<CODE>
role</CODE>
</DT><DD>Either STREAM_ROLES_WRITER or STREAM_ROLES_READER.</DD>
<DT>
<CODE>
errorCode</CODE>
</DT><DD>A 16-bit device-specific error code.<CODE>
</CODE>
</DD>
</DL>
<P>
If the routine is successful, it returns zero. If it is unsuccessful, it returns a member of the <CODE>
StreamError</CODE>
 enumerated type.</P>
</DIV>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_90.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">SpoolModifyPriority() ...</A> 
<!-- to next --> | <A HREF="R_92.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">StreamWrite() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
