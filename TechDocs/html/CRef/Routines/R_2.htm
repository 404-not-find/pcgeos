<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: R_2.htm,v 1.4 97/08/14 14:43:51 cgroom Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Routines: AccessPointGetStringPropertyBlock() ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_1.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">AccessPointCommit() ...</A> 
<!-- to next --> | <A HREF="R_3.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">ArrayQuickSort() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_AccessPointGetStringPropertyBlock()">
 </A>
<H1 CLASS="refHeading">
AccessPointGetStringPropertyBlock()</H1>
<PRE CLASS="syntax">BooleanAccessPointGetStringPropertyBlock(
        word 		id,
        char 		*prop,
        MemHandle 		*data,
        int 		*datalen);</PRE>
<P>
This routine retrieves the value of one of an access point's property, returning the value as a string in a block of memory.</P>
<P CLASS="refField"><STRONG>
<STRONG>
Pass:</STRONG>	</STRONG>
</P>
<DL>
<DT>
<STRONG>
id</STRONG>
</DT><DD>The access point's ID number.</DD>
<DT>
<STRONG>
prop</STRONG>
</DT><DD>Either an <CODE>
AccessPointStandardProperty</CODE>
 value or a pointer to a buffer containing the property's name.</DD>
<DT>
<STRONG>
data</STRONG>
</DT><DD><CODE>
MemHandle</CODE>
 of block to fill with value (pass zero to request that the block be allocated).</DD>
<DT>
<STRONG>
dataLen</STRONG>
 </DT><DD>Pointer to integer; the routine will fill in this integer with the length of the value string, excluding the trailing NULL.</DD>
</DL>
<P CLASS="refField"><STRONG>
<STRONG>
Return:</STRONG></STRONG>
	Zero if there was no error, true if there was (no such access point, no such property).</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	accpnt.goh</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_2.htm#IX_AccessPointGetStringPropertyBuffer()">AccessPointGetStringPropertyBuffer()</A></CODE>,
<CODE><A HREF="../../CRef/Routines/R_1.htm#IX_AccessPointGetIntegerProperty()">AccessPointGetIntegerProperty()</A></CODE>.</P>
</DIV>
<DIV>
<A NAME="IX_AccessPointGetStringPropertyBuffer()">
 </A>
<H1 CLASS="refHeading">
AccessPointGetStringPropertyBuffer()</H1>
<PRE CLASS="syntax">Boolean AccessPointGetStringPropertyBuffer(
        word 	id,
        char 	*prop,
        char 	*buf,
        int 	*datalen);</PRE>
<P>
This routine retrieves the value of one of an access point's property, returning the value as a string in a buffer of memory.</P>
<P CLASS="refField"><STRONG>
<STRONG>
Pass:</STRONG>	</STRONG>
</P>
<DL>
<DT>
<STRONG>
id</STRONG>
</DT><DD>The access point's ID number.</DD>
<DT>
<STRONG>
prop</STRONG>
</DT><DD>Either an <CODE>
AccessPointStandardProperty</CODE>
 value or a pointer to a buffer containing the property's name.</DD>
<DT>
<STRONG>
buf</STRONG>
</DT><DD>Pointer to buffer to fill with value.</DD>
<DT>
<STRONG>
dataLen</STRONG>
 </DT><DD>Pointer to integer; pass the size of buf. The routine will fill in this integer with the length of the value string.</DD>
</DL>
<P CLASS="refField"><STRONG>
<STRONG>
Return:</STRONG></STRONG>
	Zero if there was no error, true if there was (no such access point, no such property).</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	accpnt.goh</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_2.htm#IX_AccessPointGetStringPropertyBlock()">AccessPointGetStringPropertyBlock()</A></CODE>,
<CODE><A HREF="../../CRef/Routines/R_1.htm#IX_AccessPointGetIntegerProperty()">AccessPointGetIntegerProperty()</A></CODE>.</P>
</DIV>
<DIV>
<A NAME="IX_AccessPointGetType()">
 </A>
<H1 CLASS="refHeading">
AccessPointGetType()</H1>
<PRE CLASS="syntax">AccessPointType AccessPointCommit(
        word id);</PRE>
<P>
This routine returns the type of an access point: APT_INTERNET, APT_TELNET, etc.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	accpnt.goh</P>
</DIV>


<DIV>
<A NAME="IX_AccessPointInUse()">
 </A>
<H1 CLASS="refHeading">
AccessPointInUse()</H1>
<PRE CLASS="syntax">Boolean   AccessPointInUse (word id);</PRE>
<P>
If the access point with the ID <EM>id</EM> is being used by a connection, then this routine returns <CODE>TRUE</CODE> (non-zero); otherwise, it returns <CODE>FALSE</CODE> (zero).</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>
accpnt.goh
 </P>
</DIV>


<DIV>
<A NAME="IX_AccessPointIsEntryValid()">
 </A>
<H1 CLASS="refHeading">
AccessPointIsEntryValid()</H1>
<PRE CLASS="syntax">Boolean AccessPointIsEntryValid(
        word id);</PRE>
<P>
This routine returns zero if the passed access point does not exist; it returns non-zero if it does exist.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	accpnt.goh</P>
</DIV>
<DIV>
<A NAME="IX_AccessPointLock()">
 </A>
<H1 CLASS="refHeading">
AccessPointLock()</H1>
<PRE CLASS="syntax">void AccessPointLock(
        word id);</PRE>
<P>
This routine locks an access point, preventing changes to it.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	accpnt.goh</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_2.htm#IX_AccessPointUnlock()">AccessPointUnlock()</A></CODE>.</P>
</DIV>
<DIV>
<A NAME="IX_AccessPointSetIntegerProperty()">
 </A>
<H1 CLASS="refHeading">
AccessPointSetIntegerProperty()</H1>
<PRE CLASS="syntax">Boolean AccessPointSetIntegerProperty(
        word 	id,
        char+ 	*prop,
        int 	val);</PRE>
<P>
This routine sets the value of one of an access point's properties to an integer.</P>
<P CLASS="refField"><STRONG>
<STRONG>
Pass:</STRONG>	</STRONG>
</P>
<DL>
<DT>
<STRONG>
id</STRONG>
</DT><DD>The access point's ID number.</DD>
<DT>
<STRONG>
prop</STRONG>
</DT><DD>Either an <CODE>
AccessPointStandardProperty</CODE>
 value or a pointer to a buffer containing the property's name.</DD>
<DT>
<STRONG>
val</STRONG>
</DT><DD>The new value for the property.</DD>
</DL>
<P CLASS="refField"><STRONG>
<STRONG>
Return:</STRONG></STRONG>
	Zero if there was no error, true if there was (no such access point, access point locked).</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	accpnt.goh</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_2.htm#IX_AccessPointSetStringProperty()">AccessPointSetStringProperty()</A></CODE>.</P>
</DIV>
<DIV>
<A NAME="IX_AccessPointSetStringProperty()">
 </A>
<H1 CLASS="refHeading">
AccessPointSetStringProperty()</H1>
<PRE CLASS="syntax">Boolean AccessPointSetStringProperty(
        word id,
        char *prop,
        char *val);</PRE>
<P>
This routine sets the value of one of an access point's properties to a string.</P>
<P CLASS="refField"><STRONG>
<STRONG>
Pass:</STRONG>	</STRONG>
</P>
<DL>
<DT>
<STRONG>
id</STRONG>
</DT><DD>The access point's ID number.</DD>
<DT>
<STRONG>
prop</STRONG>
</DT><DD>Either an <CODE>
AccessPointStandardProperty</CODE>
 value or a pointer to a buffer containing the property's name.</DD>
<DT>
<STRONG>
val</STRONG>
</DT><DD>The new value for the property.</DD>
</DL>
<P CLASS="refField"><STRONG>
<STRONG>
Return:</STRONG></STRONG>
	Zero if there was no error, true if there was (no such access point, access point locked).</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	accpnt.goh</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_2.htm#IX_AccessPointSetIntegerProperty()">AccessPointSetIntegerProperty()</A></CODE>.</P>
</DIV>
<DIV>
<A NAME="IX_AccessPointUnlock()">
 </A>
<H1 CLASS="refHeading">
AccessPointUnlock()</H1>
<PRE CLASS="syntax">void AccessPointUnlock(
        word id);</PRE>
<P>
This routine unlocks an access point that was previously locked.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	accpnt.goh</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_2.htm#IX_AccessPointLock()">AccessPointLock()</A></CODE>.</P>
</DIV>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_1.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">AccessPointCommit() ...</A> 
<!-- to next --> | <A HREF="R_3.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">ArrayQuickSort() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
