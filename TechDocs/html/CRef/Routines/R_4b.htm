<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: R_4b.htm,v 1.2 97/06/25 18:26:55 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Routines: GrTestPointInPath() ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_4a.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">GrSetTextMode() ...</A> 
<!-- to next --> | <A HREF="R_4c.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">GrUDivWWFixed() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_GrTestPointInPath()">
 </A>
<H1 CLASS="refHeading">
GrTestPointInPath()</H1>
<PRE CLASS="syntax">Boolean	GrTestPointInPath(
        GStateHandle		gstate,				/* subject GState */
        word		xPos,				/* point to test */
        word		yPos,
        RegionFillRule		rule);				/* ODD_EVEN or WINDING */</PRE>
<P>
Determine whether the passed point falls in the interior of the GState's path.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
graphics.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GrTestPointInPolygon()">
 </A>
<H1 CLASS="refHeading">
GrTestPointInPolygon()</H1>
<PRE CLASS="syntax">Boolean	GrTestPointInPolygon(
        GStateHandle		gstate,				/* subject GState */
        RegionFillRule		rule,				/* ODD_EVEN or WINDING */
        Point		* list,				/* array of points in polygon */
        word		numPoints,				/* number of points in array */
        sword		xCoord,				/* coordinates of point to test */
        sword		yCoord);</PRE>
<P>
Determine whether the passed point lies in the interior of the passed polygon.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
graphics.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GrTestPointInReg()">
 </A>
<H1 CLASS="refHeading">
GrTestPointInReg()</H1>
<PRE CLASS="syntax">Boolean 	GrTestPointInReg( 
        const	Region	* reg,				/* pointer to region */
        sword 		x,				/* coordinates of point to test */
        sword 		y,
        Rectangle		*boundingRect);					/* returned bounding rectangle,
							 * if point in region */</PRE>
<P>
Determine whether a point lies within the passed region. If the point is not in the region, the return value is <CODE>
true</CODE>
.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
graphics.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GrTestRectInMask()">
 </A>
<H1 CLASS="refHeading">
GrTestRectInMask()</H1>
<PRE CLASS="syntax">TestRectReturnType GrTestRectInMask(
        GStateHandle 		gstate, 
        sword 		left, 
        sword 		top,
        sword 		right, 
        sword 		bottom);	</PRE>
<P>
This routine determines whether the passed rectangular area falls within the clipping region.</P>
<P CLASS="refField"><STRONG>
Structures:</STRONG>	</P>
<PRE CLASS="syntax">        typedef ByteEnum TestRectReturnType;
TRRT_OUT,			/* rectangle completely out of region */
TRRT_PARTIAL,			/* rectangle partially in region */
TRRT_IN 			/* rectangle completely in region */</PRE>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
graphics.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GrTestRectInReg()">
 </A>
<A NAME="IX_TestRectReturnType">
 </A>
<A NAME="IX_TRRT_&ldots;">
 </A>
<H1 CLASS="refHeading">
GrTestRectInReg()</H1>
<PRE CLASS="syntax">TestRectReturnType GrTestRectInReg( 
        const Region		* reg			/* pointer to region */
        sword		left,			/* bounds of rectangle to be tested */
        sword		top,
        sword		right,
        sword		bottom);</PRE>
<P>
Determine whether a rectangle lies within the passed region.</P>
<P CLASS="refField"><STRONG>
Structures:</STRONG>	</P>
<PRE CLASS="syntax">        typedef ByteEnum TestRectReturnType;
TRRT_OUT,			/* rectangle completely out of region */
TRRT_PARTIAL,			/* rectangle partially in region */
TRRT_IN 			/* rectangle completely in region */</PRE>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
graphics.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GrTextWidth()">
 </A>
<H1 CLASS="refHeading">
GrTextWidth()</H1>
<PRE CLASS="syntax">word	GrTextWidth(
        GStateHandle		gstate,				/* subject GState */
        const	Chars	* str,				/* text string to check */
        word		size);				/* maximum number of
						 * characters to check */</PRE>
<P>
Compute the space the passed text string would require in a line of text. Use <CODE>
<A HREF="../../CRef/Routines/R_43.htm#IX_GrGetTextBounds()">GrGetTextBounds()</A></CODE>
 to determine the area necessary to render the text.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
graphics.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GrTextWidthWWFixed()">
 </A>
<H1 CLASS="refHeading">
GrTextWidthWWFixed()</H1>
<PRE CLASS="syntax">WWFixedAsDWord 	GrTextWidthWWFixed( /* returns width &lt;&lt; 16 */
        GStateHandle		gstate,				/* subject GState */
        const	Chars	* str,				/* text string to check */
        word		size)				/* maximum number of
						 * characters to check */</PRE>
<P>
Compute the spacing the passed text string would require in a line of text, accurate to a fraction of a point. Use <CODE>
<A HREF="../../CRef/Routines/R_43.htm#IX_GrGetTextBounds()">GrGetTextBounds()</A></CODE>
 to determine the area necessary to render the text.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
graphics.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GrTransform()">
 </A>
<H1 CLASS="refHeading">
GrTransform()</H1>
<PRE CLASS="syntax">XYValueAsDWord 	GrTransform(
        GStateHandle		gstate,				/* subject GState */
        sword 		xCoord,				/* coordinates to transform */
        sword 		yCoord);</PRE>
<P>
Apply the device's transformation to the passed point.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
graphics.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GrTransformDWFixed()">
 </A>
<H1 CLASS="refHeading">
GrTransformDWFixed()</H1>
<PRE CLASS="syntax">void	GrTransformDWFixed(
        GStateHandle		gstate,				/* subject GState */
        PointDWFixed		* coord);				/* coordinates to transform */</PRE>
<P>
Apply the device's transformation to the passed point.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
graphics.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GrTransformDWord()">
 </A>
<H1 CLASS="refHeading">
GrTransformDWord()</H1>
<PRE CLASS="syntax">void 	GrTransformDWord(
        GStateHandle		gstate,				/* subject GState */
        sdword		xCoord,				/* coordinates to transform */
        sdword		yCoord,
        PointDWord		* deviceCoordinates);
			/* pointer to returned devide coordinates */</PRE>
<P>
Apply the device's transormation to the passed point.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
graphics.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GrTransformWWFixed()">
 </A>
<H1 CLASS="refHeading">
GrTransformWWFixed()</H1>
<PRE CLASS="syntax">void	GrTransformWWFixed(
        GStateHandle		gstate,				/* subject GState */
        WWFixedAsDWord		xPos,				/* coordinates to transform */
        WWFixedAsDWord		yPos,
        PointWWFixed		* deviceCoordinates);
        			/* pointer to returned devide coordinates */</PRE>
<P>
Apply the device's transormation to the passed point.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
graphics.h</STRONG>
 </P>
</DIV>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_4a.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">GrSetTextMode() ...</A> 
<!-- to next --> | <A HREF="R_4c.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">GrUDivWWFixed() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
