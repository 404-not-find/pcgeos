<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: R_15.htm,v 1.2 97/06/25 18:09:39 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Routines: DataStoreSetField() ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_14.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">DataStoreNewRecord() ...</A> 
<!-- to next --> | <A HREF="R_16.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">DBAlloc() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_DataStoreSetField()">
 </A>
<H1 CLASS="refHeading">
DataStoreSetField()</H1>
<PRE CLASS="syntax">DataStoreDataError	DataStoreSetField(
        word		dsToken,	/* session token to opened datastore */
        TCHAR		*fieldNamePtr,
        FieldID		fieldID,
        void		*dataPtr,
        word		dataSize);</PRE>
<P>
Writes <EM>
dataSize</EM>
 bytes of data (<EM>dataPtr</EM>) to the passed field. Passing &quot;0&quot; in <EM>
dataSize</EM>
 deletes the field from the record. Returns a <CODE>
DataStoreDataError</CODE>
 value (DSDE_NO_ERROR if successful).</P>
<P>
If referencing field by name, pass &quot;0&quot; in <EM>
fieldID</EM>
; if referencing field by <CODE>
FieldID</CODE>
, pass NULL in <EM>
fieldNamePtr</EM>
.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
datastor.hblockHan</STRONG>
</P>
</DIV>
<DIV>
<A NAME="IX_DataStoreSetNextRecordID()">
 </A>
<H1 CLASS="refHeading">
DataStoreSetNextRecordID()</H1>
<PRE CLASS="syntax">DataStoreError	DataStoreSetNextRecordID(
        word		dsToken,	/* session token to opened datastore */
        RecordID		nextID);</PRE>
<P>
Sets the next <CODE>
RecordID</CODE>
 to be assigned to <EM>nextID</EM>. Returns a <CODE>
DataStoreError</CODE>
 value (DSE_NO_ERROR if successful).</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
datastor.h</STRONG>
</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_15.htm#IX_DataStoreSetRecordID()">DataStoreSetRecordID()</A></CODE>.</P>
</DIV>
<DIV>
<A NAME="IX_DataStoreSetRecordID()">
 </A>
<H1 CLASS="refHeading">
DataStoreSetRecordID()</H1>
<PRE CLASS="syntax">DataStoreDataError	DataStoreSetRecordID(
        word		dsToken,	/* session token to opened datastore */
        RecordID		recordID);</PRE>
<P>
Sets the <CODE>
RecordID</CODE>
 of the current record to <EM>recordID</EM>; datastore must be opened for exclusive access. If the passed <CODE>
RecordID</CODE>
 is greater than the next <CODE>
RecordID</CODE>
 to be assigned, updates the latter with the passed <CODE>
RecordID </CODE>
+ 1. Returns a <CODE>
DataStoreDataError</CODE>
 value (DSDE_NO_ERROR if successful).</P>
<P CLASS="refField"><STRONG>
Warnings:</STRONG>	Overwrites any existing record with the same <CODE>
RecordID</CODE>
 as the passed value.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
datastor.h</STRONG>
</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_15.htm#IX_DataStoreSetNextRecordID()">DataStoreSetNextRecordID()</A></CODE>.</P>
</DIV>
<DIV>
<A NAME="IX_DataStoreSetTimeStamp()">
 </A>
<H1 CLASS="refHeading">
DataStoreSetTimeStamp()</H1>
<PRE CLASS="syntax">DataStoreError	DataStoreSetTimeStamp(
        word		dsToken,	/* session token to opened datastore */
        FileDateAndTime		timestamp);</PRE>
<P>
Sets date and time that datastore was last modified to <EM>timestamp</EM>.<EM>
 </EM>
Returns a <CODE>
DataStoreError</CODE>
 value (DSE_NO_ERROR if successful).</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
datastor.h</STRONG>
</P>
</DIV>
<DIV>
<A NAME="IX_DataStoreSetVersion()">
 </A>
<H1 CLASS="refHeading">
DataStoreSetVersion()</H1>
<PRE CLASS="syntax">DataStoreError	DataStoreSetVersion(
        word		dsToken,	/* session token to opened datastore */
        ProtocolNumber		version);</PRE>
<P>
Sets the datastore's protocol number; this is useful for keeping track of different versions of a datastore. Returns a <CODE>
DataStoreError</CODE>
 value (DSE_NO_ERROR if successful).</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
datastor.h</STRONG>
</P>
</DIV>
<DIV>
<A NAME="IX_DataStoreStringSearch()">
 </A>
<H1 CLASS="refHeading">
DataStoreStringSearch()</H1>
<PRE CLASS="syntax">DataStoreError	DataStoreStringSearch(
        word		dsToken,	/* session token to opened datastore */
        SearchParams		*paramsPtr);</PRE>
<P>
Performs a string search on the datastore. If it finds a match, updates SP<EM>
_startRecord</EM>
 with the <CODE>
RecordNum</CODE>
 of the matching record and returns DSE_NO_ERROR. If it reaches the first or last record without finding a match, returns DSE_NO_MORE_RECORDS. Takes the following arguments:</P>
<DL>
<DT>
<EM>dsToken</EM></DT><DD>Session token to the opened datastore.</DD>
<DT>
<EM>paramsPtr</EM></DT><DD>Pointer to a <CODE>
SearchParams</CODE>
 structure.</DD>
<PRE>		typedef struct {
			SearchType		SP_searchType;
			RecordNum		SP_startRecord;
			dword		SP_maxRecords;
			FieldID		SP_startField;
			FieldCategory	SP_category;
			TCHAR		*SP_searchString;
			SearchFlags		SP_flags;
		} SearchParams;</PRE>
</DL>
<P CLASS="refField"><STRONG>
Warnings:</STRONG>	Returns DSSE_INDEX_RECORD_NUMBER_LIMIT_EXCEEDED if you call this routine on a datastore with more than 4,000 records.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
datastor.h</STRONG>
</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_14.htm#IX_DataStoreRecordEnum()">DataStoreRecordEnum()</A></CODE>,
<CODE><A HREF="../../CRef/Routines/R_11.htm#IX_DataStoreFieldEnum()">DataStoreFieldEnum()</A></CODE>.</P>
</DIV>
<DIV>
<A NAME="IX_DataStoreUnlockRecord()">
 </A>
<H1 CLASS="refHeading">
DataStoreUnlockRecord()</H1>
<PRE CLASS="syntax">void	DataStoreUnlockRecord(
        word		dsToken);	/* session token to opened datastore */</PRE>
<P>
Unlocks the current record. If you lock a record with <CODE>
DataStoreLock()</CODE>
, you must unlock it with this routine.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
datastor.h</STRONG>
</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_13.htm#IX_DataStoreLockRecord()">DataStoreLockRecord()</A></CODE>.</P>
</DIV>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_14.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">DataStoreNewRecord() ...</A> 
<!-- to next --> | <A HREF="R_16.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">DBAlloc() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
