<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: R_87.htm,v 1.2 97/06/25 18:41:54 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Routines: SocketClose() ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_86.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">SocketBind() ...</A> 
<!-- to next --> | <A HREF="R_88.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">SocketGetAddressController() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_SocketClose()">
 </A>
<H1 CLASS="refHeading">
SocketClose()</H1>
<PRE CLASS="syntax">SocketError SocketClose(
        Socket 		s);</PRE>
<P>
The <CODE>
SocketClose()</CODE>
 routine closes a socket and frees it. Use it to close and free a datagram socket. It is the routine to call when responding to a SE_CONNECTION_CLOSED exception. <CODE>
SocketClose()</CODE>
 may be used on a socket in any state, will shut down both outgoing and incoming data, cleans up, and frees the socket.</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Routines/R_87.htm#IX_SocketCloseSend()">SocketCloseSend()</A></CODE>.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
socket.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_SocketCloseDomainMedium()">
 </A>
<H1 CLASS="refHeading">
SocketCloseDomainMedium()</H1>
<PRE CLASS="syntax">SocketError 	SocketCloseDomainMedium(
        char 		*domain, 
        MediumAndUnit 		*mau,
        Boolean		force);</PRE>
<P>
This routine &quot;hangs up&quot; the hardware aspect of a socket connection. You may request that it only do so if there are no socket connections using the medium. If you force the medium closed with socket connections using the medium, the connections will receive no notification (they will just get SE_CONNECTION_RESET errors); therefore, you should force the medium closed only in extreme situations.</P>
<P>
This routine takes the following arguments:</P>
<DL>
<DT>
<EM>domain</EM></DT><DD>Pointer to a string holding the domain name.</DD>
<DT>
<EM>mau</EM></DT><DD>Pointer to a <CODE>
MediumAndUnit</CODE>
 structure specifying which medium to &quot;hang up&quot;.</DD>
<DT>
<EM>force</EM></DT><DD>Zero to leave the medium alone if there are active connections using it; non-zero to force the medium closed even with active connections.</DD>
</DL>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
socket.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_SocketCloseSend()">
 </A>
<H1 CLASS="refHeading">
SocketCloseSend()</H1>
<PRE CLASS="syntax">SocketError SocketCloseSend(
        Socket 		s)</PRE>
<P>
The <CODE>
SocketCloseSend()</CODE>
 routine only works with connected sockets. (You should always use <CODE>
<A HREF="../../CRef/Routines/R_87.htm#IX_SocketClose()">SocketClose()</A></CODE>
 to close a datagram socket.) It partially shuts down the socket, so that the socket can no longer send data. <CODE>
<A HREF="../../CRef/Routines/R_8a.htm#IX_SocketSend()">SocketSend()</A></CODE>
 will return SE_SOCKET_CLOSED if passed such a partially closed socket. However, you can still receive data via the socket--among other things, this means that you can use <CODE>
<A HREF="../../CRef/Routines/R_89.htm#IX_SocketRecv()">SocketRecv()</A></CODE>
 to check for an SE_CONNECTION_CLOSED exception. <CODE>
SocketCloseSend()</CODE>
 sends an SE_CONNECTION_CLOSED exception packet to the other side of the connection.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
socket.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_SocketConnect()">
 </A>
<H1 CLASS="refHeading">
SocketConnect()</H1>
<PRE CLASS="syntax">SocketError SocketConnect(
        Socket 		s,
        SocketAddress 		*addr,
        int 		timeout);</PRE>
<P>
To make a connection, call <CODE>
SocketConnect()</CODE>
. You will pass the socket created via <CODE>
<A HREF="../../CRef/Routines/R_87.htm#IX_SocketCreate()">SocketCreate()</A></CODE>
, the address to connect to, and a timeout value. </P>
<P>
You cannot form a true connection using a datagram socket. However, you can use <CODE>
SocketConnect()</CODE>
 with a datagram socket to specify a default destination address to use when sending packets.</P>
<P>
This routine takes the following arguments:</P>
<DL>
<DT>
<EM>
s</EM>
</DT><DD>The socket making the connection.</DD>
<DT>
<EM>
addr</EM>
</DT><DD>The address to connect to. This must be a primitive address returned by <CODE>
<A HREF="../../CRef/Routines/R_8a.htm#IX_SocketResolve()">SocketResolve()</A></CODE>
.</DD>
<DT>
<EM>
timeout</EM>
</DT><DD>Time to wait for success, in 1/60 second ticks, or SOCKET_NO_TIMEOUT to try as long as possible.</DD>
</DL>
<P>
The <CODE>
SocketConnect()</CODE>
 routine returns a <CODE>
SocketError</CODE>
 value. If the routine returns SE_NORMAL, then the connection was established successfully. If it returns SE_CONNECTION_REFUSED, the remote site wasn't prepared to accept the connection. If it returns SE_CONNECTION_ERROR, the connection didn't go through for some miscellaneous reason. If it returns SE_NON_UNIQUE_CONNECTION, then you're trying to create a connection that is identical to another connection: same source address, source port, destination address, destination port, and delivery type. There would be no way to tell these connections apart. If you try to open the same connection from both sides simultaneously, they may both fail with SE_NON_UNIQUE_CONNECTION.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
socket.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_SocketCreate()">
 </A>
<H1 CLASS="refHeading">
SocketCreate()</H1>
<PRE CLASS="syntax">Socket SocketCreate(
        SocketDeliveryType 			delivery);</PRE>
<P>
To create a new socket, call <CODE>
SocketCreate()</CODE>
. You will need to specify the socket's delivery type: SDT_DATAGRAM, SDT_SEQ_PACKET (sequential packets), or SDT_STREAM. If it returns zero, there was an error: call <CODE>
<A HREF="../../CRef/Routines/R_97.htm#IX_ThreadGetError()">ThreadGetError()</A></CODE>
 to get the error value, a <CODE>
SocketError</CODE>
.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
socket.goh</STRONG>
 </P>
</DIV>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_86.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">SocketBind() ...</A> 
<!-- to next --> | <A HREF="R_88.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">SocketGetAddressController() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
