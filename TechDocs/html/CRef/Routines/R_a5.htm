<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: R_a5.htm,v 1.2 97/06/25 18:47:37 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Routines: WinAckUpdate() ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_a4.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">VMPreserveBlocksHandle() ...</A> 
<!-- to next --> | <A HREF="R_a6.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">WinGeodeSetInputObj() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_WinAckUpdate()">
 </A>
<H1 CLASS="refHeading">
WinAckUpdate()</H1>
<PRE CLASS="syntax">void	WinAckUpdate(
        WindowHandle		win);</PRE>
<P>
This routine acknowledges that the application has received MSG_META_EXPOSED for the specified window, but chooses not to do any updating.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
win.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_WinApplyRotation()">
 </A>
<H1 CLASS="refHeading">
WinApplyRotation()</H1>
<PRE CLASS="syntax">void	WinApplyRotation(
        WindowHandle		win,
        WWFixedAsDWord		angle,
        WinInvalFlag		flag);</PRE>
<P>
This routine applies the specified rotation to the window's transformation matrix.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
win.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_WinApplyScale()">
 </A>
<H1 CLASS="refHeading">
WinApplyScale()</H1>
<PRE CLASS="syntax">void	WinApplyScale(
        WindowHandle		win,
        WWFixedAsDWord		xScale,
        WWFixedAsDWord		yScale,
        WinInvalFlag		flag);</PRE>
<P>
This routine applies the specified scale factor to the window's transformation matrix.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
win.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_WinApplyTransform()">
 </A>
<H1 CLASS="refHeading">
WinApplyTransform()</H1>
<PRE CLASS="syntax">void	WinApplyTransform(
        WindowHandle		win,
        const TransMatrix *		tm,
        WinInvalFlag		flag);</PRE>
<P>
This routine concatenates the passed transformation matrix with the window's transformation matrix. The result will be the window's new transformation matrix.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
win.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_WinApplyTranslation()">
 </A>
<H1 CLASS="refHeading">
WinApplyTranslation()</H1>
<PRE CLASS="syntax">void	WinApplyTranslation(
        WindowHandle		win,
        WWFixedAsDWord		xTrans,
        WWFixedAsDword		yTrans,
        WinInvalFlag		flag);</PRE>
<P>
This routine applies the specified translation to the window's transformation matrix.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
win.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_WinApplyTranslationDWord()">
 </A>
<H1 CLASS="refHeading">
WinApplyTranslationDWord()</H1>
<PRE CLASS="syntax">void	WinApplyExtTranslation(
        WindowHandle		win,
        sdword		xTrans,
        sdword		yTrans,
        WinInvalFlag		flag);</PRE>
<P>
This routine applies the specified translation to the window's transformation matrix. The translations are specified as 32-bit integers.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
win.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_WinChangeAck()">
 </A>
<H1 CLASS="refHeading">
WinChangeAck()</H1>
<PRE CLASS="syntax">WindowHandle WinChangeAck(
        WindowHandle		win,
        sword		x,
        sword		y,
        optr *		winOD);</PRE>
<P>
&nbsp;</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
win.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_WinChangePriority()">
 </A>
<H1 CLASS="refHeading">
WinChangePriority()</H1>
<PRE CLASS="syntax">void	WinChangePriority(
        WindowHandle		win,
        WinPassFlags		flags,
        word		layerID);</PRE>
<P>
This routine changes the priority for the specified window.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
win.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_WinClose()">
 </A>
<H1 CLASS="refHeading">
WinClose()</H1>
<PRE CLASS="syntax">void	WinClose(
        WindowHandle		win);</PRE>
<P>
This routine closes and frees the specified window.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
win.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_WinDecRefCount()">
 </A>
<H1 CLASS="refHeading">
WinDecRefCount()</H1>
<PRE CLASS="syntax">void	WinDecRefCount(
        WindowHandle		win);</PRE>
<P>
This routine is part of the window closing mechanism.</P>
</DIV>
<DIV>
<A NAME="IX_WinEnsureChangeNotification()">
 </A>
<H1 CLASS="refHeading">
WinEnsureChangeNotification()</H1>
<PRE CLASS="syntax">void	WinEnsureChangeNotification(void);</PRE>
<P>
&nbsp;</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
win.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_WinGeodeGetInputObj()">
 </A>
<H1 CLASS="refHeading">
WinGeodeGetInputObj()</H1>
<PRE CLASS="syntax">optr	WinGeodeGetInputObj(
        GeodeHandle		obj);</PRE>
<P>
This routine fetches the optr of the input object for the specified geode. If there is no such object, it returns a null optr.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
win.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_WinGeodeGetParentObj()">
 </A>
<H1 CLASS="refHeading">
WinGeodeGetParentObj()</H1>
<PRE CLASS="syntax">optr	WinGeodeGetParentObj(
        GeodeHandle		obj);</PRE>
<P>
This routine fetches the optr of the parent object of the specified geode. If there is no such object, it returns a null optr.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
win.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_WinGeodeSetActiveWin()">
 </A>
<H1 CLASS="refHeading">
WinGeodeSetActiveWin()</H1>
<PRE CLASS="syntax">void	WinGeodeSetActiveWin(
        GeodeHandle		gh,
        WindowHandle		win);</PRE>
<P>
This routine sets the active window for the specified geode.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
win.h</STRONG>
 </P>
</DIV>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_a4.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">VMPreserveBlocksHandle() ...</A> 
<!-- to next --> | <A HREF="R_a6.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">WinGeodeSetInputObj() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
