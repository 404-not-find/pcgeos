<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: R_5e.htm,v 1.2 97/06/25 18:32:19 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Routines: InkDBGetDisplayInfo() ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_5d.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">InitFileRevert() ...</A> 
<!-- to next --> | <A HREF="R_5f.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">InkFolderGetNumChildren() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_InkDBGetDisplayInfo()">
 </A>
<A NAME="IX_InkDBDisplayInfo">
 </A>
<A NAME="IX_IDBDI_&ldots;">
 </A>
<H1 CLASS="refHeading">
InkDBGetDisplayInfo()</H1>
<PRE CLASS="syntax">void 	InkDBGetDisplayInfo(
        InkDBDisplayInfo *		retVal,
        VMFileHandle 		fh);</PRE>
<P>
This routine returns the dword ID of the note or folder which is presently being displayed by the Ink Database. It also returns the ID of the parent folder, and the page number, if applicable.</P>
<P CLASS="refField"><STRONG>
Structures:</STRONG>	It returns this information by filling in an <CODE>
InkDBDisplayInfo</CODE>
 structure:</P>
<PRE>typedef struct {
	dword 	IDBDI_currentDisplay;
	dword 	IDBDI_parentFolder;
	word 	IDBDI_pageNumber;
} InkDBDisplayInfo;</PRE>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
pen.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_InkDBGetHeadFolder()">
 </A>
<H1 CLASS="refHeading">
InkDBGetHeadFolder()</H1>
<PRE CLASS="syntax">dword 	InkDBGetHeadFolder(
        VMFileHandle 		fh);</PRE>
<P>
This routine returns the dword ID of the head folder of an Ink Database file.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
pen.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_InkDBInit()">
 </A>
<H1 CLASS="refHeading">
InkDBInit()</H1>
<PRE CLASS="syntax">void 	InkDBInit(
        VMFileHandle 		fh);</PRE>
<P>
This routine takes a new Ink Database file. It initializes the file for use, creating all needed maps and a top-level folder. </P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
pen.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_InkDBSetDisplayInfo()">
 </A>
<H1 CLASS="refHeading">
InkDBSetDisplayInfo()</H1>
<PRE CLASS="syntax">void 	InkDBSetDisplayInfo(
        VMFileHandle 		fh,
        dword 		ofh,		/* Parent Folder dword ID# */
        dword		note,		/* ID# of note or folder to display */
        word		page); 		/* If displaying note, page # to display*/</PRE>
<P>
This routine sets the display information for an Ink Database file. This routine sets the user's location in the database. The caller must supply the dword ID number of the note or folder to display, the parent folder (0 if displaying the top level folder), and the page number to display if displaying a note.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
pen.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_InkFolderCreateSubFolder()">
 </A>
<H1 CLASS="refHeading">
InkFolderCreateSubFolder()</H1>
<PRE CLASS="syntax">dword 	InkFolderCreateSubFolder(
        dword 		tag, 	/* ID# of parent folder (0 for top-level) */
        VMFileHandle 		fh); 	/* Handle of Ink DB file */</PRE>
<P>
This routine creates a subfolder within the passed folder. The new folder is automatically added to it's parent's chunk array. The return value is new folder's dword ID number.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
pen.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_InkFolderDelete()">
 </A>
<H1 CLASS="refHeading">
InkFolderDelete()</H1>
<PRE CLASS="syntax">void 	InkFolderDelete(
        dword 		tag,		/* ID# of folder */
        VMFileHandle 		fh);		/* Handle of Ink DB file */</PRE>
<P>
This routine removes an Ink Database folder.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
pen.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_InkFolderDepthFirstTraverse()">
 </A>
<H1 CLASS="refHeading">
InkFolderDepthFirstTraverse()</H1>
<PRE CLASS="syntax">word 	InkFolderDepthFirstTraverse(
        dword 		rfldr,		/* ID# of folder at root of search tree */
        VMFileHandle		fh, 		/* Handle of Ink DB file */
        Boolean 	_pascal	(*callback)( /* far ptr to callback routine */
			dword				fldr,
			VMFileHandle 				fh,
			word *				info),</PRE>
<PRE CLASS="syntax">        word *		info);		/* Extra data to pass to callback */</PRE>
<P>
This routine does a depth-first traversal of a folder tree. The callback routine, which must be declared _pascal, can halt the search by returning <EM>
true</EM>
, in which case the search routine will immediately return <EM>
true</EM>
; otherwise the search will return <EM>
false</EM>
.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
pen.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_InkFolderDisplayChildInList()">
 </A>
<H1 CLASS="refHeading">
InkFolderDisplayChildInList()</H1>
<PRE CLASS="syntax">void 	InkFolderDisplayChildInList(
        dword 		fldr, 		/* ID# of folder */
        VMFileHandle 		fh,		/* Handle of Ink DB file */
        optr 		list, 		/* GenDynamicList */
        word		entry, 		/* entry number of child to display */
        Boolean		displayFolders); /* Include monikers in count,
							* return their monikers */</PRE>
<P>
This routine requests that a dynamic list display the name of one of a folder's children. It is normally called in an applications <CODE>
GDLI_queryMsg</CODE>
 handler.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
pen.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_InkFolderGetChildInfo()">
 </A>
<H1 CLASS="refHeading">
InkFolderGetChildInfo()</H1>
<PRE CLASS="syntax">Boolean 	InkFolderDisplayChildInfo( /* true if folder; else note */
        dword 		fldr, 		/* ID# of folder */
        VMFileHandle 		fh,		/* Handle of Ink DB file */
        word		entry, 		/* entry number of child */
        dword *		childID);	/* Pointer to returned child ID # */</PRE>
<P>
This routine returns information about one of a folder's children. The explicit return value will be true if the child is a folder, false if the child is a note. In addition, the passed dword pointer will point to the child's dword ID number.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
pen.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_InkFolderGetChildNumber()">
 </A>
<H1 CLASS="refHeading">
InkFolderGetChildNumber()</H1>
<PRE CLASS="syntax">word 	InkFolderDisplayChildInList( 
        dword 		fldr, 		/* ID# of folder */
        VMFileHandle 		fh,		/* Handle of Ink DB file */
        dword		note); 		/* ID# of child note or folder */</PRE>
<P>
This routine returns the passed note or folder's entry number within its passed parent folder.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
pen.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_InkFolderGetContents()">
 </A>
<H1 CLASS="refHeading">
InkFolderGetContents()</H1>
<PRE CLASS="syntax">DBGroupAndItem 	InkFolderGetContents(
        dword 		tag, 				/* ID# of folder */
        VMFileHandle 		fh,				/* Handle of Ink DB file */
        DBGroupAndItem *		subFolders); 		/* pointer to return value */);</PRE>
<P>
This routine returns the contents of a folder. It returns two chunk arrays, each of which is filled with dword ID numbers of the folder's children. The explicitly returned array holds the numbers of the folder's child notes. The routine also fills in a pointer with a DB item holding a chunk array with the ID numbers of the subfolders.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
pen.goh</STRONG>
 </P>
</DIV>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_5d.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">InitFileRevert() ...</A> 
<!-- to next --> | <A HREF="R_5f.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">InkFolderGetNumChildren() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
