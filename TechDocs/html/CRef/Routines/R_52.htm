<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: R_52.htm,v 1.2 97/06/25 18:28:36 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Routines: GSSetCustomLineMask() ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_51.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">GSMoveTo() ...</A> 
<!-- to next --> | <A HREF="R_53.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">GSSetLineEnd() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_GSSetCustomLineMask() macro">
 </A>
<H1 CLASS="refHeading">
GSSetCustomLineMask()</H1>
<PRE CLASS="syntax">#define GSSetCustomLineMask(m1,m2,m3,m4,m5,m6,m7,m8) \
        GR_SET_CUSTOM_LINE_MASK, (m1), (m2), (m3), (m4), (m5), (m6), (m7), \
(m8)</PRE>
<P>
This <CODE>
GString</CODE>
 creation macro specifies a new bitmap to use as the mask when drawing lines. It takes eight arguments, each a byte representing the pixels one one row.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
gstring.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GSSetCustomLineStyle() macro">
 </A>
<H1 CLASS="refHeading">
GSSetCustomLineStyle()</H1>
<PRE CLASS="syntax">#define GSSetCustomLineStyle(index,count) \
        GR_SET_CUSTOM_LINE_STYLE,(index),(count)</PRE>
<P>
This <CODE>
GString</CODE>
 creation macro sets a custom style, or &quot;dottedness,&quot; to use when drawing lines. It takes two arguments: the first is the index into the pattern to use, the second is the number of dash pairs in the line style. Following this macro should appear a <CODE>
DashPairArray</CODE>
 containing the line style's data.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
gstring.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GSSetCustomTextMask() macro">
 </A>
<H1 CLASS="refHeading">
GSSetCustomTextMask()</H1>
<PRE CLASS="syntax">#define GSSetCustomTextMask(m1,m2,m3,m4,m5,m6,m7,m8) \
        GR_SET_CUSTOM_TEXT_MASK, (m1), (m2), (m3), (m4), (m5), (m6), (m7),
(m8)</PRE>
<P>
This <CODE>
GString</CODE>
 creation macro specifies a custom bitmask to use when rendering text. It takes eight arguments, each a byte representing one row of pixel data.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
gstring.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GSSetCustomTextPattern() macro">
 </A>
<H1 CLASS="refHeading">
GSSetCustomTextPattern()</H1>
<PRE CLASS="syntax">#define GSSetCustomTextPattern(pattern,size) \
        GR_SET_CUSTOM_TEXT_PATTERN,GOC_PATTERN(pattern), GOC_WORD(size)</PRE>
<P>
This <CODE>
GString</CODE>
 creation macro sets a custom pattern to use when rendering text. It takes two arguments: a <CODE>
GraphicPattern</CODE>
 value and the size of the pattern's data. Following this macro should appear the pattern's data.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
gstring.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GSSetDefaultTransformation() macro">
 </A>
<H1 CLASS="refHeading">
GSSetDefaultTransformation()</H1>
<PRE CLASS="syntax">#define GSSetDefaultTransform() \
        GR_SET_DEFAULT_TRANSFORM</PRE>
<P>
This <CODE>
GString</CODE>
 creation macro replaces the current coordinate transformation with the default coordinate transformation.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
gstring.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GSSetFont() macro">
 </A>
<H1 CLASS="refHeading">
GSSetFont()</H1>
<PRE CLASS="syntax">#define GSSetFont(id,size_wbf) \
                GR_SET_FONT,GOC_WBF(size_wbf),GOC_WORD(id)</PRE>
<P>
This <CODE>
GString</CODE>
 creation macro sets the font to use when rendering text. It takes two arguments: a <CODE>
FontID</CODE>
 and a pointsize, expressed as a <CODE>
WBFixed</CODE>
 number.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
gstring.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GSSetFontWeight() macro">
 </A>
<H1 CLASS="refHeading">
GSSetFontWeight()</H1>
<PRE CLASS="syntax">#define GSSetFontWeight(weight) GR_SET_FONT_WEIGHT,GOC_WORD(weight)</PRE>
<P>
This <CODE>
GString</CODE>
 creation macro sets the <CODE>
FontWeight</CODE>
 to use when rendering text.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
gstring.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GSSetFontWidth() macro">
 </A>
<H1 CLASS="refHeading">
GSSetFontWidth()</H1>
<PRE CLASS="syntax">#define GSSetFontWidth(width) GR_SET_FONT_WIDTH,GOC_WORD(width) </PRE>
<P>
This <CODE>
GString</CODE>
 creation macro sets the <CODE>
FontWidth</CODE>
 to use when rendering text.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
gstring.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GSSetGStringBounds() macro">
 </A>
<H1 CLASS="refHeading">
GSSetGStringBounds()</H1>
<PRE CLASS="syntax">#define GSSetGStringBounds(x1_w,y1_w,x2_w,y2_w) \
        GR_SET_GSTRING_BOUNDS,GOC_SW(x1_w),GOC_SW(y1_w), \
GOC_SW(x2_w),GOC_SW(y2_w)</PRE>
<P>
This <CODE>
GString</CODE>
 creation macro is useful for optimizations. When drawing your <CODE>
GString</CODE>
, the graphics system will take time to traverse your <CODE>
GString</CODE>
 and determine its drawing bounds. If you compute those bounds ahead of time, you may pass them as arguments to this macro--if the graphics system encounters this <CODE>
GString</CODE>
 element, it won't bother to traverse the rest of the <CODE>
GString</CODE>
, but will use the pre-computed values. Thus, if you use this <CODE>
GString</CODE>
 element, you should place it at the beginning of your <CODE>
GString</CODE>
. The macro takes four word-length arguments, the coordinates of the bounds of the <CODE>
GString</CODE>
.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
gstring.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GSSetLineAttr() macro">
 </A>
<H1 CLASS="refHeading">
GSSetLineAttr()</H1>
<PRE CLASS="syntax">#define GSSetLineAttr(r,g,b,mode,mask,width,end,join,style) \
        GR_SET_LINE_ATTR,(CF_RGB),(r),(g),(b),(mask),(mode),(end),(join), \
(style) ,GOC_WWF(width)</PRE>
<P>
This <CODE>
GString</CODE>
 creation macro sets the <CODE>
LineAttr </CODE>
to use when drawing lines. It takes several arguments: the red, green, and blue components of the color to use; the ColorMapMode to use when trying to draw in an unavailable color, the drawing mask to use, the width, the <CODE>
LineEnd</CODE>
, the <CODE>
LineJoin</CODE>
, and the <CODE>
LineStyle</CODE>
.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
gstring.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GSSetLineColor() macro">
 </A>
<H1 CLASS="refHeading">
GSSetLineColor()</H1>
<PRE CLASS="syntax">#define GSSetLineColor(r,g,b) GR_SET_LINE_COLOR,(r),(g),(b)</PRE>
<P>
This <CODE>
GString</CODE>
 creation macro sets the line-drawing color in terms of its red, green, and blue components.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
gstring.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GSSetLineColorIndex() macro">
 </A>
<H1 CLASS="refHeading">
GSSetLineColorIndex()</H1>
<PRE CLASS="syntax">#define GSSetLineColorIndex(color) GR_SET_LINE_COLOR_INDEX, (color)</PRE>
<P>
This <CODE>
GString</CODE>
 creation macro sets the line-drawing color by specifying which entry in the palette to use.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
gstring.h</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_GSSetLineColorMap() macro">
 </A>
<H1 CLASS="refHeading">
GSSetLineColorMap()</H1>
<PRE CLASS="syntax">#define GSSetLineColorMap(mode) GR_SET_LINE_COLOR_MAP,(mode)</PRE>
<P>
This <CODE>
GString</CODE>
 creation macro sets the <CODE>
ColorMapMode</CODE>
 to use when trying to draw lines with an unavailable color.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
gstring.h</STRONG>
 </P>
</DIV>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="R_51.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">GSMoveTo() ...</A> 
<!-- to next --> | <A HREF="R_53.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">GSSetLineEnd() ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
