<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: S_32.htm,v 1.2 97/06/25 18:55:49 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Structs: ScannerTokenCellData ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="S_31.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">ReleaseNumber ...</A> 
<!-- to next --> | <A HREF="S_33.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">SerialBaud ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_ScannerTokenCellData">
 </A>
<A NAME="IX_STCD_cellRef">
 </A>
<H1 CLASS="refHeading">
ScannerTokenCellData</H1>
<PRE CLASS="syntax">typedef struct {
CellReference			STCD_cellRef;
} ScannerTokenCellData;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_ScannerTokenData">
 </A>
<A NAME="IX_STD_&ldots;">
 </A>
<H1 CLASS="refHeading">
ScannerTokenData</H1>
<PRE CLASS="syntax">typedef union {
ScannerTokenNumberData					STD_number;
ScannerTokenStringData					STD_string;
ScannerTokenCellData					STD_cell;
ScannerTokenIdentifierData					STD_identifier;
ScannerTokenOperatorData					STD_operator;
} ScannerTokenData;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_ScannerTokenIdentifierData">
 </A>
<A NAME="IX_STID_start">
 </A>
<H1 CLASS="refHeading">
ScannerTokenIdentifierData</H1>
<PRE CLASS="syntax">typedef struct {
word		STID_start;
} ScannerTokenIdentifierData;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_ScannerTokenNumberData">
 </A>
<A NAME="IX_STND_value">
 </A>
<H1 CLASS="refHeading">
ScannerTokenNumberData</H1>
<PRE CLASS="syntax">typedef struct {
FloatNum		STND_value;
} ScannerTokenNumberData;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_ScannerTokenOperatorData">
 </A>
<A NAME="IX_STOD_operatorID">
 </A>
<H1 CLASS="refHeading">
ScannerTokenOperatorData</H1>
<PRE CLASS="syntax">typedef struct {
OperatorType			STOD_operatorID;
} ScannerTokenOperatorData;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_ScannerTokenStringData">
 </A>
<A NAME="IX_STSD_&ldots;">
 </A>
<H1 CLASS="refHeading">
ScannerTokenStringData</H1>
<PRE CLASS="syntax">typedef struct {
word	STSD_start;
word	STSD_length;
} ScannerTokenStringData;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_ScannerTokenType">
 </A>
<A NAME="IX_SCANNER_TOKEN_&ldots;">
 </A>
<H1 CLASS="refHeading">
ScannerTokenType</H1>
<PRE CLASS="syntax">typedef ByteEnum ScannerTokenType;
#define SCANNER_TOKEN_NUMBER 									0
#define SCANNER_TOKEN_STRING 									1
#define SCANNER_TOKEN_CELL 									2
#define SCANNER_TOKEN_END_OF_EXPRESSION 									3
#define SCANNER_TOKEN_OPEN_PAREN 									4
#define SCANNER_TOKEN_CLOSE_PAREN 									5
#define SCANNER_TOKEN_IDENTIFIER 									6
#define SCANNER_TOKEN_OPERATOR 									7
#define SCANNER_TOKEN_LIST_SEPARATOR									8</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_ScriptAttrAsWord">
 </A>
<H1 CLASS="refHeading">
ScriptAttrAsWord</H1>
<PRE CLASS="syntax">typedef word ScriptAttrAsWord;
/* 	High byte is a vertical offset, as a fraction of the font size.
	Low byte is a fractional scale to use.</PRE>
<PRE CLASS="syntax">	Thus, setting a subscript attr to 0x8020 would result in subscript
	characters being printed half a line down and at 1/4 normal size. */</PRE>
<P>
This structure specifies the offset and scale factor with which sub- and superscript characters should draw.</P>
</DIV>
<DIV>
<A NAME="IX_ScriptFace">
 </A>
<A NAME="IX_SF_&ldots;  (ScriptFace)">
 </A>
<H1 CLASS="refHeading">
ScriptFace</H1>
<PRE CLASS="syntax">typedef byte ScriptFace;
#define SF_CURSIVE 0x0080
#define SF_CALLIGRAPHIC 0x0000</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_sdword">
 </A>
<H1 CLASS="refHeading">
sdword</H1>
<PRE CLASS="syntax">typedef long sdword;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_SearchFlags">
 </A>
<H1 CLASS="refHeading">
SearchFlags</H1>
<PRE CLASS="syntax">typedef ByteFlags SearchFlags;
#define	SF_BACKWARDS	 		0x80
#define	SF_START_AT_END	 		0x40
#define	SF_IGNORE_CASE	 		0x20
#define	SF_NO_WILDCARDS	 		0x10
#define	SF_PARTIAL_WORD	 		0x08</PRE>
<P>
Flags to define search parameters; see <CODE>
SearchParams</CODE>
 and <CODE>
<A HREF="../../CRef/Routines/R_15.htm#IX_DataStoreStringSearch()">DataStoreStringSearch()</A></CODE>
.</P>
</DIV>
<DIV>
<A NAME="IX_SearchParams">
 </A>
<H1 CLASS="refHeading">
SearchParams</H1>
<PRE CLASS="syntax">typedef struct {
SearchType		SP_searchType;
dword		SP_maxRecords;
FieldID		SP_startField;
FieldCategory	SP_category;
TCHAR		*SP_searchString;
SearchFlags		SP_flags;
} SearchParams;</PRE>
<P>
Structure for specifying search conditions when calling <CODE>
<A HREF="../../CRef/Routines/R_15.htm#IX_DataStoreStringSearch()">DataStoreStringSearch()</A></CODE>
.</P>
</DIV>
<DIV>
<A NAME="IX_SearchType">
 </A>
 </A>
<H1 CLASS="refHeading">
SearchType</H1>
<PRE CLASS="syntax">typedef ByteEnum SearchType;
#define	ST_ALL	 		1	/* search all string fields */
#define	ST_FIELD			2	/* search by FieldID */
#define	ST_CATEGORY			3	/* search by FieldCategory */</PRE>
<P>
Values to specify in search parameters; see <CODE>
SearchParams</CODE>
 and <CODE>
<A HREF="../../CRef/Routines/R_15.htm#IX_DataStoreStringSearch()">DataStoreStringSearch()</A></CODE>
.</P>
</DIV>
<DIV>
<A NAME="IX_segment">
 </A>
<H1 CLASS="refHeading">
segment</H1>
<PRE CLASS="syntax">typedef word segment;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_SemaphoreError">
 </A>
<A NAME="IX_SE_&ldots;">
 </A>
<H1 CLASS="refHeading">
SemaphoreError</H1>
<PRE CLASS="syntax">typedef enum {
SE_NO_ERROR,					/* No error occurred */
SE_TIMEOUT,					/* The semaphore timed out before
					 * it could be grabbed by the thread */</PRE>
<PRE CLASS="syntax">SE_PREVIOUS_OWNER_DIED					/* The current holder of the semaphore
					 * exited abnormally */</PRE>
<PRE CLASS="syntax">} SemaphoreError;</PRE>
<P>
Determines the error encountered by semaphore and threadlock routines such as <CODE>
<A HREF="../../CRef/Routines/R_98.htm#IX_ThreadPSem()">ThreadPSem()</A></CODE>
 and <CODE>
<A HREF="../../CRef/Routines/R_98.htm#IX_ThreadPTimedSem()">ThreadPTimedSem()</A></CODE>
.</P>
<DL>
<DT>
SE_NO_ERROR</DT><DD>
No error occurred and the semaphore was grabbed properly.</DD>
<DT>
SE_TIMEOUT</DT><DD>
The time elapsed and the semaphore was not grabbed. If this value is returned, the thread should <EM>
not</EM>
 proceed with whatever protected operation was to happen. Instead, it should either attempt to grab the semaphore again or should proceed with other tasks.</DD>
<DT>
SE_PREVIOUS_OWNER_DIED</DT><DD>
The previous owner of the semaphore exited abnormally. If the thread currently holding the semaphore exited without releasing the semaphore, for example, this would be returned.</DD>
</DIV>
</DL>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="S_31.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">ReleaseNumber ...</A> 
<!-- to next --> | <A HREF="S_33.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">SerialBaud ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
