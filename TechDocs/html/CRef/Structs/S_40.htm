<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: S_40.htm,v 1.2 97/06/25 18:58:30 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Structs: TravelOption ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="S_3f.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">TimerHandle ...</A> 
<!-- to next --> | <A HREF="S_41.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">UndoActionStruct ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_VisTravelOption">
 </A>
<A NAME="IX_TravelOption">
 </A>
<A NAME="IX_GenTravelOption">
 </A>
<A NAME="IX_TO_&ldots;">
 </A>
<H1 CLASS="refHeading">
TravelOption</H1>
<PRE CLASS="syntax">typedef enum {
 TO_NULL,
 TO_SELF,
 TO_OBJ_BLOCK_OUTPUT,
 TO_PROCESS
} TravelOption;
/* VisClass defines one other travel option: */
typedef enum {
 TO_VIS_PARENT=_FIRST_VisClass
} VisTravelOption;
/* GenClass defines some more travel options: */
typedef enum /* word */ {
 TO_GEN_PARENT=_FIRST_GenClass,
 TO_FOCUS,
 TO_TARGET,
 TO_MODEL,
 TO_APP_FOCUS,
 TO_APP_TARGET,
 TO_APP_MODEL,
 TO_SYS_FOCUS,
 TO_SYS_TARGET,
 TO_SYS_MODEL
} GenTravelOption;</PRE>
<P>
This enumerated type can be used to specify the recipient of a message. Note that the values set up in the <CODE>
TravelOption</CODE>
, <CODE>
VisTravelOption</CODE>
, and <CODE>
GenTravelOption</CODE>
 have been set up as descrete values.</P>
</DIV>
<DIV>
<A NAME="IX_TRUE">
 </A>
<H1 CLASS="refHeading">
TRUE</H1>
<PRE CLASS="syntax">#define TRUE		-1	/* use as return value, not for comparisons */
#define FALSE		 0</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_TypeFromFormatID() macro">
 </A>
<H1 CLASS="refHeading">
TypeFromFormatID</H1>
<PRE CLASS="syntax">word	TypeFromFormatID(type);
        ClipboardItemFormatID			type;</PRE>
<P>
This macro extracts the format ID from the given clipboard format ID and manufacturer value.</P>
</DIV>
<DIV>
<A NAME="IX_UIFunctionsActive">
 </A>
<A NAME="IX_UIFA_&ldots;">
 </A>
<H1 CLASS="refHeading">
UIFunctionsActive</H1>
<PRE CLASS="syntax">typedef ByteFlags UIFunctionsActive;
#define UIFA_SELECT				0x80
#define UIFA_MOVE_COPY 				0x40
#define UIFA_FEATURES 				0x20
#define UIFA_CONSTRAIN 				0x10
#define UIFA_PREF_A 				0x08
#define UIFA_PREF_B 				0x04
#define UIFA_PREF_C 				0x02
#define UIFA_IN 				0x01
#define UIFA_ADJUST 				0x08
#define UIFA_EXTEND 				0x04
#define UIFA_MOVE 				0x08
#define UIFA_COPY 				0x04
#define UIFA_POPUP 				0x08
#define UIFA_PAN 				0x04</PRE>
<P>
These flags describe the context of the user's input, providing some modal information. </P>
</DIV>
<DIV>
<A NAME="IX_UIInterfaceLevel">
 </A>
<H1 CLASS="refHeading">
UIInterfaceLevel</H1>
<P>
See <CODE>
<A HREF="../../CRef/Routines/R_9e.htm#IX_UserGetInterfaceLevel()">UserGetInterfaceLevel()</A></CODE>
.</P>
</DIV>
<DIV>
<A NAME="IX_UndoActionDataFlags">
 </A>
<A NAME="IX_UADF_&ldots;">
 </A>
<H1 CLASS="refHeading">
UndoActionDataFlags</H1>
<PRE CLASS="syntax">typedef struct {
dword 		UADF_flags;
word 		UADF_extraflags;
} UndoActionDataFlags;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_UndoActionDataPtr">
 </A>
<A NAME="IX_UADP_&ldots;">
 </A>
<H1 CLASS="refHeading">
UndoActionDataPtr</H1>
<PRE CLASS="syntax">typedef struct {
void 		*UADP_ptr;
word 		UADP_size;
} UndoActionDataPtr;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_UndoActionDataType">
 </A>
<A NAME="IX_UADT_&ldots;">
 </A>
<H1 CLASS="refHeading">
UndoActionDataType</H1>
<PRE CLASS="syntax">typedef enum /* word */ {
UADT_FLAGS,
UADT_PTR,
UADT_VM_CHAIN,
} UndoActionDataType;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_UndoActionDataUnion">
 </A>
<A NAME="IX_UADU_&ldots;">
 </A>
<H1 CLASS="refHeading">
UndoActionDataUnion</H1>
<PRE CLASS="syntax">typedef union {
/* To find out the type of data stored in this
 * union, check the value of the UndoActionStruct's
 * UAS_dataType field. */
UndoActionDataFlags 				UADU_flags;
UndoActionDataPtr 				UADU_ptr;
UndoActionDataVMChain 				UADU_vmChain;
} UndoActionDataUnion;
#define NULL_UNDO_CONTEXT 0</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_UndoActionDataVMChain">
 </A>
<A NAME="IX_UADVMC_&ldots;">
 </A>
<H1 CLASS="refHeading">
UndoActionDataVMChain</H1>
<PRE CLASS="syntax">typedef struct {
/* This structure is filled in by the code for
 * MSG_META_UNDO. VMChains passed to 
 * MSG_GEN_PROCESS_UNDO_ADD_ACTION should lie in the undo
 * file (which can be obtained by sending 
 * MSG_GEN_PROCESS_UNDO_GET_FILE). */
VMChain 			UADVMC_vmChain;
VMFileHandle 			UADVMC_file;
} UndoActionDataVMChain;</PRE>
<P>
&nbsp;</P>
</DIV>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="S_3f.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">TimerHandle ...</A> 
<!-- to next --> | <A HREF="S_41.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">UndoActionStruct ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
