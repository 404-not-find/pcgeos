<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: S_44.htm,v 1.2 97/06/25 18:59:19 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Structs: VMOpenType ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="S_43.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">VisRulerType ...</A> 
<!-- to next --> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_VMOpenType">
 </A>
<A NAME="IX_VMO_&ldots;  (VMOpenType type)">
 </A>
<H1 CLASS="refHeading">
VMOpenType</H1>
<PRE CLASS="syntax">typedef ByteEnum VMOpenType;
#define VMO_OPEN							0
#define VMO_TEMP_FILE							1
#define VMO_CREATE							2
#define VMO_CREATE_ONLY							3
#define VMO_CREATE_TRUNCATE							4
#define VMO_NATIVE_WITH_EXT_ATTRS							0x80</PRE>
<P>
The following types are available:</P>
<DL>
<DT>
VMO_TEMP_FILE</DT><DD>
If this is passed, the file will be a temporary data file. When you create a temporary file, you pass a directory path, not a file name. The path should be followed by fourteen null bytes, including the string's terminating null. The system will choose an appropriate file name and add it to the path string.</DD>
<DT>
VMO_CREATE_ONLY</DT><DD>
If this is passed, the document will be created. If a document with the specified name already exists in the working directory, <CODE>
<A HREF="../../CRef/Routines/R_a3.htm#IX_VMOpen()">VMOpen()</A></CODE>
 will return an error condition.</DD>
<DT>
VMO_CREATE</DT><DD>
If this is passed, the file will be created if it does not already exist; otherwise it will be opened.</DD>
<DT>
VMO_CREATE_TRUNCATE</DT><DD>
If this is passed, the file will be created if it does not already exist; otherwise, it will be opened and truncated (all data blocks will be freed).</DD>
<DT>
VMO_OPEN</DT><DD>
Open existing file. If file does not exist, return an error condition.</DD>
</DIV>
<DIV>
<A NAME="IX_VMOperation">
 </A>
<A NAME="IX_VMO_&ldots;  (VMOperation type)">
 </A>
</DL>
<H1 CLASS="refHeading">
VMOperation</H1>
<PRE CLASS="syntax">typedef enum {
VMO_READ,
VMO_INTERNAL,
VMO_SAVE,
VMO_SAVE_AS,
VMO_REVERT,
VMO_UPDATE,
VMO_WRITE
} VMOperation;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_VMRelocType">
 </A>
<A NAME="IX_VMRT_&ldots;">
 </A>
<H1 CLASS="refHeading">
VMRelocType</H1>
<PRE CLASS="syntax">typedef enum {
VMRT_UNRELOCATE_BEFORE_WRITE,
VMRT_RELOCATE_AFTER_READ,
VMRT_RELOCATE_AFTER_WRITE,
VMRT_RELOCATE_FROM_RESOURCE,
VMRT_UNRELOCATE_FROM_RESOURCE,
} VMRelocType;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_VMStartExlusiveReturnValue">
 </A>
<A NAME="IX_VMSERV_&ldots;">
 </A>
<H1 CLASS="refHeading">
VMStartExclusiveReturnValue</H1>
<PRE CLASS="syntax">typedef enum {
 VMSERV_NO_CHANGES,
 VMSERV_CHANGES,
 VMSERV_TIMEOUT
} VMStartExclusiveReturnValue;</PRE>
<P>
<CODE>
<A HREF="../../CRef/Routines/R_a3.htm#IX_VMGrabExclusive()">VMGrabExclusive()</A></CODE>
 returns a member of this enumerated type. It may have one of the following values:</P>
<DL>
<DT>
VMSERV_NO_CHANGES</DT><DD>
No other thread has changed this file since the last time this thread had access to the file.</DD>
<DT>
VMSERV_CHANGES</DT><DD>
The file may have been altered since the last time this thread had access to it; the thread should take appropriate actions (such as re-reading any cached data).</DD>
<DT>
VMSERV_TIMEOUT</DT><DD>
This call to <CODE>
<A HREF="../../CRef/Routines/R_a3.htm#IX_VMGrabExclusive()">VMGrabExclusive()</A></CODE>
 failed and timed out without getting access to the file.</DD>
</DIV>
<DIV>
<A NAME="IX_VolumeName">
 </A>
<A NAME="IX_VOLUME_BUFFER_SIZE">
 </A>
</DL>
<H1 CLASS="refHeading">
VolumeName</H1>
<PRE CLASS="syntax">typedef char VolumeName[VOLUME_BUFFER_SIZE];</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_WBFixed">
 </A>
<A NAME="IX_WBF_&ldots;">
 </A>
<H1 CLASS="refHeading">
WBFixed</H1>
<PRE CLASS="syntax">typedef struct {
byte WBF_frac;
word WBF_int;
} WBFixed;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_wchar">
 </A>
<H1 CLASS="refHeading">
wchar</H1>
<PRE CLASS="syntax">typedef unsigned int wchar;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_WindowHandle">
 </A>
<H1 CLASS="refHeading">
WindowHandle</H1>
<PRE CLASS="syntax">typedef Handle WindowHandle;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_WinInfoType">
 </A>
<A NAME="IX_WIT_&ldots;">
 </A>
<H1 CLASS="refHeading">
WinInfoType</H1>
<PRE CLASS="syntax">typedef enum /* word */ {
WIT_PRIVATE_DATA =0,
WIT_COLOR =2,
WIT_INPUT_OBJ =4,
WIT_EXPOSURE_OBJ =6,
WIT_STRATEGY =8,
WIT_FLAGS =10,
WIT_LAYER_ID =12,
WIT_PARENT_WIN =14,
WIT_FIRST_CHILD_WIN =16,
WIT_LAST_CHILD_WIN =18,
WIT_PREV_SIBLING_WIN =20,
WIT_NEXT_SIBLING_WIN =22,
WIT_PRIORITY=24,
} WinInfoType;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_WinInvalFlag">
 </A>
<A NAME="IX_WIF_&ldots;">
 </A>
<H1 CLASS="refHeading">
WinInvalFlag</H1>
<PRE CLASS="syntax">typedef ByteEnum WinInvalFlag;
#define WIF_INVALIDATE					0
#define WIF_DONT_INVALIDATE					1</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_WinPassFlags">
 </A>
<A NAME="IX_WPF_&ldots;">
 </A>
<H1 CLASS="refHeading">
WinPassFlags</H1>
<PRE CLASS="syntax">typedef WordFlags WinPassFlags;
#define WPF_CREATE_GSTATE						0x8000
#define WPF_ROOT 						0x4000
#define WPF_SAVE_UNDER 						0x2000
#define WPF_INIT_EXCLUDED 						0x1000
#define WPF_PLACE_BEHIND 						0x0800
#define WPF_PLACE_LAYER_BEHIND 						0x0400
#define WPF_LAYER 						0x0200
#define WPF_ABS 						0x0100
#define WPF_PRIORITY 						0x00ff</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_WinPriority">
 </A>
<A NAME="IX_WIN_PRIO_&ldots;">
 </A>
<H1 CLASS="refHeading">
WinPriority</H1>
<PRE CLASS="syntax">typedef ByteEnum WinPriority;
#define WIN_PRIO_POPUP					 4
#define WIN_PRIO_MODAL 					 6
#define WIN_PRIO_ON_TOP 					 8
#define WIN_PRIO_COMMAND 					10
#define WIN_PRIO_STD 					12
#define WIN_PRIO_ON_BOTTOM 					14</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_word">
 </A>
<H1 CLASS="refHeading">
word</H1>
<PRE CLASS="syntax">typedef unsigned int word;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_WordAndAHalf">
 </A>
<A NAME="IX_WAAH_&ldots;">
 </A>
<H1 CLASS="refHeading">
WordAndAHalf</H1>
<PRE CLASS="syntax">typedef struct {
word 	WAAH_low;
byte 	WAAH_high;
} WordAndAHalf;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_WordFlags">
 </A>
<H1 CLASS="refHeading">
WordFlags</H1>
<PRE CLASS="syntax">typedef word WordFlags;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_WWFixed">
 </A>
<A NAME="IX_WWF_&ldots;">
 </A>
<H1 CLASS="refHeading">
WWFixed</H1>
<PRE CLASS="syntax">typedef struct {
word WWF_frac;
word WWF_int;
} WWFixed;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_WWFixedAsDWord">
 </A>
<H1 CLASS="refHeading">
WWFixedAsDWord</H1>
<PRE CLASS="syntax">typedef dword WWFixedAsDWord</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_XYOffset">
 </A>
<A NAME="IX_XYO_&ldots;">
 </A>
<H1 CLASS="refHeading">
XYOffset</H1>
<PRE CLASS="syntax">typedef struct {
sword XYO_x;
sword XYO_y;
} XYOffset;</PRE>
<P>
A graphics coordinate offset.</P>
</DIV>
<DIV>
<A NAME="IX_XYSize">
 </A>
<A NAME="IX_XYS_&ldots;">
 </A>
<H1 CLASS="refHeading">
XYSize</H1>
<PRE CLASS="syntax">typedef struct {
word XYS_width;
word XYS_height;
} XYSize;</PRE>
<P>
A graphics size, in two dimensions.</P>
</DIV>
<DIV>
<A NAME="IX_XYValueAsDWord">
 </A>
<H1 CLASS="refHeading">
XYValueAsDWord</H1>
<PRE CLASS="syntax">typedef dword XYValueAsDWord;</PRE>
<P>
A graphics size, in two dimensions, expressed as a DWord.</P>
</DIV>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="S_43.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">VisRulerType ...</A> 
<!-- to next --> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
