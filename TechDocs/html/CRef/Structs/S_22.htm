<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: S_22.htm,v 1.2 97/06/25 18:52:58 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Structs: InkControlFeatures ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="S_21.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">IMCFeatures ...</A> 
<!-- to next --> | <A HREF="S_23.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">InstrumentPatch ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_InkControlFeatures">
 </A>
<A NAME="IX_ICF_&ldots;  (InkControlFeatures)">
 </A>
<H1 CLASS="refHeading">
InkControlFeatures</H1>
<PRE CLASS="syntax">typedef ByteFlags InkControlFeatures;
#define ICF_PENCIL_TOOL				0x02
#define ICF_ERASER_TOOL				0x01</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_InkControlToolboxFeatures">
 </A>
<A NAME="IX_ICTF_&ldots;">
 </A>
<H1 CLASS="refHeading">
InkControlToolboxFeatures</H1>
<PRE CLASS="syntax">typedef ByteFlags InkControlToolboxFeatures;
#define ICTF_PENCIL_TOOL				0x02
#define ICTF_ERASER_TOOL				0x01</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_InkDBDisplayInfo">
 </A>
<H1 CLASS="refHeading">
InkDBDisplayInfo</H1>
<P>
See <CODE>
<A HREF="../../CRef/Routines/R_5e.htm#IX_InkDBGetDisplayInfo()">InkDBGetDisplayInfo()</A></CODE>
.</P>
</DIV>
<DIV>
<A NAME="IX_InkDBFrame">
 </A>
<A NAME="IX_IDBF_&ldots;">
 </A>
<H1 CLASS="refHeading">
InkDBFrame</H1>
<PRE CLASS="syntax">typedef struct {
Rectangle IDBF_bounds;							/* bounds of data to save or coord at
							 * which to load data */</PRE>
<PRE CLASS="syntax">VMFileHandle IDBF_VMFile;							/* VM File to write to/read from */
DBGroupAndItem IDBF_DBGroupAndItem;							/* DB item to save to/load from */
word IDBF_DBExtra;							/* space to skip at start of block */
} InkDBFrame;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_InkFlags">
 </A>
<A NAME="IX_IF_&ldots;  (InkFlags)">
 </A>
<H1 CLASS="refHeading">
InkFlags</H1>
<PRE CLASS="syntax">typedef ByteFlags InkFlags;
#define IF_HAS_TARGET						0x20
#define IF_DIRTY 						0x10
#define IF_ONLY_CHILD_OF_CONTENT 						0x08
#define IF_CONTROLLED 						0x04
#define IF_INVALIDATE_ERASURES 						0x02
#define IF_HAS_UNDO 						0x01</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_InkReturnValue">
 </A>
<A NAME="IX_IRV_&ldots;">
 </A>
<H1 CLASS="refHeading">
InkReturnValue</H1>
<PRE CLASS="syntax">typedef enum {
IRV_NO_REPLY,
/* VisComp objects use VisCallChildUnderPoint to send
 * MSG_META_QUERY_IF_PRESS_IS_INK to its children, and
 * VisCallChildUnderPoint returns this value (0) if there was not child
 * under the point. No object should actually return this value. */</PRE>
<PRE CLASS="syntax">IRV_NO_INK,
/* Return this if the object wants to treat incoming event as mouse data. */</PRE>
<PRE CLASS="syntax">IRV_INK_WITH_STANDARD_OVERRIDE,
/* Return this if the object normally wants ink (the text object does this), 
 * but the user can force mouse events instead by pressing the pen and 
 * holding for some user-adjustable amount of time. */</PRE>
<PRE CLASS="syntax">IRV_WAIT
/* Return this value if the object under the point is run by a different
 * thread and you want to hold up input (don't do anything with the incoming
 * MSG_META_START_SELECT) `til obj sends MSG_GEN_APPLICATION_INK_QUERY_REPLY
 * to the applicaiton object. */</PRE>
<PRE CLASS="syntax">} InkReturnValue;</PRE>
<P>
This enumerated type is used by objects to let the system know whether incoming pointer events should be interpreted as mouse or pen data.</P>
</DIV>
<DIV>
<A NAME="IX_InsertChildFlags">
 </A>
<A NAME="IX_ICF_&ldots;  (InsertChildFlags)">
 </A>
<H1 CLASS="refHeading">
InsertChildFlags</H1>
<PRE CLASS="syntax">typedef WordFlags InsertChildFlags
#define ICF_MARK_DIRTY				0x8000
#define ICF_OPTIONS				0x0003</PRE>
<P>
This record specifies how children are to be added to an object tree.</P>
</DIV>
<DIV>
<A NAME="IX_InsertChildOption">
 </A>
<A NAME="IX_ICO_&ldots;">
 </A>
<H1 CLASS="refHeading">
InsertChildOption</H1>
<PRE CLASS="syntax">typedef ByteEnum InsertChildOption
#define ICO_FIRST					0
#define ICO_LAST					1
#define ICO_BEFORE_REFERENCE					2
#define ICO_AFTER_REFERENCE					3</PRE>
<P>
This enumerated type determines how a child is added and is used with the <CODE>
InsertChildFlags</CODE>
 record. It has four enumerations, as shown above.</P>
</DIV>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="S_21.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">IMCFeatures ...</A> 
<!-- to next --> | <A HREF="S_23.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">InstrumentPatch ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
