<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: S_6.htm,v 1.2 97/06/25 18:59:50 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Structs: ChunkArrayHeader ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="S_5.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">Chars ...</A> 
<!-- to next --> | <A HREF="S_7.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">ClipboardItemHeader ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_ChunkArrayHeader">
 </A>
<H1 CLASS="refHeading">
ChunkArrayHeader</H1>
<PRE CLASS="syntax">typedef struct {
word	CAH_count;			/* # of elements in chunk array */
word	CAH_elementSize;			/* Size of each element (in bytes) */
word	CAH_curOffset;			/* For internal use only */
word	CAH_offset;			/* Offset from start of chunk to first element */
} ChunkArrayHeader;</PRE>
<P>
Every chunk array begins with a <CODE>
ChunkArrayHeader</CODE>
. This structure contains information about the chunk array. Applications should never change the contents of the <CODE>
ChunkArrayHeader</CODE>
; only the chunk array routines should do this. However, applications can examine the header if they wish.</P>
<P CLASS="refField"><STRONG>
Contents:</STRONG>	There are four word-length fields in the <CODE>
ChunkArrayHeader</CODE>:</P>
<DL>
<DT>
CAH<CODE>
_count</DT><DD></CODE>
This word contains the number of elements in the chunk array.</DD>
<DT>
CAH<CODE>
_elementSize</DT><DD>
</CODE>
This word contains the size of each element (in bytes). If the elements are variable-sized, <CODE>
CAH_elementSize</CODE>
 will be zero.</DD>
<DT>
CAH<CODE>
_curOffset</DT><DD>
</CODE>
This word is used by <CODE>
<A HREF="../../CRef/Routines/R_7.htm#IX_ChunkArrayEnum()">ChunkArrayEnum()</A></CODE>
 for bookkeeping.</DD>
<DT>
CAH<CODE>
_offset</DT><DD></CODE>
This is the offset from the start of the chunk to the first element in the array.</DD>
</DIV>
<DIV>
Chunk handles are offsets into a local memory heap. To find the current <A NAME="IX_ChunkHandle">
 </A>
</DL>
<H1 CLASS="refHeading">
ChunkHandle</H1>
<PRE CLASS="syntax">typedef word ChunkHandle;</PRE>
<P>
location of a chunk in an LMem heap, combine the segment address of the heap with the chunk handle. From this location you can read the current offset of the chunk itself.</P>
<P CLASS="refField"><STRONG>
See Also:</STRONG> <CODE><A HREF="../../CRef/Structs/S_2b.htm#IX_optr">optr</A></CODE>,
<CODE><A HREF="../../CRef/Routines/R_63.htm#IX_LMemDeref()">LMemDeref()</A></CODE>.</P>
</DIV>
<DIV>
<A NAME="IX_ChunkMapList">
 </A>
<H1 CLASS="refHeading">
ChunkMapList</H1>
<PRE CLASS="syntax">typedef struct {
word	CML_source;
word	CML_dest;
} ChunkMapList;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_ClassFlags">
 </A>
<A NAME="IX_CLASSF_&ldots;">
 </A>
<H1 CLASS="refHeading">
ClassFlags</H1>
<PRE CLASS="syntax">typedef ByteFlags ClassFlags;
#define CLASSF_HAS_DEFAULT						0x80
#define CLASSF_MASTER_CLASS 						0x40
#define CLASSF_VARIANT_CLASS 						0x20
#define CLASSF_DISCARD_ON_SAVE 						0x10
#define CLASSF_NEVER_SAVED						0x08
#define CLASSF_HAS_RELOC 						0x04
#define CLASSF_C_HANDLERS 						0x02</PRE>
<P>
This record is stored in the <CODE>
ClassStruct</CODE>
 structure's <CODE>
Class_flags</CODE>
 field. These flags are internal and may not be set or retrieved directly. See the entry on <CODE>
@class</CODE>
 for more information about these flags.</P>
</DIV>
<DIV>
<A NAME="IX_ClassStruct">
 </A>
<A NAME="IX_Class_&ldots;">
 </A>
<H1 CLASS="refHeading">
ClassStruct</H1>
<PRE CLASS="syntax">typedef	struct	_ClassStruct {
struct _ClassStruct *Class_superClass;		/* superclass pointer */
word		Class_masterOffset;					/* offset to master offset in chunk */
word 		Class_methodCount;					/* number of methods in this class */
word 		Class_instanceSize;					/* size of entire master group */
word 		Class_vdRelocTable;					/* offset to vardata relocation table */
word 		Class_relocTable;					/* offset to relocation table */
ClassFlags 		Class_flags;					/* a record of ClassFlags */
byte 		Class_masterMessages;					/* internal flags for optimization */
} ClassStruct;</PRE>
<P>
This is the structure that defines a class. It is internal and used only very rarely by anything other than the kernel and the UI.</P>
</DIV>
<DIV>
<A NAME="IX_ClipboardItemFlags">
 </A>
<A NAME="IX_CIF_QUICK">
 </A>
<A NAME="IX_TIF_NORMAL">
 </A>
<H1 CLASS="refHeading">
ClipboardItemFlags</H1>
<PRE CLASS="syntax">typedef WordFlags ClipboardItemFlags;
#define CIF_QUICK				0x4000
#define TIF_NORMAL				0x0000</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_ClipboardItemFormat">
 </A>
<A NAME="IX_CIF_&ldots;">
 </A>
<H1 CLASS="refHeading">
ClipboardItemFormat</H1>
<PRE CLASS="syntax">typedef enum /* word */ {
CIF_TEXT,
CIF_GRAPHICS_STRING,
CIF_FILES,
CIF_SPREADSHEET,
CIF_INK,
CIF_GROBJ,
CIF_GEODEX,
CIF_BITMAP,
CIF_SOUND_SYNTH,
CIF_SOUND_SAMPLE
} ClipboardItemFormat;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_ClipboardItemFormatID">
 </A>
<H1 CLASS="refHeading">
ClipboardItemFormatID</H1>
<PRE CLASS="syntax">typedef dword ClipboardItemFormatID;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_ClipboardItemFormatInfo">
 </A>
<A NAME="IX_CIFI_&ldots;">
 </A>
<H1 CLASS="refHeading">
ClipboardItemFormatInfo</H1>
<PRE CLASS="syntax">typedef struct {
ClipboardItemFormatID				CIFI_format;
word				CIFI_extra1;
word				CIFI_extra2;
VMChain				CIFI_vmChain;
GeodeToken				CIFI_renderer;
} ClipboardItemFormatInfo;</PRE>
<P>
&nbsp;</P>
</DIV>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="S_5.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">Chars ...</A> 
<!-- to next --> | <A HREF="S_7.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">ClipboardItemHeader ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
