<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: S_34.htm,v 1.2 97/06/25 18:56:12 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Structs: Socket ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="S_33.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">SerialBaud ...</A> 
<!-- to next --> | <A HREF="S_35.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">SocketError ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_Socket">
 </A>
<H1 CLASS="refHeading">
Socket</H1>
<PRE CLASS="syntax">typedef word Socket;</PRE>
<P>
A Socket represents one side of a communication managed by the Socket library.</P>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
socket.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_SocketAddress">
 </A>
<A NAME="IX_SA_&ldots;">
 </A>
<H1 CLASS="refHeading">
SocketAddress</H1>
<PRE CLASS="syntax">typedef struct {
        SocketPort  SA_port;
        word        SA_domainSize; 					/*  size in bytes of SA_domain buffer */
        char        *SA_domain; 					/*  null terminated domain name */
        word        SA_addressSize; 					/*  size in bytes of address data */
} SocketAddress;</PRE>
<P>
Addresses are made up of a port number, a domain, and address data:</P>
<DL>
<DT>
<STRONG>
SA_port</STRONG>
</DT><DD>Port numbers identify a particular line of communication within a machine. Port numbers may be 32-bit or 16-bit, depending on the domain. They are specified via the <CODE>
SocketPort</CODE>
 structure.</DD>
<DT>
<STRONG>
SA_domain</STRONG>
, <STRONG>
SA_domainSize</DT><DD>
</STRONG>
The domain identifies the protocol of the network by which the addressed machine may be reached. The domain is specified by a string. <CODE>
SA_domain</CODE>
 is a pointer to the null-terminated domain name string and <CODE>
SA_domainSize</CODE>
 is the size of the buffer containing the domain name string.</DD>
<DT>
</DT><DD>Some routines are passed an empty <CODE>
SocketAddress</CODE>
 structure. This means that you should have allocated memory for SA_domain, and initialized <CODE>
SA_domain</CODE>
 and <CODE>
SA_domainSize</CODE>
.</DD>
<DT>
<STRONG>
SA_addressSize</STRONG>
, <STRONG>
Address Data</DT><DD>
</STRONG>
The format of the address data used to identify a machine within a domain depends on that domain. The <CODE>
SA_addressSize</CODE>
 field contains the size of the address data. The buffer containing the address data should fall immediately after the <CODE>
SocketAddress</CODE>
 structure.</DD>
<DT>
</DT><DD>Some routines are passed an empty <CODE>
SocketAddress</CODE>
 structure. This means that you should leave room for address data after the structure and initialize the <CODE>
SA_addressSize</CODE>
 field.</DD>
</DL>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
socket.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_SocketBindFlags">
 </A>
<A NAME="IX_SBF_REUSE_PORT">
 </A>
<H1 CLASS="refHeading">
SocketBindFlags</H1>
<PRE CLASS="syntax">typedef WordFlags SocketBindFlags;
        #define SBF_REUSE_PORT  (0x8000) </PRE>
<P>
These flags are used to specify options when binding a socket to a port.</P>
<P>
There is only one flag: SBF_REUSE_PORT, requesting that the socket be bound to the port even if another socket is already bound to it. You may not use this flag with datagram sockets.</P>
</DIV>
<DIV>
<A NAME="IX_SocketCheckRequest">
 </A>
<A NAME="IX_SocketCondition">
 </A>
<A NAME="IX_SCR_&ldots;">
 </A>
<A NAME="IX_SC_&ldots;">
 </A>
<H1 CLASS="refHeading">
SocketCheckRequest</H1>
<PRE CLASS="syntax">typedef struct {
        word 		SCR_socket;
        SocketCondition 		SCR_condition;
        byte 		SCR_reserved;
} SocketCheckRequest;
typedef ByteEnum SocketCondition;
        #define SC_READ 			0x0 			/*  data arrived */
        #define SC_WRITE 			0x1 			/*  data can be written */
        #define SC_ACCEPT 			0x2 			/*  connect request arrived */
        #define SC_EXCEPTION 			0x3 			/*  an exception occurred */
        #define SC_URGENT 			0x4 			/*  urgent data arrived */</PRE>
<P>
A <CODE>
SocketCheckRequest</CODE>
 is used to query a socket about whether it is ready to carry out some operation. You will need to set two fields:</P>
<DL>
<DT>
<STRONG>
SCR_socket</STRONG>
</DT><DD>The socket to query.</DD>
<DT>
<STRONG>
SCR_condition</DT><DD>
</STRONG>
The operation to query about.</DD>
</DL>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
socket.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_SocketCondition">
 </A>
<H1 CLASS="refHeading">
SocketCondition</H1>
<P>
See <CODE>
SocketCheckRequest</CODE>
.</P>
</DIV>
<DIV>
typedef ByteEnum <A NAME="IX_SocketDeliveryType">
 </A>
<A NAME="IX_SDT_&ldots;">
 </A>
<H1 CLASS="refHeading">
SocketDeliveryType</H1>
<PRE CLASS="syntax">SocketDeliveryType;
        #define SDT_DATAGRAM 			0x0 		/*  unreliable packets */
        #define SDT_SEQ_PACKET 			0x1 		/*  reliable packets */
        #define SDT_STREAM 			0x2 		/*  reliable bytes */</PRE>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
socket.goh</STRONG>
 </P>
</DIV>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="S_33.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">SerialBaud ...</A> 
<!-- to next --> | <A HREF="S_35.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">SocketError ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
