<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: S_21.htm,v 1.2 97/06/25 18:52:47 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Structs: IMCFeatures ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="S_20.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">HeapCongestion ...</A> 
<!-- to next --> | <A HREF="S_22.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">InkControlFeatures ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_IMCFeatures">
 </A>
<A NAME="IX_IMC_&ldots;">
 </A>
<H1 CLASS="refHeading">
IMCFeatures</H1>
<PRE CLASS="syntax">typedef ByteFlags IMCFeatures;
#define IMCF_MAP				0x01
#define IMC_DEFAULT_FEATURES							IMCF_MAP
#define IMC_DEFAULT_TOOLBOX_FEATURES							0
#define IMC_MAP_MONIKER_SIZE							1024</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_ImpexDataClasses">
 </A>
<A NAME="IX_IDC_&ldots;">
 </A>
<H1 CLASS="refHeading">
ImpexDataClasses</H1>
<PRE CLASS="syntax">typedef WordFlags ImpexDataClasses;
#define IDC_TEXT				0x8000
#define IDC_GRAPHICS 				0x4000
#define IDC_SPREADSHEET 				0x2000
#define IDC_FONT 				0x1000</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_ImpexFileSelectionData">
 </A>
<A NAME="IX_IFSD_&ldots;">
 </A>
<H1 CLASS="refHeading">
ImpexFileSelectionData</H1>
<PRE CLASS="syntax">typedef struct {
FileLongName				IFSD_selection;
PathName				IFSD_path;
word				IFSD_disk;
GenFileSelectorEntryFlags				IFSD_type;
} ImpexFileSelectionData;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_ImpexMapFlags">
 </A>
<A NAME="IX_IMF_&ldots;">
 </A>
<H1 CLASS="refHeading">
ImpexMapFlags</H1>
<PRE CLASS="syntax">typedef ByteFlags ImpexMapFlags;
#define IMF_IMPORT				0x80
#define IMF_EXPORT				0x40</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_ImpexMapFileInfoHeader">
 </A>
<A NAME="IX_IMFIH_&ldots;">
 </A>
<H1 CLASS="refHeading">
ImpexMapFileInfoHeader</H1>
<PRE CLASS="syntax">typedef struct {
LMemBlockHeader				IMFIH_base;
word				IMFIH_fieldChunk;
word				IMFIH_numFields;
} ImpexMapFileInfoHeader;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_ImpexTranslationParams">
 </A>
<A NAME="IX_ITP_&ldots;">
 </A>
<H1 CLASS="refHeading">
ImpexTranslationParams</H1>
<PRE CLASS="syntax">typedef struct {
optr		ITP_impexOD;
Message		ITP_returnMsg;
word 		ITP_dataClass;
FileHandle 		ITP_transferVMFile;
VMChain 		ITP_transferVMChain;
dword 		ITP_internal;
} ImpexTranslationParams;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_ImportControlAttrs">
 </A>
<A NAME="IX_ICA_IGNORE_INPUT">
 </A>
<H1 CLASS="refHeading">
ImportControlAttrs</H1>
<PRE CLASS="syntax">typedef WordFlags ImportControlAttrs;
#define ICA_IGNORE_INPUT 0x8000						/* ignore input while import occurs */</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_ImportControlToolboxFeatures">
 </A>
<A NAME="IX_IMPORTCF_DIALOG_BOX">
 </A>
<H1 CLASS="refHeading">
ImportControlToolboxFeatures</H1>
<PRE CLASS="syntax">typedef ByteFlags ImportControlToolboxFeatures;
#define IMPORTCTF_DIALOG_BOX					0x01</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_IndexArrayBlockHeader">
 </A>
<H1 CLASS="refHeading">
IndexArrayBlockHeader</H1>
<PRE CLASS="syntax">typedef struct {
word	IALMBH_recCount;
word	IALMBH_array;
word	IALMBH_indexField;
word	IALMBH_sortOrder;
} IndexArrayBlockHeader;</PRE>
<P>
Format of a block containing a datastore index of <CODE>
RecordNum</CODE>
s (low word only); see <CODE>
<A HREF="../../CRef/Routines/R_f.htm#IX_DataStoreBuildIndex()">DataStoreBuildIndex()</A></CODE>
.</P>
</DIV>
<DIV>
<A NAME="IX_InitFileCharConvert">
 </A>
<A NAME="IX_IFCC_&ldots;">
 </A>
<H1 CLASS="refHeading">
InitFileCharConvert</H1>
<PRE CLASS="syntax">typedef ByteEnum InitFileCharConvert;
#define IFCC_INTACT				0		/* Leave all characters unchanged. */
#define IFCC_UPCASE				1		/* Make all characters upper case. */
#define IFCC_DOWNCASE				2		/* Make all characters lower case. */</PRE>
<P>
This enumerated type describes how <CODE>
InitFileRead...()</CODE>
 routines should handle incoming strings.</P>
</DIV>
<DIV>
<A NAME="IX_InitFileReadFlags">
 </A>
<A NAME="IX_IFRF_&ldots;">
 </A>
<H1 CLASS="refHeading">
InitFileReadFlags</H1>
<PRE CLASS="syntax">typedef WordFlags InitFileReadFlags;
#define IFRF_CHAR_CONVERT				0xc000			/* 2 bits: InitFileCharConvert type */
#define IFRF_READ_ALL	 			0x2000
#define IFRF_FIRST_ONLY	 			0x1000
#define IFRF_SIZE				0x0fff</PRE>
<P>
This record is used with the <CODE>
InitFileRead...()</CODE>
 routines. The IFRF_CHAR_CONVERT field is used to indicate whether strings being read should be upcased, downcased, or left unaltered--the type is designated by a value of <CODE>
InitFileCharConvert</CODE>
. The IFRF_SIZE field is used by routines that take a passed buffer; this field indicates the size of the buffer (the maximum number of bytes that can be returned by the routine).</P>
<P>
When setting this record, make sure you shift the IFRF_CHAR_CONVERT value left an offset of IFRF_CHAR_CONVERT_OFFSET.</P>
</DIV>
<DIV>
<A NAME="IX_InkBackgroundType">
 </A>
<A NAME="IX_IBT_&ldots;">
 </A>
<H1 CLASS="refHeading">
InkBackgroundType</H1>
<PRE CLASS="syntax">typedef enum {
IBT_NO_BACKGROUND = 0,
IBT_NARROW_LINED_PAPER = 2,
IBT_MEDIUM_LINED_PAPER = 4,
IBT_WIDE_LINED_PAPER = 6,
IBT_NARROW_STENO_PAPER = 8,
IBT_MEDIUM_STENO_PAPER = 10,
IBT_WIDE_STENO_PAPER = 12,
IBT_SMALL_GRID = 14,
IBT_MEDIUM_GRID = 16,
IBT_LARGE_GRID = 18,
IBT_SMALL_CROSS_SECTION = 20,
IBT_MEDIUM_CROSS_SECTION = 22,
IBT_LARGE_CROSS_SECTION = 24,
IBT_TO_DO_LIST = 26,
IBT_PHONE_MESSAGE = 28,
IBT_CUSTOM_BACKGROUND = 30
} InkBackgrountType;</PRE>
<P>
This enumerated type is a set of standard background pictures for use with the Ink Database routines.</P>
</DIV>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="S_20.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">HeapCongestion ...</A> 
<!-- to next --> | <A HREF="S_22.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">InkControlFeatures ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
