<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: S_1f.htm,v 1.2 97/06/25 18:52:17 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Structs: GStringErrorType ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="S_1e.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">GStringElement ...</A> 
<!-- to next --> | <A HREF="S_20.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">HeapCongestion ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_GStringErrorType">
 </A>
<A NAME="IX_GSET_&ldots;">
 </A>
<H1 CLASS="refHeading">
GStringErrorType</H1>
<PRE CLASS="syntax">typedef enum /* word */ {
GSET_NO_ERROR,
GSET_DISK_FULL
} GStringErrorType;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_GStringKillType">
 </A>
<H1 CLASS="refHeading">
GStringKillType</H1>
<P>
See <CODE>
<A HREF="../../CRef/Routines/R_39.htm#IX_GrDestroyGString()">GrDestroyGString()</A></CODE>
.</P>
</DIV>
<DIV>
<A NAME="IX_GStringSetPosType">
 </A>
<H1 CLASS="refHeading">
GStringSetPosType</H1>
<P>
See <CODE>
<A HREF="../../CRef/Routines/R_47.htm#IX_GrSetGStringPos()">GrSetGStringPos()</A></CODE>
.</P>
</DIV>
<DIV>
<A NAME="IX_GStringType">
 </A>
<A NAME="IX_GST_&ldots;">
 </A>
<H1 CLASS="refHeading">
GStringType</H1>
<PRE CLASS="syntax">typedef ByteEnum GStringType;
#define GST_CHUNK				0
#define GST_STREAM 				1
#define GST_VMEM 				2
#define GST_PTR 				3
#define GST_PATH 				4</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_Handle">
 </A>
<H1 CLASS="refHeading">
Handle</H1>
<PRE CLASS="syntax">typedef word Handle;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_HatchDash">
 </A>
<A NAME="IX_HD_o&ldots;">
 </A>
<H1 CLASS="refHeading">
HatchDash</H1>
<PRE CLASS="syntax">typedef struct {
WWFixed		HD_on;
WWFixed		HD_off;
} HatchDash;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_HatchLine">
 </A>
<A NAME="IX_HL_&ldots;">
 </A>
<H1 CLASS="refHeading">
HatchLine</H1>
<PRE CLASS="syntax">typedef struct {
PointWWFixed		HL_origin;
WWFixed		HL_deltaX;
WWFixed		HL_deltaY;
WWFixed		HL_angle;
ColorQuad		HL_color;
word		HL_numDashes;
	/* array of HatchDash structures follows here */
} HatchLine;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_HatchPattern">
 </A>
<A NAME="IX_HP_numLines">
 </A>
<H1 CLASS="refHeading">
HatchPattern</H1>
<PRE CLASS="syntax">typedef struct {
word HP_numLines;
/* array of HatchLine structures follows here */
} HatchPattern;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_HAF_&ldots;">
 </A>
<A NAME="IX_HeapAllocFlags:with HeapAlloc()">
 </A>
<H1 CLASS="refHeading">
HeapAllocFlags</H1>
<PRE CLASS="syntax">typedef ByteFlags HeapAllocFlags;
#define HAF_ZERO_INIT					0x80
#define HAF_LOCK 					0x40
#define HAF_NO_ERR 					0x20
#define HAF_UI 					0x10
#define HAF_READ_ONLY 					0x08
#define HAF_OBJECT_RESOURCE 					0x04
#define HAF_CODE 					0x02
#define HAF_CONFORMING 					0x01
#define HAF_STANDARD					(0)
#define HAF_STANDARD_NO_ERR					(HAF_NO_ERR)
#define HAF_STANDARD_LOCK					(HAF_LOCK)
#define HAF_STANDARD_NO_ERR_LOCK (HAF_NO_ERR | HAF_LOCK)</PRE>
<P>
<CODE>
HeapAllocFlags</CODE>
 indicate how the block should be allocated and initialized. They are not stored and can not be retrieved. Only some of the flags can be passed with <CODE>
<A HREF="../../CRef/Routines/R_6e.htm#IX_MemReAlloc()">MemReAlloc()</A></CODE>
; these are noted below. The following flags are available:</P>
<DL>
<DT>
HAF_ZERO_INIT</DT><DD>
The memory manager should initialize the block to null bytes. This flag may be passed to <CODE>
<A HREF="../../CRef/Routines/R_6e.htm#IX_MemReAlloc()">MemReAlloc()</A></CODE>
 to cause new memory to be zero-initialized.</DD>
<DT>
HAF_LOCK</DT><DD>The memory manager should lock the block after allocating it. To get the block's address, call <CODE>
<A HREF="../../CRef/Routines/R_6b.htm#IX_MemDeref()">MemDeref()</A></CODE>
. This flag may be passed to <CODE>
<A HREF="../../CRef/Routines/R_6e.htm#IX_MemReAlloc()">MemReAlloc()</A></CODE>
.</DD>
<DT>
HAF_NO_ERR</DT><DD>
The memory manager should not return errors. If it cannot allocate block, GEOS will tell the user that there is no memory available and crash. Use of this flag is strongly discouraged. This flag may be passed to <CODE>
<A HREF="../../CRef/Routines/R_6e.htm#IX_MemReAlloc()">MemReAlloc()</A></CODE>
.</DD>
<DT>
HAF_UI</DT><DD>If both HAF_OBJECT_RESOURCE and HAF_UI are set, this block will be run by the application's UI thread.</DD>
<DT>
HAF_READ_ONLY</DT><DD>
The block's data will not be modified. Useful for the debugger.</DD>
<DT>
HAF_OBJECT_RESOURCE</DT><DD>
This block will be an object block.</DD>
<DT>
HAF_CODE</DT><DD>This block contains executable code.</DD>
<DT>
HAF_CONFORMING</DT><DD>
If the block contains code, the code may be run by a less privileged entity. If the block contains data, the data may be accessed or altered by a less privileged entity.</DD>
</DIV>
</DL>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="S_1e.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">GStringElement ...</A> 
<!-- to next --> | <A HREF="S_20.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">HeapCongestion ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
