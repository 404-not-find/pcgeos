<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: S_31.htm,v 1.2 97/06/25 18:55:39 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>GEOS C Structs: ReleaseNumber ...</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="S_30.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">RangeSortFlags ...</A> 
<!-- to next --> | <A HREF="S_32.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">ScannerTokenCellData ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</DIV>
<DIV>
<A NAME="IX_ReleaseNumber">
 </A>
<A NAME="IX_RN_&ldots;">
 </A>
<H1 CLASS="refHeading">
ReleaseNumber</H1>
<PRE CLASS="syntax">typedef struct {
word	RN_major;
word	RN_minor;
word	RN_change;
word	RN_engineering;
} ReleaseNumber;</PRE>
<P>
Used to record what version a file, document, or geode is. This represents the release level; the most significant numbers are <CODE>
RN_major</CODE>
 and <CODE>
RN_minor</CODE>
. The other fields are typically used only internally to a manufacturer.</P>
</DIV>
<DIV>
<A NAME="IX_RGBColorAsDWord">
 </A>
<A NAME="IX_RGB_&ldots; () macros">
 </A>
<H1 CLASS="refHeading">
RGBColorAsDWord</H1>
<PRE CLASS="syntax">typedef dword RGBColorAsDWord;
RGB_RED(val) ( val &amp; 0xff)
RGB_GREEN(val) ( (val &gt;&gt; 8) &amp; 0xff )
RGB_BLUE(val) ( (val &gt;&gt; 16) &amp; 0xff )
RGB_INDEX(val) ( (val &gt;&gt; 24) &amp; 0xff )</PRE>
<P>
See the <CODE>
ColorQuad</CODE>
 data structure to find out the meanings of the fields.</P>
</DIV>
<DIV>
<A NAME="IX_RGBDelta">
 </A>
<A NAME="IX_RGBD_&ldots;">
 </A>
<H1 CLASS="refHeading">
RGBDelta</H1>
<PRE CLASS="syntax">typedef struct {
 byte RGBD_red;
 byte RGBD_green;
 byte RGBD_blue;
} RGBDelta;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_RGBTransfer">
 </A>
<A NAME="IX_RGBT_&ldots;">
 </A>
<H1 CLASS="refHeading">
RGBTransfer</H1>
<PRE CLASS="syntax">typedef struct {
byte	RGBT_red[256];
byte	RGBT_green[256];
byte	RGBT_blue[256];
} RGBTransfer;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_RGBValue">
 </A>
<A NAME="IX_RGB_&ldots;">
 </A>
<H1 CLASS="refHeading">
RGBValue</H1>
<PRE CLASS="syntax">typedef struct {
byte	RGB_red;
byte	RGB_green;
byte	RGB_blue;
} RGBValue;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_SACAddress">
 </A>
<H1 CLASS="refHeading">
SACAddress</H1>
<PRE CLASS="syntax">typedef struct {
        word                SACA_opaqueSize;
        /* label byte          SACA_opaque;    */
        /* user-readable form of address follows opaque address--use
         *   SACA_opaqueSize to compute the offset to this data. */
} SACAddress;</PRE>
<P>
The SocketAddressControl uses <CODE>
SACAddress</CODE>
 structures to provide information about addresses.</P>
<P>
Most programs won't need to look at the innards of this structure: they will just pass the opaque address information to <CODE>
<A HREF="../../CRef/Routines/R_8a.htm#IX_SocketResolve()">SocketResolve()</A></CODE>
 to make sure that the address is valid and reduce it to its primitive form. </P>
<P>
However, if you need to construct a &quot;raw&quot; address to pass to <CODE>
<A HREF="../../CRef/Routines/R_8a.htm#IX_SocketResolve()">SocketResolve()</A></CODE>
, you'll need to know the structure of the opaque address information. It's an <CODE>
ExtendedSACAddress</CODE>
 buffer followed by a null-terminated user-readable connection address string..</P>
<P>
The <CODE>
ExtendedSACAddress</CODE>
 buffer consists of:</P>
<UL>
<LI>
A word giving the size of the optional link information (zero if there is no link information).</LI>
<LI>
Link information, consisting of a <CODE>
LinkType</CODE>
 value (one of LT_ADDR, LT_ID, or LT_DEFAULT), and parameters to identify the link. If the <CODE>
LinkType</CODE>
 is LT_DEFAULT, then there are no further parameters. If the <CODE>
LinkType</CODE>
 is LT_ID, then there is a word-length <CODE>
LinkID</CODE>
 which acts as a permanent identifier for the link. If the <CODE>
LinkType</CODE>
 is LT_ADDR, the parameter is a string which will be appended to the user-readable connection address string, surrounded by parentheses.</LI>
</UL>
<P CLASS="refField"><STRONG>
Include:</STRONG>	<STRONG CLASS="fileName">
sac.goh</STRONG>
 </P>
</DIV>
<DIV>
<A NAME="IX_SampleFormat">
 </A>
<A NAME="IX_SMID_&ldots;  (SampleFormat structure)">
 </A>
<H1 CLASS="refHeading">
SampleFormat</H1>
<PRE CLASS="syntax">typedef struct {
         DACSampleFormat SMID_format:15;
         DACReferenceByte SMID_reference:1;
} SampleFormat;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_SampleFormatDescription">
 </A>
<A NAME="IX_SFD_&ldots;">
 </A>
<H1 CLASS="refHeading">
SampleFormatDescription</H1>
<PRE CLASS="syntax">typedef struct {
 word 	SFD_manufact;
 word 	SFD_format;
 word 	SFD_rate;
 word 	SFD_playFlags;
} SampleFormatDescription;</PRE>
<P>
This structure acts as a header for a sampled sound, giving format information needed to properly interpret the sound data.</P>
</DIV>
<DIV>
<A NAME="IX_SansFace">
 </A>
<A NAME="IX_SF_A_&ldots;">
 </A>
<H1 CLASS="refHeading">
SansFace</H1>
<PRE CLASS="syntax">typedef byte SansFace;
#define SF_A_CLOSED 0x0080
#define SF_A_OPEN 0x0000</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_sbyte">
 </A>
<H1 CLASS="refHeading">
sbyte</H1>
<PRE CLASS="syntax">typedef char sbyte;</PRE>
<P>
&nbsp;</P>
</DIV>
<DIV>
<A NAME="IX_ScannerToken">
 </A>
<A NAME="IX_ST_&ldots;">
 </A>
<H1 CLASS="refHeading">
ScannerToken</H1>
<PRE CLASS="syntax">typedef struct {
ScannerTokenType				ST_type;
ScannerTokenData				ST_data;
} ScannerToken;</PRE>
<P>
&nbsp;</P>
</DIV>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="S_30.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">RangeSortFlags ...</A> 
<!-- to next --> | <A HREF="S_32.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">ScannerTokenCellData ...</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
