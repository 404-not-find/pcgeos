<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: MultiThread_c.htm,v 1.1 97/06/02 15:32:35 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Managing Priority Values</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="subsectionTitle">
<A HREF="index.htm">Threads and Semaphores</A>: 4.2 <A HREF="MultiThread_a.htm">Using Multiple Threads</A>: 
Managing Priority Values</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="MultiThread_a.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="MultiThread_b.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">4.1 How GEOS Threads Are Created</A> 
<!-- to next --> | <A HREF="MultiThread_d.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">4.3 Handling Errors in a Thread</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<PRE>ThreadGetInfo(), ThreadModify(), ThreadGetInfoType</PRE>
<P>
You can ascertain and modify the priority of any thread in the system, given the thread's handle. The handle is provided by the routines that create threads, and it can be provided by one thread to another in a message. The following system routines relate to the priority of a thread:</P>
<P>
<CODE>
ThreadGetInfo() </CODE>
<A NAME="IX_ThreadGetInfo()">
 </A>
returns information about a thread. When calling <CODE>
ThreadGetInfo()</CODE>
,<A NAME="IX_ThreadGetInfoType">
 </A>
 pass the handle of the thread in question and a value of the type <CODE>
ThreadGetInfoType</CODE>
 (see below). If zero is passed as the thread handle, <CODE>
ThreadGetInfo()</CODE>
 returns information on whatever thread executed the call.</P>
<P>
<CODE>
ThreadGetInfoType</CODE>
 is an enumerated type with three possible values:</P>
<DL>
<DT>
TGIT_PRIORITY_AND_USAGE</DT><DD>
<A NAME="IX_TGIT_&ldots;">
 </A>
This requests the base priority and recent CPU usage of a thread. (To determine the current priority, simply add the base priority to the recent CPU usage.)</DD>
<DT>
TGIT_THREAD_HANDLE</DT><DD>
This requests the handle of the thread. Use this (with a thread handle of zero) to get the caller's own thread handle.</DD>
<DT>
TGIT_QUEUE_HANDLE</DT><DD>
<A NAME="IX_Event queues:accessing">
 </A>
This requests the handle of the event queue for an event-driven thread. It returns a zero handle if the thread is not event-driven.</DD>
</DL>
<P>
<CODE>
T</CODE>
<A NAME="IX_ThreadModify()">
 </A>
<CODE>
hreadModify()</CODE>
 changes the priority of a thread. The arguments to pass include the handle of the thread to modify (zero for the thread executing the call), a new base priority for the thread, and two flags: One that indicates whether to change the thread's base priority and one that indicates whether to reset the thread's recent CPU usage to zero. If the flag to change the thread's base priority is not set, the new base priority argument is ignored. In general, you should only lower a thread's priority (i.e., raise its base priority number). Applications that raise their own priority damage the performance of the system as a whole. Keep in mind that GEOS already favors the thread with which the user is interacting.

</P>
<P>
<A NAME="IX_Debugging:multithreaded applications">
 </A>
There are several pre-defined priority levels you can use to set a thread's priority. You may wish to use these when debugging to raise the priority of a potentially buggy thread for efficient debugging. These are listed below, each a different constant.</P>
<UL>
<LI>
PRIORITY_TIME_CRITICAL<BR>
<A NAME="IX_PRIORITY_&ldots;">
 </A>
Threads should not be set time-critical unless they must own the processor exclusively for a certain amount of time. Excluding other threads can have undesirable side effects.</LI>
<LI>
PRIORITY_HIGH </LI>
<LI>
PRIORITY_UI </LI>
<LI>
PRIORITY_FOCUS </LI>
<LI>
PRIORITY_STANDARD </LI>
<LI>
PRIORITY_LOW </LI>
<LI>
PRIORITY_LOWEST </LI>
</UL>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="MultiThread_a.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="MultiThread_b.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">4.1 How GEOS Threads Are Created</A> 
<!-- to next --> | <A HREF="MultiThread_d.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">4.3 Handling Errors in a Thread</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
