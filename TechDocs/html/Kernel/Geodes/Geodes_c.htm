<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: Geodes_c.htm,v 1.1 97/06/02 15:29:58 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> The Token Database</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="subsectionTitle">
<A HREF="index.htm">Applications and Geodes</A>: 2.1 <A HREF="Geodes_b.htm">Creating Icons</A>: 
The Token Database</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="Geodes_b.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Geodes_b.htm"><IMG SRC="../../docImages/prevUp.gif" BORDER="0" ALT="Prev: ">2 Creating Icons</A> 
<!-- to next --> | <A HREF="Geodes_d.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">2.2 Managing the Token Database File</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<PRE>TokenOpenLocalTokenDB(), TokenCloseLocalTokenDB()</PRE>
<P>
<A NAME="IX_Tokens:database">
 </A>
The token database is stored in its own file. Each entry represents a single icon or series of icons that can be used with any number of files. The token database file is managed by the UI and the kernel; you should have no reason to access its internals directly, and most applications will never need to use any of the token routines except to install their document icons.</P>
<P>
Some systems may have shared token database files; this is controlled by the INI file key <CODE>
sharedTokenDatabase</CODE>
 in the <CODE>
paths</CODE>
 category. Most often a shared database file exists on a network drive and may be supplemented with a local token database. By default, if a shared database file exists, it will be opened read-only in addition to the read/write local file. <A NAME="IX_TokenOpenLocalTokenDB()">
 </A>
<A NAME="IX_TokenCloseLocalTokenDB()">
 </A>
You can open and close only the local database file, however, with the routines <CODE>
TokenOpenLocalTokenDB()</CODE>
 and <CODE>
TokenCloseLocalTokenDB()</CODE>
.</P>
<P>
Every GEOS file has a token. The token is an index into the token database. When GeoManager scans a directory, it grabs the token from each file and searches through the token database file for it. If a match is found, GeoManager selects the proper icon and displays it; if no match is found or if the file's token is invalid, GeoManager will launch the application in engine mode and request that it install its token in the database.</P>
<P>
For non-GEOS files, GeoManager uses the three extension characters of the file's name as a pseudo-index. For each extension (e.g. .COM, .EXE, .DOC, .BAT, etc.), GeoManager uses a single icon. Which icon is used can be set in the GEOS.INI file if a user wishes, but GeoManager will normally select the default DOS icon (of which there are two: one for executables and one for non-executables).</P>
<P>
<A NAME="IX_GeodeToken">
 </A>
The index into the token database consists of two parts and is of type <CODE>
GeodeToken</CODE>
. This structure contains four text characters as well as the manufacturer ID number of the geode's manufacturer. The structure's definition is shown below:</P>
<PRE>typedef struct {
    TokenChars				GT_chars;
    ManufacturerID				GT_manufID;
} GeodeToken;</PRE>
<PRE>typedef char TokenChars[TOKEN_CHARS_LENGTH];</PRE>
<P>
This structure is created and filled automatically in the geode's <STRONG CLASS="fileName">
.geo</STRONG>
 file header by the Glue linker, which takes the values from the geode's geode parameters (<STRONG CLASS="fileName">
.gp</STRONG>
) file. The two fields used from the<STRONG CLASS="fileName">
 .gp</STRONG>
 file are <CODE>
tokenchars</CODE>
 for the four characters and <CODE>
tokenid</CODE>
 for the manufacturer ID.</P>
<P>
A <CODE>
GeodeToken</CODE>
 structure in the token database file can also be filled in when GeoManager scans a directory. If the header of a particular application's <STRONG CLASS="fileName">
.geo</STRONG>
 file does not have a recognized token, GeoManager will launch the application in &quot;engine&quot; mode, loading its GenApplication object. It will request that the application object then install its icon into the token database file (<CODE>
GenApplicationClass</CODE>
 knows how to do this).</P>
<P>
The token database file contains one entry for each token that has been installed. Each time a new token and icon is encountered, a new entry is added by the UI. This happens automatically when GeoManager scans a directory.</P>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="Geodes_b.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Geodes_b.htm"><IMG SRC="../../docImages/prevUp.gif" BORDER="0" ALT="Prev: ">2 Creating Icons</A> 
<!-- to next --> | <A HREF="Geodes_d.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">2.2 Managing the Token Database File</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
