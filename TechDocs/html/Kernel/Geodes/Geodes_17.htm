<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: Geodes_17.htm,v 1.1 97/06/02 15:28:29 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Adding EC Code to Your Program</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="subsectionTitle">
<A HREF="index.htm">Applications and Geodes</A>: 5.1 <A HREF="Geodes_16.htm">The Error-Checking Version</A>: 
Adding EC Code to Your Program</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="Geodes_16.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Geodes_16.htm"><IMG SRC="../../docImages/prevUp.gif" BORDER="0" ALT="Prev: ">5 The Error-Checking Version</A> 
<!-- to next --> | <A HREF="Geodes_18.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">5.2 Special EC Routines</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<P>
When compiling your code, you can include certain extra lines in either the EC version or the non-EC version of your program. For example, during debugging you want your program to check the validity of each memory handle before locking the memory block; for the final version of your program, however, you don't want this validity check because it slows down your program. You can easily add a few instructions that will be compiled only into the EC version.</P>
<P>
GEOS provides five macros, listed below, for version-specific instructions. These macros must be treated as statements; they may not be used in expressions.</P>
<DL>
<DT>
EC<A NAME="IX_EC() macro">
 </A>
</DT><DD>This macro adds the specified line of code to the EC version only. When the non-EC version is compiled from the same code, the line will be left out.</DD>
<DT>
EC_ERROR<A NAME="IX_EC_ERROR() macro">
 </A>
</DT><DD>This macro halts the execution of the EC version of a program by calling <CODE>
FatalError()</CODE>
 with a specified error code. The call to <CODE>
FatalError()</CODE>
 will not be included in the non-EC version.</DD>
<DT>
EC_ERROR_IF</DT><DD>
<A NAME="IX_EC_ERROR_IF() macro">
 </A>
This macro works like EC_ERROR, above, but it also allows you to set a condition for whether <CODE>
FatalError()</CODE>
 will be called. If the condition is met, <CODE>
FatalError()</CODE>
 will be called.</DD>
<DT>
NEC<A NAME="IX_NEC() macro">
 </A>
</DT><DD>This macro adds the specified line of code to the non-EC version but leaves it out of the EC version. (It is the converse of the EC macro.)</DD>
<DT>
EC_BOUNDS<A NAME="IX_EC_BOUNDS() macro">
 </A>
</DT><DD><A NAME="IX_ECCheckBounds()">
 </A>
This macro checks the validity of a specified address (pointer) by calling the <CODE>
ECCheckBounds()</CODE>
 routine. If the pointer is out of bounds, <CODE>
ECCheckBounds()</CODE>
 will call <CODE>
FatalError()</CODE>
. This macro may only add the bounds check to the EC version.</DD>
</DL>
<P>
An example of use of these macros is shown in <A HREF="Geodes_17.htm#69843"> EC Macros</A>
.</P>
<P CLASS="figTitle">
Code Display 7-4 <A NAME="69843">
 </A>
EC Macros</P>
<PRE>/* This code display shows only the usage of these macros; assume that each
 * line shown below exists within a particular function or method. */</PRE>
<PRE>/* The EC macro adds a line of code to the EC version. Its format is
 *	EC(line)		where <EM>line</EM> is the line of code to be added.
 * Note that the NEC macro is similar. */
    EC( @call MyErrorDialogBox::MSG_MY_ERR_PRINT_ERROR(); )
    NEC( @call MyErrorDialogBox::MSG_MY_ERR_PRINT_NO_ERROR(); )</PRE>
<PRE>/* The EC_ERROR macro adds a call to FatalError() to the EC version. Its format is
 *	EC_ERROR(code)		where <EM>code</EM> is the error code to be called. */
    EC_ERROR(ERROR_ATTR_NOT_FOUND)</PRE>
<PRE>/* The EC_ERROR_If macro is similar to EC_ERROR but is conditional. Its format is
 *	EC_ERROR_IF(test, code)			where <EM>test</EM> is a Boolean value and <EM>code</EM> is the
 * error code to be called. */
    lockVariable = MyAppCheckIfLocked();					/* TRUE if inaccessible. */
    EC_ERROR_IF(lockVariable, ERROR_ACCESS_DENIED)						/* Error if inaccessible. */</PRE>
<PRE>/* The EC_BOUNDS macro adds a call to ECCheckBounds() to the EC version.
 * Its format is
 *	EC_BOUNDS(addr)		where <EM>addr</EM> is the address to be checked. */
    myPointer = MyAppGetMyPointer();
    EC_BOUNDS(myPointer)</PRE>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="Geodes_16.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Geodes_16.htm"><IMG SRC="../../docImages/prevUp.gif" BORDER="0" ALT="Prev: ">5 The Error-Checking Version</A> 
<!-- to next --> | <A HREF="Geodes_18.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">5.2 Special EC Routines</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
