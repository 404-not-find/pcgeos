<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: Environment_10.htm,v 1.1 97/06/02 15:07:14 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Working with GStates</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="subsectionTitle">
<A HREF="index.htm">Graphics Environment</A>: 6.2 <A HREF="Environment_e.htm">Graphics State</A>: 
Working with GStates</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="Environment_e.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Environment_f.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">6.1 GState Contents</A> 
<!-- to next --> | <A HREF="Environment_11.htm"><IMG SRC="../../docImages/nextUp.gif" BORDER="0" ALT="Next: ">7 Working With Bitmaps</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<PRE>GrCreateState(), GrDestroyState(), GrSaveState(), GrRestoreState()</PRE>
<P>
As has been mentioned, most graphics routines require that a GState handle be provided as an argument. Beginning programmers are often unclear on just where to get the GState to use.</P>
<P>
Many drawing routines are called by <CODE>
MSG_VIS_DRAW</CODE>
. This message provides a GState, and all routines in the handlers for this message should use the provided GState. Creating a new GState under these circumstances is unnecessary and wasteful. However, sometimes you will need to create a GState.<A NAME="IX_GrCreateState()">
 </A>
 <CODE>
GrCreateState()</CODE>
 creates a GState with the default characteristics. You must specify the window with which the GState will be associated.

</P>
<P>
Commands which change drawing attributes or the current position change the GState.<A NAME="IX_GrSetDefaultState()">
 </A>
 </P>
<P>
<CODE>
GrDestroyState()</CODE>
<A NAME="IX_GrDestroyState()">
 </A>
 is used to get rid of a GState, freeing the memory to be used by other things. If GStates are created but not destroyed, eventually they will take too much memory. Normally, for each call to <CODE>
GrCreateState()</CODE>
 there is a corresponding <CODE>
GrDestroyState()</CODE>
. <CODE>
MSG_VIS_DRAW</CODE>
 handlers don't need to destroy the passed GState. Graphics states are cached so that <CODE>
GrCreateState()</CODE>
 and <CODE>
GrDestroyState()</CODE>
 don't normally need to call <CODE>
MemAlloc()</CODE>
 or <CODE>
MemFree()</CODE>
. When GStates are freed, their space is added to the cache. When the memory manager needs to find space on the heap, it flushes the cache.</P>
<P>
A geode is most likely to call <CODE>
GrCreateState()</CODE>
 when about to draw a piece of geode-defined UI. Other than that, you'll probably be using GStates provided to you by the system. You might want to create a GState if you wanted to calculate something (perhaps the length, in inches, of a text string) when you had no appropriate GState.</P>
<P>
<CODE>
GrSaveState()</CODE>
<A NAME="IX_GrSaveState()">
 </A>
 provides a sort of &quot;push&quot; operation that works with GStates. When you call certain functions, like <CODE>
GrSetAreaColor()</CODE>
, new values will wipe out the values of the old GState. <A NAME="IX_GrRestoreState()">
 </A>
But if you've previously called <CODE>
GrSaveState()</CODE>
, then any time you call <CODE>
GrRestoreState()</CODE>
 on your saved state, it will come back and displace the current state. Your application can save a GState to save a commonly used clipping region, which could then be restored by restoring the state instead of repeating all the operations needed to duplicate the region.<A NAME="IX_GrSaveTransform()">
 </A>
 <CODE>
GrSaveTransform()</CODE>
 and<A NAME="IX_GrRestoreTransform()">
 </A>
 <CODE>
GrRestoreTransform()</CODE>
 are optimizations of <CODE>
GrSaveState()</CODE>
 and <CODE>
GrRestoreState()</CODE>
, but they only preserve the GState's transformation.</P>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="Environment_e.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Environment_f.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">6.1 GState Contents</A> 
<!-- to next --> | <A HREF="Environment_11.htm"><IMG SRC="../../docImages/nextUp.gif" BORDER="0" ALT="Next: ">7 Working With Bitmaps</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
