<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: Modem_3.htm,v 1.1 97/06/05 12:40:55 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE> Sending Data</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="sectionTitle">
<A HREF="index.htm">Modem Connections</A>: 3 
<A NAME="14750">
 </A>
Sending Data</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Modem_2.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">2 Connecting</A> 
<!-- to next --> | <A HREF="Modem_4.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">4 Receiving Data</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<P>
To send data, MTalk does the following:</P>
<UL>
<LI>
retrieves the text the user has typed in and puts it into a memory block</LI>
<LI>
locks the block down (to get a pointer to the text)</LI>
<LI>
gets the size of the text</LI>
<LI>
calls <CODE>
ModemSend()</CODE>
 (defined in modem.goc) to send the data</LI>
<LI>
unlocks the memory block</LI>
</UL>
<P CLASS="figTitle">
Code Display 9-2 Sending Data Over A Serial Connection</P>
<PRE>    /*
     * textBlock - Handle of block containing text to send.
     * textPtr - Pointer to text to send.
     * textSize - Size of text to send.
     */
    MemHandle		textBlock;
    char *		textPtr;
    int		textSize;</PRE>
<PRE>    /*
     * Get text that user has typed and put it into a newly created memory block.
     * Lock the block down on the heap and obtain a pointer to it.
     */
    textBlock = @call MTalkSendText::MSG_VIS_TEXT_GET_ALL_BLOCK( NullHandle );
    textPtr = MemLock( textBlock );</PRE>
<PRE>    /*
     * Get the size of the text then send it.
     */
    textSize = LocalStringSize( textPtr );
    if ( ModemSend( textSize, (byte*)textPtr ) != STREAM_NO_ERROR )
    {
	/* handle the error */
    }</PRE>
<PRE>    /*
     * Once the text has been sent, free its block.
     */
    MemFree( textBlock );</PRE>
<P>
<CODE>
ModemSend()</CODE>
 calls the VirtualSerial Library routine, <CODE>
VirtualSerialWrite()</CODE>
, to send the passed data. <CODE>
VirtualSerialWrite()</CODE>
 writes the passed data to stream and, if necessary, blocks until enough space in the stream becomes available. (If you don't want to block, pass STREAM_NO_BLOCK in <CODE>
VirtualSerialWrite()</CODE>
.)</P>
<P>
<CODE>
ModemSend()</CODE>
 takes two arguments:</P>
<DL>
<DT>
<EM>dataLength</DT><DD>
</EM>Length of the string (not counting the Null character).</DD>
<DT>
<EM>data</DT><DD>
</EM>Pointer to the data to be sent.</DD>
</DL>
<P>
<CODE>
ModemSend()</CODE>
 returns a <CODE>
StreamError</CODE>
 value:</P>
<DL>
<DT>
STREAM_NO_ERROR</DT><DD>
if it successfully sends the data. </DD>
<DT>
STREAM_CLOSED</DT><DD>
if the stream is not open.</DD>
<DT>
STREAM_SHORT_READ_WRITE</DT><DD>
if the required amount of space was not available and STREAM_NO_BLOCK was specified.</DD>
</DL>
<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="index.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="Modem_2.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">2 Connecting</A> 
<!-- to next --> | <A HREF="Modem_4.htm"><IMG SRC="../../docImages/next.gif" BORDER="0" ALT="Next: ">4 Receiving Data</A> 
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>
