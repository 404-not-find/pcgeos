<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<!-- This page was automatically generated from a bunch of smaller pages. -->
<META NAME="copyright" CONTENT="Copyright GEOWORKS">
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">
<TITLE>Distributing Your Application</TITLE>
</HEAD>
<BODY BGCOLOR="#ffffdf">
This document is a single-page version of a <A HREF="index.htm">a multi-page document</A>, suitable for easy printing.
<A NAME="index.htm"></A>

<H1 CLASS="chapterTitle">

Distributing Your Application

</H1>
<P>
Once you've finished coding and testing your application, you'll want to distribute it to users. You'll need to take some time to figure out exactly what files make up your package--what files does the user need to use your product? Is it just an application geode? Perhaps an application geode plus a data file? If one or more of the files is an application, 
<A HREF="#appPrep.htm">make sure it's really ready for distribution</A>.
The files that make up your software are known as a software package. </P>
<P>
Once you've figured out what files make up your software package, there are two approaches to making your package available:</P>
<DL>
<DT>
<STRONG>
PC Download</STRONG></DT><DD>

If all users will have access to a 486 (or better) PC running MS Windows 3.1 or MS Windows 95 and a serial or IR connection, and if you have some way to get files onto that PC, you can have users install your software with the built-in <STRONG CLASS="fileName">
Install/Remove software</STRONG>
 application.<BR>
You will provide a package description file (described in the <A HREF="#Distribution_1.htm_51122"> Package Description File</A>
 section, below), and will need to set up server software on the PC (described in <A HREF="#Distribution_2.htm_41226"> Setting Up a PC Server</A>
).</DD>
<DT>
<STRONG>
Web Site</STRONG>
</DT><DD>You can make the files available on a web site. Users with the ability to browse the web can download your program easily, thanks to installation savvy in the built-in <CODE>
WWW</CODE>
 application.<BR>
You will need to provide a package description file (described in the <A HREF="#Distribution_1.htm_51122"> Package Description File</A>
 section, below), and a bit more to get your server and files ready (described in <A HREF="#Distribution_3.htm_77839"> Setting Up a Web Server</A>
). You will bundle each software package into an Add-On Software file (a specially tagged archive).</DD>
</DL>
<P>
No matter how you're making your software available, you'll need to create its Package Description File.</P>
<P CLASS="sectionlinks">
<STRONG>
&nbsp;&nbsp;<A HREF="#appPrep.htm">1 Preparing Your Application</A><BR>
&nbsp;&nbsp;<A HREF="#Distribution_1.htm">2 Package Description File</A><BR>
&nbsp;&nbsp;<A HREF="#Distribution_2.htm">3 Setting Up a PC Server</A><BR>
&nbsp;&nbsp;<A HREF="#Distribution_3.htm">4 Setting Up a Web Server</A><BR>
</STRONG>
</P> <!-- end of sectionlinks blob -->

<HR>
<A NAME="appPrep.htm"></A>


<H2 CLASS="sectionTitle">
<A HREF="#index.htm">Distributing Your Application</A>: 1 
Preparing Your Application</H2>

<P>
Before you package your files up for distribution, first make sure 
that any applications in the package are ready.</P>

<P>
The applications must be ready to shut down when prompted by the 
system.  If the application is running on the device, the user 
won't be able to un-install the application or to install a newer
version.  To make your application shut down as necessary, make 
sure that its <CODE>FoamSubApplication</CODE> object has 
<CODE>HINT_APPLICATION_QUIT_ON_IACP_ALLOW_FILE_ACCESS</CODE> in its declaration.</P>

<HR>

<A NAME="Distribution_1.htm"></A>


<H2 CLASS="sectionTitle">
<A HREF="#index.htm">Distributing Your Application</A>: 2 
<A NAME="Distribution_1.htm_51122">
 </A>
Package Description File</H2>
<P>
No matter how you're making your program available, you'll need to provide a &quot;package description file,&quot; sometimes known as the .<STRONG CLASS="fileName">
INS</STRONG>
 file. This is an ASCII text file which specifies important information about the files that make up your program:</P>
<UL>
<LI>
Name of the package, which the <CODE>
Install/Remove software</CODE>
 application displays to the user</LI>
<LI>
Description of the package, which the <CODE>
Install/Remove software</CODE>
 application displays to the user</LI>
<LI>
Order in which files should be installed.</LI>
<LI>
Names and locations of the files on the host machine</LI>
<LI>
Where the files should be copied to on the client phone</LI>
</UL>
<P>
This installation order is important in case of interrupted installation--if file <EM>
A</EM>
 depends upon file <EM>
B</EM>
, but installation was interrupted after file <EM>
A</EM>
 was brought over, but before file <EM>
B</EM>
 was, then file <EM>
A</EM>
 won't work, since it depends on an absent file. If another package is relying upon an older, successfully installed version of file <EM>
A</EM>
, then you've just broken that other file.</P>
<P>
Use the following format when creating the package description file:</P>
<UL>
<LI>
The file name must have a .<STRONG CLASS="fileName">
INS</STRONG>
 suffix.</LI>
<LI>
Whitespace at the end of a line is ignored; blank lines are ignored.</LI>
<LI>
The first line must say &quot;GEOS Package Description File v1.0&quot;</LI>
<LI>
The second line must contain the package name. This is the name by which the package will be identified to the user in the <STRONG CLASS="fileName">
Install/Remove software</STRONG>
 application. The application doesn't have space for a long description, though--about 20 characters.</LI>
<LI>
The third line must contain a description of the package. When the user views the package in the <STRONG CLASS="fileName">
Install/Remove software</STRONG>
 application, they may read this description before deciding whether to download/install the package. The application doesn't have space for a long description, though--about 16 characters.</LI>
<LI>
The fourth line must contain the size of the package, (in bytes). This is the combined size of all files in the package. This string must be at most 14 characters long. (Hopefully, this will be sufficient!) When computing the size, don't forget to include the size of the package description file itself. It's all right to over-estimate the size.</LI>
<LI>
The fifth line must consist of a period (.). (This delimiter separates information about the package as a whole from information about the individual files.)</LI>
<LI>
The rest of the file consists of pairs of lines:<BR>
<EM>
The first line</EM>
 of each pair contains the path of a file on the host machine (or within the Add-On Software file, which will be described later); <BR>
<EM>
The second line</EM>
 of each pair contains the destination of the file on the client phone. <BR>
<BR>
The host-machine location is relative to the location of the package description file. The destination location is relative to the base of the GEOS tree.</LI>
</UL>
<P>
The line-pairs describing file locations must be ordered based upon the order in which the files should be installed. Libraries, fonts, etc. must be listed before the applications that depend on them.</P>

<H3>
Sample Package Description File</H3>
<P CLASS="figCaption">
This example shows a package description file for the Santa package. On the host machine, the package description file is in the C:\NSERVER directory, and the files making up the package are in the C:\NSERVER\SANTA directory. The Santa application depends on the Sleigh library, and the Rudy font; the Sleigh library depends on the Donner and Blitzen libraries.</P>
<PRE>GEOS Package Description File v1.0

Santa v1.0
Gives gifts.
15769
.

santa\rudy.fnt
userdata\font\rudy.fnt</PRE>
<PRE>santa\donner.geo
system\donner.geo</PRE>
<PRE>santa\blitzen.geo
system\blitzen.geo</PRE>
<PRE>santa\sleigh.geo
system\sleigh.geo</PRE>
<PRE>santa\santa.geo
world\extrapps\santa.geo</PRE>

<HR>
<A NAME="Distribution_2.htm"></A>


<H2 CLASS="sectionTitle">
<A HREF="#index.htm">Distributing Your Application</A>: 3 
<A NAME="Distribution_2.htm_41226">
 </A>
Setting Up a PC Server</H2>
<P>
The Nokia 9000i Communicator comes with a disk containing the software by which a PC may be made to act as a server machine for the <STRONG CLASS="fileName">
Install/Remove software</STRONG>
 application. The phone can make either a serial or IR connection with the PC. (For an IR connection, the PC must be running MS Windows 95 and the IR monitoring software which comes with it.)</P>
<OL>
<LI>
From MS Windows 3.1 or Windows 95, run the program called <CODE>
server</CODE>
 on the floppy disk to install a program called <CODE>
NServer</CODE>
 onto the PC. </LI>
<LI>
Run <CODE>
NServer</CODE>
 to turn your PC into a server for the Nokia 9000i Communicator. This program monitors one of the PC's COM ports.</LI>
<LI>
Make sure that the <CODE>
NServer</CODE>
 program is monitoring the right COM port--check its Settings.</LI>
</OL>
<P>
If the user makes a serial or IR connection between a Nokia 9000i Communicator and a PC running the NServer, then runs the <STRONG CLASS="fileName">
Install/Remove software</STRONG>
 application on the phone, they can install packages from the PC to their phone.</P>
<P>
The <STRONG CLASS="fileName">
Install/Remove software</STRONG>
 application needs to know which directory to scan for Package Definition files. By default, the Install/Remove software application will look in the PC's A:\NSERVER directory--allowing for easy installation directly from floppy. If the files reside on the PC's hard drive, they should probably reside in C:\NSERVER; if they don't, make sure that the user knows where to look for them. To avoid clutter, you might want to put each &quot;package&quot; of files into its own directory under the directory containing the package description files.</P>
<HR>
<A NAME="Distribution_3.htm"></A>


<H2 CLASS="sectionTitle">
<A HREF="#index.htm">Distributing Your Application</A>: 4 
<A NAME="Distribution_3.htm_77839">
 </A>
Setting Up a Web Server</H2>
<P>
To make Nokia 9000i Communicator software packages available on a web site, the web site administrator will do some set-up work so that the server knows how to tag Add-On Software files. Each software package must be bundled up into an Add-On Software file--a special kind of archive. </P>
<P>
Standard Add-On Software files will have a .<STRONG CLASS="fileName">
AOS</STRONG>
 suffix, and should be identified by the MIME-type <EM>
application/x-nokia-9000-communicator-add-on-software</EM>
. Exactly how this is set up depends upon your server software. NCSA's httpd daemon may use a file called <STRONG CLASS="fileName">
mime.types</STRONG>
, to which you would add a line reading</P>
<PRE>			application/x-nokia-9000-communicator-add-on-software 							aos</PRE>
<P>
Once the server has been set up correctly, each software package needs to be bundled up into an Add-On Software file.</P>
<OL>
<LI>
Pack the package descriptor file and all files in the software package into one <CODE>
tar</CODE>
 archive file. (This is done using the <CODE>
tar</CODE>
 program. <CODE>
Tar</CODE>
 is a standard Unix program; there is a public domain DOS <CODE>
tar</CODE>
 program. The host-file-location lines in the package description file should describe locations within the tar file's directory structure.) The .<STRONG CLASS="fileName">
INS</STRONG>
 file must be in the top level directory of the tar file so that it may be found. Read your <CODE>
tar</CODE>
 documentation to find out how to create the archive. An appropriate invocation for one version of <CODE>
tar</CODE>
 might be:</LI>
<PRE>tar cvf santa2.aos santa2.ins santa2/santa2.geo </PRE>
<LI>
Give the tar file's filename the suffix .<STRONG CLASS="fileName">
AOS</STRONG>
 so that it will be recognized as an Add-On Software file.</LI>
<LI>
Put the file up on your web server.</LI>
</OL>
<P>
Users of the Nokia 9000i Communicator using the <STRONG CLASS="fileName">
WWW</STRONG>
 built-in application will be able to use <STRONG CLASS="fileName">
WWW</STRONG>
 to install the software package from your site. The <CODE>
WWW</CODE>
 program will download the Add-On Software file, extract the files from the archive, and put them into the proper directories as directed by the package description file.</P>
<HR>
This document is a single-page version of a <A HREF="index.htm">a multi-page document</A>, suitable for easy printing.
</BODY>
</HTML>
