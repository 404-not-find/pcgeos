#! /bin/sh -

#
# This script is to move the files in the src directory to the corresponding
# locations under the dest. directory. 
# Syntax:
#   makeIntlTree (ALL|LOCALIZED) <src dir> <dest dir> <list of locations> 
#
# If ALL is used, all the files are put into the dest. directory.
# If LOCALIZED is used, only the localized or translated files are input into
#    the dest. directory.
# <src dir>	-- directry containing localized geodes and data files.
# <dest dir>	-- top directory of where the files go.
# <list of locations>	-- locations where the files go.
#
# Example:
#     makeIntlTree ALL srcDir JediGerman/Installed "Library/Jedi/DB/db.geo..."
#
# $Id: makeIntlTree,v 1.6 95/10/04 12:16:45 cthomas Exp $
#

# set -x

#
# Make sure we get correct # of arguments.
# Make sure the input arguments are valid.
#
case $# in
0) echo "usage: $0 -- Read the header of this script for details." 
	exit 1 ;;
1) echo "Not enough arguments. Read the header of this script for details." 
	exit 1 ;;
2) echo "Not enough arguments. Read the header of this script for details." 
	exit 1 ;;
3) echo "Not enough arguments. Read the header of this script for details." 
	exit 1 ;;
4 | 5) if [ $1 != "ALL" -a $1 != "LOCALIZED" ]; then
	echo "The 1st argument is invalid. Please read the header of this script for detail".
	exit 1
   fi

   if [ ! -d $2 -o ! -d $3 ]; then
	echo "Invalid directory is given. Please read the header of this script for detail".
	exit 1
   fi

   option=$1			# either "ALL" or "LOCALIZED"
   srcDir=$2			# dir containing localized files
   destDir=$3			# top level of the destination tree
   locations=$4			# list of the locations of the files
   forceEnglish=$5		# list of files which should be same as english

   primaryDir=/staff/pcgeos/ReleaseJedi/Installed
   currDir=`pwd`

   # Get a list of the localized file names
   cd $srcDir
   srcFiles=`ls`
   cd $currDir

	#
	# copy the localized files and other data to the destination tree.
	#
	for i in $locations
	do
		fileName=`echo $i | awk '{ n = split($i, a, "/"); 
					   print a[n] }'`
		tailPath=`echo $i | sed 's,/[^/]*$,,'`

		#
		# is a given file in the translation destination?
		#
		member=0
		for j in $srcFiles
		do
			if [ $fileName = $j ]; then
				member=1
				break
			fi
		done

		#
		# But, are we to use the english version, not the
		# translated one?
		#
		useEnglish=0
		for j in $forceEnglish
		do
			if [ $fileName = $j ]; then
				member=0
				useEnglish=1
				break
			fi
		done

		#
		# Make sure destination directory exists
		#
		if [ ! -d ${destDir}/${tailPath} ] ; then
			mkdir -p ${destDir}/${tailPath}
			chmod 777 ${destDir}/${tailPath}
		fi

		if [ $member -eq 1 ]; then
			echo "Copy ${srcDir}/$fileName to ${destDir}/${i}. "

			#
			# Deal with permission problems at the destination
			# by removing the destination if we're really
			# going to try to copy something there.  Get rid
			# of links too.
			#
			if [ -f ${srcDir}/$fileName -a -f ${destDir}/$i -a \
			        \( ! -w ${destDir}/$i -o -h ${destDir}/$i \) ] ; then
				rm -f ${destDir}/$i
			fi
			cp ${srcDir}/$fileName ${destDir}/$i
			if [ $? -ne 0 ] ; then
				errors="$errors
Copying ${srcDir}/$fileName to ${destDir}/$i"
			fi
			chmod -f 666 ${destDir}/$i

			case $i in
			*.geo)
				#
				# Check the serial numbers of original and
				# localized geodes.  They should match.
				# The command to extract the serial number reads
				# like: "dump 2 bytes starting at the 298'th byte
				# to an ascii representation"
				#
				ser1=`dd bs=1 skip=298 count=2 if=${primaryDir}/$i | od`
				ser2=`dd bs=1 skip=298 count=2 if=${destDir}/$i | od`
				if [ "$ser1" != "$ser2" ] ; then
					errors="$errors
Serial numbers of Source and Localized geodes don't match: $i"
				fi
				;;
			*)	;;	
			esac

		elif [ \( $option = "ALL" \) -o \( $useEnglish -ne 0 \) ]; then
			echo "Copy ${primaryDir}/$i to ${destDir}/${i}. "
			if [ -f ${primaryDir}/$fileName -a -f ${destDir}/$i -a \
			        \( ! -w ${destDir}/$i -o -h ${destDir}/$i \) ] ; then
				rm -f ${destDir}/$i
			fi
			if [ $useEnglish -eq 0 ]; then
				warnings="$warnings
Localized $fileName not found: Copying from $primaryDir/$i"
			fi

			cp ${primaryDir}/$i ${destDir}/$i
			if [ $? -ne 0 ] ; then
				errors="$errors
Copying ${srcDir}/$fileName to ${destDir}/$i"
			fi
		else
			errors="$errors
$fileName missing from set of localized files"
		fi

		member=0
	done	

	if [ "$warnings" ] ; then
		echo "**** WARNINGS: $warnings"
	fi
	if [ "$errors" ] ; then
		echo "**** ERRORS CREATING LOCAL INSTALLED TREE: $errors"
		exit 1
	fi
	exit 0;;
*) echo "usage: $0 -- Too many argument. Read the header of this script for details." 
	exit 1 ;;
esac

