#!/usr/local/bin/perl
##############################################################################
#
#	Copyright (c) Geoworks 1996 -- All Rights Reserved
#
# FILE:		findsym
#
# AUTHOR:	Eric Weber, Dec  4, 1996
#
# DESCRIPTION:
#     Find the offset of a symbol in a geode file
#
#	$Id: findsym,v 1.1 96/12/04 16:56:09 weber Exp $
#
##############################################################################
#
# start printobj and pipe it's output to us
#
$basename = $ARGV[0];
$basename =~ s/\.[^.]*$//;
$symname = $basename.".sym";
$geoname = $basename.".geo";
$label = $ARGV[1];

(-r $symname) || die "Can't read $symname";
(-r $geoname) || die "Can't read $geoname";

open(STDIN, "printobj $symname|");

#
# loop through the output of printobj
#
$found = 0;
$segnum = 0;
while (<STDIN>) {
    #
    # ignore library "segments"
    #
    if (/^Segment.*type library/) {
    } 
    elsif (/^Segment.*type absolute/) {
    }

    #
    # remember the name and index of real segments
    #
    elsif (/^Segment \d+: name (\w+)/) {
	$segnum++;
	$segname = $1;
    }

    #
    # if we find the label, remember where it is, and abort the loop
    #
    elsif (/^\s*$label\s*: (\w*) at ([0-9a-fA-F]+)/o) {
	$labtype   = $1;
	$laboffset = $2;
	$found = 1;
	# print "$label in segment $segname ($segnum), offset $laboffset\n";
	last;
    }
}

#
# stop now if we didn't find the label
#
if (!$found) {
    print "Label $label not found.\n";
    exit 1;
}

#
# now compute the geode offset
#
open(STDIN, "dumpgeo -t $geoname|");

# loop through the geode tables
$insegs = 0;
while (<STDIN>) {
    if (/RESOURCE POSITION TABLE/) {
	$insegs = 1;
    } elsif ($insegs && /^RELOCATION/) {
	print stderr "$symname claims that $labtype $label is in segment $segname ($segnum), but that segment number is not in $geoname\n";
	exit 1;
    } elsif ($insegs && /^Resource\s+$segnum: (\d+)/o) {
	$segoff = $1;
	# print "segment $segname is at raw offset $segoff\n";
	last;
    }
}

#
# add everything up to get the final number
#
$finaloff = $segoff + hex($laboffset);
printf("%s %s is at 0x%x in %s, file offset 0x%x\n", $labtype, $label, $laboffset, $segname, $finaloff);
