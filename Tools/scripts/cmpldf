#!/usr/public/perl
# -*- perl -*-
##############################################################################
#
# 	Copyright (c) Geoworks 1995 -- All Rights Reserved
#       GEOWORKS CONFIDENTIAL
#
# PROJECT:	PC GEOS
# MODULE:	Tools
# FILE: 	cmpldf
# AUTHOR: 	Chris Thomas, Dec  8, 1995
#
# REVISION HISTORY:
#	Name	Date		Description
#	----	----		-----------
#	CT	12/ 8/95   	Initial Revision
#
# DESCRIPTION:
#	Comprares the entry points of two .ldf files, and prints out
#	any entry or minor protocol number mismatches.
#
#	$Id: cmpldf,v 1.2 95/12/08 16:31:22 cthomas Exp $
#
###############################################################################

$testExist = 0;
$verbose = 0;
$problems = 0;

#
# Parse switches
#

while ($_ = $ARGV[0], /^-/) {
    shift;
    /^-e/ && ($testExist = 1) && next;
    /^-v/ && ($verbose = 1) && next;
    &Usage();
}

#
# Gather symbol information from the LDF files
#

@files = @ARGV;

if (!(@files)) {
    &Usage();
}

foreach $f (@files) {
    &GatherLDFInfo($f);
}

#
# Compare the symbols in each, making sure they match
#

foreach $sym (@syms) {

    $problem = 0;
    $prev = '';
    $cmpresult = "$sym : entry/protocol mismatch\n";

    foreach $f (@files) {
	#
	# If desired, see if the symbol is missing from either file
	#
	if (!$entries{$f, $sym}) {
	    if ($testExist) {
		&error ("$sym : doesn't exist in $f\n");
	    }
	    next;
	}

	#
	# Make sure entry point & protocol match in all files
	#

	if ($verbose) {
	    $cmpresult = $cmpresult .
		(sprintf("\tentry # = %s  protocol = %s  in %s\n",
			 split(/ /, $entries{$f, $sym}),
			 $f));
	}
	    
	if ($prev) {
	    if ($prev ne $entries{$f, $sym}) {
		$problem = 1;
	    }
	} else {
	    $prev = $entries{$f, $sym};
	}
    }
    if ($problem) {
	&error($cmpresult);
    }
}

exit $problems;

######################################################################
#
# Subroutines
#


sub GatherLDFInfo {
    local ($filename) = @_;
    local ($insym, $protominor) = (0, 0);

    if (! -e $filename) {
	&error ("$filename can't be opened\n");
	exit(1);
    }
    open(INPUT, "/usr/public/printobj $filename |") || (&error ("Can't open '$filename'\n"), exit(1));

    while (<INPUT>) {
	if ($insym && /\s*(\S+)\s*:.*entry.*at ([0-9a-f]*)/) {
	    &RecordSym($1);
	    #
	    # Record entry point's entry point number, and minor protocol
	    #
	    $entries{$filename, $1} = "$2 $protominor";

	} elsif	($insym && /\s*(\S+)\s*:.*new minor protocol #([0-9a-f]*)/) {
	   $protominor = $2; 
        } elsif	($insym && /\s*(\S+)\s*:.*protominor token/) {
	   &RecordSym($1);
	   $entries{$filename, $1} = "nil $protominor";
        } elsif (/^\*\*\*\s*(\S*)/) {
	    $insym = ($1 eq 'SYMBOLS:');
	}
		
    }

    close(INPUT);

}

sub RecordSym { 
    $symlist{$_[0]}++;
    if ($symlist{$_[0]} == 1) {
	push(syms, $_[0]);
    }
}

sub error {
    local (@args) = @_;
    $args[0] = "cmpldf: " .  $args[0];
    printf (@args);
    $problems++;
}

sub Usage {
    print STDERR <<EOM;
Synopsis:

    Prints out mismatching entry points and protocols in .LDF files,
    and returns the number of problems it finds.

Usage:
    cmpldf [flags] <ldf>*

    Supported flags are:

	-e   	Print out entry points / protocol tokens that don't appear
		in all .LDF files

	-v	Verbose mode.  By default, prints one-line errors

Examples:

    cmpldf -e /staff/pcgeos/Installed/Library/Kernel/geos.ldf \\
              /staff/pcgeos/Release20X/Installed/Library/Kernel/geos.ldf

EOM
    exit(1);
}
