#!/bin/sh -
# product pmake
#
# First look for a PCSDIR file in the root of the current development
# tree.  If one is found, override the global value of PCSDIR with the
# contents of that file.
#
# Next look for a PRODUCT file in the users PCSDIR directory.  If one
# is found, determine what version of the geode to compile and/or
# send.
#
# $Id: ppm,v 1.3 96/11/26 12:41:54 weber Exp $
#

# figure out the root of the current development tree
# suprisingly, this code is not in any of the existing sh include files
cwd=`pwd`
os_name=`expr "$cwd" : '^.*/\(liberty\)/.*'`
if [ "$os_name" != "liberty" ]; then
    os_name=pcgeos
fi
rootdir=`expr "$cwd" : '^\(.*/'${ROOTDIR:-$os_name}'\).*$'`
ddir=$rootdir/`expr "$cwd" : $rootdir'/\([^/]*\)'`

# check for a dynamic PCSDIR
if [ -f $ddir/PCSDIR ]; then
    read PCSDIR < $ddir/PCSDIR
    export PCSDIR
fi

# now check in the PCSDIR for a PRODUCT file
if [ -f $PCSDIR/PRODUCT ]; then
    read product < $PCSDIR/PRODUCT
else
    product=""
fi

# figure out what directory to use
if [ -n "$product" ]; then
    if expr $product : RESP > /dev/null ; then
	prodir="`respdir $product`"
    elif [ -d "$product" ]; then
        prodir="$product"
    elif [ `expr $product : ".*XIP$"` -a -d XIP ]; then
	prodir="XIP"
    else
	prodir=""
    fi
fi

if [ -n "$prodir" ]; then
    echo pmake $* $prodir
    pmake $* $prodir
else
    echo pmake $*
    pmake $*
fi


rcode=$?

self="`expr $0 : '.*/\(.*\)$'`"
if [ $self = "ppms" -a "$rcode" = 0 ]; then
    if [ -n "$prodir" ]; then
	cd $prodir
    fi
    echo -----------
    pcs -D -u
    exit $?
else
    exit $rcode
fi


