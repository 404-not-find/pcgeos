#!/bin/sh -
##############################################################################
#
# 	Copyright (c) GeoWorks 1993 -- All Rights Reserved
#
# PROJECT:	PC/GEOS
# MODULE:	Tools/scripts -- string searching
# FILE: 	findstrings
# AUTHOR: 	Eric E. Del Sesto, January 28, 1993
#
# REVISION HISTORY:
#	Name	Date		Description
#	----	----		-----------
#	eds	1/28/93		Initial Revision
#
# DESCRIPTION:
#	This is a very simple shell script that will display all of the
#	strings in the source files in and below the current directory.
#
# THE BASIC IDEA:
#	Recursively find all .asm, .ui, .goc, and .def files that are NOT
#	under the following directories:
#		RCS
#		Art
#		CArt
#		OLD
#		Old
#
#	For each file, ignore any lines beginning with the following
#	(ignoring leading whitespace):
#			#include
#			*
#
#	or lines that have any of the following chars before a starting
#	quote:
#
#			;
#			/*
#
#	or lines that contain any of the following:
#			"TO_
#			"HT_
#
#	Show the strings (Anything between double-quotes) in the remaining
#	lines.
#
# KNOWN BUGS:
#	Will not ignore:
#		ifdef-ed-out code
#		math strings, like "10 * 72"
#
#	Should we search for single-quotes also?
#
# REVISION STRING:
#	$Id: findstrings,v 1.2 93/01/28 14:51:15 eric Exp $
#
###############################################################################
#
# Initialize variables
#

verbose=1
list=""

#
# Enable this line to echo each command as we execute it
#set -x
#

###############################################################################
#
# Scan the command line for a list of relative sub-dirs, if any.
#

#OLD
#if [ $# -ne 0 ]; then
#	list=$1
#fi

while [ $# -ne 0 ]; do
    case $1 in
	-q)		verbose=0;;
	*)		list="$list $1";;
    esac
    shift
done

if [ x"$list" = x"" ]; then
    list="."
fi

###############################################################################
#
# Do it.
#

(find $list -type d ! -name RCS ! -name Art ! -name CArt ! -name Old ! -name OLD -print) |
    while read dir; do
	if [ $verbose -eq 1 ]; then
	    echo "############################################################"
	    echo "## " $dir
	    echo "############################################################"
	    echo
	fi

	files="`echo $dir/*.asm $dir/*.ui $dir/*.goc $dir/*.def |
	    tr ' ' '\012' |
	    sed -e '/\*\./d' |
	    tr '\012' ' '`"

	if [ "$files" ]; then

	    for i in $files; do

		if [ $verbose -eq 1 ]; then
		    echo "## FILE: " $i
		fi

		sed -e 's/^[ 	]*//g' \
		    -e '/^#include/d' \
		    -e '/^PASS/d' \
		    -e '/^RETURN/d' \
		    -e '/^SYNOPSIS/d' \
		    -e '/^\*/d' \
		    -e '/.*;.*\"/d' \
		    -e '/.*\/\*.*\"/d' \
		    -e '/\"TO_/d' \
		    -e '/\"HT_/d' \
			$i | egrep '".*"'

		if [ $verbose -eq 1 ]; then
		    echo
		fi

	    done
	fi
    done


