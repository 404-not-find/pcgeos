;
; This file was generated from rpc.h. DO NOT MODIFY IT.
; Refer to rpc.h for comments and other tidbits of information.
;


True=1
False=0

HID_KTHREAD=0
HID_KCODE=1
HID_KINIT=2
HID_KDATA=16
HID_DOS=4
HID_SWAT=5
HID_BIOS=6
HID_PSP=7
HID_KROUT=8
RPC_SUCCESS=0	    	
RPC_CANTSEND=1	    	
RPC_TIMEDOUT=2  	    	
RPC_TOOBIG=3  	    	
RPC_NOPROC=4	  	
RPC_ACCESS=5	  	
RPC_BADARGS=6  	    	
RPC_SYSTEMERR=7	    	
RPC_SWAPPED=8   	    	
RPC_NOHANDLE=9   	    	
RPC_NOTATTACHED=10  	    	

RPC_REVISION1=15  
RPC_REVISION=18

RPC_CALL=1    	    	
RPC_REPLY=2    	    	
RPC_ERROR=4    	    	
RPC_ACK=8    	    	
RpcHeader struct
    rh_flags db ?	    
    rh_procNum db ?	    
    rh_length db ?	    
    rh_id db ?	  	    
RpcHeader ends
RPC_MAX_DATA=256

RPC_MSG_START=0x10 	
RPC_MSG_END=0x11 	
RPC_MSG_QUOTE=0x12 	
RPC_MSG_QUOTE_START='S'
RPC_MSG_QUOTE_END='E'
RPC_MSG_QUOTE_QUOTE='Q'

REG_NUM_REGS=12  	
reg_ax=0
reg_cx=2
reg_dx=4
reg_bx=6
reg_sp=8
reg_bp=10
reg_si=12
reg_di=14
reg_es=16
reg_cs=18
reg_ss=20
reg_ds=22
IbmRegs struct
    reg_regs dw REG_NUM_REGS dup(?)
    reg_ip dw ?	    	
    reg_flags dw ?	    	
IbmRegs ends

RPC_INIT_BASE=0
RPC_BEEP=(RPC_INIT_BASE)  
BeepReply1 struct  	    
    br1_csum dw ?  	
    br1_rev dw ?   	
BeepReply1 ends
BeepReply struct
    br_csum dw ?   	    	
    br_rev dw ?    	    	
    br_baseSeg dw ?	    	
    br_stubSeg dw ?	    	
    br_stubSize dw ?	    	
    br_stubType db ?	    	
STUB_EMS=0	
STUB_ATRON=1	
STUB_LOW=2	
STUB_BSW=3	
    br_kernelLoaded db ?    	
    br_sysTablesOff dw ?	
    br_sysTablesSeg dw ?	
    br_psp dw ?    	    	
    br_mask1 db ?  	    	
    br_mask2 db ?  	    	
    br_irqHandlers dw ?    	
    br_tbreaks dw ?	    	
    br_numTBreaks dw ?	    	
BeepReply ends
RPC_HELLO=(RPC_INIT_BASE+1)  
RPC_KERNEL_LOAD=(RPC_INIT_BASE+2)  
HelloArgs1 struct
    ha1_kdata dw ?	    	    
    ha1_bootstrap dw ?	    	    
    ha1_HandleTable dw ?   	    
    ha1_currentThread dw ? 	    
    ha1_geodeListPtr dw ?  	    
    ha1_threadListPtr dw ?  	    
    ha1_dosLock dw ? 	    	    
    ha1_heapSem dw ?	    	    
    ha1_lastHandle dw ?    	    
    ha1_initSeg dw ?    	    
    ha1_DebugLoadResource dw ?      
    ha1_DebugMemory dw ?   	    
    ha1_DebugProcess dw ?  	    
    ha1_MemLock dw ?	    	    
    ha1_EndGeos dw ?	    	    
    ha1_BlockOnLongQueue dw ?	    
HelloArgs1 ends
HelloArgs struct
    ha_bootstrap dw ?	    	    
    ha_currentThread dw ? 	    
    ha_geodeListPtr dw ?  	    
    ha_threadListPtr dw ?  	    
    ha_dosLock dw ? 	    	    
    ha_heapSem dw ?	    	    
    ha_kcode dw ?       	    
    ha_DebugLoadResource dw ?      
    ha_DebugMemory dw ?   	    
    ha_DebugProcess dw ?  	    
    ha_MemLock dw ?	    	    
    ha_EndGeos dw ?	    	    
    ha_BlockOnLongQueue dw ?	    
    ha_sysECBlock dw ?	    	    
    ha_sysECChecksum dw ?  	    
HelloArgs ends

HelloReply1 struct
    hr1_baseSeg dw ?	    	
    hr1_initSeg dw ?	    	
    hr1_stubSeg dw ?	    	
    hr1_stubType db ?	    	
    hr1_pad db ? 	    	
    hr1_numGeodes dw ?	    	
    hr1_numThreads dw ?    	
    hr1_curThread dw ?	    	
    hr1_lastHandle dw ?    	
    hr1_sysTablesOff dw ?	
    hr1_sysTablesSeg dw ?	
    hr1_psp dw ?    	    	
    hr1_mask1 db ?  	    	
    hr1_mask2 db ?  	    	
    hr1_irqHandlers dw ?    	
    hr1_tbreaks dw ?	    	
    hr1_numTBreaks dw ?    	
HelloReply1 ends
HelloReply struct
    hr_numGeodes dw ?          
    hr_numThreads dw ?         
    hr_curThread dw ?          
HelloReply ends
STUB_EMS=0	
STUB_ATRON=1	
STUB_LOW=2	
STUB_BSW=3	
RPC_MAX_HELLO=RPC_MAX_DATA    	
RPC_GOODBYE1=(RPC_INIT_BASE+2) 	
RPC_GOODBYE=(RPC_INIT_BASE+3) 	
RPC_EXIT1=(RPC_INIT_BASE+3) 	
RPC_EXIT=(RPC_INIT_BASE+4) 	
RPC_RELOAD_SYS1=(RPC_INIT_BASE+4) 	
RPC_RELOAD_SYS=(RPC_INIT_BASE+5) 	
RPC_DOS_RUN1=(RPC_INIT_BASE+5)	
RPC_DOS_RUN=(RPC_INIT_BASE+6)	

RPC_CNT_BASE=16
RPC_CONTINUE=(RPC_CNT_BASE+1) 
RPC_STEP=(RPC_CNT_BASE+3) 
StepReply struct
    sr_regs IbmRegs <> 	
    sr_thread dw ? 	    	
StepReply ends
RPC_SKIPBPT=(RPC_CNT_BASE+4) 

RPC_REG_BASE=32
RPC_READ_REGS=(RPC_REG_BASE)  
RPC_WRITE_REGS=(RPC_REG_BASE+1) 
WriteRegsArgs struct
    wra_thread dw ?	    	
    wra_regs IbmRegs <>	
WriteRegsArgs ends

RPC_MEM_BASE=48
RPC_READ_MEM=(RPC_MEM_BASE)  
ReadArgs struct  	    
    ra_offset dw ?	    	
    ra_handle dw ?	    	
    ra_numBytes dw ?	    	
ReadArgs ends
RPC_WRITE_MEM=(RPC_MEM_BASE+1) 
WriteArgs struct 	    
    wa_offset dw ?	    	
    wa_handle dw ?	    	
WriteArgs ends
RPC_FILL_MEM8=(RPC_MEM_BASE+2) 
RPC_FILL_MEM16=(RPC_MEM_BASE+3) 
FillArgs struct
    fa_offset dw ?	    	
    fa_handle dw ?	    	
    fa_length dw ?	    	
    fa_value dw ? 	    	
FillArgs ends
RPC_READ_IO8=(RPC_MEM_BASE+4) 
RPC_READ_IO16=(RPC_MEM_BASE+5) 
RPC_WRITE_IO8=(RPC_MEM_BASE+6) 
RPC_WRITE_IO16=(RPC_MEM_BASE+7)  
IoWriteArgs struct
    iow_port dw ?	    	
    iow_value dw ?	    	
IoWriteArgs ends
RPC_READ_ABS=(RPC_MEM_BASE+8) 
AbsReadArgs struct
    ara_offset dw ?	    	
    ara_segment dw ?	    	
    ara_numBytes dw ?	    	
AbsReadArgs ends
RPC_WRITE_ABS=(RPC_MEM_BASE+9) 
AbsWriteArgs struct
    awa_offset dw ?	    	
    awa_segment dw ?	    	
AbsWriteArgs ends
RPC_FILL_ABS8=(RPC_MEM_BASE+10) 
RPC_FILL_ABS16=(RPC_MEM_BASE+11) 
AbsFillArgs struct
    afa_offset dw ?	    	
    afa_segment dw ?	    	
    afa_length dw ?	    	
    afa_value dw ?	    	
AbsFillArgs ends

RPC_BLK_BASE=64
RPC_BLOCK_LOAD=(RPC_BLK_BASE)  
LoadArgs struct
    la_handle dw ?	    
    la_dataAddress dw ?    
LoadArgs ends
RPC_RES_LOAD=(RPC_BLK_BASE+1) 
RPC_BLOCK_MOVE=(RPC_BLK_BASE+2) 
MoveArgs struct
    ma_handle dw ?	    
    ma_dataAddress dw ?    
MoveArgs ends
RPC_BLOCK_OUT=(RPC_BLK_BASE+3) 
OutArgs struct
    oa_handle dw ?	    
    oa_discarded dw ?	    
OutArgs ends
RPC_BLOCK_REALLOC=(RPC_BLK_BASE+4) 
ReallocArgs struct
    rea_handle dw ?
    rea_dataAddress dw ?
    rea_paraSize dw ?
ReallocArgs ends
RPC_BLOCK_FREE=(RPC_BLK_BASE+5) 
RPC_BLOCK_FIND=(RPC_BLK_BASE+6) 
FindReply struct
    fr_id dw ?	  	    
    
    fr_dataAddress dw ?    
    fr_paraSize dw ?	    
    fr_owner dw ?	    
    fr_otherInfo dw ?	    
    fr_flags db ? 	    
    fr_pad db ?    	    
FindReply ends
RPC_BLOCK_INFO=(RPC_BLK_BASE+7) 

InfoReply struct
    ir_dataAddress dw ?    
    ir_paraSize dw ?	    
    ir_owner dw ?	    
    ir_otherInfo dw ?	    
    ir_flags db ? 	    
    ir_pad db ?    	    
InfoReply ends
RPC_BLOCK_ATTACH=(RPC_BLK_BASE+8) 
RPC_BLOCK_DETACH=(RPC_BLK_BASE+9) 

RPC_THD_BASE=80
RPC_SPAWN=(RPC_THD_BASE)  
SpawnArgs struct
    sa_thread dw ? 	    
    sa_owner dw ?  	    
    sa_ss dw ?	    	    
    sa_sp dw ?	    	    
SpawnArgs ends
RPC_THREAD_EXIT=(RPC_THD_BASE+1) 
ThreadExitArgs struct
    tea_handle dw ? 	    
    tea_status dw ? 	    
ThreadExitArgs ends
RPC_GEODE_EXIT=(RPC_THD_BASE+2) 
GeodeExitArgs struct
    gea_handle dw ?	    
    gea_curThread dw ?	    
GeodeExitArgs ends

RPC_HLT_BASE=96
RPC_HALT=(RPC_HLT_BASE)  
HaltArgs struct
    ha_thread dw ? 	    	
    ha_regs IbmRegs <> 	
    ha_reason dw ?    	    	
HaltArgs ends
RPC_HALT_DIV0=0	    
RPC_HALT_STEP=1	    
RPC_HALT_NMI=2	    
RPC_HALT_BPT=3	    
RPC_HALT_INTO=4	    
RPC_HALT_BOUND=5	    
RPC_HALT_ILLINST=6	    
RPC_HALT_PEXT=7	    
RPC_HALT_DCHECK=8	    
RPC_HALT_PEXTERR=9	    
RPC_HALT_INVTSS=10	    
RPC_HALT_NOSEG=11	    
RPC_HALT_SSOVER=12	    
RPC_HALT_GP=13	    
RPC_MASK=(RPC_HLT_BASE+1) 
MaskArgs struct
    ma_PIC1 db ? 	    	
    ma_PIC2 db ? 	    	
MaskArgs ends
RPC_INTERRUPT=(RPC_HLT_BASE+2) 
RPC_CBREAK=(RPC_HLT_BASE+3) 

CBreakArgs struct
    cb_ip dw ?	    	    
    cb_cs dw ?	    	    
    cb_comps db 7 dup(?)	    
    cb_inst db ?	    
    cb_thread dw ? 	    
    cb_regs dw REG_NUM_REGS dup(?) 
    cb_value dw ?  	    
    cb_off dw ?    	    
    cb_seg dw ?    	    
CBreakArgs ends
RPC_NOCBREAK=(RPC_HLT_BASE+4) 
RPC_CHGCBREAK=(RPC_HLT_BASE+5) 
ChangeCBreakArgs struct
    ccba_num dw ?  	    
    ccba_crit CBreakArgs <>    
ChangeCBreakArgs ends

RPC_ATR_BASE=112
RPC_TRACE_FETCH=(RPC_ATR_BASE)  
RPC_TRACE_NEXT=(RPC_ATR_BASE+1)
AtronTraceRecord struct
    atr_addrLow dw ?	    	
    atr_data dw ?  	    	
    atr_bus db ?  	    	
ATRB_DMA=0x01   	    
ATRB_MASTER=0x02   	    
ATRB_IOR=0x04   	    
ATRB_MRD=0x08   	    
ATRB_MWT=0x10   	        
ATRB_IOW=0x20   	    
ATRB_REFRESH=0x40	    
ATRB_BHE=0x80	    
    atr_misc db ?  	    	
ATRM_S0=0x01	    
ATRM_COD=0x02	    
ATRM_S1=0x04	    
ATRM_PEACK=0x08	    
ATRM_RUN=0x10	    
ATRM_HWBP=0x20	    
ATRM_MISCBP=0x40	    
ATRM_IOCHK=0x80	    
    atr_addrHigh db ?	    	
    atr_pad db ?   	    	
AtronTraceRecord ends
RPC_BRK_FILL=(RPC_ATR_BASE+2)
BrkFillArgs struct
    bfa_addr dd ?	    	
    bfa_length dw ?	    	
    bfa_value db ?	    	
    bfa_pad db ?   	    	
BrkFillArgs ends
RPC_BRK_WRITE=(RPC_ATR_BASE+3)

RPC_LAST=RPC_TRACE_NEXT
