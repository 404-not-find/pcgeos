table enter $fatalerr_info_table net::NL_ERROR_ILLEGAL_BUFFER_TYPE { The caller requested an illegal type For a network enumeration}
table enter $fatalerr_info_table net::NL_ERROR_INVALID_DOMAIN_STRING { caller using incorrect domain string format
 ("//DOMAIN/SUBDOMAIN/ETC/ETC...")}
table enter $fatalerr_info_table net::NL_ERROR_INVALID_DOMAIN { caller used a domain that is not recognized. (not registered?)}
table enter $fatalerr_info_table net::NL_ERROR_DRIVER_TRASHED_DS { One of the network drivers trashed DS during an enumeration}
table enter $fatalerr_info_table net::NL_ERROR_EXPECTED_DGROUP { One of the segment registers that was supposed to point to group was
 trashed.}
table enter $fatalerr_info_table net::NET_LIBRARY_ATTACHED_TWICE { For some reason, the net library received two LCT_ATTACH calls}
table enter $fatalerr_info_table net::NET_DRIVER_DID_NOT_REFERENCE_NET_LIBRARY { For some reason, one of the drivers that the net library dynamically
 loads did not reference the net library - the code assumes that this
 will be true.}
table enter $fatalerr_info_table net::NET_DRIVER_NOT_EXITED {
 For some reason, one of the drivers that the net library dynamically
 loads did not exit when it was freed. This could happen if it was
 directly loaded by an app, or if one of its threads were blocked.

 This ends up causing a crash when the system finally *does* exit.
}
