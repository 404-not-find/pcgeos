table enter $fatalerr_info_table parse::POINTER_SEGMENT_NOT_SAME_AS_STACK_FRAME { This error occurs in a C stub when the caller passes a pointer
 that should be in the current stack frame (which is done by declaring
 a local variable in a C function then passing a pointer to the variable).}
table enter $fatalerr_info_table parse::PARSE_STRING_SEGMENT_FAILED_ASSERTION { A segment register was assumed to still be pointing at the string
 that was passed for parsing. It is no longer the case, and is
 probably becase of a missed reference to the earlier
 ERROR_DIFFERENT_SEGMENT_BOGOSITY problem. Or a memory trashing bug
 that has overwritten part of the stack.}
table enter $fatalerr_info_table parse::FORMAT_BUFFER_TOO_SMALL { A passed buffer to receive the results of a formatting operation
 is too small.}
table enter $fatalerr_info_table parse::ILLEGAL_FUNCTION_INDEX { An illegal index was specified when requesting a function moniker,
 argument list or description.}
table enter $fatalerr_info_table parse::PARSE_STRING_TOO_LONG { A string, either passed or generated by a parse library function,
 grew past the limit of MAX_STRING_LENGTH.}
table enter $fatalerr_info_table parse::ODDSIZED_DBCS_STRING {	A string has an odd byte size, which shouldn't exist under DBCS.}
