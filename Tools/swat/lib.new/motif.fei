table enter $fatalerr_info_table motif::OL_ILLEGAL_LIST_FLAG_PARAMETER {OL_ILLEGAL_LIST_EXCLUSIVE				enum FatalErrors
OL_ILLEGAL_LIST_OPERATION				enum FatalErrors}
table enter $fatalerr_info_table motif::OL_FILE_SELECTOR_BAD_FILE_TYPES { Occurs if bad FileSelectorFileTypes are found in the GFSI_fileTypes instance
 field.  Make sure that the correct flags are set in the .ui/.goc file and
 the correct flags are passed to any MSG_GEN_FILE_SELECTOR_SET_FILE_TYPES.}
table enter $fatalerr_info_table motif::OL_FILE_SELECTOR_BAD_FILE_CRITERIA { Occurs if bad FileSelectorFileCriteria are found in the GFSI_fileCriteria
 instance file.  Make sure that the correct flags are set in the .ui/.goc file
 and the correct flags passed to any MSG_GEN_FILE_SELECTOR_SET_FILE_CRIETIA.}
table enter $fatalerr_info_table motif::OL_FILE_SELECTOR_CANT_FIND_CHILD { Occurs if the object tree for the file selector has been damaged while
 resolving the GenFileSelector into a specific UI class.  Most likely a
 memory trashing problem.}
table enter $fatalerr_info_table motif::OL_FILE_SELECTOR_OBJECT_MISMATCH { Internal assumption failed, possibly trashed instance data.}
table enter $fatalerr_info_table motif::OL_FILE_SELECTOR_DRIVE_TYPE_UNKNOWN { Drive type for the drive the file selector is attempting to log is
 unknown.}
table enter $fatalerr_info_table motif::OL_FILE_SELECTOR_BAD_ENTRY_TYPE { File type of selection is neither file or subdirectory.}
table enter $fatalerr_info_table motif::OL_FILE_SELECTOR_SORT_PROBLEM { Sorting of files failed.}
table enter $fatalerr_info_table motif::OL_FILE_SELECTOR_BOGUS_ERROR { Rescan error flag incorrectly set.}
table enter $fatalerr_info_table motif::OL_FILE_SELECTOR_DIDNT_RESOLVE_COMPLETE_PATH { Result of OLFSResolveVolPathDiskHan is not a complete path.}
table enter $fatalerr_info_table motif::OL_FILE_SELECTOR_VOLUME_NOT_NULL_TERMED { GFSI_volume instance field does not contain a null-terminated name.  If
 setting a volume name in .ui/.goc file, make sure it is null-terminated.}
table enter $fatalerr_info_table motif::OL_FILE_SELECTOR_BAD_ENTRY_NUMBER { Entry number passed to MSG_GEN_FILE_SELECTOR_OPEN_ENTRY is out of range.
 Valid entry numbers are 0 - (N-1) where N is the number of files in the
 currently displayed file listing.}
table enter $fatalerr_info_table motif::OL_FILE_SELECTOR_TEMP_DATA_NOT_FOUND { Occurs whenever the GFSTempDataEntry variable data for a GenFileSelector
 is not found when it is expected to exists.  Most likely, the memory space
 for the object has been trashed.}
table enter $fatalerr_info_table motif::OLFS_DRIVE_NAME_WONT_FIT { Some drive's name is longer than the space alloted for it when creating
 the moniker for a dynamic list entry...this is weird.}
table enter $fatalerr_info_table motif::OLFS_CALLBACK_ATTRS_MISSING_NEEDED_FEA_NATIVE_NAME { The file selector as ATTR_GEN_FILE_SELECTOR_FILTER_ATTRS and specifies a
 file mask, but the array doesn't contain a descriptor for FEA_NATIVE_NAME,
 which is needed to perform the wildcarding. This is programmer error.
 }
table enter $fatalerr_info_table motif::OLFS_FILE_ATTR_MISSING_FROM_CALLBACK_DATA { The data passed to our callback routine doesn't contain a FileAttrs attribute
 for the file, which it should, since we always request it. This is a bug in
 the kernel or the IFS driver.}
table enter $fatalerr_info_table motif::OLFS_FILTER_METHOD_CAUSED_OBJECT_TO_MOVE { Because all the match attributes passed to FileEnum are passed as far
 pointers, anything the handler for MSG_GEN_FILE_SELECTOR_FILTER_FILE does
 to cause the object to move causes the values to be matched to move, thus
 nuking the whole FileEnum process.}
table enter $fatalerr_info_table motif::OL_VIEW_BAD_SCALE_TYPE { Only certain scale types can be passed to MSG_GEN_VIEW_SET_SCALE_FACTOR:
 Legal ScaleViewType are SVT_AROUND_UPPER_LEFT, SVT_AROUND_CENTER, and 
 SVT_AROUND_POINT.}
table enter $fatalerr_info_table motif::OL_VIEW_CHILDREN_MUST_BE_IN_SAME_BLOCK { Any generic children of the view must be placed in the same block.}
table enter $fatalerr_info_table motif::OL_VIEW_CHILD_NEEDS_AREA_HINT { Any generic child of a view needs one of the hints that describe where around
 the view window the child should try to be placed.  Legal hints include
 HINT_SEEK_X_SCROLLER_AREA, HINT_SEEK_Y_SCROLLER_AREA, HINT_SEEK_LEFT_OF_VIEW,
 HINT_SEEK_TOP_OF_VIEW, HINT_SEEK_RIGHT_OF_VIEW, and HINT_SEEK_BOTTOM_OF_VIEW.}
table enter $fatalerr_info_table motif::OL_VIEW_DOC_TOO_BIG_TO_NOT_BE_SCROLLABLE { This view can't possibly be sized small enough to fit on any normal screen,
 as the entire document must be visible (since GVA_NO_SMALLER_THAN_DOC_SIZE
 is set). Don't set GVA_NO_SMALLER_THAN_DOC_SIZE and make the view scrollable,
 or figure out how to make your content smaller.}
table enter $fatalerr_info_table motif::OL_VIEW_SCROLLER_HAS_BEEN_DESTROYED { The view is trying to call a scroller that appears to no longer exist, and
 has been replaced by some other object.  Apps are not allowed to add or 
 remove scrollbars, or set them not usable while the view is onscreen.
 (You can, however, set the GVDA_DONT_DISPLAY_SCROLLBARS attribute to make
 scrollbars go away.)}
table enter $fatalerr_info_table motif::OL_VIEW_SCROLLER_IS_NOT_IN_GEN_TREE { The view is trying to access a scroller that is no longer in the generic
 tree.  Apps are not allowed to add or remove scrollbars, or set them not
 usable while the view is onscreen.
 (You can, however, set the GVDA_DONT_DISPLAY_SCROLLBARS attribute to make
 scrollbars go away.)}
table enter $fatalerr_info_table motif::OL_VIEW_SCROLLER_CANNOT_BE_MADE_NOT_USABLE { The view is trying to access a scroller that has been made not usable.
 tree.  Apps are not allowed to add or remove scrollbars, or set them not
 usable while the view is onscreen
 (You can, however, set the GVDA_DONT_DISPLAY_SCROLLBARS attribute to make
 scrollbars go away.)}
table enter $fatalerr_info_table motif::OL_VIEW_CANT_RESOLVE_GEOMETRY_OF_CHILDREN { The view has made several passes trying to get the children to choose a 
 size that makes everyone happy.  Apparently some object has some complicated
 geometry which is messing things up.  Keep the objects underneath a view
 as simple as possible w.r.t. calculating a size for themselves.}
table enter $fatalerr_info_table motif::OL_VIEW_CALC_WIN_SIZE_BAD_WIDTH { The view's MSG_GEN_VIEW_CALC_WIN_SIZE apparently has been subclassed and
 is returning a negative or zero width for the view window, which is not
 allowed.}
table enter $fatalerr_info_table motif::OL_VIEW_CALC_WIN_SIZE_BAD_HEIGHT { The view's MSG_GEN_VIEW_CALC_WIN_SIZE apparently has been subclassed and
 is returning a negative or zero height for the view window, which is not
 allowed.}
table enter $fatalerr_info_table motif::OL_VIEW_CANT_SEND_ABS_MOUSE_COORDS_TO_BIG_CONTENTS { The view has been told to send absolute mouse coordinates to the content
 (i.e. GVA_WINDOW_COORDINATE_MOUSE_EVENTS is clear).  The content is too
 large for these absolute mouse positions to fit in the legal graphics 
 coordinate space, so you should probably set the above flag and do the
 appropriate things in the content object to treat the coordinates as relative
 to the scrolled window.}
table enter $fatalerr_info_table motif::OL_VIEW_BAD_DRAG_BOUNDS { Bad bounds were passed to the view in MSG_GEN_VIEW_SET_DRAG_BOUNDS.}
table enter $fatalerr_info_table motif::OL_VIEW_BAD_FLAGS_PASSED_TO_SCROLLBAR_SETUP { A bad vertical flag has been passed to SetupScrollbarIfNeeded.  This is
 an internal flag, so probably someone broke the calling routine.}
table enter $fatalerr_info_table motif::OL_VIEW_MUST_PASS_A_META_MSG_TO_NON_GEN_CONTENT { The view must only pass messages defined under MetaClass to non-generic
 content objects, since they could be a process or a visual object.  This is
 internal, so likely someone has broken the view.}
table enter $fatalerr_info_table motif::OL_VIEW_TEXT_SHOULD_BE_FIRST_CHILD_OF_CONTENT { The view has OLPA_TEXT_OD set locally, and its content has no first child.
 This probably means that someone has trashed a scrollable text object
 in such a way that an OLTextDisplay object has been removed from the
 OLContent.  It should always be the first child of the content.}
table enter $fatalerr_info_table motif::OL_VIEW_BAD_CHILD_AREA_OFFSET { This is an internal error -- somehow the view has screwed up its calculations
 for what area to look for one of the children under it.  Probably someone
 broke GetObjectAreaChoice, but perhaps a bad hint was added to an object
 that is a child of the view.}
table enter $fatalerr_info_table motif::OL_VIEW_EXPECTED_A_CHILD_IN_AREA { A child was supposed to be in one of the view's four areas, and there wasn't
 anything there.  Probably someone broke OLPaneGetVisParent, but trashed
 vis instance data is also a likely culprit.}
table enter $fatalerr_info_table motif::OL_BAD_FLAG_PASSED_TO_SCROLL_ROUTINE { Some internal routine has screwed up, and is no longer passing a legal
 vertical flag to ScrollIntoOneDimension.}
table enter $fatalerr_info_table motif::OL_VIEW_BAD_WINDOW_SIZE_ADJUSTMENTS { Some adjustments were made to the size of a view window which caused its
 width or height to be zeroed.  Check to make sure your HINT_MINIMUM_SIZE,
 HINT_MAXIMUM_SIZE, HINT_FIXED_SIZE arguments don't cause this.  You also
 might be setting GVA_VIEW_FOLLOWS_CONTENT_GEOMETRY and that content's
 MSG_VIS_RECALC_SIZE is returning a zero height or width.}
table enter $fatalerr_info_table motif::OL_VIEW_KEEP_ORIGIN_IN_BOUNDS_BAD_FLAGS_RETURNED { The internal routine KeepOriginInBounds has been broken by someone.
 Only OLPF_AT_RIGHT_EDGE or OLPF_AT_BOTTOM_EDGE should be returned in di.}
table enter $fatalerr_info_table motif::OL_VIEW_BAD_FLAG_PASSED_TO_KEEP_VALUE_IN_BOUNDS { A bad vertical flag was passed to the internal routine KeepValueInBounds, 
 probably due to someone breaking the calling routine.}
table enter $fatalerr_info_table motif::OL_VIEW_TRACK_SCROLLING_HANDLER_DID_NOT_CALL_SETUP { You MUST call GenSetupTrackingArgs (or call MSG_GEN_VIEW_SETUP_TRACKING_
 ARGS in C) at the beginning of a MSG_META_CONTENT_TRACK_SCROLLING 
 handler, to make sure you have the current bounds, doc offset, etc.
 (there are synchronization problems if you don't update various track
 scrolling parameters from the application thread.)}
table enter $fatalerr_info_table motif::OL_VIEW_ALREADY_HAS_EXLUSIVE { Called if view receives a MSG_META_GAINED_FOCUS/TARGET/etc._EXCL when it 
 already has the exclusive.  This illegal condition should never happen,
 as GAIN/LOST messages should always be paired.}
table enter $fatalerr_info_table motif::OL_VIEW_DOES_NOT_HAVE_EXLUSIVE { Called if view receives a MSG_META_LOST_FOCUS/TARGET/etc._EXCL when it does not
 have the exclusive.  This illegal condition should never happen,
 as GAIN/LOST messages should always be paired.}
table enter $fatalerr_info_table motif::OL_VIEW_RECT_TO_MAKE_VISIBLE_HAS_NEGATIVE_SIZE { The rectangle specified to MSG_GEN_VIEW_MAKE_RECT_VISIBLE seems to
 have a negative height or width.  Make sure top < bottom, and left < right
 for the rect.}
table enter $fatalerr_info_table motif::OL_VIEW_RECT_TO_MAKE_VISIBLE_TOO_LARGE { The rectangle specified by MSG_GEN_VIEW_MAKE_RECT_VISIBLE has a large
 (> 64K) width or height.  The routine only handles rectangles smaller
 than that.}
table enter $fatalerr_info_table motif::OL_VIEW_GVIT_QUERY_OUTPUT_SET_WITH_NO_OUTPUT { The view has the QUERY_OUTPUT ink type set, but does not have an output
 set. This will cause the flow object to queue up mouse events forever,
 so is not a good thing.}
table enter $fatalerr_info_table motif::OL_VIEW_GENERIC_CONTENTS_MUST_BE_IN_SAME_THREAD { You cannot use GVI_GENERIC_CONTENTS or GVI_VIEW_FOLLOWS_CONTENT_GEOMETRY
 if the content is running in a different thread as the view (i.e. the
 content is running in the main thread, the view in the UI thread.)  Either
 put the content in the same thread, or avoid using those constants.  Using
 GVDA_NO_SMALLER_THAN_CONTENT and GVDA_NO_LARGER_THAN_CONTENT on the view
 ought to cause the view sizing behavior you desire.
}
table enter $fatalerr_info_table motif::OL_DOCUMENT_INVALID_DOCUMENT_FILE_NAME { GDI_fileName isn't null-terminated and has likely been corrupted, therefore.
 }
table enter $fatalerr_info_table motif::OLDC_PATH_MUST_BE_ABSOLUTE { the path passed to reopen a file included a disk handle, so the path
 must be absolute, but it wasn't. Why? I don't know.}
table enter $fatalerr_info_table motif::OLDC_PATH_MAY_NOT_BE_ABSOLUTE { the path passed to reopen a file did not include a disk handle, so the path
 may not be absolute, it having to be based on the object's current path.
 }
table enter $fatalerr_info_table motif::OL_DOCUMENT_PATH_STORED_INCORRECTLY { a path that was stored in the .ini file has been corrupted, either by
 the user or by us, as there's no initial null-terminated string (the path,
 after which comes the saved disk handle data).}
table enter $fatalerr_info_table motif::OLDC_INVALID_TASK { the current task for a UI document control is not one for which a summons
 is required, yet someone is asking that a summons be built for it.}
table enter $fatalerr_info_table motif::OLAPPDC_DEFAULT_NAME_TOO_LONG { the default filename bound to a GenDocumentGroup object is longer
 than a FileLongName. It must be shortened.}
table enter $fatalerr_info_table motif::OLDC_MUST_HAVE_NO_NAME_TEXT { the noNameText field is empty. If the GDCF_NAME_ON_PRIMARY feature is
 set, there must be a noNameText string.}
table enter $fatalerr_info_table motif::CANT_GET_FILE_ID_FOR_OPEN_FILE { Should never happen, but it means an error came back trying to get the
 disk and FileID for a document to register or unregister it with IACP.}
table enter $fatalerr_info_table motif::OL_STANDARD_DIALOG_DATA_CHUNK_NOT_FOUND { the application object has received a second response from a standard
 dialog. should never happen, and I can't think how it would...}
table enter $fatalerr_info_table motif::OL_CTRL_CANT_HAVE_A_WRAP_COUNT_OF_ZERO { The object has a HINT_WRAP_AFTER_CHILD_COUNT with an argument of zero,
 which is not allowed.}
table enter $fatalerr_info_table motif::OL_CTRL_CANT_HAVE_A_HUGE_WRAP_COUNT { The object has a HINT_WRAP_AFTER_CHILD_COUNT with a very large child count,
 which is not allowed.}
table enter $fatalerr_info_table motif::OL_MNEMONIC_OFFSET_LARGER_THAN_MONIKER { Somehow a mnemonic offset for a textual VisMoniker has been set to be longer
 than the moniker text itself.  Since this is handled automatically by the
 assembler for .ui files, something probably has gotten trashed, or someone 
 has created their own VisMoniker structure and not set this correctly.
 The legal mnemonic offsets are either numbers less than the length of the
 text, -1 for no mnemonic, or -2 for the specific UI's cancel mnemonic.}
table enter $fatalerr_info_table motif::OL_BAD_HINT_DATA { Hint didn't contain correct amount of extra data it is defined as
 requiring.}
table enter $fatalerr_info_table motif::OL_HINT_IF_SYSTEM_ATTRS_NO_CONDITIONS { No conditions were specified for HINT_IF_SYSTEM_ATTRS.}
table enter $fatalerr_info_table motif::OL_HINT_IF_SYSTEM_ATTRS_NO_HINT_FOLLOWS { There was a HINT_IF_SYSTEM_ATTRS as the last hint in an object's hint
 chunk.   At least one hint must follow, which will be removed if
 conditions specified in data of HINT_IF_SYSTEM_ATTRS are not met.}
table enter $fatalerr_info_table motif::OL_HINT_IF_SYSTEM_ATTRS_BAD_CONDITIONS { The SystemAttrs argument to HINT_IF_SYSTEM_ATTRS was set up incorrectly
 and has bad flags.}
table enter $fatalerr_info_table motif::OL_HINT_IF_SYSTEM_ATTRS_COULDNT_FIND_ENDIF { There was a HINT_IF_SYSTEM_ATTRS and a HINT_ELSE without a HINT_ENDIF
 following the HINT_ELSE, which is required.}
table enter $fatalerr_info_table motif::OL_INVALID_GESTURE { The handwriting recognition library returned an invalid gesture type.
}
table enter $fatalerr_info_table motif::OL_ERROR_CANT_USE_INITIATE_ON_DO_DIALOG_OBJECT { MSG_GEN_INTERACTION_INITIATE cannot be used on GenInteractions that will
 be displayed by UserDoDialog.}
table enter $fatalerr_info_table motif::OL_ERROR_BAD_GEN_INTERACTION_TYPE { GII_type field contains invalid entry.  Make sure that it contains a valid
 GenInteractionType.}
table enter $fatalerr_info_table motif::OL_ERROR_CANT_USE_DO_DIALOG_ON_NON_MODAL_OBJECTS { UserDoDialog cannot be used on GenInteractions not marked with
 GIA_INITIATED_VIA_USER_DO_DIALOG and either GIA_MODAL or GIA_SYS_MODAL}
table enter $fatalerr_info_table motif::OL_ERROR_CANT_HAVE_DUPLICATE_STANDARD_TRIGGERS { A dialog GenInteraction can only have one of any give type of standard
 trigger.  Make sure that the GenInteraction doesn't have more than one
 child GenTrigger with a given ATTR_GEN_TRIGGER_INTERACTION_COMMAND data.}
table enter $fatalerr_info_table motif::OL_ERROR_CANT_HAVE_MULTIPLE_REPLY_BARS { A dialog GenInteraction can only have one reply bar (a child
 GenInteraction with HINT_MAKE_REPLY_BAR).  Make sure you don't have more
 than one of these under the dialog GenInteraction.}
table enter $fatalerr_info_table motif::OL_ERROR_BAD_GEN_INTERACTION_GROUP_TYPE { A GenInteraction has ATTR_GEN_INTERACTION_GROUP_TYPE with invalid data.}
table enter $fatalerr_info_table motif::OL_ERROR_ONLY_PRIMARIES_CAN_HAVE_CUSTOM_SYSTEM_MENUS { The gen parent of the custom sys menu must be a GenPrimary.}
table enter $fatalerr_info_table motif::OL_ERROR_NO_TWO_ITEMS_CAN_HAVE_SAME_IDENTIFIER { An item group was found to have two child items with matching identifiers.
 This is not allowed.  Make sure all the items under a single item group
 (or under a set of linked item groups) have unique identifiers
}
table enter $fatalerr_info_table motif::OL_ERROR_NO_TWO_BOOLEANS_CAN_HAVE_COMMON_BITFIELDS { A boolean group was found to have two child booleans whose identifiers
 shared common bitfields (i.e. when or'ed together, produced a non-zero
 result).  Not only are booleans required to have unique identifiers, they
 cannot share any bitfield.  If you need your booleans to have one or more
 shared bitfields, try masking them out before setting identifiers and setting
 the boolean group state, and or them back in after retrieving the state.
}
table enter $fatalerr_info_table motif::OL_ERROR_ITEM_GROUPS_CANNOT_HAVE_NON_ITEM_CHILDREN { A GenItemGroup or GenBooleanGroup object was found to have at least one
 generic child that is not a class or subclass of GenItemClass or GenBoolean-
 Class.  If you need to intersperse other generic objects in between items
 or booleans, consider setting up linked item groups instead.}
table enter $fatalerr_info_table motif::OL_ERROR_ITEM_NOT_CHILD_OF_ITEM_GROUP { Any GenItemClass object must be the child of a GenItemGroup object.  It
 cannot exist by itself.   (If you need your items to be grouped together,
 but visually appear in different parts of the screen, you probably 
 will want to put them each under their own GenItemGroups, then link the
 groups together.  See documentation for more details.)
}
table enter $fatalerr_info_table motif::OL_ERROR_BOOLEAN_NOT_CHILD_OF_BOOLEAN_GROUP { Any GenBooleanClass object must be the child of a GenBooleanGroup object.  It
 cannot exist by itself.   (If you need your booleans to be grouped together,
 but visually appear in different parts of the screen, you probably 
 will want to put them each under their own GenBooleanGroups, then link the
 groups together.  See documentation for more details.)
}
table enter $fatalerr_info_table motif::OL_ERROR_ITEMS_CANNOT_HAVE_GENERIC_CHILDREN { Items cannot have generic children.   Put them elsewhere.
}
table enter $fatalerr_info_table motif::OL_ERROR_EXCLUSIVE_ITEM_GROUPS_CANNOT_HAVE_MULTIPLE_SELECTIONS { Exclusive item groups cannot have multiple selections.  Use a non-exclusive
 item group.  You can mimic exclusive behavior easily enough in non-exclusive
 item groups by clearing other items in response to the user setting an item,
 if you really need that kind of behavior.
}
table enter $fatalerr_info_table motif::OL_FIELD_NEW_PANEL_NOT_SUBCLASS_OF_GEN { The class given to MSG_GEN_FIELD_CREATE_EXPRESS_MENU_PANEL must be a
 subclass of GenClass, as the object is added as a generic child of the
 express menu.}
table enter $fatalerr_info_table motif::OL_FIELD_TASK_ENTRY_NOT_SUBCLASS_OF_GEN_ITEM { The class given to MSG_GEN_FIELD_CREATE_TASK_ENTRY must be a subclass of
 GenItemClass, as the object is added as a generic child of a GenItemGroup
 object.}
table enter $fatalerr_info_table motif::OL_GEN_DISPLAY_CAN_NOT_HANDLE_GSTRING_MONIKER { This spui implementation does not support GString monikers for GenDisplay
 objects.}
table enter $fatalerr_info_table motif::OL_WIN_HINT_REQUIRES_SPEC_WIN_SIZE_PAIR_ARGUMENT { A bad argument was found for either HINT_POSITION_WINDOW_AT_RATIO_OF_PARENT,
 HINT_SIZE_WINDOW_AS_RATIO_OF_PARENT, or HINT_SIZE_WINDOW_AS_RATIO_OF_FIELD.
 Make sure you've specified a single argument of type SpecWinSizePair (or
 two words set to constants that make since for a SpecWinSizePair).}
table enter $fatalerr_info_table motif::OL_FIELD_BAD_ASSUMPTION_REGARDING_DEFAULT_FIELD { OLField objects set themselves as being the system-wide default field on
 gaining the target.  They clear this reference when losing it.   This error
 results if the optr stored in the system isn't the fields, when it goes
 to clear the reference.}
table enter $fatalerr_info_table motif::WINDOW_REQUIRES_PARENT_OBJECT { An object was not in the gen linkage.}
table enter $fatalerr_info_table motif::OL_BAD_WIN_PRIORITY { A bad WinPriority was supplied with ATTR_GEN_WINDOW_CUSTOM_WINDOW_PRIORITY}
table enter $fatalerr_info_table motif::CANNOT_CALL_USER_DO_DIALOG_WITH_SAME_DIALOG_TWICE { UserDoDialog was called with the same dialog box twice at the same time
 (on different threads, I imagine).}
table enter $fatalerr_info_table motif::SEEK_TITLE_BAR_PARENT_MUST_BE_DIRECT_CHILD_OF_WINDOW { Objects with HINT_SEEK_TITLE_BAR_LEFT or HINT_SEEK_TITLE_BAR_RIGHT must
 be a direct generic child of a window object (independently displayable
 GenInteraction, GenDisplay, or GenPrimary).}
table enter $fatalerr_info_table motif::OL_ERROR_DIALOG_PLACED_BELOW_APP_OBJ_MUST_BE_MARKED_NOT_USER_INITIATABLE { The dialog in *ds:si is immediately below the app object in the generic
 tree, & yet is not marked as GIA_NOT_USER_INITIATABLE nor
 GIA_INITIATED_VIA_USER_DO_DIALOG -- conditions which cause a button
 to be built for the user to gain access to the dialog -- only there's
 no place to put the button where the user can see it.  The dialog should
 be placed elsewhere, or one of the above mentioned attributes used.}
table enter $fatalerr_info_table motif::PASSED_FILE_NOT_OPENED_BY_DOCUMENT_CONTROL { The file handle passed in CX does not belong to any GenDocument object
 located below this GenDocumentGroup. This message is sent by the method
 for MSG_META_VM_FILE_DIRTY located in GenProcessClass. If you are opening
 and dirtying VM files, with the VMA_NOTIFY_DIRTY attribute set, independent
 of the document control, you need to subclass MSG_META_VM_FILE_DIRTY in
 your process class and not call your superclass for any file you open
 without the aid of the document control.}
table enter $fatalerr_info_table motif::OL_ONE_WAY_UPWARD_LINK_FROM_DISPLAY_TO_DISPLAY_GROUP_NOT_ALLOWED { Having been asked to send current state notifcation to the display ctrl, a
 GenDisplay has discovered that it is not a child of it's generic parent --
 meaning that the downward linkage has been trashed, or the parent wasn't
 marked dirty when the child was added, thereby zeroing out the linkage when
 going to state.}
table enter $fatalerr_info_table motif::OL_ERROR_FULL_SCREEN_EXCL_NOT_LEGAL_BELOW_APP_OBJ { An attempt has been made to grab or release the MAEF_FULL_SCREEN exclusive
 within the application, and this is not legal as the MAEF_FULL_SCREEN
 exclusive hierarchy exists purely for fields & application objects.  Unless
 the setting of this bit was intentional, the problem may be simply that
 garbage flags were passed in bp to the this handler for 
 MSG_META_MUP_ALTER_FTVMC_EXCL.
 }
table enter $fatalerr_info_table motif::OL_ERROR_ILLEGAL_KEY_FOR_SHORTCUT { A shortcut was based on a control key that the SPUI did not recognize.
 Shortcuts will normally be alphanumeric [A-Z][0-9], punctuation, or one of
 the standard system keys, such as Enter, Tab, F1-F12, etc.}
table enter $fatalerr_info_table motif::DISCARDABLE_INTERACTION_MUST_NOT_BE_USER_INITIATABLE { An interaction with HINT_INTERACTION_DISCARD_WHEN_CLOSED was not marked
 NOT_USER_INITIATABLE.}
table enter $fatalerr_info_table motif::DISCARDABLE_INTERACTION_MUST_HAVE_ONE_WAY_LINK { An interaction with HINT_INTERACTION_DISCARD_WHEN_CLOSED is not allowed
 to be in the generic linkage - it is only allowed to have a one-way
 upward generic link.}
table enter $fatalerr_info_table motif::UI_EXPECTED_DGROUP { Expected either DS or ES to contain dgroup, depeneding on the context.}
table enter $fatalerr_info_table motif::ILLEGAL_KBD_SCAN_CODE { An illegal keyboard scan code value was found.}
table enter $fatalerr_info_table motif::ILLEGAL_OBJECT_PASSED_TO_VIS_KEYBOARD_ROUTINE { VisKeyboardDeref_DSDI must be passed a pointer to an VisKeyboard object in
 *DS:SI. This fatal error is encountered if a non-VisKeyboard object was
 passed.}
table enter $fatalerr_info_table motif::KBD_PTR_OUT_OF_BOUNDS { A ptr in the VisKbdClass was out of bounds.}
table enter $fatalerr_info_table motif::ILLEGAL_KBD_MOD_STATE { An illegal keyboard modified state was found.}
table enter $fatalerr_info_table motif::CHAR_NOT_SUPPORTED { The character could not be drawn because no string was provided for it.}
table enter $fatalerr_info_table motif::ILLEGAL_KBD_CHAR_FLAGS { Illegal keyboard character flags were found.}
table enter $fatalerr_info_table motif::ILLEGAL_KBD_SHIFT_STATE { An illegal keyboard shift state was found.}
table enter $fatalerr_info_table motif::ILLEGAL_KBD_TOGGLE_STATE { An illegal keyboard toggle state was found.}
table enter $fatalerr_info_table motif::KBD_KEY_DOES_NOT_EXIST { A key does not exist on the keyboard}
table enter $fatalerr_info_table motif::NO_CUSTOM_CHAR_TABLE_MONIKER { No ATTR_GEN_PEN_INPUT_CONTROL_CUSTOM_CHAR_TABLE_MONIKER was present even
 though GPICF_CHAR_TABLE_CUSTOM was set.}
table enter $fatalerr_info_table motif::NO_CUSTOM_CHAR_TABLE_DATA { No ATTR_GEN_PEN_INPUT_CONTROL_CUSTOM_CHAR_TABLE_DATA was present even though
 GPICF_CHAR_TABLE_CUSTOM was set.}
table enter $fatalerr_info_table motif::CONTROLLER_OBJECT_INTERNAL_ERROR { Error used by lazy controller programmers (manly, yes, but I like it too!)}
table enter $fatalerr_info_table motif::BAD_PEN_INPUT_DISPLAY_TYPE { A bad PenInputDisplayType was saved in the .ini file or in the 
 ATTR_GEN_PEN_INPUT_CONTROL_STARTUP_DISPLAY_TYPE}
table enter $fatalerr_info_table motif::CHAR_TABLE_MUST_HAVE_AT_LEAST_ONE_LINE { The VisCharTable object must have at least one line of data to draw.}
table enter $fatalerr_info_table motif::ILLEGAL_CHAR_TABLE_ROW_NUMBER { An illegal row number in the Character Table is found}
table enter $fatalerr_info_table motif::ILLEGAL_CHAR_TABLE_COLUMN_NUMBER { An illegal column number in the Character Table is found}
table enter $fatalerr_info_table motif::ILLEGAL_OBJECT_PASSED_TO_VIS_CHAR_TABLE_ROUTINE { VisCharTableDeref_DSDI must be passed a pointer to an VisCharTable object in
 *DS:SI. This fatal error is encountered if a non-VisCharTable object was
 passed.}
table enter $fatalerr_info_table motif::INVALID_DELETE_RANGE { The range of chars to delete in the HWR Grid from a delete gesture was
 invalid.}
table enter $fatalerr_info_table motif::ERROR_PEN_INPUT_CONTROL_BAD_KEYBOARD_SIZE { The .ini file category "keyboardSize" in the "[ui]" category can only
 have one of two sizes, KS_STANDARD (0) or KS_ZOOMER (1).  In Motif the
 standard size is for Bullet, and Zoomer is self documenting.  In Stylus
 (and other future SPUI's that have their own style of keyboard) this flag
 is ignored. If this flag contains any other number we will assume Zoomer
 in nonEC, but you will get this crash in EC so you know to fix your
 .ini file.}
table enter $fatalerr_info_table motif::OL_ERROR_CANT_HAVE_TITLE_BAR_GROUP_WITH_MINIMIZED_TITLE_BAR { Objects cannot seek the title bar (via HINT_SEEK_TITLE_BAR_LEFT or
 HINT_SEEK_TITLE_BAR_RIGHT) if the window is supposed to have a minimized
 title bar (HINT_WINDOW_MINIMIZE_TITLE_BAR).}
table enter $fatalerr_info_table motif::ERROR_HWR_GRID_INVALID_GESTURE { an invalid gesture type was returned to the HWR grid}
table enter $fatalerr_info_table motif::OL_ERROR_HAVE_WRONG_ROW_NUMBER_IN_HEADING { We have only 1 heading in file selector. So if the row number is not 0, then
 the number must be wrong.}
table enter $fatalerr_info_table motif::SIBLING_OBJECTS_MAY_NOT_HAVE_SAME_SLOT_HINT_NUMBERS { Two objects are requesting to be in the same parent-slot, which is
 illegal.}
table enter $fatalerr_info_table motif::OL_ERROR_EXPECTED_MORE_CHILDREN_IN_MENU_BAR { Some specific UIs create extra objects in the menu bar.  This error
 means there's a bug in the specific UI.}
table enter $fatalerr_info_table motif::EXPECTED_MORE_CHILDREN_IN_MENU_BAR { Another indicator of a bug in jmotif.}
table enter $fatalerr_info_table motif::HINT_INDENT_TOO_LARGE { Negative sizes, and very large sizes, not allowed in HINT_INDENT_CHILDREN.   
 Or maybe you have a garbage value there.}
table enter $fatalerr_info_table motif::OL_INTERNAL_ERROR_CANT_ACCESS_GEN_TEXT_INSTANCE { A GenValue has an internal error where it's trying to access
 GenText instance data, when it's not a GenText object.}
table enter $fatalerr_info_table motif::OL_INTERNAL_ERROR_CANT_ACCESS_OL_CTRL_INSTANCE { A GenValue has an internal error where it's trying to access
 OLCtrl instance data, when it's not an OLCtrl object.}
table enter $fatalerr_info_table motif::OL_INTERNAL_ERROR_NON_WINDOW_SETTING_EMPHASIZED_OBJECT { A MSG_SPEC_SET_EMPHASIZED_OBJECT has been delivered to a
 non-windowed object.  Only windowed OLCtrl objects can
 reasonably handle this message.}
table enter $fatalerr_info_table motif::OL_DIALOGS_INITIATED_ON_UI_THREAD_MUST_BE_SYS_MODAL { Doesn't make sense to have app-modal dialogs launched on UI thread.}
table enter $fatalerr_info_table motif::OL_RUDY_FILE_SELECTORS_CANNOT_SHOW_PARENT_DIR { For numerous reasons, mostly to do with non-exclusive file selectors,
 GenFileSelector cannot handle showing the parent directory.  This
 error should never occurr.}
table enter $fatalerr_info_table motif::OL_NON_EXCLUSIVE_FILE_SELECTORS_CANNOT_ACT_ON_DOUBLE_PRESS { non-exclusive file selectors cannot handle taking an action
 (such as opening a subdirectory) when double-clicked upon.
 Ostensibly, because it is ambiguous to act on multiple
 selections, but actually, because the code hasn't been
 written to support it :-)}
table enter $fatalerr_info_table motif::OL_NON_EXCLUSIVE_FILE_SELECTOR_TOO_MANY_SELECTED_FILES { Too many files were selected to fit into the selections chunk.}
table enter $fatalerr_info_table motif::OL_NON_EXCLUSIVE_FILE_SELECTOR_UNSUPPORTED_OPERATION { The non-exclusive file selector has been asked to do something
 unsupported.}
table enter $fatalerr_info_table motif::OL_ERROR_SELECTION_BOX { General selection box error.}
table enter $fatalerr_info_table motif::OL_ERROR_SELECTION_BOX_CAN_NOT_HAVE_ZERO_CHILDREN { Selection boxes can not have zero children so DIE,DIE,DIE.}
table enter $fatalerr_info_table motif::OL_ERROR_CANT_FIND_SELECTION_BOX_ITEM_GROUP { The selection box is visually represented by an OLMenuButton,
 but the list is an item group.  This error means we couldn't find
 the item group associated with the menu button for the selection
 box.}
table enter $fatalerr_info_table motif::OL_ERROR_SELECTION_BOX_MUST_HAVE_INITIALLY_SELECTED_ITEM { The selection box item group must have an initially selected item.}
table enter $fatalerr_info_table motif::WRONG_NUMBER_OF_BACKGROUND_COLORS { If a selection box has the wrong number of colors as extra
 data for HINT_GADGET_BACKGROUND_COLORS.  For Selection Boxes,
 we can have either 4 (only moniker background) or 8 (moniker/
 arrow box background colors).}
table enter $fatalerr_info_table motif::RGB_COLOR_NOT_SUPPORTED {
 RGB color value not supported for window wash color (HINT_WINDOW_WASH_COLOR)
 or view wash color (GVI_color) for this SPUI.
}
table enter $fatalerr_info_table motif::OL_TEXT_ZOOM_LEVEL_NOT_INITIALIZED { We were notified of zooming, but we our text object was not prepared for it.}
