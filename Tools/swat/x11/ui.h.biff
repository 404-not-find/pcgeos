/*-
 * ui.h --
 *	Header file for files specific to the user interface.
 *
 * Copyright (c) 1988 by the Regents of the University of California
 *
 * Permission to use, copy, modify, and distribute this
 * software and its documentation for any purpose and without
 * fee is hereby granted, provided that the above copyright
 * notice appear in all copies.  The University of California
 * makes no representations about the suitability of this
 * software for any purpose.  It is provided "as is" without
 * express or implied warranty.
 *
 *	"$Header: ui.h,v 1.2 88/05/13 20:08:57 deboor Exp $ SPRITE (Berkeley)"
 */
#ifndef _UI_H
#define _UI_H

extern void 	  Button_Init( /* patient */ );
extern void	  Value_Init( /* patient */ );
extern void	  Status_Init( /* patient */ );
extern char	  *Ui_WidgetToName( /* w */ );

#define XtNbuttonName	    "buttons"   	/* Name of button box */
#define XtCbuttonClass	    "Box"	    	/* Class of button box */
#define XtNinitialize	    "initialize"	/* Base initialization string */
#define XtCInitialize	    "Initialize"	/* Ditto */
#define XtNinitCommands	    "initCommands"	/* Extra initial commands */
#define XtCInitCommands	    "InitCommands"	/* Class for same */
#define XtNmaxAddressCache  "maxAddressCache"	/* Initial maximum address
						 * cache size */
#define XtCMaxAddressCache  "MaxAddressCache"	/* Class for same */
#define XtNvalueHistory	    "valueHistory"  	/* Length of value history */
#define XtCValueHistory	    "ValueHistory"  	/* Class for same */
#define XtNexpandStrings    "expandStrings" 	/* Boolean to tell if char *'s
						 * should be dereferenced */
#define XtCExpandStrings    "ExpandStrings" 	/* Class for same */
#define XtNpatient	    "patient"	    	/* Patient handle for status */
#define XtCPatient	    "Patient"	    	/* Class for same */
#define XtNstatus 	    "status"	    	/* More status to print */
#define XtCStatus 	    "Status"	    	/* Class for same */

extern WidgetClass	    statusWidgetClass;

DECLARE(Window, Ui_Init, (Patient patient, int *argcPtr, char **argv,
			  Boolean needsOutput));
DECLARE(void, Ui_Begin, (Patient patient));
DECLARE(void, Ui_CheckInput, (Patient patient));
DECLARE(void, Ui_ClearInterrupt, (Patient patient));
DECLARE(Boolean, Ui_Interrupt, (Patient patient));

DECLARE(void, Help_Register, (Patient patient, char *topic, char *string));

extern Widget	  ui_TopLevel;

#endif /* _UI_H */

