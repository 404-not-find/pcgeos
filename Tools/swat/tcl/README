Tcl

by John Ousterhout
University of California at Berkeley

This directory contains the sources for Tcl, an embeddable tool command
language.  It provides a parser and a set of built-in commands for a
simple command language.  To use it in a tool, you implement in C a
few additional commands specific to your tool ane bind them into Tcl.
Then your tool collects Tcl command strings (by reading them from standard
input or by associating them with elements of the user interface such as
menu entries and keystrokes) and passes them to the Tcl interpreter.  Tcl
parses the commands, executes the built-in ones, and calls back to your
tool's procedures to execute the tool-specific ones.

The advantages of Tcl are that a) it provides a standard syntax for tool
commands;  b) it provides quite a bit of functionality in the built-in
commands, including variables, command substitution, and the ability to
define Tcl command procedures dynamically; and c) it will eventually
provide a mechanism for sending Tcl commands between tools, so that one
tool can pass a Tcl command to another tool, have the command executed in
that tool, and get back the results.  The last facility isn't implemented
yet, but when it is I hope that it will provide a powerful and general-purpose
mechanism for tools to work together.

The full documentation for Tcl is in the subdirectory "doc".  The "Tcl" man
page gives an overall description of the Tcl language and facilities, and
the other man pages describe the library procedures that Tcl provides for
tools to use.  Read the "Tcl" man page first.  To print any of the man
pages, use a command like

		ditroff macros <page>

where <page> is the name of the man page you'd like to print.  The file
"macros" provides definitions used by the individual man pages.

(Note: if you're reading this under Sprite at Berkeley, then the man pages
are in /sprite/doc/ref/tcl, and you must type "ditroff -mansp <page>" to
print <page>)

Type "make" to generate the Tcl library, and type "make tclTest" to
create a simple test program that you can use to try out the Tcl facilities.
TclTest is just a main-program sandwich around the Tcl library.  It reads
standard input until it reaches the end of a line where parentheses and
backslashes are balanced, then sends everything it's read to the Tcl
interpreter.  When the Tcl interpreter returns, tclTest prints the return
value or error message.  TclTest defines two additional commands:

		echo arg arg ...
		time cmd numTimes

The "echo" command prints its arguments on standard output, separated by
spaces.  The "time" command executes its "cmd" argument "numTimes" times,
then prints out the average elapsed time required per iteration.  For
example, type "time (var a foo) 5000" to tclTest to get an idea of the
minimum time to parse and execute a command on your machine.

I can't promise to provide a lot of help to people trying to use Tcl, but
I am interested in hearing about bugs or suggestions for improvements.
Send them to me at "ouster@ginger.berkeley.edu".
