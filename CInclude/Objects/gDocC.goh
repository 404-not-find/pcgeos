/***********************************************************************
 *
 *	Copyright (c) Berkeley Softworks 1991 -- All Rights Reserved
 *
 * PROJECT:	PC GEOS
 * FILE:	gDocC.goh
 * AUTHOR:	Tony Requist: February 12, 1991
 *
 * DECLARER:	UI
 *
 * DESCRIPTION:
 *	This file defines GenDocumentClass
 *
 *	$Id: gDocC.goh,v 1.1 97/04/04 15:51:41 newdeal Exp $
 *
 ***********************************************************************/


@optimize
@deflib ui

#include <file.h>
@include <Objects/gContC.goh>
@include <iacp.goh>

@class	GenDocumentClass, GenContentClass;

typedef WordFlags GenDocumentAttrs;
#define GDA_READ_ONLY	    	    0x8000
#define GDA_READ_WRITE	    	    0x4000
#define GDA_FORCE_DENY_WRITE	    0x2000
#define GDA_SHARED_MULTIPLE	    0x1000
#define GDA_SHARED_SINGLE	    0x0800
#define GDA_UNTITLED	    	    0x0400
#define GDA_DIRTY	    	    0x0200
#define GDA_CLOSING	    	    0x0100
#define GDA_ATTACH_TO_DIRTY_FILE    0x0080
#define GDA_SAVE_FAILED	    	    0x0040
#define GDA_OPENING	    	    0x0020
#define GDA_AUTO_SAVE_STOPPED	    0x0010
#define GDA_MODEL		    0x0008
#define GDA_ON_WRITABLE_MEDIA	    0x0004
#define GDA_BACKUP_EXISTS	    0x0002
#define GDA_PREVENT_AUTO_SAVE	    0x0001

typedef enum {
    GDT_NORMAL,
    GDT_READ_ONLY,
    GDT_TEMPLATE,
    GDT_READ_ONLY_TEMPLATE,
    GDT_PUBLIC,
    GDT_MULTI_USER
} GenDocumentType;

typedef enum /* word */ {
    GDO_NORMAL,
    GDO_SAVE_AS,
    GDO_REVERT,
    GDO_REVERT_QUICK,
    GDO_ATTACH,
    GDO_DETACH,
    GDO_NEW,
    GDO_OPEN,
    GDO_SAVE,
    GDO_CLOSE,
    GDO_AUTO_SAVE,
    GDO_REVERT_TO_AUTO_SAVE,
} GenDocumentOperation;

typedef WordFlags DocumentOpenFlags;
#define DOF_CREATE_FILE_IF_FILE_DOES_NOT_EXIST	0x8000
#define DOF_FORCE_TEMPLATE_BEHAVIOR	    	0x4000
#define DOF_SAVE_AS_OVERWRITE_EXISTING_FILE	0x2000
#define DOF_REOPEN				0x1000
#define DOF_RAISE_APP_AND_DOC			0x0800
#define DOF_NAME_HOLDS_FILE_ID			0x0400
#define DOF_FORCE_REAL_EMPTY_DOCUMENT		0x0200
#define DOF_OPEN_FOR_IACP_ONLY			0x0100

typedef struct {
    FileLongName	DCP_name;
    DiskHandle		DCP_diskHandle;
    PathName		DCP_path;
    GenDocumentAttrs   	DCP_docAttrs;
    DocumentOpenFlags	DCP_flags;
    IACPConnection	DCP_connection;
} DocumentCommonParams;

@message Boolean MSG_GEN_DOCUMENT_INITIALIZE_DOCUMENT_FILE() = carry;
@message Boolean MSG_GEN_DOCUMENT_IMPORT(
		ImpexTranslationParams *params = ss:bp) = carry;
@message void MSG_GEN_DOCUMENT_CREATE_UI_FOR_DOCUMENT();
@message void MSG_GEN_DOCUMENT_DESTROY_UI_FOR_DOCUMENT();
@message void MSG_GEN_DOCUMENT_ATTACH_UI_TO_DOCUMENT();
@message void MSG_GEN_DOCUMENT_DETACH_UI_FROM_DOCUMENT();
@message void MSG_GEN_DOCUMENT_EXPORT(ImpexTranslationParams *params = ss:bp);
@message void MSG_GEN_DOCUMENT_READ_CACHED_DATA_FROM_FILE();
@message void MSG_GEN_DOCUMENT_WRITE_CACHED_DATA_TO_FILE(Boolean isSave);
@message void MSG_GEN_DOCUMENT_DOCUMENT_HAS_CHANGED();


@message Boolean MSG_GEN_DOCUMENT_PHYSICAL_SAVE(
			 word *error = multipleax) = carry;

@message Boolean MSG_GEN_DOCUMENT_PHYSICAL_UPDATE(
			 word *error = multipleax) = carry;

 	/* params below *must* be a local variable */
@message Boolean MSG_GEN_DOCUMENT_PHYSICAL_SAVE_AS(
			 word *fileOrError = multipleax,
			 DocumentCommonParams *params = ss:bp) = carry;

@message Boolean MSG_GEN_DOCUMENT_PHYSICAL_SAVE_AS_FILE_HANDLE(
			 word *error = multipleax,
		         FileHandle file = cx) = carry;

@message Boolean MSG_GEN_DOCUMENT_PHYSICAL_REVERT(
			 word *error = multipleax) = carry;


@message Boolean MSG_GEN_DOCUMENT_UPDATE_EARLIER_COMPATIBLE_DOCUMENT()
			= carry;

@message Boolean MSG_GEN_DOCUMENT_UPDATE_EARLIER_INCOMPATIBLE_DOCUMENT ()
			= carry;


 	/* params below *must* be a local variable */
@message Boolean MSG_GEN_DOCUMENT_PHYSICAL_CREATE(
			 word *fileOrError = multipleax,
		         DocumentCommonParams *params = ss:bp) = carry;

 	/* params below *must* be a local variable */
@message Boolean MSG_GEN_DOCUMENT_PHYSICAL_OPEN(
			 word *fileOrError = multipleax,
		         DocumentCommonParams *params = ss:bp) = carry;

@message void MSG_GEN_DOCUMENT_PHYSICAL_CLOSE();

@message void MSG_GEN_DOCUMENT_PHYSICAL_DELETE();

@message Boolean MSG_GEN_DOCUMENT_PHYSICAL_CHECK_FOR_MODIFICATIONS() = carry;

@message Boolean MSG_GEN_DOCUMENT_PHYSICAL_COPY_TEMPLATE(
			 word *fileOrError = multipleax) = carry;

@message void MSG_GEN_DOCUMENT_SAVE_AS_COMPLETED();
@message void MSG_GEN_DOCUMENT_ATTACH_FAILED();

@message void MSG_GEN_DOCUMENT_MARK_DIRTY();

@message word MSG_GEN_DOCUMENT_GENERATE_NAME_FOR_NEW(
    	    	      char *buffer = dx:bp, word retryCount = cx) = cx;

#define GEN_DOCUMENT_GENERATE_NAME_ERROR	0xffff
#define GEN_DOCUMENT_GENERATE_NAME_CANCEL	0xfffe

@message void MSG_GEN_DOCUMENT_SAVE_AS_CANCELLED();

 	/* params below *must* be a local variable */
@message byte MSG_GEN_DOCUMENT_COMPUTE_ACCESS_FLAGS(
    	    	      DocumentCommonParams *params = ss:bp) = al;


@message GenDocumentAttrs MSG_GEN_DOCUMENT_GET_ATTRS() = ax;

@message void MSG_GEN_DOCUMENT_ENABLE_AUTO_SAVE();

@message void MSG_GEN_DOCUMENT_DISABLE_AUTO_SAVE();

@message void MSG_GEN_DOCUMENT_GET_FILE_NAME(TCHAR *buffer = cx:dx);

@message FileHandle MSG_GEN_DOCUMENT_GET_FILE_HANDLE() = ax;

@message GenDocumentOperation MSG_GEN_DOCUMENT_GET_OPERATION() = ax;

@message optr MSG_GEN_DOCUMENT_GET_DISPLAY() = cx:dx;


 	/* params below *must* be a local variable */
@message Boolean MSG_GEN_DOCUMENT_NEW(
			 word *fileOrError = multipleax,
		         DocumentCommonParams *params = ss:bp) = carry;

 	/* params below *must* be a local variable */
@message Boolean MSG_GEN_DOCUMENT_OPEN(
			 word *fileOrError = multipleax,
		         DocumentCommonParams *params = ss:bp) = carry;

@message word MSG_GEN_DOCUMENT_CLOSE(IACPConnection connection = bp) = cx;

@message void MSG_GEN_DOCUMENT_QUICK_BACKUP();

@message void MSG_GEN_DOCUMENT_RECOVER_QUICK_BACKUP();

@message Boolean MSG_GEN_DOCUMENT_SAVE() = carry;

 	/* params below *must* be a local variable */
@message Boolean MSG_GEN_DOCUMENT_SAVE_AS(
			 word *fileOrError = multipleax,
		         DocumentCommonParams *params = ss:bp) = carry;

 	/* params below *must* be a local variable */
@message Boolean MSG_GEN_DOCUMENT_SAVE_AS_TEMPLATE(
			 word *fileOrError = multipleax,
		         DocumentCommonParams *params = ss:bp) = carry;

 	/* params below *must* be a local variable */
@message Boolean MSG_GEN_DOCUMENT_COPY_TO(
			 DocumentCommonParams *params = ss:bp) = carry;

@message Boolean MSG_GEN_DOCUMENT_REVERT() = carry;

@message void MSG_GEN_DOCUMENT_EDIT_USER_NOTES();
@message void MSG_GEN_DOCUMENT_CHANGE_TYPE(GenDocumentType type = cx);

 	/* params below *must* be a local variable */
@message void MSG_GEN_DOCUMENT_CHANGE_PASSWORD(TCHAR *password = ss:bp);

@message void MSG_GEN_DOCUMENT_RENAME();

@message void MSG_GEN_DOCUMENT_SET_EMPTY();

@message void MSG_GEN_DOCUMENT_CLEAR_EMPTY();

@message void MSG_GEN_DOCUMENT_SET_DEFAULT();

@message void MSG_GEN_DOCUMENT_CLEAR_DEFAULT();

@message void MSG_GEN_DOCUMENT_CLOSE_IF_CLEAN_UNNAMED();

 	/* params below *must* be a local variable */
@message Boolean MSG_GEN_DOCUMENT_SEARCH_FOR_DOC(
			 DocumentCommonParams *params = ss:bp) = carry;

@message Boolean MSG_GEN_DOCUMENT_TEST_FOR_FILE(FileHandle file = cx,
    	    	    	    	    optr *docFound = dx:bp) = carry;

@message void MSG_GEN_DOCUMENT_AUTO_SAVE();

@message Boolean MSG_GEN_DOCUMENT_UPDATE(word *error = multipleax) = carry;

@message void MSG_GEN_DOCUMENT_CHECK_FOR_MODIFICATIONS();

@message void MSG_GEN_DOCUMENT_CLOSE_FILE(IACPConnection connection = bp);

@message void MSG_GEN_DOCUMENT_REOPEN_FILE();

#define GEN_DOCUMENT_GET_VARIABLE_BUFFER_SIZE 100
@message void MSG_GEN_DOCUMENT_GET_VARIABLE(@stack VisTextGraphic *graphic, char *buffer);

@message void MSG_GEN_DOCUMENT_REVERT_NO_PROMPT();

@message void MSG_GEN_DOCUMENT_FILE_CHANGED_REINITIALIZE_CREATED_UI();

@message void MSG_GEN_DOCUMENT_CLOSE_IF_OPEN_FOR_IACP_ONLY();

@protominor UINewFor21

 	/* params below *must* be a local variable */
@message Boolean MSG_GEN_DOCUMENT_MOVE_TO(
			 DocumentCommonParams *params = ss:bp) = carry;

@message Boolean MSG_GEN_DOCUMENT_REVERT_TO_AUTO_SAVE() = carry;
@message Boolean MSG_GEN_DOCUMENT_PHYSICAL_REVERT_TO_AUTO_SAVE() = carry;

@protoreset

@protominor UINewForDove_2

@message void MSG_GEN_DOCUMENT_DUPLICATE();
@message void MSG_GEN_DOCUMENT_DELETE();
@message void MSG_GEN_DOCUMENT_USE_TEMPLATE();

@protoreset


    @vardata void ATTR_GEN_DOCUMENT_OPEN_FOR_IACP_ONLY;

    @instance GenDocumentAttrs	GDI_attrs = 0;
    @instance GenDocumentType	GDI_type = 0;
    @instance word		GDI_operation = 0;
    @instance FileHandle	GDI_fileHandle = 0;
    @instance FileLongName	GDI_fileName = _TEXT("");
    @instance MemHandle		GDI_display = 0;

    @default GI_attrs = (@default | GA_KBD_SEARCH_PATH);

@endc

@endlib

