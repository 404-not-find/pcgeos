/***********************************************************************
 *
 *	Copyright (c) GeoWorks 1991 -- All Rights Reserved
 *
 * PROJECT:	PC GEOS
 * FILE:	vCompC.goh
 * AUTHOR:	Chris Hawley: 8/19/91
 *
 * DECLARER:	UI
 *
 * DESCRIPTION:
 *	This file defines VisCompClass
 *
 *	$Id: vCompC.goh,v 1.1 97/04/04 15:52:16 newdeal Exp $
 *
 ***********************************************************************/

@optimize

@deflib ui

@include <Objects/visC.goh>

@class 	VisCompClass, VisClass;

/* VCI_geoDimensionAttrs */

typedef ByteEnum WidthJustification;
#define WJ_LEFT_JUSTIFY_CHILDREN 		  0x00
#define WJ_RIGHT_JUSTIFY_CHILDREN 		  0x40
#define WJ_CENTER_CHILDREN_HORIZONTALLY		  0x80
#define WJ_FULL_JUSTIFY_CHILDREN_HORIZONTALLY	  0xc0
	
typedef ByteEnum HeightJustification;
#define HJ_TOP_JUSTIFY_CHILDREN			  0x00
#define HJ_BOTTOM_JUSTIFY_CHILDREN		  0x04
#define HJ_CENTER_CHILDREN_VERTICALLY		  0x08
#define HJ_FULL_JUSTIFY_CHILDREN_VERTICALLY	  0x0c

typedef ByteFlags VisCompGeoDimensionAttrs;
#define VCGDA_WIDTH_JUSTIFICATION               0xc0
#define VCGDA_EXPAND_WIDTH_TO_FIT_PARENT        0x20
#define VCGDA_DIVIDE_WIDTH_EQUALLY              0x10
#define VCGDA_HEIGHT_JUSTIFICATION              0x0c
#define VCGDA_EXPAND_HEIGHT_TO_FIT_PARENT       0x02
#define VCGDA_DIVIDE_HEIGHT_EQUALLY             0x01


/* VCI_geoAttrs */

typedef ByteFlags VisCompGeoAttrs;
#define	VCGA_ORIENT_CHILDREN_VERTICALLY		0x80
#define VCGA_INCLUDE_ENDS_IN_CHILD_SPACING	0x40
#define VCGA_ALLOW_CHILDREN_TO_WRAP		0x20
#define VCGA_ONE_PASS_OPTIMIZATION		0x10
#define VCGA_CUSTOM_MANAGE_CHILDREN		0x08
#define VCGA_HAS_MINIMUM_SIZE			0x04
#define	VCGA_WRAP_AFTER_CHILD_COUNT		0x02
#define VCGA_ONLY_DRAWS_IN_MARGINS		0x01

typedef struct {
    VisCompGeoAttrs	    	GADA_geoAttrs;
    VisCompGeoDimensionAttrs	GADA_geoDimensionAttrs;
} GeoAndDimensionAttrs;

#define GEO_ATTRS(val) ((val).GADA_geoAttrs)
#define GEO_DIMENSION_ATTRS(val) ((val).GADA_geoDimensionAttrs)

@message GeoAndDimensionAttrs MSG_VIS_COMP_GET_GEO_ATTRS() = cx; /***/
@message void MSG_VIS_COMP_SET_GEO_ATTRS(   /***/
    	    	    	    	GeoAndDimensionAttrs attrsToSet = cx,
    	    	    	    	GeoAndDimensionAttrs attrsToClear = dx);

/*
 * Size values are often returned from functions.  To allow their easy return,
 * the type SizeAsDWord is returned.  The DWORD_WIDTH() and DWORD_HEIGHT() 
 * macros can be used to access the x and y components.
 */
typedef dword SpacingAsDWord;

#define DWORD_CHILD_SPACING(val) 	((word) (val))
#define DWORD_WRAP_SPACING(val) 	((word) ((val) >> 16))

#define MAKE_SPACING_DWORD(width,height) \
    ((((dword) (height)) << 16) | (width))


@message SpacingAsDWord MSG_VIS_COMP_GET_CHILD_SPACING() = dx.cx;	
@message SizeAsDWord MSG_VIS_COMP_GET_MINIMUM_SIZE() = dx.cx;	

@message void MSG_VIS_COMP_GET_MARGINS(Rectangle *retValue = axbpcxdx );	
@message word MSG_VIS_COMP_GET_WRAP_COUNT() = cx;	

	
	@default VI_typeFlags = VTF_IS_COMPOSITE;

	@instance @composite VCI_comp = VI_link;
	@instance optr VCI_gadgetExcl;
	@instance WindowHandle VCI_window = NullHandle;
	@instance VisCompGeoAttrs VCI_geoAttrs = 0;
	@instance VisCompGeoDimensionAttrs VCI_geoDimensionAttrs = 0;

@endc

@endlib
