/***************************************************************************
 *  FILE:  TREPORT.GOH
 ***************************************************************************/

@include <Objects\vltextc.goh>

/* Create a class that is the dialog all in one */
@class GenTextReportDialogClass, GenInteractionClass ;
    /* Additional UI that will be displayed at the top of the dialog */
    /* NOTE:  These objects are duplicated, so they need to be in their */
    /* own resource block */
    @instance optr GTRDI_destination = NullHandle ;
    @instance Message GTRDI_generateMsg = NullHandle ;

    /* Optr to the real dialog UI created. */
    @instance optr GTRDI_standardUI = NullHandle ;

    /* File to hold the text in */
    @instance VMFileHandle GTRDI_file = NullHandle ;

    /* Report text to show in printing dialog */
    @instance ChunkHandle GTRDI_printname = NullHandle ;

    /* INTERNAL: Temporary File name to use */
    @instance TCHAR GTRDI_filename[FILE_LONGNAME_BUFFER_SIZE] ;

    @message VMFileHandle MSG_GEN_TEXT_REPORT_GET_FILE() ;
    @message void MSG_GEN_TEXT_REPORT_CLOSE_FILE() ;

    @prototype void GEN_TEXT_REPORT_GENERATE(optr textObj) ;

    @message void MSG_GEN_TEXT_REPORT_GENERATE() ;

    /* Accessor methods */
    @message optr MSG_GEN_TEXT_REPORT_GET_DESTINATION() ;
    @message void MSG_GEN_TEXT_REPORT_SET_DESTINATION(optr dest) ;
    @message Message MSG_GEN_TEXT_REPORT_GET_MESSAGE() ;
    @message void MSG_GEN_TEXT_REPORT_SET_MESSAGE(Message msg) ;
    @message void MSG_GEN_TEXT_REPORT_GET_PRINT_NAME(
                      char *p_printname, word sizebuffer) ;
    @message void MSG_GEN_TEXT_REPORT_SET_PRINT_NAME(
                      char *p_printname) ;

    @vardata void HINT_TEXT_REPORT_HIDE_PRINT_BW_OPTION ;
    @vardata void HINT_TEXT_REPORT_ALLOW_FAX_OPTION ;
@endc

@class VisReportTextClass, VisLargeTextClass ;
    @message void MSG_VIS_REPORT_TEXT_SET_TAB_GROUP(optr tabGroup) ;
    @message void MSG_VIS_REPORT_TEXT_SET_FONT(FontID fontId) ;
    @message void MSG_VIS_REPORT_TEXT_SET_POINT_SIZE(WWFixedAsDWord pointSize) ;
    @message void MSG_VIS_REPORT_TEXT_SET_STYLE(TextStyle style) ;

    /* Advanced methods */
    @message void MSG_VIS_REPORT_TEXT_SET_CHAR_ATTR(optr charAttr) ;
    @message void MSG_VIS_REPORT_TEXT_SET_PARA_ATTR(optr paraAttr) ;

    @message void MSG_VIS_REPORT_TEXT_SET_JUSTIFICATION(Justification just) ;

    @message void MSG_VIS_REPORT_TEXT_NEW_PAGE() ;
@endc

#define SIMPLE_TAB(t)  \
            {(t)*8*PIXELS_PER_INCH, TL_NONE | TT_LEFT, SDM_100, 0, 0, 0}
#define RIGHT_TAB(t)  \
            {(t)*8*PIXELS_PER_INCH, TL_NONE | TT_RIGHT, SDM_100, 0, 0, 0}
#define TAB_GROUP_END  { 0xFFFF, 0, 0, 0, 0, 0 }

/*
    Example tabGroup:
    -----------------

    @chunk Tab tabGroup[] = {
                   SIMPLE_TAB(1.0),
                   SIMPLE_TAB(1.5),
                   SIMPLE_TAB(3.0),
                   TAB_GROUP_END             <-- MUST have this
    } ;

*/

/* Macros to make reports quicker to build and easier to read */
@define RT_APPEND(str)      \
    @call textObj::MSG_VIS_TEXT_APPEND_PTR(str, 0)
@define RT_TAB_GROUP(tg)    \
    @call textObj::MSG_VIS_REPORT_TEXT_SET_TAB_GROUP(tg)
@define RT_FONT(font) \
    @call textObj::MSG_VIS_REPORT_TEXT_SET_FONT(font)
@define RT_SIZE(sz) \
    @call textObj::MSG_VIS_REPORT_TEXT_SET_POINT_SIZE(sz)
@define RT_STYLE(style) \
    @call textObj::MSG_VIS_REPORT_TEXT_SET_STYLE(style)
@define RT_CHAR_ATTR(ca) \
    @call textObj::MSG_VIS_REPORT_TEXT_SET_CHAR_ATTR(ca)
@define RT_PARA_ATTR(pa) \
    @call textObj::MSG_VIS_REPORT_TEXT_SET_PARA_ATTR(pa)
@define RT_JUST(just) \
    @call textObj::MSG_VIS_REPORT_TEXT_SET_JUSTIFICATION(just)
@define RT_NEW_PAGE() \
    @call textObj::MSG_VIS_REPORT_TEXT_NEW_PAGE()

/***************************************************************************
 *  END OF FILE:  TREPORT.GOH
 ***************************************************************************/

