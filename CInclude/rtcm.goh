/***********************************************************************
 *
 *	Copyright (c) Geoworks 1994 -- All Rights Reserved
 *	GEOWORKS CONFIDENTIAL
 *
 * PROJECT:	  PCGEOS
 * MODULE:	  RTCM lib
 * FILE:	  rtcm.h
 *
 * AUTHOR:  	  Chris Thomas: Oct 10, 1994
 *
 * REVISION HISTORY:
 *	Name	Date		Description
 *	----	----		-----------
 *	CT	10/10/94   	Initial version
 *
 * DESCRIPTION:
 *	The C API for the Real Time Clock Manager
 *
 *
 * 	$Id: rtcm.goh,v 1.1 97/04/04 15:59:58 newdeal Exp $
 *
 ***********************************************************************/
#ifndef _RTCM_H_
#define _RTCM_H_


@deflib	rtcm

#include <geode.h>
#include <timer.h>

/* ----------------------------------------------------------------------------
 * 		Constants & Enumerated Types
 * --------------------------------------------------------------------------*/

typedef enum {
    RTCMGLM_APPLICATION = 0x0,
    RTCMGLM_ENGINE = 0x2,
    RTCMGLM_DRIVER = 0x4,
    RTCMGLM_LIBRARY = 0x6,
    RTCMGLM_APPLICATION_IN_BACK = 0x8, 
} RTCMGeodeLaunchMode;

typedef enum {
    RTCME_OK = 0x0,
    RTCME_EVENT_NOT_FOUND = 0x2,
    RTCME_REGISTER_FAILED = 0x4,
    RTCME_INVALID_EVENT = 0x6,
} RTCMError;

#define ANY_YEAR   0
#define ANY_MONTH  0
#define ANY_DAY    0

#define ANY_DATE ((ANY_YEAR << TCD_YEAR_OFFSET) | \
		  (ANY_MONTH << TCD_MONTH_OFFSET) | \
		  (ANY_DAY << TCD_DAY_OFFSET))

#define ANY_HOUR   0xffff
#define ANY_MINUTE 0xffff

#define WHEN_DATE_TIME_CHANGE  (15 << TCD_MONTH_OFFSET)

/* -----------------------------------------------------------------------------
 * 		Exported Routines
 * -----------------------------------------------------------------------------*/

@prototype void RTCM_EVENT_MSG (unsigned int eventToken = cx,
				unsigned int eventID = dx,
				Boolean expired = bp);

#ifdef __BORLANDC__
#define RTCMRegisterEvent RTCMREGISTEREVENT
#endif

extern RTCMError
    _cdecl RTCMRegisterEvent(TimerCompressedDate date,
			     unsigned int hour,
			     unsigned int minute,
			     word eventMsg,
			     RTCMGeodeLaunchMode mode,
			     GeodeToken geodeToken,
			     char *geodePath,
			     unsigned int *eventToken,
			     unsigned int *eventID);
			     
extern RTCMError
    _pascal RTCMUnregisterEvent(unsigned int eventToken,
				unsigned int eventID);

extern RTCMError
    _pascal RTCMCheckEvent(unsigned int eventToken,
			   unsigned int eventID);

#ifdef __HIGHC__

pragma Alias(RTCMRegisterEvent, "RTCMREGISTEREVENT");
pragma Alias(RTCMUnregisterEvent, "RTCMUNREGISTEREVENT");
pragma Alias(RTCMCheckEvent, "RTCMCHECKEVENT");

#endif /* __HIGHC__ */

@endlib

#endif /* _RTCM_H_ */


