@ifndef __GIFLIB_GOH
@define __GIFLIB_GOH
    
#include <geos.h>
#include <vm.h>
#include <file.h>	
#include <graphics.h>

//*********************************************************************
	           
typedef MemHandle GifStreamHandle;
			                 
typedef enum {
	GE_NO_ERROR,
	GE_WRITE_PROBLEM,
	GE_OUT_OF_MEMORY,
	GE_INVALID_BITMAP,
	GE_CANT_CREATE_DESTINATION_FILE,
	GE_WRONG_FILE_FORMAT,
	GE_INVALID_FILE,
	GE_OUT_OF_DATA,
	GE_CANT_OPEN_SOURCE_FILE,
	GE_BLOCK_LOCK_FAILURE,
	GE_PALETTE_WRITE_FAILURE,
	GE_NO_FILE_SPECIFYED,
	GE_ILLEGAL_STREAM_HANDLE,
	GE_ALL_LINES_WRITTEN
} GifError;

typedef struct
{
	char	GH_id[6];
	word	GH_width;
	word	GH_height;
	byte	GH_resFlag;
	byte	GH_background;
	byte	GH_aspectRatio;
} GifHeader;

typedef struct
{
	char	GPD_header;
	word	GPD_left;
	word	GPD_top;
	word	GPD_width;
	word	GPD_height;
	byte	GPD_flags;
} GifPicDescriptor;

//*********************************************************************

VMBlockHandle _pascal _export
GifImportBitmapFName(PathName srcname, VMFileHandle destfile, 
				GifError *error);

GifError _pascal _export
GifExportBitmapFName(VMFileHandle srcfile, VMBlockHandle bmpblock,
			PathName destname);

VMBlockHandle _pascal _export
GifImportBitmapFHandle(FileHandle srcfile, VMFileHandle destfile, 
				GifError *error);

GifError _pascal _export
GifExportBitmapFHandle(VMFileHandle srcfile, VMBlockHandle bmpblock,
			FileHandle destfile);

GifError _pascal _export
GifImportTestBitmapFHandle(FileHandle srcfile);

GifError _pascal _export
GifImportTestBitmapFName(PathName srcname);

GifStreamHandle _pascal _export
GifExportStreamCreate(BMFormat bitform, word width, word height, 
			FileLongName destname, FileHandle destfile, 
			RGBValue *palptr, GifError *error);

GifError _pascal _export
GifExportStreamWriteLine(GifStreamHandle handle, byte *data);

GifError _pascal _export
GifExportStreamDestroy(GifStreamHandle handle, Boolean forcekill);

//*********************************************************************

@endif __GIFLIB_GOH
