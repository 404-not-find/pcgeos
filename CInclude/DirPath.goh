/*
 *                          ==CONFIDENTIAL INFORMATION==
 *
 * COPYRIGHT 1994-99 BREADBOX COMPUTER COMPANY -- ALL RIGHTS RESERVED  --
 * THE FOLLOWING CONFIDENTIAL INFORMATION IS BEING DISCLOSED TO YOU UNDER
 * A NON-DISCLOSURE AGREEMENT AND MAY NOT BE DISCLOSED OR FORWARDED BY THE
 * RECIPIENT TO ANY OTHER PERSON OR ENTITY NOT COVERED BY THE SAME
 * NON-DISCLOSURE AGREEMENT COVERING THE RECIPIENT. USE OF THE FOLLOWING
 * CONFIDENTIAL INFORMATION IS RESTRICTED TO THE TERMS OF THE NON-DISCLOSURE
 * AGREEMENT.
 *
 */

/***************************************************************************
 *  FILE:  DirPathHandle.GOH
 ***************************************************************************/

@ifndef _DIRPATH_GOH_
@define _DIRPATH_GOH_

typedef optr DirPathHandle ;

DirPathHandle DirPathCreate(void) ;
void DirPathDestroy(DirPathHandle path) ;
optr DirPathGetVolume(DirPathHandle path) ;
void DirPathSetVolume(DirPathHandle path, ChunkHandle string) ;
optr DirPathGetFilter(DirPathHandle path) ;
void DirPathSetFilter(DirPathHandle path, ChunkHandle string) ;
word DirPathGetFlags(DirPathHandle path) ;
void DirPathSetFlags(DirPathHandle path, word flags) ;
optr DirPathGetNthFolder(DirPathHandle path, word n) ;
word DirPathGetNumFolders(DirPathHandle path) ;
word DirPathAppendFolder(DirPathHandle path, ChunkHandle string) ;
void DirPathDeleteFolder(DirPathHandle path, word index) ;
ChunkHandle DirPathAllocSubString(
                DirPathHandle path, 
                char *p_string, 
                word len) ;
ChunkHandle DirPathAllocSubStringOptr(
                DirPathHandle path, 
                optr string) ;
void DirPathReset(
         DirPathHandle path, 
         Boolean clearVolume) ;
void DirPathRemoveLastFolder(DirPathHandle path) ;
DirPathHandle DirPathDuplicate(DirPathHandle path) ;
DirPathHandle DirPathApplyPath(
                     DirPathHandle path, 
                     DirPathHandle appliedPath,
                     Boolean overwriteFilter) ;
DirPathHandle DirPathStandardParse(
                     char *p_path, 
                     char parseVolume, 
                     char parseDivider, 
                     char parseRoot) ;
Boolean DirPathCompareFolder(
            DirPathHandle path, 
            word index, 
            char *p_string) ;
void DirPathStandardCondense(
         DirPathHandle path, 
         char *p_condenser,
         char *p_ignore,
         Boolean allowStartingCondensers) ;
void DirPathMakeRoot(DirPathHandle path) ;
Boolean DirPathConstructString(
         DirPathHandle path,
         char *p_path,
         word limit,
         char parseVolume, 
         char parseDivider, 
         char parseRoot,
         Boolean addVolume,
         Boolean addFilter) ;

@endif

/***************************************************************************
 *  END OF FILE:  DirPathHandle.GOH
 ***************************************************************************/
