/***********************************************************************
 *
 *	Copyright (c) GeoWorks 1991 -- All Rights Reserved
 *
 * PROJECT:	PC/GEOS
 * FILE:	math.goh
 * AUTHOR:	Anna Lijphart: January, 1992
 *
 * DESCRIPTION:
 *	C version of math.def.
 *
 *	$Id: math.goh,v 1.1 97/04/04 15:59:18 newdeal Exp $
 *
 ***********************************************************************/
@optimize

#ifndef	__MATH_GOH
#define __MATH_GOH

#include <geos.h>
#include <math.h>

@deflib math

@class	FloatFormatClass, GenControlClass;

/****************************************************
 	    Instance Data
*****************************************************/

@instance word formatInfoStrucHan = 0;

/****************************************************
 	    Internal Messages
*****************************************************/

@message void MSG_FC_REQUEST_MONIKER();
@message void MSG_FORMAT_OPTION_STYLE_CHANGE();
@message void MSG_FORMAT_OPTION_BOOLEAN_CHANGE();
@message void MSG_FORMAT_SELECTED();
@message void MSG_FORMAT_USER_DEF_INVOKE();
@message void MSG_FORMAT_UPDATE_USER_DEF_SAMPLES();
@message void MSG_FORMAT_USER_DEF_OK();
@message void MSG_FORMAT_DELETE();
@message void MSG_FORMAT_APPLY();
@message void MSG_FORMAT_NUM_DECIMALS();
@message void MSG_FORMAT_DECIMAL_OFFSET();
@message void MSG_FORMAT_USER_DEF_CANCEL();

/*
 * The notification data block for use with GWNT_FORMAT_CHANGE.
 */
typedef struct {
    VMFileHandle	NFFC_vmFileHan;
    VMBlockHandle	NFFC_vmBlkHan;
    FormatIdType	NFFC_format;
    word		NFFC_count;
} NotifyFloatFormatChange;

/****************************************************
 	    Variable data
*****************************************************/
@vardata void TEMP_FLOAT_CTRL_USER_DEFINE_ACTIVE;
/* internally used to indicate user format definition is in progress */


/****************************************************
 	    Meta Messages
*****************************************************/

@importMessage MetaFloatMessages, void MSG_FLOAT_CTRL_REQUEST_MONIKER(
				           MemHandle formatInfoStrucHan = cx);
@importMessage MetaFloatMessages, void MSG_FLOAT_CTRL_UPDATE_UI(
				           MemHandle formatInfoStrucHan = cx);
@importMessage MetaFloatMessages, void MSG_FLOAT_CTRL_FORMAT_SELECTED(
				           MemHandle formatInfoStrucHan = cx);
@importMessage MetaFloatMessages, void MSG_FLOAT_CTRL_USER_DEF_INVOKE(
				           MemHandle formatInfoStrucHan = cx);
@importMessage MetaFloatMessages, void MSG_FLOAT_CTRL_USER_DEF_OK(
				           MemHandle formatInfoStrucHan = cx);
@importMessage MetaFloatMessages, void MSG_FLOAT_CTRL_FORMAT_DELETE(
				           MemHandle formatInfoStrucHan = cx);
@importMessage MetaFloatMessages, void MSG_FLOAT_CTRL_REPLACE_NUM_FORMAT(
				           MemHandle formatInfoStrucHan = cx);
@importMessage MetaFloatMessages, void MSG_FLOAT_CTRL_FORMAT_APPLY(
				           MemHandle formatInfoStrucHan = cx);

@default GCI_output = (TO_APP_TARGET);

@endc

/********************************************************
  	    float format utility routines
*********************************************************/

extern VMBlockHandle _pascal FloatFormatInit(word userDefVMFileHan);

extern word _pascal
    FloatFormatGetFormatParamsWithListEntry(FormatInfoStruc *formatInfoStruc);

extern void _pascal FloatFormatInitFormatList(FormatInfoStruc *formatInfoStruc);

extern void _pascal
    FloatFormatProcessFormatSelected(FormatInfoStruc *formatInfoStruc);

extern void _pascal
    FloatFormatInvokeUserDefDB(FormatInfoStruc *formatInfoStruc);

extern word _pascal FloatFormatUserDefOK(FormatInfoStruc *formatInfoStruc);

extern word _pascal
    FloatFormatGetFormatTokenWithName(FormatInfoStruc *formatInfoStruc);

extern void _pascal
    FloatFormatGetFormatParamsWithToken(FormatInfoStruc *formatInfoStruc,
					FormatParams *buffer);

extern FormatIdType _pascal FloatFormatDelete(FormatInfoStruc *formatInfoStruc);

extern void _pascal FloatFormatIsFormatTheSame(FormatInfoStruc *formatInfoStruc,
					       FormatParams *formatParams);

extern word _pascal FloatFormatAddFormat(FormatInfoStruc *formatInfoStruc,
					 FormatParams *formatParams,
					 word formatToken);

/*@protominor GetModifiedFormat*/   /* can't have outside class */

typedef WordFlags FloatModifyFormatFlags;
#define FMFF_COMMA  	    0x8000
#define FMFF_CURRENCY	    0x4000
#define FMFF_PERCENTAGE	    0x2000
#define FMFF_SET_DECIMALS   0x1000
#define FMFF_DECIMALS	    0x000f

extern word _pascal FloatFormatGetModifiedFormat(
					FormatInfoStruc *formatInfoStruc,
					FloatModifyFormatFlags modifyFlags);
/*@protoreset*/

#ifdef __HIGHC__
pragma Alias(FloatFormatInit, "FLOATFORMATINIT");
pragma Alias(FloatFormatGetFormatParamsWithListEntry, "FLOATFORMATGETFORMATPARAMSWITHLISTENTRY");
pragma Alias(FloatFormatInitFormatList, "FLOATFORMATINITFORMATLIST");
pragma Alias(FloatFormatProcessFormatSelected, "FLOATFORMATPROCESSFORMATSELECTED");
pragma Alias(FloatFormatInvokeUserDefDB, "FLOATFORMATINVOKEUSERDEFDB");
pragma Alias(FloatFormatUserDefOK, "FLOATFORMATUSERDEFOK");
pragma Alias(FloatFormatGetFormatTokenWithName, "FLOATFORMATGETFORMATTOKENWITHNAME");
pragma Alias(FloatFormatGetFormatParamsWithToken, "FLOATFORMATGETFORMATPARAMSWITHTOKEN");
pragma Alias(FloatFormatDelete, "FLOATFORMATDELETE");
pragma Alias(FloatFormatIsFormatTheSame, "FLOATFORMATISFORMATTHESAME");
pragma Alias(FloatFormatAddFormat, "FLOATFORMATADDFORMAT");
#endif

@endlib

#endif
